# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B3 8E     	call Frame
  15  A104 FB           	ei
  16  A105 ED 4D        	reti
  17  A107
  18  A107              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A107
  20  A107              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A107              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A107              ;
   3+ A107              ;	17/02/23
   4+ A107              ;
   5+ A107              ;	Sprites e índices.
   6+ A107
   7+ A107              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 D1 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 D1 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 89 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 89 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 89 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 89 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA              ;														BIT 6, **** Frame completo.
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	9/8/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_snapshot defw 0
 266  8A10 00 00        Stack_snapshot_disparos defw 0
 267  8A12
 268  8A12 00 00        End_Snapshot defw 0
 269  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 272  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A16 00 00        End_Snapshot_1 defw 0
 274  8A18 00 00        End_Snapshot_disparos_1 defw 0
 275  8A1A 00 00        End_Snapshot_2 defw 0
 276  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 277  8A1E 00 00        End_Snapshot_3 defw 0
 278  8A20 00 00        End_Snapshot_disparos_3 defw 0
 279  8A22
 280  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A26
 283  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 284  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 286  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8A2E
 288  8A2E              ;---------------------------------------------------------------------------------------------------------------
 289  8A2E
 290  8A2E              ; Gestión de Disparos.
 291  8A2E
 292  8A2E 00           Numero_de_disparotes db 0
 293  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  8A36              ;														; _produzca colisión.
 302  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8A41
 311  8A41              ;---------------------------------------------------------------------------------------------------------------
 312  8A41
 313  8A41              ; Relojes y temporizaciones.
 314  8A41
 315  8A41 00           Contador_de_frames db 0
 316  8A42 00           Contador_de_frames_2 db 0
 317  8A43
 318  8A43 04           Clock_explosion db 4
 319  8A44 1E           Clock_Entidades_en_curso db 30
 320  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A46              ;														; Repite la oleada de entidades.
 322  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A49
 326  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A4C
 330  8A4C              ;---------------------------------------------------------------------------------------------------------------
 331  8A4C
 332  8A4C              ; Gestión de NIVELES.
 333  8A4C
 334  8A4C 00           Nivel db 0												; Nivel actual del juego.
 335  8A4D 00 00        Puntero_indice_NIVELES defw 0
 336  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A51              ; 														; _ que definen el NIVEL.
 338  8A51              ; Y todo comienza aquí .....
 339  8A51              ;
 340  8A51              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A51              ;
 342  8A51              ;	14/11/22
 343  8A51
 344  8A51              START
 345  8A51
 346  8A51 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A54 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 348  8A56 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 349  8A58 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A5A F3           	DI
 351  8A5B
 352  8A5B 3E 07        	ld a,%00000111
 353  8A5D CD 0D 9A     	call Cls
 354  8A60
 355  8A60 CD 62 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A63
 357  8A63              ; INICIALIZACIÓN.
 358  8A63
 359  8A63 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A66
 361  8A66 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A69
 363  8A69 CD D5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A6C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A6C CD EB 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A6F              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A6F              ; ----------
 368  8A6F
 369  8A6F CD 12 8E     	call Restore_entidad
 370  8A72
 371  8A72 21 03 8A     	ld hl,Numero_parcial_de_entidades
 372  8A75 46           	ld b,(hl)
 373  8A76 04           	inc b
 374  8A77 05           	dec b
 375  8A78 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A7A
 377  8A7A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A7A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A7A              ;	Pintamos el resto de entidades:
 380  8A7A
 381  8A7A              ;	INICIA ENTIDADES !!!!!
 382  8A7A
 383  8A7A C5           1 push bc  												; Guardo el contador de entidades.
 384  8A7B
 385  8A7B CD 7C 8C     	call Inicia_entidad
 386  8A7E
 387  8A7E C1           	pop bc
 388  8A7F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A81
 390  8A81              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A81              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A81
 393  8A81 3A F9 89     	ld a,(Ctrl_1)
 394  8A84 CB 5F        	bit 3,a
 395  8A86 20 18        	jr nz,5F											; Loop
 396  8A88
 397  8A88              ; 	INICIA AMADEUS !!!!!
 398  8A88
 399  8A88 CD 39 8E     3 call Restore_Amadeus
 400  8A8B CD 8F 8D     	call Inicia_Puntero_objeto
 401  8A8E CD 3F 94     	call Draw
 402  8A91 CD A0 7F     	call Guarda_foto_registros
 403  8A94 11 A4 85     	ld de,Amadeus_db
 404  8A97 CD 4B 8E     	call Store_Amadeus
 405  8A9A
 406  8A9A              ; 	INICIA DISPAROS !!!!!
 407  8A9A
 408  8A9A CD 4B 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8A9D CD 52 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8AA0
 411  8AA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8AA0
 413  8AA0 CD D5 8C     5 call Inicia_punteros_de_cajas
 414  8AA3 CD 12 8E     	call Restore_entidad
 415  8AA6
 416  8AA6 3A F9 89     	ld a,(Ctrl_1)
 417  8AA9 CB 5F        	bit 3,a
 418  8AAB 28 0A        	jr z,6F
 419  8AAD
 420  8AAD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AAD
 422  8AAD 21 F9 89     	ld hl,Ctrl_1
 423  8AB0 CB 9E        	res 3,(hl)
 424  8AB2 CD 59 8D     	call Calcula_numero_de_malotes
 425  8AB5 18 0A        	jr Main
 426  8AB7
 427  8AB7              ; ----------
 428  8AB7
 429  8AB7 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8ABA 3C           	inc a
 431  8ABB 32 05 8A     	ld (Numero_de_malotes),a
 432  8ABE
 433  8ABE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8ABE              ; _ tenemos calculado (Numero_de_malotes).
 435  8ABE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8ABE              ; _ para situarnos en el siguiente album.
 437  8ABE
 438  8ABE CD 1C 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8AC1
 440  8AC1              ; ------------------------------------
 441  8AC1
 442  8AC1              Main
 443  8AC1
 444  8AC1              ;
 445  8AC1              ;	3/8/23
 446  8AC1
 447  8AC1 FB           	ei
 448  8AC2
 449  8AC2 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 450  8AC5 47           	ld b,a
 451  8AC6 3A 41 8A     	ld a,(Contador_de_frames)
 452  8AC9 B8           	cp b
 453  8ACA 20 18        	jr nz,13F
 454  8ACC
 455  8ACC 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 456  8ACF 47           	ld b,a
 457  8AD0 3A 04 8A     	ld a,(Entidades_en_curso)
 458  8AD3 B8           	cp b
 459  8AD4 28 0E        	jr z,13F
 460  8AD6 30 0C        	jr nc,13F
 461  8AD8
 462  8AD8 3C           	inc a
 463  8AD9 32 04 8A     	ld (Entidades_en_curso),a
 464  8ADC
 465  8ADC 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 466  8ADF
 467  8ADF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 468  8ADF              ;! _ IMPREDECIBLE !!!!
 469  8ADF
 470  8ADF C6 64        	add 100
 471  8AE1 32 44 8A     	ld (Clock_Entidades_en_curso),a
 472  8AE4
 473  8AE4              ; Habilita disparos.
 474  8AE4
 475  8AE4 21 46 8A     13 ld hl,Disparo_Amadeus
 476  8AE7 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 477  8AEA CD D2 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 478  8AED
 479  8AED 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 480  8AF0 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 481  8AF3 CD D2 A0     	call Habilita_disparos
 482  8AF6
 483  8AF6              ; COLISIONES.
 484  8AF6
 485  8AF6 CD 21 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 486  8AF9
 487  8AF9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 488  8AF9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 489  8AF9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 490  8AF9
 491  8AF9 AF           	xor a
 492  8AFA 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 493  8AFD
 494  8AFD CD D5 8C     	call Inicia_punteros_de_cajas
 495  8B00 CD 12 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 496  8B03              ; 														; _ en DRAW.
 497  8B03 3A B6 89     	ld a,(Filas)
 498  8B06 A7           	and a
 499  8B07 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 500  8B09 CD 24 8E     	call Incrementa_punteros_de_cajas
 501  8B0C 18 F2        	jr 12B
 502  8B0E
 503  8B0E              ; ---------------------------------------------------------------------------------------
 504  8B0E
 505  8B0E 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 506  8B11 47               ld b,a
 507  8B12 A7           	and a
 508  8B13 20 14        	jr nz,11F
 509  8B15
 510  8B15 21 F9 89     	ld hl,Ctrl_1
 511  8B18 CB 66        	bit 4,(hl)
 512  8B1A C2 A6 8B     	jp nz,16F
 513  8B1D
 514  8B1D 21 F9 89     	ld hl,Ctrl_1
 515  8B20 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 516  8B22
 517  8B22 3A 41 8A     	ld a,(Contador_de_frames)
 518  8B25 3C           	inc a
 519  8B26 32 45 8A     	ld (Activa_recarga_cajas),a
 520  8B29
 521  8B29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 522  8B29
 523  8B29 3A 04 8A     11 ld a,(Entidades_en_curso)
 524  8B2C A7           	and a
 525  8B2D CA A6 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 526  8B30 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 527  8B31
 528  8B31              ; Código que ejecutamos con cada entidad:
 529  8B31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 530  8B31
 531  8B31 C5           15 push bc 												; Nº de entidades en curso.
 532  8B32
 533  8B32              ; Impacto ???
 534  8B32
 535  8B32 3A CF 89     	ld a,(Impacto)
 536  8B35 A7           	and a
 537  8B36 28 2D        	jr z,8F
 538  8B38
 539  8B38              ; Hay Impacto en esta entidad.
 540  8B38
 541  8B38 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 542  8B3B 35           	dec (hl)
 543  8B3C 20 62        	jr nz,17F
 544  8B3E
 545  8B3E              ;! Velocidad de la animación de la explosión.
 546  8B3E
 547  8B3E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 548  8B40              ;														; _,(velocidad de la explosión).
 549  8B40 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 550  8B43
 551  8B43              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 552  8B43
 553  8B43 3A F7 89     	ld a,(Ctrl_2)
 554  8B46 CB 4F        	bit 1,a
 555  8B48 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 556  8B4A
 557  8B4A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 558  8B4A
 559  8B4A 3A BE 89     	ld a,(CTRL_DESPLZ)
 560  8B4D A7           	and a
 561  8B4E 20 08        	jr nz,18F
 562  8B50
 563  8B50 21 84 84     	ld hl,Indice_Explosion_2x2-2
 564  8B53 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 565  8B56 18 06        	jr 19F
 566  8B58
 567  8B58 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 568  8B5B 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 569  8B5E
 570  8B5E 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 571  8B61 CB CE        	set 1,(hl)
 572  8B63 18 22        	jr 7F
 573  8B65
 574  8B65              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 575  8B65              ; _con las coordenadas de la entidad almacenada en DRAW.
 576  8B65
 577  8B65 3A F9 89     8 ld a,(Ctrl_1)
 578  8B68 CB 57        	bit 2,a
 579  8B6A 28 1B        	jr z,7F
 580  8B6C
 581  8B6C 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 582  8B6F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 583  8B70              ;														; E contiene la coordenada_X del disparo.
 584  8B70 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 585  8B73              ;														; H FILA, (Coordenada_y de la entidad).
 586  8B73 A7           	and a
 587  8B74 ED 52        	sbc hl,de
 588  8B76
 589  8B76 CD 58 93     	call Determina_resultado_comparativa
 590  8B79
 591  8B79 78           	ld a,b
 592  8B7A A7           	and a
 593  8B7B 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 594  8B7D
 595  8B7D              ; ----- ----- -----
 596  8B7D
 597  8B7D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 598  8B7F 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 599  8B82
 600  8B82 21 F9 89     	ld hl,Ctrl_1
 601  8B85 CB 96        	res 2,(hl)
 602  8B87
 603  8B87 CD FE 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 604  8B8A
 605  8B8A 3A E4 89     	ld a,(Ctrl_0)
 606  8B8D CB 67        	bit 4,a
 607  8B8F 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 608  8B91
 609  8B91              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 610  8B91              ; [[[
 611  8B91 CD AD 8E     	call Detecta_disparo_entidad
 612  8B94              ; ]]]
 613  8B94 CD 9C 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 614  8B97
 615  8B97 21 E4 89     	ld hl,Ctrl_0
 616  8B9A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 617  8B9C AF           	xor a
 618  8B9D 32 E5 89     	ld (Obj_dibujado),a
 619  8BA0
 620  8BA0 CD D7 8D     17 call Store_Restore_cajas
 621  8BA3
 622  8BA3 C1           	pop bc
 623  8BA4 10 8B        	djnz 15B
 624  8BA6
 625  8BA6              ; ------------------------------------
 626  8BA6
 627  8BA6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 628  8BA6              ; Hemos gestionado todas las unidades.
 629  8BA6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 630  8BA6
 631  8BA6              ;	ld hl,Ctrl_1
 632  8BA6              ;	res 2,(hl)
 633  8BA6
 634  8BA6              ; ------------------------------------
 635  8BA6
 636  8BA6              ; Tras la gestión de las entidades, ... AMADEUS.
 637  8BA6
 638  8BA6 CD 39 8E     16 call Restore_Amadeus
 639  8BA9
 640  8BA9 3A CF 89     	ld a,(Impacto)
 641  8BAC A7           	and a
 642  8BAD 20 FE        	jr nz,$
 643  8BAF
 644  8BAF CD 5D 8C     	call Mov_Amadeus
 645  8BB2
 646  8BB2 3A E4 89     	ld a,(Ctrl_0)
 647  8BB5 CB 67        	bit 4,a
 648  8BB7 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 649  8BB9
 650  8BB9 CD 9C 8C     	call Guarda_foto_entidad_a_pintar
 651  8BBC
 652  8BBC 21 E4 89     14 ld hl,Ctrl_0
 653  8BBF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 654  8BC1
 655  8BC1 AF           	xor a
 656  8BC2 32 E5 89     	ld (Obj_dibujado),a
 657  8BC5
 658  8BC5 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 659  8BC8 CD 4B 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 660  8BCB
 661  8BCB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 662  8BCB
 663  8BCB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 664  8BCB
 665  8BCB              ;	call Calcula_numero_de_disparotes
 666  8BCB
 667  8BCB CD 1C 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 668  8BCE              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 669  8BCE              ;														; _ interrupción.
 670  8BCE 3E 04        	ld a,4
 671  8BD0 D3 FE        	out ($fe),a
 672  8BD2
 673  8BD2              ; ----------------------------------------
 674  8BD2
 675  8BD2 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 676  8BD5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 677  8BD7 CA C1 8A     	jp z,Main
 678  8BDA
 679  8BDA              ; -----
 680  8BDA              ;	(((
 681  8BDA
 682  8BDA 3A 41 8A     	ld a,(Contador_de_frames)
 683  8BDD 47           	ld b,a
 684  8BDE 3A 45 8A     	ld a,(Activa_recarga_cajas)
 685  8BE1 B8           	cp b
 686  8BE2 28 08        	jr z,20F
 687  8BE4
 688  8BE4 21 F9 89     	ld hl,Ctrl_1
 689  8BE7 CB E6        	set 4,(hl)
 690  8BE9 C3 C1 8A     	jp Main
 691  8BEC
 692  8BEC 21 F9 89     20 ld hl,Ctrl_1
 693  8BEF CB A6        	res 4,(hl)
 694  8BF1 F3           	di
 695  8BF2
 696  8BF2 3A 41 8A     	ld a,(Contador_de_frames)
 697  8BF5
 698  8BF5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 699  8BF5              ;! _ IMPREDECIBLE !!!!
 700  8BF5
 701  8BF5 C6 0A        	add 10
 702  8BF7 32 44 8A     	ld (Clock_Entidades_en_curso),a
 703  8BFA
 704  8BFA C3 66 8A     	jp 4B
 705  8BFD
 706  8BFD C9           	ret
 707  8BFE
 708  8BFE              ; --------------------------------------------------------------------------------------------------------------
 709  8BFE              ;
 710  8BFE              ;	27/05/23
 711  8BFE
 712  8BFE              Mov_obj
 713  8BFE
 714  8BFE              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 715  8BFE
 716  8BFE 3A F7 89     	ld a,(Ctrl_2)
 717  8C01 CB 4F        	bit 1,a
 718  8C03 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 719  8C05
 720  8C05              ; Explosión:
 721  8C05
 722  8C05 3A F8 89     	ld a,(Frames_explosion)
 723  8C08 A7           	and a
 724  8C09 20 11        	jr nz,4F
 725  8C0B
 726  8C0B              ; Una alimaña menos!!!!!!!!!1
 727  8C0B
 728  8C0B CD 54 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 729  8C0E 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 730  8C11 35           	dec (hl)
 731  8C12 21 04 8A     	ld hl,Entidades_en_curso
 732  8C15 35           	dec (hl)
 733  8C16 21 02 8A     	ld hl,Numero_de_entidades
 734  8C19 35           	dec (hl)
 735  8C1A 18 40        	jr 3F
 736  8C1C
 737  8C1C              ; -----
 738  8C1C
 739  8C1C              ;	`Movemos´ la explosión.
 740  8C1C
 741  8C1C 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 742  8C1F 23           	inc hl
 743  8C20 23           	inc hl
 744  8C21 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 745  8C24 CD 89 8D     	call Extrae_address
 746  8C27 22 BA 89     	ld (Puntero_objeto),hl
 747  8C2A
 748  8C2A 21 F8 89     	ld hl,Frames_explosion
 749  8C2D 35           	dec (hl)
 750  8C2E
 751  8C2E CD 8C 8C     	call Guarda_foto_entidad_a_borrar
 752  8C31 18 29        	jr 3F
 753  8C33
 754  8C33 AF           2 xor a
 755  8C34 32 E5 89     	ld (Obj_dibujado),a
 756  8C37 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 757  8C3A              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 758  8C3A              ; 														; _de la entidad.
 759  8C3A CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 760  8C3D              ;														; Obj_dibujado="0".
 761  8C3D              ; Movemos Entidades malignas.
 762  8C3D
 763  8C3D              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 764  8C3D              ;	and a 												; _a movernos. (Limitador_de_entidades).
 765  8C3D              ;	ret z
 766  8C3D
 767  8C3D CD 6D 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 768  8C40
 769  8C40 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 770  8C43 CB 67        	bit 4,a
 771  8C45 C8           	ret z
 772  8C46
 773  8C46              ; Ha habido desplazamiento de la entidad maligna.
 774  8C46              ; Ha llegado a zona de AMADEUS ???
 775  8C46
 776  8C46 3A BD 89     	ld a,(Coordenada_y)
 777  8C49 FE 14        	cp $14
 778  8C4B D4 E6 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 779  8C4E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 780  8C4E              ; ---------
 781  8C4E
 782  8C4E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 783  8C50 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 784  8C53 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 785  8C56 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 786  8C59 CD 8C 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 787  8C5C C9           3 ret													; _de la misma.
 788  8C5D
 789  8C5D              ; --------------------------------------------------------------------------------------------------------------
 790  8C5D              ;
 791  8C5D              ;	29/1/23
 792  8C5D
 793  8C5D              Mov_Amadeus
 794  8C5D
 795  8C5D AF           	xor a
 796  8C5E 32 E5 89     	ld (Obj_dibujado),a
 797  8C61 CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 798  8C64              ;														; Obj_dibujado="0".
 799  8C64              ; Movemos Amadeus.
 800  8C64
 801  8C64 CD 76 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 802  8C67 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 803  8C6A CB 67        	bit 4,a
 804  8C6C C8           	ret z
 805  8C6D
 806  8C6D              ; ---------
 807  8C6D
 808  8C6D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 809  8C6F 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 810  8C72 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 811  8C75 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 812  8C78 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 813  8C7B C9           	ret													; _de la nave.
 814  8C7C
 815  8C7C              ; -----------------------------------------------------------------------------------
 816  8C7C
 817  8C7C CD 8F 8D     Inicia_entidad	call Inicia_Puntero_objeto
 818  8C7F CD 21 9A     	call Recompone_posicion_inicio
 819  8C82 CD 3F 94     	call Draw
 820  8C85 CD A0 7F     	call Guarda_foto_registros
 821  8C88 CD D7 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 822  8C8B C9           	ret
 823  8C8C
 824  8C8C              ; --------------------------------------------------------------------------------------------------------------
 825  8C8C              ;
 826  8C8C              ;	31/8/23
 827  8C8C              ;
 828  8C8C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 829  8C8C
 830  8C8C              Guarda_foto_entidad_a_borrar
 831  8C8C
 832  8C8C CD 23 97     	call Prepara_draw
 833  8C8F CD 53 96     	call calcula_CColumnass
 834  8C92 CD 8A 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 835  8C95 CD E9 96     	call Define_rutina_de_impresion
 836  8C98 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 837  8C9B C9           	ret
 838  8C9C
 839  8C9C              ; --------------------------------------------------------------------------------------------------------------
 840  8C9C              ;
 841  8C9C              ;	31/08/23
 842  8C9C              ;
 843  8C9C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 844  8C9C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 845  8C9C
 846  8C9C              Guarda_foto_entidad_a_pintar
 847  8C9C
 848  8C9C CD C9 8C     	call Repone_pintar
 849  8C9F CD 3F 94     	call Draw
 850  8CA2 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 851  8CA5 C9           	ret
 852  8CA6
 853  8CA6              ; --------------------------------------------------------------------------------------------------------------
 854  8CA6              ;
 855  8CA6              ;
 856  8CA6
 857  8CA6 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 858  8CA9 3A E5 89     	ld a,(Obj_dibujado)
 859  8CAC A7           	and a
 860  8CAD 28 05        	jr z,1F
 861  8CAF 11 DA 89     	ld de,Variables_de_pintado
 862  8CB2 18 03        	jr 2F
 863  8CB4 11 D0 89     1 ld de,Variables_de_borrado
 864  8CB7 01 08 00     2 ld bc,8
 865  8CBA ED B0        	ldir
 866  8CBC C9           	ret
 867  8CBD
 868  8CBD              ; --------------------------------------------------------------------------------------------------------------
 869  8CBD
 870  8CBD 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 871  8CC0 11 B6 89     	ld de,Filas
 872  8CC3 01 08 00     	ld bc,8
 873  8CC6 ED B0        	ldir
 874  8CC8 C9           	ret
 875  8CC9
 876  8CC9 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 877  8CCC 11 B6 89     	ld de,Filas
 878  8CCF 01 08 00     	ld bc,8
 879  8CD2 ED B0        	ldir
 880  8CD4 C9           	ret
 881  8CD5
 882  8CD5              ; *************************************************************************************************************************************************************
 883  8CD5              ;
 884  8CD5              ; 8/1/23
 885  8CD5              ;
 886  8CD5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 887  8CD5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 888  8CD5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 889  8CD5
 890  8CD5              ; Destruye HL y DE !!!!!
 891  8CD5
 892  8CD5              Inicia_punteros_de_cajas
 893  8CD5
 894  8CD5 21 8C 85     	ld hl,Indice_de_cajas
 895  8CD8 CD 89 8D         call Extrae_address
 896  8CDB 22 FC 89         ld (Puntero_store_caja),hl
 897  8CDE 21 8E 85     	ld hl,Indice_de_cajas+2
 898  8CE1 22 00 8A     	ld (Indice_restore_caja),hl
 899  8CE4 CD 89 8D     	call Extrae_address
 900  8CE7 22 FE 89     	ld (Puntero_restore_caja),hl
 901  8CEA C9               ret
 902  8CEB
 903  8CEB              ; ---------------------------------------------------------------
 904  8CEB              ;
 905  8CEB              ;	9/8/23
 906  8CEB              ;
 907  8CEB              ;	Inicialización y gestión de álbumes de fotos y cajas.
 908  8CEB
 909  8CEB              Inicia_punteros_de_albumes_y_malotes
 910  8CEB
 911  8CEB 21 EC 84     	ld hl,Indice_album_de_fotos
 912  8CEE 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 913  8CF1 CD 89 8D     	call Extrae_address
 914  8CF4 22 0E 8A     	ld (Stack_snapshot),hl
 915  8CF7
 916  8CF7 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 917  8CFA 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 918  8CFD CD 89 8D     	call Extrae_address
 919  8D00 22 10 8A     	ld (Stack_snapshot_disparos),hl
 920  8D03
 921  8D03 21 FC 84     	ld hl,Indice_End_Snapshot
 922  8D06 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 923  8D09 CD 89 8D     	call Extrae_address
 924  8D0C 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 925  8D0F
 926  8D0F 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 927  8D12 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 928  8D15 CD 89 8D     	call Extrae_address
 929  8D18 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 930  8D1B
 931  8D1B C9           	ret
 932  8D1C
 933  8D1C              ;	12/8/23
 934  8D1C
 935  8D1C              Avanza_puntero_de_album_de_fotos_y_malotes
 936  8D1C
 937  8D1C              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 938  8D1C
 939  8D1C              ; Estamos en el último álbum del índice???.
 940  8D1C
 941  8D1C 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 942  8D1F 01 F2 84     	ld bc,Indice_album_de_fotos+6
 943  8D22 A7           	and a
 944  8D23 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 945  8D25 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 946  8D27
 947  8D27 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 948  8D2A CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 949  8D2C 76           	halt
 950  8D2D C9           	ret
 951  8D2E
 952  8D2E 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 953  8D31 23           	inc hl
 954  8D32 23           	inc hl
 955  8D33 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 956  8D36 CD 89 8D     	call Extrae_address
 957  8D39 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 958  8D3C
 959  8D3C 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 960  8D3F 23           	inc hl
 961  8D40 23           	inc hl
 962  8D41 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 963  8D44 CD 89 8D     	call Extrae_address
 964  8D47 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 965  8D4A
 966  8D4A C9           	ret
 967  8D4B
 968  8D4B              ; *************************************************************************************************************************************************************
 969  8D4B              ;
 970  8D4B              ; 8/1/23
 971  8D4B              ;
 972  8D4B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 973  8D4B
 974  8D4B 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 975  8D4E 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 976  8D51 C9           	ret
 977  8D52 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 978  8D55 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 979  8D58 C9           	ret
 980  8D59
 981  8D59              ; -------------------------------------------------------------------------------------------------------------
 982  8D59              ;
 983  8D59              ; 3/8/23
 984  8D59              ;
 985  8D59
 986  8D59              Calcula_numero_de_malotes
 987  8D59
 988  8D59 21 00 70     	ld hl,Album_de_fotos
 989  8D5C EB           	ex de,hl
 990  8D5D 2A 12 8A     	ld hl,(End_Snapshot)
 991  8D60
 992  8D60 06 00        	ld b,0
 993  8D62 7D           	ld a,l
 994  8D63 93           	sub e
 995  8D64 28 07        	jr z,1F
 996  8D66
 997  8D66              ; Nº de malotes no es "0".
 998  8D66
 999  8D66 D6 06        2 sub 6
1000  8D68 04           	inc b
1001  8D69 A7           	and a
1002  8D6A 20 FA        	jr nz,2B
1003  8D6C 78           	ld a,b
1004  8D6D
1005  8D6D 32 05 8A     1 ld (Numero_de_malotes),a
1006  8D70 C9           	ret
1007  8D71
1008  8D71              ; -------------------------------------------------------------------------------------------------------------
1009  8D71              ;
1010  8D71              ; 28/2/23
1011  8D71              ;
1012  8D71
1013  8D71              Calcula_numero_de_disparotes
1014  8D71
1015  8D71 21 0D 72     	ld hl,Album_de_fotos_disparos
1016  8D74 EB           	ex de,hl
1017  8D75 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1018  8D78
1019  8D78 06 00        	ld b,0
1020  8D7A 7D           	ld a,l
1021  8D7B 93           	sub e
1022  8D7C 28 07        	jr z,1F
1023  8D7E
1024  8D7E              ; Nº de malotes no es "0".
1025  8D7E
1026  8D7E D6 06        2 sub 6
1027  8D80 04           	inc b
1028  8D81 A7           	and a
1029  8D82 20 FA        	jr nz,2B
1030  8D84 78           	ld a,b
1031  8D85
1032  8D85 32 2E 8A     1 ld (Numero_de_disparotes),a
1033  8D88 C9           	ret
1034  8D89
1035  8D89              ; *************************************************************************************************************************************************************
1036  8D89              ;
1037  8D89              ; 20/10/22
1038  8D89              ;
1039  8D89              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1040  8D89              ;
1041  8D89              ; Destruye el puntero y DE !!!!!
1042  8D89
1043  8D89 5E           Extrae_address ld e,(hl)
1044  8D8A 23           	inc hl
1045  8D8B 56           	ld d,(hl)
1046  8D8C 2B           	dec hl
1047  8D8D EB           	ex de,hl
1048  8D8E C9           	ret
1049  8D8F
1050  8D8F              ; *************************************************************************************************************************************************************
1051  8D8F              ;
1052  8D8F              ;	7/2/23
1053  8D8F              ;
1054  8D8F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1055  8D8F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1056  8D8F              ;
1057  8D8F              ;   Destruye HL y BC !!!!!,
1058  8D8F              ;
1059  8D8F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1060  8D8F              ;					"0" ..... Izquierda.
1061  8D8F
1062  8D8F              Inicia_Puntero_objeto
1063  8D8F
1064  8D8F 3A CA 89     	ld a,(Cuad_objeto)
1065  8D92 E6 01        	and 1
1066  8D94 F5           	push af
1067  8D95 CC B3 8D     	call z,Inicia_puntero_objeto_izq
1068  8D98 F1           	pop af
1069  8D99 28 2B        	jr z,1F
1070  8D9B CD A0 8D     	call Inicia_puntero_objeto_der
1071  8D9E 18 26        	jr 1F
1072  8DA0
1073  8DA0              ; Arrancamos desde la parte izquierda de la pantalla.
1074  8DA0              ; Iniciamos (Indice_Sprite_der).
1075  8DA0
1076  8DA0 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1077  8DA3 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1078  8DA6 CD 89 8D     	call Extrae_address
1079  8DA9 22 BA 89     	ld (Puntero_objeto),hl
1080  8DAC
1081  8DAC 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1082  8DAF 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1083  8DB2 C9           	ret
1084  8DB3
1085  8DB3              ; Arrancamos desde la parte derecha de la pantalla.
1086  8DB3              ; Iniciamos (Indice_Sprite_izq).
1087  8DB3
1088  8DB3 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1089  8DB6 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1090  8DB9 CD 89 8D     	call Extrae_address
1091  8DBC 22 BA 89     	ld (Puntero_objeto),hl
1092  8DBF
1093  8DBF 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1094  8DC2 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1095  8DC5 C9           	ret
1096  8DC6
1097  8DC6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1098  8DC6
1099  8DC6 21 40 83     1 ld hl,Amadeus
1100  8DC9 ED 4B BA 89  	ld bc,(Puntero_objeto)
1101  8DCD B7 ED 42     	sub hl,bc
1102  8DD0 C0           	ret nz
1103  8DD1 21 E4 89     	ld hl,Ctrl_0
1104  8DD4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1105  8DD6 C9           	ret 												; _de nuestra nave en los extremos.
1106  8DD7
1107  8DD7              ; *************************************************************************************************************************************************************
1108  8DD7              ;
1109  8DD7              ;	14/5/23
1110  8DD7              ;
1111  8DD7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1112  8DD7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1113  8DD7
1114  8DD7              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1115  8DD7              ;	_de la 2ª y 3ª entidad respectivamente.
1116  8DD7
1117  8DD7              Store_Restore_cajas
1118  8DD7
1119  8DD7 E5           	push hl
1120  8DD8 D5           	push de
1121  8DD9 C5            	push bc
1122  8DDA
1123  8DDA              ;	STORE !!!!!
1124  8DDA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1125  8DDA
1126  8DDA 21 B6 89     	ld hl,Filas
1127  8DDD ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1128  8DE1 01 43 00     	ld bc,67
1129  8DE4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1130  8DE6
1131  8DE6              ; 	Entidad_sospechosa. 20/4/23
1132  8DE6
1133  8DE6 3A CF 89     	ld a,(Impacto)
1134  8DE9 A7           	and a
1135  8DEA 28 0C        	jr z,1F
1136  8DEC
1137  8DEC 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1138  8DEF 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1139  8DF2 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1140  8DF3 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1141  8DF5 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1142  8DF8
1143  8DF8              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1144  8DF8
1145  8DF8 2A FE 89     1 ld hl,(Puntero_restore_caja)
1146  8DFB 7E           	ld a,(hl)
1147  8DFC A7           	and a
1148  8DFD F5           	push af
1149  8DFE 28 08        	jr z,2F
1150  8E00
1151  8E00 11 B6 89     	ld de,Filas
1152  8E03 01 43 00     	ld bc,67
1153  8E06 ED B0        	ldir
1154  8E08
1155  8E08 CD 24 8E     2 call Incrementa_punteros_de_cajas
1156  8E0B F1           	pop af
1157  8E0C 28 EA        	jr z,1B
1158  8E0E
1159  8E0E C1           	pop bc
1160  8E0F D1           	pop de
1161  8E10 E1           	pop hl
1162  8E11
1163  8E11 C9           	ret
1164  8E12
1165  8E12              ; **************************************************************************************************
1166  8E12              ;
1167  8E12              ;	12/05/23
1168  8E12              ;
1169  8E12              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1170  8E12
1171  8E12 E5           Restore_entidad push hl
1172  8E13 D5           	push de
1173  8E14 C5            	push bc
1174  8E15
1175  8E15 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1176  8E18 11 B6 89     	ld de,Filas
1177  8E1B 01 43 00     	ld bc,67
1178  8E1E ED B0        	ldir
1179  8E20
1180  8E20 C1           	pop bc
1181  8E21 D1           	pop de
1182  8E22 E1           	pop hl
1183  8E23 C9           	ret
1184  8E24
1185  8E24
1186  8E24              ; **************************************************************************************************
1187  8E24              ;
1188  8E24              ;	08/05/23
1189  8E24              ;
1190  8E24              ;	Incrementamos los dos punteros de entidades. (+1).
1191  8E24
1192  8E24 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1193  8E27 22 FC 89     	ld (Puntero_store_caja),hl
1194  8E2A 2A 00 8A     	ld hl,(Indice_restore_caja)
1195  8E2D 23           	inc hl
1196  8E2E 23           	inc hl
1197  8E2F 22 00 8A     	ld (Indice_restore_caja),hl
1198  8E32 CD 89 8D         call Extrae_address
1199  8E35 22 FE 89         ld (Puntero_restore_caja),hl
1200  8E38 C9               ret
1201  8E39
1202  8E39              ; **************************************************************************************************
1203  8E39              ;
1204  8E39              ;	25/01/23
1205  8E39              ;
1206  8E39              ;	Restore_Amadeus
1207  8E39              ;
1208  8E39              ;	Cargamos en DRAW los parámetros de Amadeus.
1209  8E39              ;
1210  8E39
1211  8E39 E5           Restore_Amadeus	push hl
1212  8E3A D5           	push de
1213  8E3B C5            	push bc
1214  8E3C 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1215  8E3F 11 B6 89     	ld de,Filas
1216  8E42 01 43 00     	ld bc,67
1217  8E45 ED B0        	ldir
1218  8E47 C1           	pop bc
1219  8E48 D1           	pop de
1220  8E49 E1           	pop hl
1221  8E4A C9           	ret
1222  8E4B
1223  8E4B              ; *************************************************************************************************************************************************************
1224  8E4B              ;
1225  8E4B              ;	29/04/23
1226  8E4B              ;
1227  8E4B              ;	Store_Amadeus
1228  8E4B              ;
1229  8E4B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1230  8E4B              ;
1231  8E4B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1232  8E4B              ;
1233  8E4B              ;	DESTRUYE: HL y BC y DE.
1234  8E4B
1235  8E4B 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1236  8E4E 01 43 00     	ld bc,67
1237  8E51 ED B0        	ldir
1238  8E53 C9           	ret
1239  8E54
1240  8E54              ; -----------------------------------------------------------
1241  8E54              ;
1242  8E54              ;	27/04/23
1243  8E54              ;
1244  8E54              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1245  8E54              ;
1246  8E54              ;	Destruye: HL,BC,DE,A
1247  8E54
1248  8E54 21 B6 89     Borra_datos_entidad ld hl,Filas
1249  8E57 01 42 00     	ld bc,66
1250  8E5A AF           	xor a
1251  8E5B 77           	ld (hl),a
1252  8E5C 11 B7 89     	ld de,Filas+1
1253  8E5F ED B0        	ldir
1254  8E61 C9           	ret
1255  8E62
1256  8E62              ; -----------------------------------------------------------
1257  8E62
1258  8E62              ; Teclado.
1259  8E62
1260  8E62 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1261  8E64 DB FE        	in a,($fe)
1262  8E66 E6 01        	and $01
1263  8E68 28 02        	jr z,1f
1264  8E6A 18 F6        	jr Pulsa_ENTER
1265  8E6C C9           1 ret
1266  8E6D
1267  8E6D              ; **************************************************************************************************
1268  8E6D              ;
1269  8E6D              ; Temporización.
1270  8E6D
1271  8E6D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1272  8E6D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1273  8E6D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1274  8E6D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1275  8E6D
1276  8E6D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1277  8E6D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1278  8E6D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1279  8E6D
1280  8E6D              ; A partir de $4f61 no hace falta DELAY.
1281  8E6D
1282  8E6D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1283  8E6D
1284  8E6D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1285  8E70 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1286  8E71 78           	LD A,B
1287  8E72 A7           	AND A
1288  8E73 20 FB        	JR NZ,wait
1289  8E75 C9           	RET
1290  8E76
1291  8E76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1292  8E76              ;
1293  8E76              ;	5/3/23
1294  8E76              ;
1295  8E76              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1296  8E76
1297  8E76              Movimiento_Amadeus
1298  8E76
1299  8E76              ; Disparo.
1300  8E76
1301  8E76 3A 46 8A     	ld a,(Disparo_Amadeus)
1302  8E79 A7           	and a
1303  8E7A 20 02        	jr nz,1F
1304  8E7C 18 15        	jr 2F
1305  8E7E
1306  8E7E 3E F7        1 ld a,$f7													; "5" para disparar.
1307  8E80 DB FE        	in a,($fe)
1308  8E82 E6 10        	and $10
1309  8E84
1310  8E84 F5           	push af
1311  8E85 CC 49 8F     	call z,Genera_disparo
1312  8E88 F1           	pop af
1313  8E89 20 08        	jr nz,2F
1314  8E8B
1315  8E8B 3A 46 8A     	ld a,(Disparo_Amadeus)
1316  8E8E EE 01        	xor 1
1317  8E90 32 46 8A     	ld (Disparo_Amadeus),a
1318  8E93
1319  8E93 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1320  8E95 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1321  8E97 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1322  8E99 CC DB 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1323  8E9C 3E F7        	ld a,$f7
1324  8E9E DB FE        	in a,($fe)
1325  8EA0 E6 01        	and $01
1326  8EA2 C8           	ret z
1327  8EA3
1328  8EA3 3E F7        	ld a,$f7
1329  8EA5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1330  8EA7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1331  8EA9 CC BD 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1332  8EAC C9           	ret
1333  8EAD
1334  8EAD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1335  8EAD              ;
1336  8EAD              ;	Rutina provisional para que los malotes cagen balas.
1337  8EAD
1338  8EAD              Detecta_disparo_entidad
1339  8EAD
1340  8EAD 3A 49 8A     	ld a,(Disparo_entidad)
1341  8EB0 A7           	and a
1342  8EB1 C8           	ret z
1343  8EB2
1344  8EB2              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1345  8EB2
1346  8EB2              ;	ld a,$7f				; Detecta SPACE.
1347  8EB2              ;	in a,($fe)
1348  8EB2              ;	and 1
1349  8EB2              ;	ret nz
1350  8EB2
1351  8EB2              ;	call Genera_disparo
1352  8EB2 C9           	ret
1353  8EB3
1354  8EB3              ; ----------------------------------------------------------------------
1355  8EB3              ;
1356  8EB3              ;	11/8/23
1357  8EB3
1358  8EB3              Frame
1359  8EB3
1360  8EB3              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1361  8EB3              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1362  8EB3
1363  8EB3              ; PINTAMOS.
1364  8EB3
1365  8EB3 08           	ex af,af'
1366  8EB4 F5           	push af	;af'
1367  8EB5
1368  8EB5 D9           	exx
1369  8EB6 E5           	push hl	;hl'
1370  8EB7 D5           	push de	;de'
1371  8EB8 C5           	push bc	;bc'
1372  8EB9
1373  8EB9 D9           	exx
1374  8EBA E5           	push hl	;hl
1375  8EBB D5           	push de	;de
1376  8EBC C5           	push bc	;bc
1377  8EBD
1378  8EBD 08           	ex af,af'
1379  8EBE F5           	push af	;af
1380  8EBF
1381  8EBF DD E5        	push ix
1382  8EC1 FD E5        	push iy
1383  8EC3
1384  8EC3 3E 02        	ld a,2
1385  8EC5 D3 FE            out ($fe),a											; Rojo.
1386  8EC7
1387  8EC7              ; Consultamos Frame_ctrl. Necesitamos saber en que parte de MAIN nos encontramos.
1388  8EC7              ; Hemos llegado/completado [Guarda_foto_entidad_a_borrar] ???
1389  8EC7
1390  8EC7              ;	call Consulta_Frame_ctrl
1391  8EC7
1392  8EC7              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1393  8EC7              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1394  8EC7
1395  8EC7 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1396  8ECA 01 EC 84     	ld bc,Indice_album_de_fotos
1397  8ECD A7           	and a
1398  8ECE ED 42        	sbc hl,bc
1399  8ED0 28 61        	jr z,6F
1400  8ED2
1401  8ED2              ; $57,$72,$7b,$84,$89,...Frames en los que no se llega a completar el cuadro.
1402  8ED2
1403  8ED2 CD 59 8D     	call Calcula_numero_de_malotes
1404  8ED5
1405  8ED5              ;;! debuggg !!!
1406  8ED5 3A 42 8A     	ld a,(Contador_de_frames_2)
1407  8ED8 FE 01        	cp 1
1408  8EDA 20 0C        	jr nz,4F
1409  8EDC 3A 41 8A     	ld a,(Contador_de_frames)
1410  8EDF FE 7A        	cp $7a 												; EL FRAME $a6 peta. Siempre existe petada
1411  8EE1 28 FE        	jr z,$
1412  8EE3 30 FE        	jr nc,$
1413  8EE5 2A 0E 8A     	ld hl,(Stack_snapshot)
1414  8EE8              ;;! debuggg !!!;
1415  8EE8
1416  8EE8 CD 4D 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1417  8EEB
1418  8EEB              ;	call Extrae_foto_disparos
1419  8EEB 3E 01            ld a,1
1420  8EED D3 FE            out ($fe),a											; Azul.
1421  8EEF
1422  8EEF              ; 	Gestiona albumes de fotos.
1423  8EEF
1424  8EEF              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1425  8EEF CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1426  8EF2
1427  8EF2              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1428  8EF2
1429  8EF2 3A F9 89     	ld a,(Ctrl_1)
1430  8EF5 CB 6F        	bit 5,a
1431  8EF7 20 24        	jr nz,1F
1432  8EF9
1433  8EF9              ; No hemos terminado de guardar el último FRAME.
1434  8EF9
1435  8EF9 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1436  8EFC              ;	ld bc,Indice_album_de_fotos
1437  8EFC 2B           	dec hl
1438  8EFD 2B           	dec hl
1439  8EFE
1440  8EFE              ;	ld a,l
1441  8EFE              ;	sub c
1442  8EFE              ;	jr z,$
1443  8EFE
1444  8EFE 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1445  8F01
1446  8F01 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1447  8F04 2B           	dec hl
1448  8F05 2B           	dec hl
1449  8F06 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1450  8F09 CD 89 8D     	call Extrae_address
1451  8F0C 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1452  8F0F
1453  8F0F CD 89 8D     	call Extrae_address
1454  8F12
1455  8F12              ; Esta vacío este album???
1456  8F12
1457  8F12 24           	inc h
1458  8F13 25           	dec h
1459  8F14 20 02        	jr nz,5F
1460  8F16
1461  8F16              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1462  8F16
1463  8F16 18 05        	jr 1F
1464  8F18
1465  8F18 22 0E 8A     5 ld (Stack_snapshot),hl
1466  8F1B 18 09        	jr 2F
1467  8F1D
1468  8F1D              ; FRAME completo.
1469  8F1D
1470  8F1D 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1471  8F20 CD 89 8D     	call Extrae_address
1472  8F23 22 0E 8A     	ld (Stack_snapshot),hl
1473  8F26
1474  8F26              ;	En este punto:
1475  8F26
1476  8F26              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1477  8F26              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1478  8F26
1479  8F26              ; RELOJES.
1480  8F26
1481  8F26 21 41 8A     2 ld hl,Contador_de_frames
1482  8F29 7E           	ld a,(hl)
1483  8F2A FE FF        	cp $ff
1484  8F2C 20 04        	jr nz,3F
1485  8F2E 34           	inc (hl)
1486  8F2F
1487  8F2F 21 42 8A     	ld hl,Contador_de_frames_2
1488  8F32 34           3 inc (hl)											; 0 - 255
1489  8F33
1490  8F33 21 F9 89     6 ld hl,Ctrl_1
1491  8F36 CB AE        	res 5,(hl)
1492  8F38
1493  8F38              ;	ex af,af'
1494  8F38              ;	push af	;af'
1495  8F38
1496  8F38              ;	exx
1497  8F38              ;	push hl	;hl'
1498  8F38              ;	push de	;de'
1499  8F38              ;	push bc	;bc'
1500  8F38
1501  8F38              ;	exx
1502  8F38              ;	push hl	;hl
1503  8F38              ;	push de	;de
1504  8F38              ;	push bc	;bc
1505  8F38
1506  8F38              ;	ex af,af'
1507  8F38              ;	push af	;af
1508  8F38
1509  8F38              ;	push ix
1510  8F38              ;	push iy
1511  8F38
1512  8F38 FD E1        	pop iy
1513  8F3A DD E1        	pop ix
1514  8F3C
1515  8F3C F1           	pop af
1516  8F3D C1           	pop bc
1517  8F3E D1           	pop de
1518  8F3F E1           	pop hl
1519  8F40 D9           	exx
1520  8F41 C1           	pop bc
1521  8F42 D1           	pop de
1522  8F43 E1           	pop hl
1523  8F44 08           	ex af,af'
1524  8F45 F1           	pop af
1525  8F46
1526  8F46 08           	ex af,af'
1527  8F47 D9           	exx
1528  8F48
1529  8F48 C9           	ret
1530  8F49
1531  8F49              ; ---------------------------------------------------------------
1532  8F49
1533  8F49              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F49              ; ******************************************************************************************************************************************************************************************
   2+ 8F49              ;
   3+ 8F49              ;   21/07/23
   4+ 8F49              ;
   5+ 8F49              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F49              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F49              ;
   8+ 8F49              ;
   9+ 8F49              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F49              ;
  11+ 8F49              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F49              ;               _ hacen las entidades hacia abajo.
  13+ 8F49              ;
  14+ 8F49              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F49              ;
  16+ 8F49              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F49              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F49              ;
  19+ 8F49              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F49              ;           _ la bala.
  21+ 8F49              ;
  22+ 8F49              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F49              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F49              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F49              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F49              ;           _ en el momento de generarse la bala)).
  27+ 8F49
  28+ 8F49              Genera_disparo
  29+ 8F49
  30+ 8F49              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F49              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F49              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F49              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F49              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F49              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F49              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F49
  38+ 8F49              ; Exclusiones:
  39+ 8F49
  40+ 8F49 3A CE 89         ld a,(Vel_down)
  41+ 8F4C 47               ld b,a
  42+ 8F4D 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F50 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F51 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F52 3A F3 89         ld a,(Columnas)
  46+ 8F55 47               ld b,a
  47+ 8F56 3A B7 89         ld a,(Columns)
  48+ 8F59 B8               cp b
  49+ 8F5A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F5B
  51+ 8F5B              ; ----- ----- -----
  52+ 8F5B
  53+ 8F5B 3A E4 89         ld a,(Ctrl_0)
  54+ 8F5E CB 77            bit 6,a
  55+ 8F60 20 06            jr nz,14F
  56+ 8F62
  57+ 8F62 3A BD 89         ld a,(Coordenada_y)
  58+ 8F65 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F67 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F68
  61+ 8F68 21 00 80     14 ld hl,Indice_disparo
  62+ 8F6B 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F6E 4F               ld c,a
  64+ 8F6F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F71              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F71              ;                                            ""        ""       "f9", B="1"
  67+ 8F71              ;                                            ""        ""       "fb", B="2"
  68+ 8F71              ;                                            ""        ""       "fb", B="3"
  69+ 8F71 A7               and a
  70+ 8F72 28 10            jr z,1F
  71+ 8F74 E6 01            and 1
  72+ 8F76 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F77
  74+ 8F77 79               ld a,c
  75+ 8F78 16 F9            ld d,$f9
  76+ 8F7A 23           2 inc hl
  77+ 8F7B 23               inc hl
  78+ 8F7C 04               inc b
  79+ 8F7D BA               cp d
  80+ 8F7E 28 04            jr z,1F
  81+ 8F80 14               inc d
  82+ 8F81 14               inc d
  83+ 8F82 18 F6            jr 2B
  84+ 8F84
  85+ 8F84 CD 89 8D     1 call Extrae_address
  86+ 8F87 E5               push hl
  87+ 8F88 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F8A DD 21 D6 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F8E
  90+ 8F8E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F8E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F8E
  93+ 8F8E 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F91 CB 77            bit 6,a
  95+ 8F93 20 04            jr nz,19F
  96+ 8F95
  97+ 8F95 AF               xor a
  98+ 8F96 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F99
 100+ 8F99 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F9C FE 02            cp 2
 102+ 8F9E 38 66            jr c,3F
 103+ 8FA0 28 64            jr z,3F
 104+ 8FA2
 105+ 8FA2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8FA2
 107+ 8FA2 E6 01            and 1
 108+ 8FA4 28 30            jr z,4F
 109+ 8FA6
 110+ 8FA6              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8FA6              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8FA6              ;
 113+ 8FA6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8FA6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8FA6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8FA6
 117+ 8FA6 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8FA9
 119+ 8FA9              ;   Amadeus o entidad ???.
 120+ 8FA9
 121+ 8FA9 3A E4 89         ld a,(Ctrl_0)
 122+ 8FAC CB 77            bit 6,a
 123+ 8FAE 28 0A            jr z,8F
 124+ 8FB0
 125+ 8FB0              ; 	Dispara Amadeus.
 126+ 8FB0
 127+ 8FB0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8FB2 CD 3E 97         call PreviousScan
 129+ 8FB5 CD 3E 97         call PreviousScan
 130+ 8FB8
 131+ 8FB8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FB8
 136+ 8FB8 18 11            jr 10F
 137+ 8FBA
 138+ 8FBA              ; 	Dispara Entidad.
 139+ 8FBA
 140+ 8FBA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FBD              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FBD
 143+ 8FBD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FBD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FBD
 146+ 8FBD C5               push bc
 147+ 8FBE 06 10            ld b,16
 148+ 8FC0 CD 2F 97     9 call NextScan
 149+ 8FC3 10 FB            djnz 9B
 150+ 8FC5 C1               pop bc
 151+ 8FC6 CD 30 90         call Ajusta_disparo_parte_izquierda
 152+ 8FC9 18 06            jr 17F
 153+ 8FCB
 154+ 8FCB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FCB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FCB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FCB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FCB
 159+ 8FCB CD 30 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FCE CD A5 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FD1              ;                                                      ; _al generar el disparo.
 162+ 8FD1
 163+ 8FD1              ; 	LLegados a este punto tendremos:
 164+ 8FD1              ;
 165+ 8FD1              ;       Puntero_objeto_disparo en IY.
 166+ 8FD1              ;       Rutinas_de_impresion en IX.
 167+ 8FD1              ;       Puntero_de_impresion en HL.
 168+ 8FD1              ;       Impacto/Dirección en BC.
 169+ 8FD1
 170+ 8FD1 CD 38 90     17 call Almacena_disparo
 171+ 8FD4 18 52            jr 6F                                             ; RET.
 172+ 8FD6
 173+ 8FD6              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FD6              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FD6              ;
 176+ 8FD6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FD6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FD6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FD6
 180+ 8FD6 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FD9
 182+ 8FD9              ;   Amadeus o entidad ???.
 183+ 8FD9
 184+ 8FD9 3A E4 89         ld a,(Ctrl_0)
 185+ 8FDC CB 77            bit 6,a
 186+ 8FDE 28 0A            jr z,11F
 187+ 8FE0
 188+ 8FE0              ; 	Dispara Amadeus.
 189+ 8FE0
 190+ 8FE0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FE2 CD 3E 97         call PreviousScan
 192+ 8FE5 CD 3E 97         call PreviousScan
 193+ 8FE8
 194+ 8FE8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FE8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FE8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FE8
 199+ 8FE8 18 11            jr 13F
 200+ 8FEA
 201+ 8FEA              ; 	Dispara Entidad.
 202+ 8FEA
 203+ 8FEA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FED              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FED
 206+ 8FED              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FED              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FED
 209+ 8FED C5               push bc
 210+ 8FEE 06 10            ld b,16
 211+ 8FF0 CD 2F 97     12 call NextScan
 212+ 8FF3 10 FB            djnz 12B
 213+ 8FF5 C1               pop bc
 214+ 8FF6
 215+ 8FF6 CD 29 90         call Ajusta_disparo_parte_derecha
 216+ 8FF9 18 06            jr 18F
 217+ 8FFB
 218+ 8FFB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FFB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FFB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FFB
 223+ 8FFB CD 29 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FFE CD A5 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9001              ;                                                       ; _al generar el disparo.
 226+ 9001
 227+ 9001              ; LLegados a este punto tendremos:
 228+ 9001              ;
 229+ 9001              ;       Puntero_objeto_disparo en IY.
 230+ 9001              ;       Rutinas_de_impresion en IX.
 231+ 9001              ;       Puntero_de_impresion en HL.
 232+ 9001              ;       Impacto/Dirección en BC.
 233+ 9001
 234+ 9001 CD 38 90     18 call Almacena_disparo
 235+ 9004 18 22            jr 6F                                               ; RET.
 236+ 9006
 237+ 9006              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9006
 239+ 9006 28 11        3 jr z,5F
 240+ 9008
 241+ 9008              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9008              ;
 243+ 9008              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9008              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9008              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9008              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9008
 248+ 9008              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9008              ;	   ""        ""       "f9", B="1"
 250+ 9008              ;	   ""        ""       "fb", B="2"
 251+ 9008              ; 	   ""        ""       "fb", B="3"
 252+ 9008
 253+ 9008 2A B8 89     	ld hl,(Posicion_actual)
 254+ 900B CD 2F 97     	call NextScan
 255+ 900E
 256+ 900E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 900E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 900E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 900E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 900E
 261+ 900E CD 30 90         call Ajusta_disparo_parte_izquierda
 262+ 9011
 263+ 9011              ; 	No se produce impacto. B="$80"
 264+ 9011              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9011
 266+ 9011 01 80 80         ld bc,$8080
 267+ 9014
 268+ 9014              ; 	LLegados a este punto tendremos:
 269+ 9014              ;
 270+ 9014              ;       Puntero_objeto_disparo en IY.
 271+ 9014              ;       Rutinas_de_impresion en IX.
 272+ 9014              ;       Puntero_de_impresion en HL.
 273+ 9014              ;       Impacto/Dirección en BC.
 274+ 9014
 275+ 9014 CD 38 90         call Almacena_disparo
 276+ 9017 18 0F            jr 6F                                           ; RET.
 277+ 9019
 278+ 9019              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9019              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9019              ;
 281+ 9019              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9019              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9019              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9019              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9019
 286+ 9019 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 901C CD 2F 97     	call NextScan
 288+ 901F
 289+ 901F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 901F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 901F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 901F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 901F
 294+ 901F CD 29 90         call Ajusta_disparo_parte_derecha
 295+ 9022
 296+ 9022              ; 	No se produce impacto. B="$80"
 297+ 9022              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9022
 299+ 9022 01 80 80     15 ld bc,$8080
 300+ 9025
 301+ 9025              ; 	LLegados a este punto tendremos:
 302+ 9025              ;
 303+ 9025              ;       Puntero_objeto_disparo en IY.
 304+ 9025              ;       Rutinas_de_impresion en IX.
 305+ 9025              ;       Puntero_de_impresion en HL.
 306+ 9025              ;       Impacto/Dirección en BC.
 307+ 9025
 308+ 9025 CD 38 90         call Almacena_disparo
 309+ 9028
 310+ 9028 C9           6 ret
 311+ 9029
 312+ 9029              ; ----------------------------------------------------------------
 313+ 9029              ;
 314+ 9029              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9029              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9029              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9029
 318+ 9029 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 902A FE 02            cp 2
 320+ 902C 38 01            jr c,1F
 321+ 902E 23               inc hl
 322+ 902F C9           1 ret
 323+ 9030
 324+ 9030 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9031 FE 01        	cp 1
 326+ 9033 20 01        	jr nz,1F
 327+ 9035 2B           	dec hl
 328+ 9036 2B           1 dec hl
 329+ 9037 C9               ret
 330+ 9038
 331+ 9038              ; ----------------------------------------------------------------
 332+ 9038              ;
 333+ 9038              ;   25/02/23
 334+ 9038              ;
 335+ 9038              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9038              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9038              ;
 338+ 9038              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9038              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9038
 341+ 9038              Almacena_disparo
 342+ 9038
 343+ 9038 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9039 F1               pop af
 345+ 903A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 903B
 347+ 903B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 903C E6 01            and 1
 349+ 903E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9040              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9040              ; 	Dispara AMADEUS.
 352+ 9040
 353+ 9040              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9040              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9040              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9040              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9040
 358+ 9040 C5               push bc
 359+ 9041 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9044 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9047 A7               and a
 362+ 9048 ED 42            sbc hl,bc
 363+ 904A CC 52 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 904D C1               pop bc
 365+ 904E 28 54            jr z,4F
 366+ 9050
 367+ 9050 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9053 23               inc hl
 369+ 9054 23               inc hl
 370+ 9055 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9058              ;                                                   ; _ Disparo_(+1).
 372+ 9058 18 18            jr 2F
 373+ 905A
 374+ 905A              ; Dispara una entidad.
 375+ 905A
 376+ 905A C5           1 push bc
 377+ 905B 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 905E 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9061 A7               and a
 380+ 9062 ED 42            sbc hl,bc
 381+ 9064 CC 4B 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9067 C1               pop bc
 383+ 9068 28 3A            jr z,4F
 384+ 906A
 385+ 906A 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 906D 23               inc hl
 387+ 906E 23               inc hl
 388+ 906F 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9072              ;                                                   ; _ Disparo_(+1).
 390+ 9072 CD 89 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9075              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9075              ;
 393+ 9075              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9075              ;                                                     Rutinas_de_impresion en IX.
 395+ 9075              ;                                                     Puntero_de_impresion en HL.
 396+ 9075              ;                                                     Impacto/Dirección en BC.
 397+ 9075
 398+ 9075 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9076 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9077 23               inc hl                                          ; _ al siguiente.
 401+ 9078 A7               and a
 402+ 9079 20 C0            jr nz,3B
 403+ 907B
 404+ 907B 08               ex af,af
 405+ 907C ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9080 F9               ld sp,hl
 407+ 9081
 408+ 9081 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9083 F5               push af                                         ; Puntero de impresión.
 410+ 9084 FD E5            push iy                                         ; Puntero objeto.
 411+ 9086 C5               push bc                                         ; Control.
 412+ 9087
 413+ 9087 ED 7B 0A 8A      ld sp,(Stack)
 414+ 908B
 415+ 908B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 908B
 417+ 908B 21 F9 89     	ld hl,Ctrl_1
 418+ 908E CB C6        	set 0,(hl)
 419+ 9090
 420+ 9090 DD E5        	push ix
 421+ 9092 E1               pop hl
 422+ 9093 F5               push af
 423+ 9094 DD E1            pop ix
 424+ 9096
 425+ 9096 CD A0 7F     	call Guarda_foto_registros
 426+ 9099
 427+ 9099 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 909C CB 86        	res 0,(hl)
 429+ 909E
 430+ 909E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 909E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 909E
 433+ 909E CD 52 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 90A1 CD 4B 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 90A4
 436+ 90A4 C9           4 ret
 437+ 90A5
 438+ 90A5              ; ----------------------------------------------------------------
 439+ 90A5              ;
 440+ 90A5              ;   4/3/23
 441+ 90A5              ;
 442+ 90A5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 90A5              ;   _ al generarse el disparo.
 444+ 90A5              ;
 445+ 90A5              ;       "$80" ..... No se produce colisión.
 446+ 90A5              ;       "$81" ..... Se produce colisión.
 447+ 90A5              ;
 448+ 90A5              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 90A5              ;         _ que forman el disparo.
 450+ 90A5
 451+ 90A5
 452+ 90A5              Comprueba_Colision
 453+ 90A5
 454+ 90A5              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 90A5
 456+ 90A5 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 90A7 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 90A8
 459+ 90A8 CD DE 90         call Modifica_H_Velocidad_disparo
 460+ 90AB
 461+ 90AB 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 90AC FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 90AE 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 90B0
 465+ 90B0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 90B2 CD CE 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 90B5
 468+ 90B5 7B               ld a,e
 469+ 90B6 E6 01            and 1
 470+ 90B8 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90BA              ;                                                  ; _ para activar IMPACTO.
 472+ 90BA E1               pop hl
 473+ 90BB E5               push hl
 474+ 90BC CD 2F 97         call NextScan
 475+ 90BF
 476+ 90BF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90C0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90C2 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90C4              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90C4 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90C6 CD CE 90         call Bucle_2
 482+ 90C9
 483+ 90C9 43           1 ld b,e
 484+ 90CA E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90CB FD E1            pop iy
 486+ 90CD C9               ret
 487+ 90CE
 488+ 90CE              ; ---------- ----------
 489+ 90CE
 490+ 90CE 06 02        Bucle_2 ld b,2
 491+ 90D0 FD 7E 00     2 ld a,(iy)
 492+ 90D3 A6               and (hl)
 493+ 90D4 28 02            jr z,1F
 494+ 90D6 1E 81            ld e,$81
 495+ 90D8 23           1 inc hl
 496+ 90D9 FD 23            inc iy
 497+ 90DB 10 F3            djnz 2B
 498+ 90DD C9               ret
 499+ 90DE
 500+ 90DE              ; ---------- ----------
 501+ 90DE              ;
 502+ 90DE              ;   21/7/23
 503+ 90DE
 504+ 90DE              Modifica_H_Velocidad_disparo
 505+ 90DE
 506+ 90DE 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90E1 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90E3 D0               ret nc                                         ; _ incrementamos H.
 509+ 90E4 24               inc h
 510+ 90E5
 511+ 90E5 C9               ret
 512+ 90E6
 513+ 90E6              ; -------------------------------------------------------------------------------------------------------------
 514+ 90E6              ;
 515+ 90E6              ;   11/04/23
 516+ 90E6              ;
 517+ 90E6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90E6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90E6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90E6              ;
 521+ 90E6              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90E6
 523+ 90E6              Compara_coordenadas_X
 524+ 90E6
 525+ 90E6              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90E6              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90E6
 528+ 90E6              ; Preparamos registros:
 529+ 90E6
 530+ 90E6 21 BC 89         ld hl,Filas+6
 531+ 90E9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90EA 23               inc hl
 533+ 90EB 23               inc hl
 534+ 90EC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90ED 43               ld b,e
 536+ 90EE
 537+ 90EE 21 CA 89         ld hl,Filas+20
 538+ 90F1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90F2 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90F5 CD 11 93         call Guarda_coordenadas_X
 541+ 90F8
 542+ 90F8              ; Preparamos registros:
 543+ 90F8
 544+ 90F8 21 AA 85         ld hl,Amadeus_db+6
 545+ 90FB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90FC 23               inc hl
 547+ 90FD 23               inc hl
 548+ 90FE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90FF 7B               ld a,e
 550+ 9100 08               ex af,af'
 551+ 9101 21 B8 85         ld hl,Amadeus_db+20
 552+ 9104 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9105 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9108 CD 11 93         call Guarda_coordenadas_X
 555+ 910B
 556+ 910B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 910B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 910B
 559+ 910B 04               inc b
 560+ 910C 05               dec b
 561+ 910D 28 04            jr z,1F
 562+ 910F 06 03            ld b,3
 563+ 9111 18 02            jr 2F
 564+ 9113 06 02        1 ld b,2
 565+ 9115 08           2 ex af,af'
 566+ 9116 3C               inc a
 567+ 9117 3D               dec a
 568+ 9118 28 04            jr z,5F
 569+ 911A 0E 03            ld c,3
 570+ 911C 18 02            jr 6F
 571+ 911E 0E 02        5 ld c,2
 572+ 9120 79           6 ld a,c
 573+ 9121 08               ex af,af'
 574+ 9122 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 9125 1A           4 ld a,(de)
 576+ 9126 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9129 BE           3 cp (hl)
 578+ 912A 28 0E            jr z,7F
 579+ 912C 23               inc hl
 580+ 912D 0D               dec c
 581+ 912E 20 F9            jr nz,3B
 582+ 9130 13               inc de
 583+ 9131 08               ex af,af'
 584+ 9132 4F               ld c,a
 585+ 9133 08               ex af,af'
 586+ 9134 10 EF            djnz 4B
 587+ 9136
 588+ 9136              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9136
 590+ 9136 CD 4D 93     8 call Limpia_Coordenadas_X
 591+ 9139 C9               ret
 592+ 913A
 593+ 913A 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 913C 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 913F 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9142 CB D6            set 2,(hl)
 597+ 9144 18 F0            jr 8B
 598+ 9146
 599+ 9146              ; -----------------------------------------------------------------------
 600+ 9146              ;
 601+ 9146              ;   17/04/23
 602+ 9146              ;
 603+ 9146
 604+ 9146              Detecta_colision_nave_entidad
 605+ 9146
 606+ 9146              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9146
 608+ 9146 2A B8 89         ld hl,(Posicion_actual)
 609+ 9149 CD 8A 96         call Calcula_puntero_de_impresion
 610+ 914C
 611+ 914C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 914C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 914C
 614+ 914C DD E5            push ix
 615+ 914E E1               pop hl
 616+ 914F E5               push hl
 617+ 9150
 618+ 9150              ; ----- ----- -----
 619+ 9150 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9152 06 0A            ld b,10
 621+ 9154 CD 84 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9157 7B               ld a,e
 623+ 9158 FE 05            cp 5
 624+ 915A 38 0E            jr c,3F
 625+ 915C
 626+ 915C              ; LLegados a este punto:
 627+ 915C              ;
 628+ 915C              ;   HAY COLISIÓN !!!!!.
 629+ 915C              ;
 630+ 915C              ;   .db (Impacto) de Amadeus a "1".
 631+ 915C              ;   SET el bit3 de (Impacto2).
 632+ 915C              ;
 633+ 915C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 915C
 635+ 915C 21 BD 85         ld hl,Amadeus_db+25
 636+ 915F 36 01            ld (hl),1
 637+ 9161 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9164 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9166 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9168 18 18            jr 1F
 641+ 916A
 642+ 916A              ; -----
 643+ 916A
 644+ 916A E1           3 pop hl
 645+ 916B CD 2F 97         call NextScan
 646+ 916E E5               push hl
 647+ 916F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9170 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9172 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9174 30 0C            jr nc,1F
 651+ 9176              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9176 10 DC            djnz 2B
 653+ 9178
 654+ 9178              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9178
 656+ 9178              ; LLegados a este punto:
 657+ 9178              ;
 658+ 9178              ;   NO HAY COLISIÓN !!!!!.
 659+ 9178              ;
 660+ 9178              ;   .db (Impacto) de Amadeus a "0".
 661+ 9178              ;   RES el bit2 de (Impacto2).
 662+ 9178              ;
 663+ 9178              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9178              ;   Lo colocamos a "0".
 665+ 9178
 666+ 9178 21 33 8A         ld hl,Impacto2
 667+ 917B CB 96            res 2,(hl)
 668+ 917D 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9180 36 00            ld (hl),0
 670+ 9182
 671+ 9182 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9183 C9               ret
 673+ 9184
 674+ 9184               ; ---------- ----------
 675+ 9184
 676+ 9184 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9185 3A B7 89         ld a,(Columns)
 678+ 9188 47               ld b,a
 679+ 9189 FD 7E 00     2 ld a,(iy)
 680+ 918C BE               cp (hl)
 681+ 918D 28 01            jr z,1F
 682+ 918F
 683+ 918F 1C               inc e
 684+ 9190
 685+ 9190 23           1 inc hl
 686+ 9191 FD 23            inc iy
 687+ 9193 10 F4            djnz 2B
 688+ 9195 C1               pop bc
 689+ 9196 C9               ret
 690+ 9197
 691+ 9197              ; -------------------------------------------------------------------------------------------------------------
 692+ 9197              ;
 693+ 9197              ;   13/03/23
 694+ 9197              ;
 695+ 9197              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9197              ;
 697+ 9197              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9197
 699+ 9197 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 919A 7E               ld a,(hl)
 701+ 919B A7               and a
 702+ 919C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 919D
 704+ 919D 44               ld b,h
 705+ 919E 4D               ld c,l
 706+ 919F 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 91A2 E5               push hl
 708+ 91A3 A7               and a
 709+ 91A4 ED 42            sbc hl,bc
 710+ 91A6 E5               push hl
 711+ 91A7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 91A8
 713+ 91A8 E1               pop hl
 714+ 91A9 54               ld d,h
 715+ 91AA 5D               ld e,l
 716+ 91AB 1B               dec de
 717+ 91AC ED B8            lddr                                                ; Limpiamos.
 718+ 91AE
 719+ 91AE 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 91B1 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 91B4
 722+ 91B4 C9               ret
 723+ 91B5
 724+ 91B5              ; -------------------------------------------------------------------------------------------------------------
 725+ 91B5              ;
 726+ 91B5              ;   18/07/23
 727+ 91B5              ;
 728+ 91B5
 729+ 91B5              Motor_de_disparos
 730+ 91B5
 731+ 91B5              ; Gestiona DISPAROS DE AMADEUS.
 732+ 91B5
 733+ 91B5 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91B8 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91BB
 736+ 91BB CD 89 8D     2 call Extrae_address
 737+ 91BE 7E               ld a,(hl)
 738+ 91BF A7               and a
 739+ 91C0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91C2
 741+ 91C2              ; ----- ----- ----- ----- ----- -----
 742+ 91C2
 743+ 91C2 C5               push bc
 744+ 91C3 CD 87 92         call foto_disparo_a_borrar
 745+ 91C6
 746+ 91C6              ; Existe colisión con este disparo???
 747+ 91C6
 748+ 91C6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91C7 7E               ld a,(hl)
 750+ 91C8 2B               dec hl
 751+ 91C9 E6 01            and 1
 752+ 91CB 28 1D            jr z,9F
 753+ 91CD
 754+ 91CD              ;   En este punto:
 755+ 91CD              ;
 756+ 91CD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91CD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91CD              ;   _con la entidad).
 759+ 91CD              ;
 760+ 91CD              ;   Disparo_2A defw 0                                ; Control.
 761+ 91CD              ;    defw 0                                          ; Puntero objeto.
 762+ 91CD              ;    defw 0                                          ; Puntero de impresión.
 763+ 91CD              ;    defw 0                                          ; Rutina de impresión.
 764+ 91CD
 765+ 91CD E5               push hl
 766+ 91CE
 767+ 91CE 06 04            ld b,4
 768+ 91D0 23           19 inc hl
 769+ 91D1 10 FD            djnz 19B
 770+ 91D3
 771+ 91D3 CD 89 8D         call Extrae_address
 772+ 91D6 CD B9 9D         call Genera_coordenadas_disparo
 773+ 91D9
 774+ 91D9              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91D9
 776+ 91D9 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91DC 72               ld (hl),d
 778+ 91DD 23               inc hl
 779+ 91DE 73               ld (hl),e
 780+ 91DF
 781+ 91DF              ; Elimino el disparo de la base de datos.
 782+ 91DF
 783+ 91DF E1               pop hl
 784+ 91E0 CD 06 93         call Elimina_disparo_de_base_de_datos
 785+ 91E3 21 33 8A         ld hl,Impacto2
 786+ 91E6 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91E8
 788+ 91E8 18 06            jr 11F
 789+ 91EA
 790+ 91EA CD B0 92     9 call Mueve_disparo
 791+ 91ED CD 87 92         call foto_disparo_a_borrar
 792+ 91F0
 793+ 91F0 C1           11 pop bc
 794+ 91F1 18 04            jr 7F
 795+ 91F3
 796+ 91F3              ; ----- ----- ----- ----- ----- -----
 797+ 91F3
 798+ 91F3 ED 42        1 sbc hl,bc
 799+ 91F5 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91F7
 801+ 91F7 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91FA 23               inc hl
 803+ 91FB 23               inc hl
 804+ 91FC 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91FF 18 BA            jr 2B
 806+ 9201
 807+ 9201 CD 52 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9204              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9204
 810+ 9204              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9204
 812+ 9204 01 8A 85         ld bc,Disparo_11
 813+ 9207 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 920A
 815+ 920A CD 89 8D     5 call Extrae_address
 816+ 920D 7E               ld a,(hl)
 817+ 920E A7               and a
 818+ 920F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9211
 820+ 9211              ; ----- ----- ----- ----- ----- -----
 821+ 9211
 822+ 9211 C5               push bc
 823+ 9212 CD 87 92         call foto_disparo_a_borrar
 824+ 9215
 825+ 9215              ; Existe colisión con este disparo???
 826+ 9215
 827+ 9215 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9216 7E               ld a,(hl)
 829+ 9217 2B               dec hl
 830+ 9218 E6 01            and 1
 831+ 921A 28 4D            jr z,10F
 832+ 921C
 833+ 921C              ;! La colisión se produce con Amadeus???
 834+ 921C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 921C
 836+ 921C E5               push hl
 837+ 921D
 838+ 921D 06 04            ld b,4
 839+ 921F 23           16 inc hl
 840+ 9220 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9222
 842+ 9222 CD 89 8D         call Extrae_address
 843+ 9225 CD B9 9D         call Genera_coordenadas_disparo
 844+ 9228
 845+ 9228 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9229 FE 16            cp $16
 847+ 922B 38 2A            jr c,15F
 848+ 922D
 849+ 922D
 850+ 922D              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 922D
 852+ 922D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 922E
 854+ 922E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 922E
 856+ 922E
 857+ 922E 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9231
 859+ 9231              ; Coordenada X de Amadeus en D.
 860+ 9231
 861+ 9231 7D               ld a,l
 862+ 9232 E6 1F            and $1F
 863+ 9234 57               ld d,a
 864+ 9235
 865+ 9235 21 AC 85         ld hl,Amadeus_db+8
 866+ 9238 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9239
 868+ 9239 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 923C CD 11 93         call Guarda_coordenadas_X
 870+ 923F
 871+ 923F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9240
 873+ 9240              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9240
 875+ 9240 06 02            ld b,2
 876+ 9242 C5           20 push bc
 877+ 9243
 878+ 9243 06 03            ld b,3
 879+ 9245 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9248 7E           18 ld a,(hl)
 881+ 9249 BA               cp d
 882+ 924A 20 04            jr nz,17F
 883+ 924C
 884+ 924C              ;! Colisión Amadeus !!!!!!!!!!
 885+ 924C
 886+ 924C C1               pop bc
 887+ 924D E1               pop hl
 888+ 924E 18 0D            jr 14F
 889+ 9250
 890+ 9250 23           17 inc hl
 891+ 9251 10 F5            djnz 18B
 892+ 9253
 893+ 9253 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9254
 895+ 9254 C1               pop bc
 896+ 9255 10 EB            djnz 20B
 897+ 9257
 898+ 9257
 899+ 9257              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9257              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9257
 902+ 9257 E1           15 pop hl
 903+ 9258 23               inc hl
 904+ 9259 35               dec (hl)
 905+ 925A 2B               dec hl
 906+ 925B 18 0C            jr 10F
 907+ 925D
 908+ 925D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 925D              ; _ almacén de coordenadas_X de Amadeus.
 910+ 925D
 911+ 925D E5           14 push hl
 912+ 925E CD 06 93         call Elimina_disparo_de_base_de_datos
 913+ 9261 21 33 8A         ld hl,Impacto2
 914+ 9264 CB CE            set 1,(hl)
 915+ 9266 E1               pop hl
 916+ 9267 18 06            jr 12F
 917+ 9269
 918+ 9269              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9269
 920+ 9269 CD B0 92     10 call Mueve_disparo
 921+ 926C CD 87 92         call foto_disparo_a_borrar
 922+ 926F C1           12 pop bc
 923+ 9270
 924+ 9270 18 04            jr 8F
 925+ 9272
 926+ 9272              ; ----- ----- ----- ----- ----- -----
 927+ 9272
 928+ 9272 ED 42        4 sbc hl,bc
 929+ 9274 28 0A            jr z,6F
 930+ 9276
 931+ 9276 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9279 23               inc hl
 933+ 927A 23               inc hl
 934+ 927B 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 927E 18 8A            jr 5B
 936+ 9280
 937+ 9280 CD 4B 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9283 CD 4D 93         call Limpia_Coordenadas_X
 939+ 9286 C9               ret
 940+ 9287
 941+ 9287              ; ------------------------------------------------------------------
 942+ 9287
 943+ 9287              foto_disparo_a_borrar
 944+ 9287
 945+ 9287 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9288 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9289 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 928A
 949+ 928A E5               push hl
 950+ 928B 23               inc hl
 951+ 928C 23               inc hl
 952+ 928D ED 73 0A 8A      ld (Stack),sp
 953+ 9291 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9292 FD E1            pop iy
 955+ 9294 DD E1            pop ix
 956+ 9296 E1               pop hl
 957+ 9297 ED 7B 0A 8A      ld sp,(Stack)
 958+ 929B 3A F9 89         ld a,(Ctrl_1)
 959+ 929E CB C7            set 0,a
 960+ 92A0 32 F9 89         ld (Ctrl_1),a
 961+ 92A3 CD A0 7F         call Guarda_foto_registros
 962+ 92A6 3A F9 89         ld a,(Ctrl_1)
 963+ 92A9 CB 87            res 0,a
 964+ 92AB 32 F9 89         ld (Ctrl_1),a
 965+ 92AE E1               pop hl
 966+ 92AF C9               ret
 967+ 92B0
 968+ 92B0              ;---------------------------------------------------
 969+ 92B0              ;
 970+ 92B0              ;   18/07/23
 971+ 92B0              ;
 972+ 92B0
 973+ 92B0              Mueve_disparo
 974+ 92B0
 975+ 92B0              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 92B0              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 92B0              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 92B0
 979+ 92B0 E5               push hl
 980+ 92B1
 981+ 92B1 7E               ld a,(hl)
 982+ 92B2
 983+ 92B2 06 04            ld b,4
 984+ 92B4 23           1 inc hl
 985+ 92B5 10 FD            djnz 1B
 986+ 92B7
 987+ 92B7              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92B7
 989+ 92B7 CD 89 8D         call Extrae_address
 990+ 92BA
 991+ 92BA E6 01            and 1
 992+ 92BC 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92BE
 994+ 92BE              ; Disparo hacia arriba, (Amadeus).
 995+ 92BE
 996+ 92BE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92BE              ; _ de la dificultad.
 998+ 92BE
 999+ 92BE CD 3E 97         call PreviousScan
1000+ 92C1 CD 3E 97         call PreviousScan
1001+ 92C4 CD 3E 97         call PreviousScan
1002+ 92C7 CD 3E 97         call PreviousScan
1003+ 92CA
1004+ 92CA              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92CA
1006+ 92CA 7C               ld a,h
1007+ 92CB FE 40            cp $40
1008+ 92CD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92CF
1010+ 92CF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92CF
1012+ 92CF EB               ex de,hl
1013+ 92D0 06 04            ld b,4
1014+ 92D2 2B           6 dec hl
1015+ 92D3 10 FD            djnz 6B
1016+ 92D5
1017+ 92D5 CD 06 93         call Elimina_disparo_de_base_de_datos
1018+ 92D8 E1               pop hl
1019+ 92D9 18 10            jr 7F
1020+ 92DB
1021+ 92DB              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92DB              ; HL contiene el puntero de impresión del disparo.
1023+ 92DB              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92DB
1025+ 92DB D5           3 push de
1026+ 92DC C5               push bc
1027+ 92DD
1028+ 92DD CD A5 90         call Comprueba_Colision
1029+ 92E0
1030+ 92E0              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92E0
1032+ 92E0 78               ld a,b
1033+ 92E1
1034+ 92E1 C1               pop bc
1035+ 92E2 D1               pop de
1036+ 92E3
1037+ 92E3 EB               ex de,hl
1038+ 92E4
1039+ 92E4 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92E5 23               inc hl                                      ; _ movimiento.
1041+ 92E6 72               ld (hl),d
1042+ 92E7
1043+ 92E7 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92E8
1045+ 92E8 23               inc hl                                      ; _ en curso.
1046+ 92E9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92EA 2B               dec hl
1048+ 92EB
1049+ 92EB C9           7 ret
1050+ 92EC
1051+ 92EC              ; Disparo hacia abajo, (Entidad).
1052+ 92EC
1053+ 92EC 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92EF 47               ld b,a
1055+ 92F0
1056+ 92F0 CD 2F 97     4 call NextScan
1057+ 92F3 10 FB            djnz 4B
1058+ 92F5
1059+ 92F5              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92F5
1061+ 92F5 7C               ld a,h
1062+ 92F6 FE 58            cp $58
1063+ 92F8 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92FA
1065+ 92FA EB               ex de,hl
1066+ 92FB 06 04            ld b,4
1067+ 92FD 2B           5 dec hl
1068+ 92FE 10 FD            djnz 5B
1069+ 9300
1070+ 9300 CD 06 93         call Elimina_disparo_de_base_de_datos
1071+ 9303 E1               pop hl
1072+ 9304 18 E5            jr 7B
1073+ 9306
1074+ 9306              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9306
1076+ 9306 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9309 AF               xor a
1078+ 930A 77               ld (hl),a
1079+ 930B 54               ld d,h
1080+ 930C 5D               ld e,l
1081+ 930D 13               inc de
1082+ 930E ED B0            ldir
1083+ 9310 C9               ret
1084+ 9311
1085+ 9311              ; -----------------------------------------------------------------
1086+ 9311              ;
1087+ 9311              ;   19/7/23
1088+ 9311              ;
1089+ 9311              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9311              ;
1091+ 9311              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9311              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9311              ;
1094+ 9311              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9311              ;
1096+ 9311              ;   INPUTS:
1097+ 9311              ;
1098+ 9311              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9311              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9311
1101+ 9311              ;   MODIFICA: A, HL, BC y DE.
1102+ 9311
1103+ 9311              Guarda_coordenadas_X
1104+ 9311
1105+ 9311 7B               ld a,e
1106+ 9312 A7               and a
1107+ 9313 20 04            jr nz,1F
1108+ 9315
1109+ 9315 06 02            ld b,2
1110+ 9317 18 02            jr 2F
1111+ 9319
1112+ 9319 06 03        1 ld b,3
1113+ 931B 72           2 ld (hl),d
1114+ 931C 23               inc hl
1115+ 931D 14               inc d
1116+ 931E 10 FB            djnz 2B
1117+ 9320
1118+ 9320 C9               ret
1119+ 9321
1120+ 9321              ; -----------------------------------------------------------------
1121+ 9321              ;
1122+ 9321              ;   12/04/23
1123+ 9321              ;
1124+ 9321
1125+ 9321 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9324 A7               and a
1127+ 9325 C8               ret z
1128+ 9326
1129+ 9326 FE 04            cp 4
1130+ 9328 20 09            jr nz,1F
1131+ 932A
1132+ 932A
1133+ 932A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 932A
1135+ 932A CD 46 91         call Detecta_colision_nave_entidad
1136+ 932D
1137+ 932D 21 33 8A         ld hl,Impacto2
1138+ 9330 CB 5E            bit 3,(hl)
1139+ 9332 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9333
1141+ 9333              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9333              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9333
1144+ 9333 21 33 8A     1 ld hl,Impacto2
1145+ 9336 CB 4E            bit 1,(hl)
1146+ 9338 28 07            jr z,2F
1147+ 933A
1148+ 933A 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 933D 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 933F 18 0B            jr 3F
1151+ 9341
1152+ 9341 21 33 8A     2 ld hl,Impacto2
1153+ 9344 CB 46            bit 0,(hl)
1154+ 9346 C8               ret z
1155+ 9347
1156+ 9347              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9347
1158+ 9347 21 F9 89         ld hl,Ctrl_1
1159+ 934A CB D6            set 2,(hl)
1160+ 934C
1161+ 934C C9           3 ret
1162+ 934D
1163+ 934D              ; -----------------------------------------------------------------
1164+ 934D              ;
1165+ 934D              ;   19/7/23
1166+ 934D              ;
1167+ 934D              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 934D
1169+ 934D AF           Limpia_Coordenadas_X xor a
1170+ 934E 06 06            ld b,6
1171+ 9350 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9353 77           1 ld (hl),a
1173+ 9354 23               inc hl
1174+ 9355 10 FC            djnz 1B
1175+ 9357 C9               ret
1176+ 9358
1177+ 9358              ; -----------------------------------------------------------------
1178+ 9358              ;
1179+ 9358              ;   25/04/23
1180+ 9358              ;
1181+ 9358
1182+ 9358              Determina_resultado_comparativa
1183+ 9358
1184+ 9358              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9358              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9358              ;
1187+ 9358              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9358              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9358              ;
1190+ 9358              ;   SBC HL,DE
1191+ 9358
1192+ 9358              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9358              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9358
1195+ 9358              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9358              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9358
1198+ 9358
1199+ 9358 3A CA 89         ld a,(Cuad_objeto)
1200+ 935B FE 02            cp 2
1201+ 935D 28 26            jr z,2F
1202+ 935F 38 24            jr c,2F
1203+ 9361
1204+ 9361              ; Cuadrantes 3º y 4º
1205+ 9361
1206+ 9361 E6 01            and 1
1207+ 9363 28 10            jr z,4F
1208+ 9365
1209+ 9365              ; Cuadrante 3º
1210+ 9365
1211+ 9365 7C               ld a,h
1212+ 9366 06 00            ld b,0
1213+ 9368
1214+ 9368 CD F3 93         call Compara_cositas_H3
1215+ 936B
1216+ 936B 04               inc b
1217+ 936C 05               dec b
1218+ 936D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 936E
1220+ 936E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 936F 06 00            ld b,0
1222+ 9371
1223+ 9371 CD 05 94         call Compara_cositas_L3
1224+ 9374 C9               ret
1225+ 9375
1226+ 9375              ; Cuadrante 4º
1227+ 9375
1228+ 9375 7C           4 ld a,h
1229+ 9376 06 00            ld b,0
1230+ 9378
1231+ 9378 CD 17 94         call Compara_cositas_H4
1232+ 937B
1233+ 937B 04               inc b
1234+ 937C 05               dec b
1235+ 937D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 937E
1237+ 937E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 937F 06 00            ld b,0
1239+ 9381
1240+ 9381 CD 2D 94         call Compara_cositas_L4
1241+ 9384 C9               ret
1242+ 9385
1243+ 9385              ; Cuadrantes 1º y 2º.
1244+ 9385
1245+ 9385 28 10        2 jr z,3F
1246+ 9387
1247+ 9387              ; 1er Cuadrante
1248+ 9387
1249+ 9387 7C               ld a,h
1250+ 9388 06 00            ld b,0
1251+ 938A
1252+ 938A CD CB 93         call Compara_cositas_H1
1253+ 938D
1254+ 938D 04               inc b
1255+ 938E 05               dec b
1256+ 938F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9390
1258+ 9390 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9391 06 00            ld b,0
1260+ 9393
1261+ 9393 CD E1 93         call Compara_cositas_L1
1262+ 9396 C9               ret
1263+ 9397
1264+ 9397
1265+ 9397              ; 2º Cuadrante
1266+ 9397
1267+ 9397 7C           3 ld a,h
1268+ 9398 06 00            ld b,0
1269+ 939A
1270+ 939A CD A7 93         call Compara_cositas_H2
1271+ 939D
1272+ 939D 04               inc b
1273+ 939E 05               dec b
1274+ 939F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 93A0
1276+ 93A0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 93A1 06 00            ld b,0
1278+ 93A3
1279+ 93A3 CD B9 93         call Compara_cositas_L2
1280+ 93A6 C9               ret
1281+ 93A7
1282+ 93A7 A7           Compara_cositas_H2 and a
1283+ 93A8 28 0D            jr z,1F
1284+ 93AA              ;    cp $fd
1285+ 93AA              ;    jr z,1F
1286+ 93AA              ;    cp $fe
1287+ 93AA              ;    jr z,1F
1288+ 93AA FE FF            cp $ff
1289+ 93AC 28 09            jr z,1F
1290+ 93AE FE 01            cp $01
1291+ 93B0 28 05            jr z,1F
1292+ 93B2 FE 02            cp $02
1293+ 93B4 28 01            jr z,1F
1294+ 93B6 C0               ret nz
1295+ 93B7 04           1 inc b
1296+ 93B8 C9               ret
1297+ 93B9
1298+ 93B9 A7           Compara_cositas_L2 and a
1299+ 93BA 28 0D            jr z,1F
1300+ 93BC              ;    cp $fd
1301+ 93BC              ;    jr z,1F
1302+ 93BC FE FE            cp $fe
1303+ 93BE 28 09            jr z,1F
1304+ 93C0 FE FF            cp $ff
1305+ 93C2 28 05            jr z,1F
1306+ 93C4 FE 01            cp $01
1307+ 93C6 28 01            jr z,1F
1308+ 93C8              ;    cp $02
1309+ 93C8              ;    jr z,1F
1310+ 93C8 C0               ret nz
1311+ 93C9 04           1 inc b
1312+ 93CA C9               ret
1313+ 93CB
1314+ 93CB A7           Compara_cositas_H1 and a
1315+ 93CC 28 11            jr z,1F
1316+ 93CE              ;    cp $fd
1317+ 93CE              ;    jr z,1F
1318+ 93CE              ;    cp $fe
1319+ 93CE              ;    jr z,1F
1320+ 93CE FE FF            cp $ff
1321+ 93D0 28 0D            jr z,1F
1322+ 93D2 FE 01            cp $01
1323+ 93D4 28 09            jr z,1F
1324+ 93D6 FE 02            cp $02
1325+ 93D8 28 05            jr z,1F
1326+ 93DA FE 03            cp $03
1327+ 93DC 28 01            jr z,1F
1328+ 93DE C0               ret nz
1329+ 93DF 04           1 inc b
1330+ 93E0 C9               ret
1331+ 93E1
1332+ 93E1 A7           Compara_cositas_L1 and a
1333+ 93E2 28 0D            jr z,1F
1334+ 93E4              ;    cp $fd
1335+ 93E4              ;    jr z,1F
1336+ 93E4              ;    cp $fe
1337+ 93E4              ;    jr z,1F
1338+ 93E4              ;    cp $ff
1339+ 93E4              ;    jr z,1F
1340+ 93E4 FE 01            cp $01
1341+ 93E6 28 09            jr z,1F
1342+ 93E8 FE 02            cp $02
1343+ 93EA 28 05            jr z,1F
1344+ 93EC FE 03            cp $03
1345+ 93EE 28 01            jr z,1F
1346+ 93F0 C0               ret nz
1347+ 93F1 04           1 inc b
1348+ 93F2 C9               ret
1349+ 93F3
1350+ 93F3 A7           Compara_cositas_H3 and a
1351+ 93F4 28 0D            jr z,1F
1352+ 93F6              ;    cp $fd
1353+ 93F6              ;    jr z,1F
1354+ 93F6 FE FE            cp $fe
1355+ 93F8 28 09            jr z,1F
1356+ 93FA FE FF            cp $ff
1357+ 93FC 28 05            jr z,1F
1358+ 93FE FE 01            cp $01
1359+ 9400 28 01            jr z,1F
1360+ 9402              ;    cp $02
1361+ 9402              ;    jr z,1F
1362+ 9402              ;    cp $03
1363+ 9402              ;    jr z,1F
1364+ 9402 C0               ret nz
1365+ 9403 04           1 inc b
1366+ 9404 C9               ret
1367+ 9405
1368+ 9405 A7           Compara_cositas_L3 and a
1369+ 9406 28 0D            jr z,1F
1370+ 9408              ;    cp $fd
1371+ 9408              ;    jr z,1F
1372+ 9408              ;    cp $fe
1373+ 9408              ;    jr z,1F
1374+ 9408              ;    cp $ff
1375+ 9408              ;    jr z,1F
1376+ 9408 FE 01            cp $01
1377+ 940A 28 09            jr z,1F
1378+ 940C FE 02            cp $02
1379+ 940E 28 05            jr z,1F
1380+ 9410 FE 03            cp $03
1381+ 9412 28 01            jr z,1F
1382+ 9414 C0               ret nz
1383+ 9415 04           1 inc b
1384+ 9416 C9               ret
1385+ 9417
1386+ 9417 A7           Compara_cositas_H4 and a
1387+ 9418 28 11            jr z,1F
1388+ 941A FE FD            cp $fd
1389+ 941C 28 0D            jr z,1F
1390+ 941E FE FE            cp $fe
1391+ 9420 28 09            jr z,1F
1392+ 9422 FE FF            cp $ff
1393+ 9424 28 05            jr z,1F
1394+ 9426 FE 01            cp $01
1395+ 9428 28 01            jr z,1F
1396+ 942A              ;    cp $02
1397+ 942A              ;    jr z,1F
1398+ 942A              ;    cp $03
1399+ 942A              ;    jr z,1F
1400+ 942A C0               ret nz
1401+ 942B 04           1 inc b
1402+ 942C C9               ret
1403+ 942D
1404+ 942D A7           Compara_cositas_L4 and a
1405+ 942E 28 0D            jr z,1F
1406+ 9430              ;    cp $fd
1407+ 9430              ;    jr z,1F
1408+ 9430 FE FE            cp $fe
1409+ 9432 28 09            jr z,1F
1410+ 9434 FE FF            cp $ff
1411+ 9436 28 05            jr z,1F
1412+ 9438 FE 01            cp $01
1413+ 943A 28 01            jr z,1F
1414+ 943C              ;    cp $02
1415+ 943C              ;    jr z,1F
1416+ 943C              ;    cp $03
1417+ 943C              ;    jr z,1F
1418+ 943C C0               ret nz
1419+ 943D 04           1 inc b
1420+ 943E C9               ret
# file closed: Disparo.asm
1534  943F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 943F              ; ******************************************************************************************************************************************************************************************
   2+ 943F              ;
   3+ 943F              ; 26/06/23
   4+ 943F              ;
   5+ 943F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 943F
   7+ 943F CD 23 97     Draw call Prepara_draw
   8+ 9442 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9443 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9444 28 05        	jr z,2F
  11+ 9446
  12+ 9446 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9449 18 0C        	jr 1F
  14+ 944B
  15+ 944B 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 944E 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9451 CD E0 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9454              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9454 CD 35 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9457
  21+ 9457 3A E4 89     1 ld a,(Ctrl_0)
  22+ 945A CB 6F        	bit 5,a
  23+ 945C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 945E
  25+ 945E CD 76 94     	call Comprueba_limite_horizontal
  26+ 9461 CD 06 95     	call Comprueba_limite_vertical
  27+ 9464
  28+ 9464              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9464              ; -----------------------
  30+ 9464              ; -----------------------
  31+ 9464              ; -----------------------
  32+ 9464
  33+ 9464 CD 53 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9467 CD 8A 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 946A CD E9 96     	call Define_rutina_de_impresion
  36+ 946D
  37+ 946D 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9470 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9472 32 E4 89     	ld (Ctrl_0),a
  40+ 9475
  41+ 9475 C9           	ret
  42+ 9476
  43+ 9476              ; *******************************************************************************************************************************************************************************************
  44+ 9476              ;	21/01/23
  45+ 9476              ;
  46+ 9476              ; 	Comprueba_limite_horizontal.
  47+ 9476              ;
  48+ 9476              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9476              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9476              ;
  51+ 9476              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9476              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9476              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9476              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9476
  56+ 9476
  57+ 9476
  58+ 9476 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9479 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 947B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 947D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 947F 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9482 18 09            jr 6F
  64+ 9484 CB 5F        1 bit 3,a
  65+ 9486 28 0A            jr z,2F
  66+ 9488 E6 F7            and $f7
  67+ 948A 32 E4 89         ld (Ctrl_0),a
  68+ 948D CD E0 95     6 call Inicializacion
  69+ 9490 18 5B            jr 5F
  70+ 9492 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9493
  72+ 9493              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9493              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9493
  75+ 9493 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9494 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9497 CD 03 9A     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 949A 67           	ld h,a
  79+ 949B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 949C CD 03 9A     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 949F 67           	ld h,a
  82+ 94A0 A7           	and a
  83+ 94A1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 94A3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 94A4 3A CA 89     	ld a,(Cuad_objeto)
  86+ 94A7 FE 02        	cp 2
  87+ 94A9 38 1E        	jr c,3F
  88+ 94AB 28 1C        	jr z,3F
  89+ 94AD 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 94AE 28 23            jr z,7F
  91+ 94B0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 94B2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 94B4 E1           	pop hl
  94+ 94B5
  95+ 94B5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 94B5              ; _para indicar con E="2" en caso necesario.
  97+ 94B5
  98+ 94B5 E5               push hl
  99+ 94B6 C5               push bc
 100+ 94B7 CD 03 9A     	call calcula_tercio
 101+ 94BA FE 01        	cp 1
 102+ 94BC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94BE CD EE 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94C1 28 26            jr z,9F
 105+ 94C3 38 24            jr c,9F
 106+ 94C5 1E 00        11 ld e,0
 107+ 94C7 18 22            jr 8F
 108+ 94C9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94CA 28 07        	jr z, 7F
 110+ 94CC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94CE 1E 00         	ld e,0
 112+ 94D0 E1           	pop hl
 113+ 94D1 18 04        	jr 4F
 114+ 94D3 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94D5 18 15            jr 10F
 116+ 94D7
 117+ 94D7              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94D7              ; _para indicar con E="2" en caso necesario.
 119+ 94D7
 120+ 94D7 E5           4 push hl
 121+ 94D8 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94D9 CD 03 9A     	call calcula_tercio
 123+ 94DC FE 01        	cp 1
 124+ 94DE 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94E0 CD EE 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94E3 28 04            jr z,9F
 127+ 94E5 30 02            jr nc,9F
 128+ 94E7 18 02        	jr 8F
 129+ 94E9 1E 02        9 ld e,2
 130+ 94EB C1           8 pop bc
 131+ 94EC E1           10 pop hl
 132+ 94ED C9           5 ret
 133+ 94EE
 134+ 94EE              ; --------------------
 135+ 94EE              ;
 136+ 94EE              ; 25/08/22
 137+ 94EE
 138+ 94EE CD 03 9A     Comprueba_centro call calcula_tercio
 139+ 94F1 67               ld h,a
 140+ 94F2 08           	ex af,af
 141+ 94F3 FE 02        	cp 2
 142+ 94F5 38 07        	jr c,1F
 143+ 94F7 28 05        	jr z,1F
 144+ 94F9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94FC 18 03        	jr 2F
 146+ 94FE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9501 08           2 ex af,af
 148+ 9502 A7               and a
 149+ 9503 ED 42            sbc hl,bc
 150+ 9505 C9               ret
 151+ 9506
 152+ 9506              ; *********************************************************************************************************************************************************************************************
 153+ 9506              ;
 154+ 9506              ;   16/8/22
 155+ 9506              ;
 156+ 9506              ;	Comprueba_limite_vertical
 157+ 9506              ;
 158+ 9506              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9506              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9506              ;
 161+ 9506
 162+ 9506 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9509 7D           	ld a,l
 164+ 950A E6 1F        	and $1F
 165+ 950C 57           	ld d,a
 166+ 950D 3A F6 89     	ld a,(Limite_vertical)
 167+ 9510 BA           	cp d 											; Límite - Posición.
 168+ 9511 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9512 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9515 CB 47        	bit 0,a
 171+ 9517 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9519
 173+ 9519              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9519
 175+ 9519 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 951A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 951C
 178+ 951C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 951C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 951C
 181+ 951C 3A BC 89         ld a,(Coordenada_X)
 182+ 951F 16 0F            ld d,Centro_izquierda
 183+ 9521 A7               and a
 184+ 9522 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9523 28 1E            jr z,3F
 186+ 9525 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9527              ;                                                    ; _salimos sin modificar nada.
 188+ 9527 18 0E            jr 2F
 189+ 9529 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 952A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 952C
 192+ 952C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 952C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 952C
 195+ 952C 3A BC 89         ld a,(Coordenada_X)
 196+ 952F 16 10            ld d,Centro_derecha
 197+ 9531 A7               and a
 198+ 9532 92               sub d
 199+ 9533 28 0E            jr z,3F
 200+ 9535 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9537              ;                                                    ; _salimos sin modificar nada.
 202+ 9537 CB 43        2 bit 0,e
 203+ 9539 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 953B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 953C CD D0 95         call Modificaccionne
 206+ 953F C1           	pop bc
 207+ 9540 CD E0 95         call Inicializacion
 208+ 9543 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9544
 210+ 9544              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9544
 212+ 9544 C5           4 push bc
 213+ 9545 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9548 0A           	ld a,(bc)
 215+ 9549 3D           	dec a
 216+ 954A 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 954B 7D           	ld a,l
 218+ 954C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 954D CB 47        	bit 0,a
 220+ 954F 28 03        	jr z,5F
 221+ 9551 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9552 18 2E        	jr 7F
 223+ 9554
 224+ 9554              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9554
 226+ 9554 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9555 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9556 3A E4 89     	ld a,(Ctrl_0)
 229+ 9559 CB 4F        	bit 1,a
 230+ 955B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 955D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 955E
 233+ 955E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 955E
 235+ 955E 1C               inc e
 236+ 955F 1D               dec e
 237+ 9560 20 07            jr nz,12F
 238+ 9562 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9563 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9564 22 B8 89     	ld (Posicion_actual),hl
 241+ 9567 18 44        13 jr 9F
 242+ 9569 CB 43        12 bit 0,e
 243+ 956B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 956D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 956D C1           	pop bc
 246+ 956E 18 D3        	jr 3B
 247+ 9570 80           14 add b
 248+ 9571 6F               ld l,a
 249+ 9572 22 B8 89     	ld (Posicion_actual),hl
 250+ 9575 CD D0 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9578 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 957A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 957C 32 E4 89         ld (Ctrl_0),a
 254+ 957F F1           	pop af
 255+ 9580 18 2B        	jr 9F
 256+ 9582
 257+ 9582              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9582
 259+ 9582 F5           7 push af
 260+ 9583 3A E4 89     	ld a,(Ctrl_0)
 261+ 9586 CB 47        	bit 0,a
 262+ 9588 20 1D        	jr nz,8F
 263+ 958A F1           	pop af
 264+ 958B
 265+ 958B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 958B
 267+ 958B 1C           	inc e
 268+ 958C 1D               dec e
 269+ 958D 20 07            jr nz,10F
 270+ 958F 90           	sub b
 271+ 9590 6F               ld l,a
 272+ 9591 22 B8 89     	ld (Posicion_actual),hl
 273+ 9594 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9596              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9596 CB 43        10 bit 0,e
 276+ 9598 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 959A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 959A C1           	pop bc
 279+ 959B 18 A6        	jr 3B
 280+ 959D 90           16 sub b
 281+ 959E 6F               ld l,a
 282+ 959F 22 B8 89     	ld (Posicion_actual),hl
 283+ 95A2 CD D0 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 95A5 18 06            jr 9F
 285+ 95A7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 95A9 32 E4 89         ld (Ctrl_0),a
 287+ 95AC F1           	pop af
 288+ 95AD C1           9 pop bc
 289+ 95AE 1E 00        	ld e,0
 290+ 95B0 CD E0 95         call Inicializacion
 291+ 95B3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 95B4 08           	ex af,af
 293+ 95B5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95B6 18 8B            jr 3B
 295+ 95B8
 296+ 95B8              ; --------------------
 297+ 95B8
 298+ 95B8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95BA CD 3E 97     1 call PreviousScan
 300+ 95BD 10 FB            djnz 1B
 301+ 95BF 22 B8 89     	ld (Posicion_actual),hl
 302+ 95C2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95C3 C9           	ret
 304+ 95C4
 305+ 95C4              ; --------------------
 306+ 95C4
 307+ 95C4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95C6 CD 2F 97     1 call NextScan
 309+ 95C9 10 FB            djnz 1B
 310+ 95CB 22 B8 89     	ld (Posicion_actual),hl
 311+ 95CE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95CF C9           	ret
 313+ 95D0
 314+ 95D0              ; --------------------
 315+ 95D0              ;
 316+ 95D0              ;	22/01/23
 317+ 95D0              ;
 318+ 95D0              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95D0              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95D0              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95D0
 322+ 95D0
 323+ 95D0              Modificaccionne
 324+ 95D0
 325+ 95D0 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95D3 FE 02        	cp 2
 327+ 95D5 CC B8 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95D8 DC B8 95         call c,Modifica_Pos_actual
 329+ 95DB C8           	ret z
 330+ 95DC CD C4 95         call Modifica_Pos_actual2
 331+ 95DF C9               ret
 332+ 95E0
 333+ 95E0              ; *************************************************************************************************************************************************************************************************
 334+ 95E0              ;
 335+ 95E0              ;	13/8/22
 336+ 95E0              ;
 337+ 95E0              ;	Inicializacion
 338+ 95E0              ;
 339+ 95E0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95E0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95E0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95E0              ;
 343+ 95E0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95E0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95E0              ;	_ desaparece/aparece.
 346+ 95E0
 347+ 95E0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95E0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95E0              ;
 350+ 95E0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95E0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95E0              ; 		   [E] ="0"
 353+ 95E0
 354+ 95E0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95E0
 356+ 95E0 CD 03 9A     Inicializacion call calcula_tercio
 357+ 95E3 28 36        	jr z,primit
 358+ 95E5 E6 02        	and 2
 359+ 95E7 20 07        	jr nz,segmit
 360+ 95E9 7D           	ld a,l
 361+ 95EA FE 7F        	cp $7f
 362+ 95EC 38 2D        	jr c,primit
 363+ 95EE 28 2B        	jr z,primit
 364+ 95F0 CD 4D 96     segmit call column
 365+ 95F3 38 13        	jr c,tercuad
 366+ 95F5 3E 04        cuarcuad ld a,4
 367+ 95F7 32 CA 89     	ld (Cuad_objeto),a
 368+ 95FA 21 20 48     	ld hl,$4820
 369+ 95FD 22 F4 89     	ld (Limite_horizontal),hl
 370+ 9600 21 F6 89     	ld hl,Limite_vertical
 371+ 9603 36 0D        	ld (hl),$0d
 372+ 9605 08           	ex af,af
 373+ 9606 18 3C        	jr 1F
 374+ 9608              tercuad
 375+ 9608 3E 03        	ld a,3
 376+ 960A 32 CA 89     	ld (Cuad_objeto),a
 377+ 960D 21 20 48     	ld hl,$4820
 378+ 9610 22 F4 89     	ld (Limite_horizontal),hl
 379+ 9613 21 F6 89     	ld hl,Limite_vertical
 380+ 9616 36 12        	ld (hl),$12
 381+ 9618 08           	ex af,af
 382+ 9619 18 29        	jr 1F
 383+ 961B CD 4D 96     primit call column
 384+ 961E 38 13        	jr c, primcuad
 385+ 9620              segcuad
 386+ 9620 3E 02        	ld a,2
 387+ 9622 32 CA 89     	ld (Cuad_objeto),a
 388+ 9625 21 C0 4F     	ld hl,$4fc0
 389+ 9628 22 F4 89     	ld (Limite_horizontal),hl
 390+ 962B 21 F6 89     	ld hl,Limite_vertical
 391+ 962E 36 0D        	ld (hl),$0d
 392+ 9630 08           	ex af,af
 393+ 9631 18 11        	jr 1F
 394+ 9633              primcuad
 395+ 9633 3E 01        	ld a,1
 396+ 9635 32 CA 89     	ld (Cuad_objeto),a
 397+ 9638 21 C0 4F     	ld hl,$4fc0
 398+ 963B 22 F4 89     	ld (Limite_horizontal),hl
 399+ 963E 21 F6 89     	ld hl,Limite_vertical
 400+ 9641 36 12        	ld (hl),$12
 401+ 9643 08           	ex af,af
 402+ 9644 CD 8E 9D     1 call Genera_coordenadas
 403+ 9647 21 E4 89     	ld hl,Ctrl_0
 404+ 964A CB EE        	set 5,(hl)
 405+ 964C C9           	ret
 406+ 964D
 407+ 964D              ; ------------------------------------------------------------------------------------------------------------------
 408+ 964D
 409+ 964D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 964D              ;
 411+ 964D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 964D
 413+ 964D 7D           column ld a,l
 414+ 964E E6 1F        	and $1f
 415+ 9650 FE 10         	cp $10
 416+ 9652 C9            	ret
 417+ 9653
 418+ 9653              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9653              ;
 420+ 9653              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9653              ;
 422+ 9653              ; 14/12/22
 423+ 9653              ;
 424+ 9653              ;	Modifica: A y BC.
 425+ 9653
 426+ 9653 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9656 E6 01        	and 1
 428+ 9658 28 17        	jr z,1F
 429+ 965A
 430+ 965A              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 965A
 432+ 965A 3A BC 89     	ld a,(Coordenada_X)
 433+ 965D 47           	ld b,a
 434+ 965E 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 965F 79           	ld a,c
 436+ 9660 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9661 38 08        	jr c,2F
 438+ 9663 47           	ld b,a
 439+ 9664 79           	ld a,c
 440+ 9665 90           	sub b
 441+ 9666 32 F3 89     	ld (Columnas),a
 442+ 9669 18 1B        	jr 4F
 443+ 966B 79           2 ld a,c
 444+ 966C 32 F3 89     	ld (Columnas),a
 445+ 966F 18 15        	jr 4F
 446+ 9671
 447+ 9671              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9671
 449+ 9671 3A BC 89     1 ld a,(Coordenada_X)
 450+ 9674 81           	add c
 451+ 9675 3D           	dec a
 452+ 9676 D6 1F        	sub $1f
 453+ 9678 38 08        	jr c,3F
 454+ 967A 47           	ld b,a
 455+ 967B 79           	ld a,c
 456+ 967C 90           	sub b
 457+ 967D 32 F3 89     	ld (Columnas),a
 458+ 9680 18 04        	jr 4F
 459+ 9682 79           3 ld a,c
 460+ 9683 32 F3 89     	ld (Columnas),a
 461+ 9686 D9           4 exx
 462+ 9687 4F           	ld c,a
 463+ 9688 D9           	exx
 464+ 9689 C9            ret
 465+ 968A
 466+ 968A              ; --------------------------------------------------------------------------------------------------------------------
 467+ 968A              ;
 468+ 968A              ;   19/7/23
 469+ 968A              ;
 470+ 968A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 968A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 968A              ;
 473+ 968A              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 968A              ;			HL e IY Contienen (Puntero_objeto).
 475+ 968A              ;
 476+ 968A              ;	DESTRUYE: HL,B Y A.
 477+ 968A
 478+ 968A 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 968D FE 02        	cp 2
 480+ 968F 38 18        	jr c,1F
 481+ 9691 28 16        	jr z,1F
 482+ 9693 E6 01        	and 1
 483+ 9695 28 0D        	jr z,3F
 484+ 9697
 485+ 9697              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9697
 487+ 9697 CD DD 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 969A
 489+ 969A 7D           9 ld a,l
 490+ 969B E6 1F        	and $1f
 491+ 969D 28 2A        	jr z,7F
 492+ 969F 2B           	dec hl
 493+ 96A0 10 F8        	djnz 9B
 494+ 96A2 18 25        	jr 7F
 495+ 96A4
 496+ 96A4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 96A4
 498+ 96A4 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 96A7 18 20        	jr 7F
 500+ 96A9
 501+ 96A9 28 14        1 jr z,2F
 502+ 96AB
 503+ 96AB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 96AB
 505+ 96AB CD DD 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 96AE
 507+ 96AE 7D           4 ld a,l
 508+ 96AF E6 1F        	and $1f
 509+ 96B1 28 03        	jr z,6F
 510+ 96B3 2B           	dec hl
 511+ 96B4 10 F8        	djnz 4B
 512+ 96B6 06 0F        6 ld b,15
 513+ 96B8 CD 3E 97     5 call PreviousScan
 514+ 96BB 10 FB        	djnz 5B
 515+ 96BD 18 0A        	jr 7F
 516+ 96BF
 517+ 96BF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96BF
 519+ 96BF CD DD 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96C2 06 0F        	ld b,15
 521+ 96C4 CD 3E 97     8 call PreviousScan
 522+ 96C7 10 FB        	djnz 8B
 523+ 96C9
 524+ 96C9 E5           7 push hl
 525+ 96CA DD E1        	pop ix
 526+ 96CC
 527+ 96CC 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96CF E5           	push hl
 529+ 96D0 FD E1        	pop iy
 530+ 96D2
 531+ 96D2              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96D2
 533+ 96D2 3A E4 89     	ld a,(Ctrl_0)
 534+ 96D5 CB 77        	bit 6,a
 535+ 96D7 C8           	ret z
 536+ 96D8
 537+ 96D8              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96D8              ; _ entidad / Amadeus´.
 539+ 96D8
 540+ 96D8 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96DC
 542+ 96DC C9           	ret
 543+ 96DD
 544+ 96DD              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96DD              ;
 546+ 96DD              ;	2/1/23
 547+ 96DD              ;
 548+ 96DD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96DD              ;
 550+ 96DD              ;	Tras esta rutina tenemos:
 551+ 96DD              ;
 552+ 96DD              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96DD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96DD              ;
 555+ 96DD              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96DD
 557+ 96DD 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96E0 3A F3 89     	ld a,(Columnas)
 559+ 96E3 3D           	dec a
 560+ 96E4 20 01        	jr nz,1F
 561+ 96E6 3C           	inc a
 562+ 96E7 47           1 ld b,a
 563+ 96E8 C9           	ret
 564+ 96E9
 565+ 96E9              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96E9              ;
 567+ 96E9              ;	3/1/23
 568+ 96E9              ;
 569+ 96E9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96E9              ;
 571+ 96E9              ;	Destruye: A,B,HL y DE.
 572+ 96E9
 573+ 96E9              Define_rutina_de_impresion
 574+ 96E9
 575+ 96E9 3A B7 89     	ld a,(Columns)
 576+ 96EC 47           	ld b,a
 577+ 96ED 3A F3 89     	ld a,(Columnas)
 578+ 96F0 B8           	cp b
 579+ 96F1 20 0D        	jr nz,2f
 580+ 96F3
 581+ 96F3              ;	La entidad se imprime entera.
 582+ 96F3
 583+ 96F3 21 D3 97     	ld hl, Indice_entidades_completas
 584+ 96F6 E6 01        	and 1
 585+ 96F8 28 02        	jr z,1F
 586+ 96FA
 587+ 96FA 23           	inc hl
 588+ 96FB 23           	inc hl
 589+ 96FC
 590+ 96FC CD 89 8D     1 call Extrae_address
 591+ 96FF C9           	ret		;	ret
 592+ 9700
 593+ 9700              ;	La entidad no se imprime entera en pantalla.
 594+ 9700
 595+ 9700 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 9703 E6 01        	and 1
 597+ 9705 28 17        	jr z,3F
 598+ 9707
 599+ 9707              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9707
 601+ 9707 21 D7 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 970A 3A B7 89     4 ld a,(Columns)
 603+ 970D E6 01        	and 1
 604+ 970F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9711
 606+ 9711 23           	inc hl
 607+ 9712 23           	inc hl
 608+ 9713
 609+ 9713 3A F3 89     	ld a,(Columnas)
 610+ 9716 E6 01        	and 1
 611+ 9718 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 971A
 613+ 971A 23           	inc hl
 614+ 971B 23           	inc hl
 615+ 971C
 616+ 971C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 971E
 618+ 971E 21 DD 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9721 18 E7        	jr 4B
 620+ 9723
 621+ 9723              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9723              ;
 623+ 9723              ;	Prepara_draw
 624+ 9723              ;
 625+ 9723              ;	Es una rutina de carga.
 626+ 9723              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9723              ;
 628+ 9723              ;	FUNCIONAMIENTO:
 629+ 9723              ;
 630+ 9723              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9723              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9723              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9723              ;
 634+ 9723              ;	DESTRUYE:
 635+ 9723              ;
 636+ 9723              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9723
 638+ 9723 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9726 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9727 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9728 4E           	ld c,(hl)
 642+ 9729 2A B8 89     	ld hl,(Posicion_actual)
 643+ 972C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 972E C9           	ret
 645+ 972F
 646+ 972F              ;----------------------------------------------------------------------------------------------------------------
 647+ 972F              ;
 648+ 972F              ;	5/08/22
 649+ 972F              ;
 650+ 972F              ;   NextScan.
 651+ 972F              ;
 652+ 972F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 972F              ;
 654+ 972F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 972F              ;
 656+ 972F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 972F              ;
 658+ 972F              ;       DESTRUIDOS: AF y HL !!!
 659+ 972F              ;
 660+ 972F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 972F              ;
 662+ 972F
 663+ 972F 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9730 7C               ld a,h
 665+ 9731 E6 07            and 7
 666+ 9733 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9734
 668+ 9734 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9735 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9737 6F               ld l,a
 671+ 9738 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9739
 673+ 9739 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 973A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 973C 67               ld h,a
 676+ 973D C9               ret
 677+ 973E
 678+ 973E              ;----------------------------------------------------------------------------------------------------------------
 679+ 973E              ;
 680+ 973E              ;	5/08/22
 681+ 973E              ;
 682+ 973E              ;   PreviousScan.
 683+ 973E              ;
 684+ 973E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 973E              ;
 686+ 973E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 973E              ;
 688+ 973E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 973E              ;
 690+ 973E              ;       DESTRUIDOS: AF y HL !!!
 691+ 973E              ;
 692+ 973E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 973E              ;
 694+ 973E
 695+ 973E 7C           PreviousScan ld a,h
 696+ 973F 25               dec h               ; Dec H.
 697+ 9740 E6 07            and 7
 698+ 9742 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9743
 700+ 9743 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9744 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9746 6F               ld l,a
 703+ 9747 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9748
 705+ 9748 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9749 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 974B 67               ld h,a
 708+ 974C C9               ret
 709+ 974D
 710+ 974D              ; -----------------------------------------------------------------------------------
 711+ 974D              ;
 712+ 974D              ;	31/7/23
 713+ 974D              ;
 714+ 974D              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 974D              ;	Extrae fotos de Album_de_fotos.
 716+ 974D
 717+ 974D              Extrae_foto_entidades
 718+ 974D
 719+ 974D 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9750 7E           	ld a,(hl)
 721+ 9751 A7           	and a
 722+ 9752 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9753
 724+ 9753 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9756 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9757 C8           	ret z
 727+ 9758
 728+ 9758              ; -----------------------------------
 729+ 9758
 730+ 9758 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 975C 31 00 70     	ld sp,Album_de_fotos
 732+ 975F
 733+ 975F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9761 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9762 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9763
 737+ 9763 ED 73 0C 8A  	ld (Stack_2),sp
 738+ 9767 ED 7B 0A 8A  	ld sp,(Stack)
 739+ 976B
 740+ 976B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 976B
 742+ 976B 3E CD        	ld a,$cd
 743+ 976D 32 75 97     	ld (Imprime),a
 744+ 9770 EB           	ex de,hl
 745+ 9771 22 76 97     	ld (Imprime+1),hl
 746+ 9774 EB           	ex de,hl
 747+ 9775
 748+ 9775              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9775
 750+ 9775 00 00 00     Imprime db 0,0,0
 751+ 9778
 752+ 9778 ED 73 0A 8A  	ld (Stack),sp
 753+ 977C
 754+ 977C 3A 05 8A     	ld a,(Numero_de_malotes)
 755+ 977F 3D           	dec a
 756+ 9780 28 09        	jr z,1F
 757+ 9782 32 05 8A      	ld (Numero_de_malotes),a
 758+ 9785
 759+ 9785 ED 7B 0C 8A  	ld sp,(Stack_2)
 760+ 9789 18 D4        	jr 2B
 761+ 978B
 762+ 978B AF           1 xor a
 763+ 978C 32 0C 8A     	ld (Stack_2),a
 764+ 978F
 765+ 978F FD 69        	ld iyl,c
 766+ 9791 FD 60        	ld iyh,b
 767+ 9793
 768+ 9793 C9           	ret
 769+ 9794
 770+ 9794              ; -----------------------------------------------------------------------------------
 771+ 9794              ;
 772+ 9794              ;	28/2/23
 773+ 9794              ;
 774+ 9794              ;	Pinta los disparos generados.
 775+ 9794
 776+ 9794              Extrae_foto_disparos
 777+ 9794
 778+ 9794 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 779+ 9797 7E               ld a,(hl)
 780+ 9798 A7               and a
 781+ 9799 C8               ret z
 782+ 979A
 783+ 979A 3A 2E 8A     	ld a,(Numero_de_disparotes)
 784+ 979D A7           	and a
 785+ 979E C8           	ret z
 786+ 979F ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 787+ 97A3 31 0D 72     	ld sp,Album_de_fotos_disparos
 788+ 97A6
 789+ 97A6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 790+ 97A8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 791+ 97A9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 792+ 97AA
 793+ 97AA ED 73 0C 8A  	ld (Stack_2),sp
 794+ 97AE ED 7B 0A 8A  	ld sp,(Stack)
 795+ 97B2
 796+ 97B2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 797+ 97B2
 798+ 97B2 3E CD        	ld a,$cd
 799+ 97B4 32 BC 97     	ld (Imprime2),a
 800+ 97B7 EB           	ex de,hl
 801+ 97B8 22 BD 97     	ld (Imprime2+1),hl
 802+ 97BB EB           	ex de,hl
 803+ 97BC
 804+ 97BC              ; Ejecuta la llamada:	CALL $xx,xx
 805+ 97BC
 806+ 97BC 00 00 00     Imprime2 db 0,0,0
 807+ 97BF
 808+ 97BF 3A 2E 8A     	ld a,(Numero_de_disparotes)
 809+ 97C2 3D           	dec a
 810+ 97C3 28 09        	jr z,1F
 811+ 97C5 32 2E 8A      	ld (Numero_de_disparotes),a
 812+ 97C8
 813+ 97C8 ED 7B 0C 8A  	ld sp,(Stack_2)
 814+ 97CC 18 D8        	jr 2B
 815+ 97CE
 816+ 97CE AF           1 xor a
 817+ 97CF 32 0C 8A     	ld (Stack_2),a
 818+ 97D2 C9           	ret
 819+ 97D3
# file closed: Draw_XOR.asm
1535  97D3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97D3              ;   índices de Rutinas de impresión.
   2+ 97D3
   3+ 97D3 E3 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97D5 10 98            defw Pinta_Amadeus_3x2
   5+ 97D7
   6+ 97D7 66 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97D9 06 99            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97DB BA 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97DD
  10+ 97DD 90 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97DF 94 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97E1 48 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97E3
  14+ 97E3
  15+ 97E3              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97E3              ;
  17+ 97E3              ;   12/12/22
  18+ 97E3              ;
  19+ 97E3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97E3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97E3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97E3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97E3              ;
  24+ 97E3              ;   Modifica: DE y HL.
  25+ 97E3
  26+ 97E3 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97E7 FD F9        	ld sp,iy
  28+ 97E9 06 10            ld b,16
  29+ 97EB D1           1 pop de
  30+ 97EC 7B               ld a,e
  31+ 97ED AE               xor (hl)
  32+ 97EE 77           	ld (hl),a
  33+ 97EF 23           	inc hl
  34+ 97F0 7A               ld a,d
  35+ 97F1 AE               xor (hl)
  36+ 97F2 77           	ld (hl),a
  37+ 97F3 2B           	dec hl
  38+ 97F4 24           	inc h
  39+ 97F5 7C               ld a,h
  40+ 97F6 E6 07            and 7
  41+ 97F8 20 0A            jr nz,2F
  42+ 97FA 7D               ld a,l
  43+ 97FB C6 20            add a,$20
  44+ 97FD 6F               ld l,a
  45+ 97FE 38 04            jr c,2F
  46+ 9800 7C               ld a,h
  47+ 9801 D6 08            sub 8
  48+ 9803 67               ld h,a
  49+ 9804 7C           2 ld a,h
  50+ 9805 FE 58            cp $58
  51+ 9807 28 02            jr z,3F
  52+ 9809 10 E0            djnz 1B
  53+ 980B ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 980F C9           	ret
  55+ 9810
  56+ 9810 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9814 FD F9        	ld sp,iy
  58+ 9816 06 08            ld b,8
  59+ 9818 D1           1 pop de
  60+ 9819 7B               ld a,e
  61+ 981A AE               xor (hl)
  62+ 981B 77           	ld (hl),a
  63+ 981C 23           	inc hl
  64+ 981D 7A               ld a,d
  65+ 981E AE               xor (hl)
  66+ 981F 77           	ld (hl),a
  67+ 9820 23           	inc hl
  68+ 9821 D1           	pop de
  69+ 9822 7B               ld a,e
  70+ 9823 AE               xor (hl)
  71+ 9824 77           	ld (hl),a
  72+ 9825 2B           	dec hl
  73+ 9826 2B           	dec hl
  74+ 9827 24           	inc h
  75+ 9828 7C               ld a,h
  76+ 9829 E6 07            and 7
  77+ 982B 20 0A            jr nz,2F
  78+ 982D 7D               ld a,l
  79+ 982E C6 20            add a,$20
  80+ 9830 6F               ld l,a
  81+ 9831 38 04            jr c,2F
  82+ 9833 7C               ld a,h
  83+ 9834 D6 08            sub 8
  84+ 9836 67               ld h,a
  85+ 9837 7C           2 ld a,h
  86+ 9838 FE 58            cp $58
  87+ 983A 28 25            jr z,4F
  88+ 983C 7A               ld a,d
  89+ 983D AE               xor (hl)
  90+ 983E 77               ld (hl),a
  91+ 983F D1           	pop de
  92+ 9840 23           	inc hl
  93+ 9841 7B               ld a,e
  94+ 9842 AE               xor (hl)
  95+ 9843 77           	ld (hl),a
  96+ 9844 23           	inc hl
  97+ 9845 7A               ld a,d
  98+ 9846 AE               xor (hl)
  99+ 9847 77           	ld (hl),a
 100+ 9848 2B           	dec hl
 101+ 9849 2B           	dec hl
 102+ 984A 24           	inc h
 103+ 984B 7C               ld a,h
 104+ 984C E6 07            and 7
 105+ 984E 20 0A            jr nz,3F
 106+ 9850 7D               ld a,l
 107+ 9851 C6 20            add a,$20
 108+ 9853 6F               ld l,a
 109+ 9854 38 04            jr c,3F
 110+ 9856 7C               ld a,h
 111+ 9857 D6 08            sub 8
 112+ 9859 67               ld h,a
 113+ 985A 7C           3 ld a,h
 114+ 985B FE 58            cp $58
 115+ 985D 28 02            jr z,4F
 116+ 985F 10 B7            djnz 1B
 117+ 9861 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 9865 C9           	ret
 119+ 9866
 120+ 9866              ; ---------------------------------------------------
 121+ 9866
 122+ 9866 ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 986A FD F9        	ld sp,iy
 124+ 986C
 125+ 986C              ; >>>
 126+ 986C
 127+ 986C 06 10            ld b,16
 128+ 986E D1           1 pop de
 129+ 986F 7A           	ld a,d
 130+ 9870 AE           	xor (hl)
 131+ 9871 77           	ld (hl),a
 132+ 9872 24           	inc h
 133+ 9873 7C               ld a,h
 134+ 9874 E6 07            and 7
 135+ 9876 20 0C            jr nz,2F
 136+ 9878 7D               ld a,l
 137+ 9879 C6 20            add a,$20
 138+ 987B 6F               ld l,a
 139+ 987C 38 06            jr c,2F
 140+ 987E 7C               ld a,h
 141+ 987F D6 08            sub 8
 142+ 9881 67               ld h,a
 143+ 9882 18 00            jr 2F
 144+ 9884 7C           2 ld a,h
 145+ 9885 FE 58            cp $58
 146+ 9887 28 02            jr z,3F
 147+ 9889 10 E3            djnz 1B
 148+ 988B ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 988F C9           	ret
 150+ 9890
 151+ 9890 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9894 FD F9        	ld sp,iy
 153+ 9896
 154+ 9896              ; >>>
 155+ 9896
 156+ 9896 06 10            ld b,16
 157+ 9898 D1           1 pop de
 158+ 9899 7B           	ld a,e
 159+ 989A AE           	xor (hl)
 160+ 989B 77           	ld (hl),a
 161+ 989C 24           	inc h
 162+ 989D 7C               ld a,h
 163+ 989E E6 07            and 7
 164+ 98A0 20 0C            jr nz,2F
 165+ 98A2 7D               ld a,l
 166+ 98A3 C6 20            add a,$20
 167+ 98A5 6F               ld l,a
 168+ 98A6 38 06            jr c,2F
 169+ 98A8 7C               ld a,h
 170+ 98A9 D6 08            sub 8
 171+ 98AB 67               ld h,a
 172+ 98AC 18 00            jr 2F
 173+ 98AE 7C           2 ld a,h
 174+ 98AF FE 58            cp $58
 175+ 98B1 28 02            jr z,3F
 176+ 98B3 10 E3            djnz 1B
 177+ 98B5 ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 98B9 C9           	ret
 179+ 98BA
 180+ 98BA              ; ---------------------------------------------------
 181+ 98BA
 182+ 98BA ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98BE FD F9        	ld sp,iy
 184+ 98C0 06 08            ld b,8
 185+ 98C2 D1           1 pop de
 186+ 98C3 7A           	ld a,d
 187+ 98C4 AE           	xor (hl)
 188+ 98C5 77           	ld (hl),a
 189+ 98C6 23           	inc hl
 190+ 98C7 D1           	pop de
 191+ 98C8 7B           	ld a,e
 192+ 98C9 AE           	xor (hl)
 193+ 98CA 77           	ld (hl),a
 194+ 98CB 2B           	dec hl
 195+ 98CC 24            	inc h
 196+ 98CD 7C               ld a,h
 197+ 98CE E6 07            and 7
 198+ 98D0 20 0A            jr nz,2F
 199+ 98D2 7D               ld a,l
 200+ 98D3 C6 20            add a,$20
 201+ 98D5 6F               ld l,a
 202+ 98D6 38 04            jr c,2F
 203+ 98D8 7C               ld a,h
 204+ 98D9 D6 08            sub 8
 205+ 98DB 67               ld h,a
 206+ 98DC 7C           2 ld a,h
 207+ 98DD FE 58            cp $58
 208+ 98DF 28 20            jr z,4F
 209+ 98E1 D1               pop de
 210+ 98E2 7B           	ld a,e
 211+ 98E3 AE           	xor (hl)
 212+ 98E4 77           	ld (hl),a
 213+ 98E5 23           	inc hl
 214+ 98E6 7A           	ld a,d
 215+ 98E7 AE           	xor (hl)
 216+ 98E8 77           	ld (hl),a
 217+ 98E9 2B           	dec hl
 218+ 98EA 24           	inc h
 219+ 98EB 7C               ld a,h
 220+ 98EC E6 07            and 7
 221+ 98EE 20 0A            jr nz,3F
 222+ 98F0 7D               ld a,l
 223+ 98F1 C6 20            add a,$20
 224+ 98F3 6F               ld l,a
 225+ 98F4 38 04            jr c,3F
 226+ 98F6 7C               ld a,h
 227+ 98F7 D6 08            sub 8
 228+ 98F9 67               ld h,a
 229+ 98FA 7C           3 ld a,h
 230+ 98FB FE 58            cp $58
 231+ 98FD 28 02            jr z,4F
 232+ 98FF 10 C1            djnz 1B
 233+ 9901 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 9905 C9           	ret
 235+ 9906
 236+ 9906 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 990A FD F9        	ld sp,iy
 238+ 990C 06 08            ld b,8
 239+ 990E D1           1 pop de
 240+ 990F D1           	pop de
 241+ 9910 7B           	ld a,e
 242+ 9911 AE           	xor (hl)
 243+ 9912 77           	ld (hl),a
 244+ 9913 24            	inc h
 245+ 9914 7C               ld a,h
 246+ 9915 E6 07            and 7
 247+ 9917 20 0A            jr nz,2F
 248+ 9919 7D               ld a,l
 249+ 991A C6 20            add a,$20
 250+ 991C 6F               ld l,a
 251+ 991D 38 04            jr c,2F
 252+ 991F 7C               ld a,h
 253+ 9920 D6 08            sub 8
 254+ 9922 67               ld h,a
 255+ 9923 7C           2 ld a,h
 256+ 9924 FE 58            cp $58
 257+ 9926 28 1B            jr z,4F
 258+ 9928 D1               pop de
 259+ 9929 7A           	ld a,d
 260+ 992A AE           	xor (hl)
 261+ 992B 77           	ld (hl),a
 262+ 992C 24           	inc h
 263+ 992D 7C               ld a,h
 264+ 992E E6 07            and 7
 265+ 9930 20 0A            jr nz,3F
 266+ 9932 7D               ld a,l
 267+ 9933 C6 20            add a,$20
 268+ 9935 6F               ld l,a
 269+ 9936 38 04            jr c,3F
 270+ 9938 7C               ld a,h
 271+ 9939 D6 08            sub 8
 272+ 993B 67               ld h,a
 273+ 993C 7C           3 ld a,h
 274+ 993D FE 58            cp $58
 275+ 993F 28 02            jr z,4F
 276+ 9941 10 CB            djnz 1B
 277+ 9943 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 9947 C9           	ret
 279+ 9948
 280+ 9948 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 994C FD F9        	ld sp,iy
 282+ 994E 06 08            ld b,8
 283+ 9950 D1           1 pop de
 284+ 9951 7B           	ld a,e
 285+ 9952 AE           	xor (hl)
 286+ 9953 77           	ld (hl),a
 287+ 9954 23           	inc hl
 288+ 9955 7A           	ld a,d
 289+ 9956 AE           	xor (hl)
 290+ 9957 77           	ld (hl),a
 291+ 9958 2B           	dec hl
 292+ 9959 24             	inc h
 293+ 995A 7C               ld a,h
 294+ 995B E6 07            and 7
 295+ 995D 20 0A            jr nz,2F
 296+ 995F 7D               ld a,l
 297+ 9960 C6 20            add a,$20
 298+ 9962 6F               ld l,a
 299+ 9963 38 04            jr c,2F
 300+ 9965 7C               ld a,h
 301+ 9966 D6 08            sub 8
 302+ 9968 67               ld h,a
 303+ 9969 7C           2 ld a,h
 304+ 996A FE 58            cp $58
 305+ 996C 28 21            jr z,4F
 306+ 996E D1               pop de
 307+ 996F 7A           	ld a,d
 308+ 9970 AE           	xor (hl)
 309+ 9971 77           	ld (hl),a
 310+ 9972 23           	inc hl
 311+ 9973 D1               pop de
 312+ 9974 7B           	ld a,e
 313+ 9975 AE           	xor (hl)
 314+ 9976 77           	ld (hl),a
 315+ 9977 2B           	dec hl
 316+ 9978 24           	inc h
 317+ 9979 7C               ld a,h
 318+ 997A E6 07            and 7
 319+ 997C 20 0A            jr nz,3F
 320+ 997E 7D               ld a,l
 321+ 997F C6 20            add a,$20
 322+ 9981 6F               ld l,a
 323+ 9982 38 04            jr c,3F
 324+ 9984 7C               ld a,h
 325+ 9985 D6 08            sub 8
 326+ 9987 67               ld h,a
 327+ 9988 7C           3 ld a,h
 328+ 9989 FE 58            cp $58
 329+ 998B 28 02            jr z,4F
 330+ 998D 10 C1            djnz 1B
 331+ 998F ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9993 C9           	ret
 333+ 9994
 334+ 9994 ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9998 FD F9        	ld sp,iy
 336+ 999A 06 08            ld b,8
 337+ 999C D1           1 pop de
 338+ 999D 7B           	ld a,e
 339+ 999E AE           	xor (hl)
 340+ 999F 77           	ld (hl),a
 341+ 99A0 24            	inc h
 342+ 99A1 7C               ld a,h
 343+ 99A2 E6 07            and 7
 344+ 99A4 20 0A            jr nz,2F
 345+ 99A6 7D               ld a,l
 346+ 99A7 C6 20            add a,$20
 347+ 99A9 6F               ld l,a
 348+ 99AA 38 04            jr c,2F
 349+ 99AC 7C               ld a,h
 350+ 99AD D6 08            sub 8
 351+ 99AF 67               ld h,a
 352+ 99B0 7C           2 ld a,h
 353+ 99B1 FE 58            cp $58
 354+ 99B3 28 1C            jr z,4F
 355+ 99B5 D1               pop de
 356+ 99B6 7A           	ld a,d
 357+ 99B7 AE           	xor (hl)
 358+ 99B8 77           	ld (hl),a
 359+ 99B9 24           	inc h
 360+ 99BA 7C               ld a,h
 361+ 99BB E6 07            and 7
 362+ 99BD 20 0A            jr nz,3F
 363+ 99BF 7D               ld a,l
 364+ 99C0 C6 20            add a,$20
 365+ 99C2 6F               ld l,a
 366+ 99C3 38 04            jr c,3F
 367+ 99C5 7C               ld a,h
 368+ 99C6 D6 08            sub 8
 369+ 99C8 67               ld h,a
 370+ 99C9 7C           3 ld a,h
 371+ 99CA FE 58            cp $58
 372+ 99CC 28 03            jr z,4F
 373+ 99CE D1               pop de
 374+ 99CF 10 CB            djnz 1B
 375+ 99D1 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99D5 C9           	ret
 377+ 99D6
 378+ 99D6              ; ---------------------------------------------------
 379+ 99D6              ;
 380+ 99D6              ;   27/02/23
 381+ 99D6              ;
 382+ 99D6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99D6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99D6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99D6
 386+ 99D6 ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99DA FD F9            ld sp,iy
 388+ 99DC 06 03            ld b,3
 389+ 99DE D1           1 pop de
 390+ 99DF 7B               ld a,e
 391+ 99E0 AE               xor (hl)
 392+ 99E1 77               ld (hl),a
 393+ 99E2 23               inc hl
 394+ 99E3 7A               ld a,d
 395+ 99E4 AE               xor (hl)
 396+ 99E5 77               ld (hl),a
 397+ 99E6 2B               dec hl
 398+ 99E7
 399+ 99E7 24               inc h
 400+ 99E8 7C               ld a,h
 401+ 99E9 E6 07            and 7
 402+ 99EB 20 0A            jr nz,2F
 403+ 99ED 7D               ld a,l
 404+ 99EE C6 20            add a,$20
 405+ 99F0 6F               ld l,a
 406+ 99F1 38 04            jr c,2F
 407+ 99F3 7C               ld a,h
 408+ 99F4 D6 08            sub 8
 409+ 99F6 67               ld h,a
 410+ 99F7 7C           2 ld a,h
 411+ 99F8 FE 58            cp $58
 412+ 99FA 28 02            jr z,3F
 413+ 99FC
 414+ 99FC 10 E0            djnz 1B
 415+ 99FE ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 9A02 C9               ret
 417+ 9A03
# file closed: Rutinas_de_impresion_sprites.asm
1536  9A03              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9A03              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9A03              ;
   3+ 9A03              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9A03              ;
   5+ 9A03              ; *****************************************************************************************************************************************************************************************
   6+ 9A03              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9A03
   8+ 9A03 7C           calcula_tercio ld a,h
   9+ 9A04 E6 18        	and $18
  10+ 9A06 CB 2F        	sra a
  11+ 9A08 CB 2F        	sra a
  12+ 9A0A CB 2F        	sra a
  13+ 9A0C C9           	ret
  14+ 9A0D
# file closed: calcula_tercio.asm
1537  9A0D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9A0D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9A0D              ;
   3+ 9A0D              ;
   4+ 9A0D              ;	CLS.
   5+ 9A0D              ;
   6+ 9A0D              ;	Limpia la pantalla y define sus atributos.
   7+ 9A0D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9A0D              ;
   9+ 9A0D              ;	COLORES: 0 ..... NEGRO
  10+ 9A0D              ;    		 1 ..... AZUL
  11+ 9A0D              ; 			 2 ..... ROJO
  12+ 9A0D              ;			 3 ..... MAGENTA
  13+ 9A0D              ; 			 4 ..... VERDE
  14+ 9A0D              ; 			 5 ..... CIAN
  15+ 9A0D              ;			 6 ..... AMARILLO
  16+ 9A0D              ; 			 7 ..... BLANCO
  17+ 9A0D              ;
  18+ 9A0D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9A0D              ;
  20+ 9A0D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9A0D
  22+ 9A0D
  23+ 9A0D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9A10 11 01 40     	LD DE,$4001
  25+ 9A13 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9A16 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9A18 ED B0        	LDIR
  28+ 9A1A 01 FF 02     	LD BC,767
  29+ 9A1D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A1E ED B0        	LDIR
  31+ 9A20 C9           	ret
  32+ 9A21
# file closed: Cls.asm
1538  9A21              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A21              ; ******************************************************************************************************************************************************************************************
   2+ 9A21              ;
   3+ 9A21              ;   20/05/23
   4+ 9A21              ;
   5+ 9A21              ;	Recompone_posicion_inicio
   6+ 9A21              ;
   7+ 9A21              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A21              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A21              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A21              ;	_ a una u otra rutina.
  11+ 9A21
  12+ 9A21              Recompone_posicion_inicio
  13+ 9A21
  14+ 9A21 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 9A24 7D           	ld a,l
  16+ 9A25 E6 1F        	and $1f
  17+ 9A27 28 16        	jr z,1F
  18+ 9A29
  19+ 9A29 FE 1F        	cp $1f
  20+ 9A2B 28 0D        	jr z,3F
  21+ 9A2D
  22+ 9A2D 21 F7 89     	ld hl,Ctrl_2
  23+ 9A30 CB C6        	set 0,(hl)
  24+ 9A32 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A35 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A38 18 08        	jr 2F
  27+ 9A3A
  28+ 9A3A CD DB 9B     3 call Mov_left
  29+ 9A3D 18 03        	jr 2F
  30+ 9A3F
  31+ 9A3F CD BD 9A     1 call Mov_right
  32+ 9A42 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A45 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A48 C9           	ret
  35+ 9A49
  36+ 9A49              ; ******************************************************************************************************************************************************************************************
  37+ 9A49              ;
  38+ 9A49              ;   27/05/23
  39+ 9A49              ;
  40+ 9A49              ;	Mov_down
  41+ 9A49              ;
  42+ 9A49              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A49              ;
  44+ 9A49              ;
  45+ 9A49              Mov_down
  46+ 9A49
  47+ 9A49 CD AB 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A4C              ;																	; _ repone (Puntero_objeto).
  49+ 9A4C 21 E4 89     	ld hl,Ctrl_0
  50+ 9A4F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A51              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A51              ; 																	; _ en el caso de que no lo haya.
  53+ 9A51 3A CE 89     	ld a,(Vel_down)
  54+ 9A54 47           	ld b,a
  55+ 9A55 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A58 CD 03 9A     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A5B E6 02        	and 2
  58+ 9A5D 28 0F        	jr z,1F
  59+ 9A5F
  60+ 9A5F              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A5F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A5F
  63+ 9A5F 7C           	ld a,h
  64+ 9A60 FE 57        	cp $57
  65+ 9A62 20 0A        	jr nz,1F
  66+ 9A64
  67+ 9A64 7D           	ld a,l
  68+ 9A65 C6 20        	add $20
  69+ 9A67 30 05        	jr nc,1F
  70+ 9A69
  71+ 9A69              ; ------------------------------
  72+ 9A69              ;	call Reaparece_arriba
  73+ 9A69 CD 68 9D     	call Reinicio
  74+ 9A6C              ; ------------------------------
  75+ 9A6C
  76+ 9A6C 18 08        	jr 3F
  77+ 9A6E CD 2F 97     1 call NextScan
  78+ 9A71 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A74 10 E2            djnz 2B
  80+ 9A76 CD 8E 9D     3 call Genera_coordenadas
  81+ 9A79 C9           	ret
  82+ 9A7A
  83+ 9A7A              ; ******************************************************************************************************************************************************************************************
  84+ 9A7A              ;
  85+ 9A7A              ;   27/05/23
  86+ 9A7A              ;
  87+ 9A7A              ;	Mov_up
  88+ 9A7A              ;
  89+ 9A7A              ; 	Mueve el Sprite hacia arriba.
  90+ 9A7A              ;
  91+ 9A7A              ;
  92+ 9A7A              Mov_up
  93+ 9A7A
  94+ 9A7A CD AB 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A7D              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A7D 21 E4 89     	ld hl,Ctrl_0
  97+ 9A80 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A82              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A82              ; 																		; _ en el caso de que no lo haya.
 100+ 9A82 3A CD 89     	ld a,(Vel_up)
 101+ 9A85 47           	ld b,a
 102+ 9A86 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A89 CD 03 9A     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A8C A7           	and a
 105+ 9A8D 20 10        	jr nz,1F
 106+ 9A8F
 107+ 9A8F              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A8F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A8F
 110+ 9A8F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A90 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A92 20 0B            jr nz,1F
 113+ 9A94 7D               ld a,l
 114+ 9A95 D6 20            sub $20
 115+ 9A97 30 06            jr nc,1F
 116+ 9A99 25               dec h
 117+ 9A9A
 118+ 9A9A              ; -----------------------------
 119+ 9A9A CD 49 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A9D              ;	call Reinicio
 121+ 9A9D              ; -----------------------------
 122+ 9A9D
 123+ 9A9D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A9F CD 3E 97     1 call PreviousScan
 125+ 9AA2 22 B8 89     	ld (Posicion_actual),hl
 126+ 9AA5 10 E2            djnz 3B
 127+ 9AA7 CD 8E 9D     2 call Genera_coordenadas
 128+ 9AAA C9           	ret
 129+ 9AAB
 130+ 9AAB              ; -----------------------------
 131+ 9AAB              ;
 132+ 9AAB              ;	27/5/23
 133+ 9AAB              ;
 134+ 9AAB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9AAB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9AAB              ;
 137+ 9AAB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9AAB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9AAB              ;
 140+ 9AAB              ;	Modifica: A y (Puntero_objeto).
 141+ 9AAB
 142+ 9AAB 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9AAE CB 47        	bit 0,a
 144+ 9AB0 C8           	ret z
 145+ 9AB1 CB 87        	res 0,a
 146+ 9AB3 32 F7 89     	ld (Ctrl_2),a
 147+ 9AB6 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9AB9 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9ABC C9           	ret
 150+ 9ABD
 151+ 9ABD              ; ******************************************************************************************************************************************************************************************
 152+ 9ABD              ;
 153+ 9ABD              ;	19/10/22
 154+ 9ABD              ;
 155+ 9ABD              ;	Mov_right.
 156+ 9ABD              ;
 157+ 9ABD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9ABD              ;
 159+ 9ABD
 160+ 9ABD 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9AC0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AC2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AC2              ; 																	; _ en el caso de que no lo haya.
 164+ 9AC2 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AC5 CB 77        	bit 6,a
 166+ 9AC7 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AC9
 168+ 9AC9 CD F7 9C     	call Stop_Amadeus_right
 169+ 9ACC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9ACD 18 4D        	jr 8F
 171+ 9ACF
 172+ 9ACF 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AD2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9AD4 20 46        	jr nz,8F
 175+ 9AD6
 176+ 9AD6 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AD9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9ADA 28 40        	jr z,8F
 179+ 9ADC
 180+ 9ADC              ; ---------- ---------- ----------
 181+ 9ADC              ;
 182+ 9ADC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9ADC
 184+ 9ADC 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9ADF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AE1 28 11        	jr z,1F
 187+ 9AE3 38 06        	jr c,6F
 188+ 9AE5 FE 04        	cp 4
 189+ 9AE7 28 14        	jr z,7F
 190+ 9AE9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AEB
 192+ 9AEB              ; ---------- ---------- ----------
 193+ 9AEB              ;
 194+ 9AEB              ; Perfiles de velocidad
 195+ 9AEB              ;
 196+ 9AEB
 197+ 9AEB 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AEE FE FE        	cp $fe
 199+ 9AF0 20 2A        	jr nz,8F
 200+ 9AF2 18 10        	jr 3F
 201+ 9AF4 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AF7 FE FD        	cp $fd
 203+ 9AF9 20 21        	jr nz,8F
 204+ 9AFB 18 07        	jr 3F
 205+ 9AFD 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9B00 FE FB        	cp $fb
 207+ 9B02 20 18        	jr nz,8F
 208+ 9B04
 209+ 9B04              ; ---------- ---------- ----------
 210+ 9B04
 211+ 9B04              3
 212+ 9B04 CD 37 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9B07              ;	call Reinicio
 214+ 9B07
 215+ 9B07              ; ---------- ---------- ----------
 216+ 9B07              ;
 217+ 9B07              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9B07
 219+ 9B07 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9B09 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9B0A CD 23 9B     	call DESPLZ_DER
 222+ 9B0D C1           	pop bc
 223+ 9B0E 10 F9        	djnz 5B
 224+ 9B10 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9B13 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9B14 22 B8 89     	ld (Posicion_actual),hl
 227+ 9B17 CD 8E 9D     	call Genera_coordenadas
 228+ 9B1A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B1C
 230+ 9B1C              ; ---------- ---------- ----------
 231+ 9B1C
 232+ 9B1C 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9B1F CD 23 9B     	call DESPLZ_DER
 234+ 9B22 C9           2 ret
 235+ 9B23
 236+ 9B23              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B23              ;
 238+ 9B23              ;	22/9/22
 239+ 9B23              ;
 240+ 9B23
 241+ 9B23 CD 32 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B26 CD 7E 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B29 CD A7 9B         call Ciclo_completo
 244+ 9B2C 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B2F CB FE        	set 7,(hl)
 246+ 9B31 C9           	ret
 247+ 9B32
 248+ 9B32              ; ******************************************************************************************************************************************************************************************
 249+ 9B32              ;	15/02/23
 250+ 9B32              ;
 251+ 9B32
 252+ 9B32 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B35 47           	ld b,a
 254+ 9B36 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B39 23           1 inc hl
 256+ 9B3A 23           	inc hl
 257+ 9B3B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B3D 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B40 CD 89 8D     	call Extrae_address
 260+ 9B43 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B46
 262+ 9B46              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B46
 264+ 9B46              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B46              ; Cuántos movimientos hemos hecho ??
 266+ 9B46              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B46
 268+ 9B46 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B49 EB           	ex de,hl
 270+ 9B4A A7           	and a
 271+ 9B4B ED 52        	sbc hl,de
 272+ 9B4D CB 3D        	srl l
 273+ 9B4F 3E 08        6 ld a,8
 274+ 9B51 95           	sub l
 275+ 9B52 30 1E        	jr nc,3F
 276+ 9B54
 277+ 9B54              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B54              ; B="0".
 279+ 9B54
 280+ 9B54 04           4 inc b
 281+ 9B55 3C           	inc a
 282+ 9B56 20 FC        	jr nz,4B
 283+ 9B58 78           	ld a,b
 284+ 9B59 08           	ex af,af
 285+ 9B5A 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B5D 23           5 inc hl
 287+ 9B5E 23           	inc hl
 288+ 9B5F 10 FC        	djnz 5B
 289+ 9B61 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B64 CD 89 8D     	call Extrae_address
 291+ 9B67 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B6A
 293+ 9B6A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B6A              ; _(Posicion_actual).
 295+ 9B6A
 296+ 9B6A 21 B8 89     	ld hl,Posicion_actual
 297+ 9B6D 34           	inc (hl)
 298+ 9B6E 08               ex af,af
 299+ 9B6F 6F           	ld l,a
 300+ 9B70 18 DD        	jr 6B
 301+ 9B72
 302+ 9B72              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B72
 304+ 9B72 47           3 ld b,a
 305+ 9B73 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B76 23           2 inc hl
 307+ 9B77 23           	inc hl
 308+ 9B78 10 FC        	djnz 2B
 309+ 9B7A 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B7D C9           8 ret
 311+ 9B7E
 312+ 9B7E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B7E              ;
 314+ 9B7E              ;	24/7/22
 315+ 9B7E              ;
 316+ 9B7E              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B7E              ;
 318+ 9B7E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B7E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B7E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B7E
 322+ 9B7E 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B81 A7           	and a
 324+ 9B82 20 1F        	jr nz,1F
 325+ 9B84 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B86 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B89
 328+ 9B89 21 B7 89     	ld hl,Columns
 329+ 9B8C 34           	inc (hl)
 330+ 9B8D 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B90 E6 01        	and 1
 332+ 9B92 28 0F        	jr z,1F
 333+ 9B94 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B97 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B98 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B9B CD 8E 9D     	call Genera_coordenadas
 337+ 9B9E CD 03 9D     	call Inc_CTRL_DESPLZ
 338+ 9BA1 18 03        	jr 2F
 339+ 9BA3 CD 03 9D     1 call Inc_CTRL_DESPLZ
 340+ 9BA6 C9           2 ret
 341+ 9BA7
 342+ 9BA7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9BA7              ;
 344+ 9BA7              ;	24/7/22
 345+ 9BA7              ;
 346+ 9BA7              ;	Ciclo_completo.
 347+ 9BA7              ;
 348+ 9BA7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9BA7              ;
 350+ 9BA7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9BA7              ; 	Decrementamos (Columns).
 352+ 9BA7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9BA7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9BA7
 355+ 9BA7
 356+ 9BA7 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9BAA FE FF        	cp $ff
 358+ 9BAC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9BAE E6 F0        	and $f0
 360+ 9BB0 20 28        	jr nz,3F
 361+ 9BB2
 362+ 9BB2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9BB2
 364+ 9BB2 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9BB5 47           	ld b,a
 366+ 9BB6 3E F8        	ld a,$f8
 367+ 9BB8 80           	add b
 368+ 9BB9 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9BBC 18 1C        	jr 3F
 370+ 9BBE 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BC1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BC2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BC3 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BC6 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BC9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BCB 20 0A        	jr nz,2F
 377+ 9BCD 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BD0 23           	inc hl
 379+ 9BD1 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BD4 CD 8E 9D     	call Genera_coordenadas
 381+ 9BD7
 382+ 9BD7              ; Inicia el puntero de Sprite.
 383+ 9BD7
 384+ 9BD7 CD A0 8D     2 call Inicia_puntero_objeto_der
 385+ 9BDA C9           3 ret
 386+ 9BDB
 387+ 9BDB              ; ******************************************************************************************************************************************************************************************
 388+ 9BDB              ;
 389+ 9BDB              ;	15/02/23
 390+ 9BDB              ;
 391+ 9BDB              ;	Mov_left.
 392+ 9BDB              ;
 393+ 9BDB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BDB              ;
 395+ 9BDB 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BDE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BE0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BE0              ; 																	; _ en el caso de que no lo haya.
 399+ 9BE0 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BE3 CB 77        	bit 6,a
 401+ 9BE5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BE7
 403+ 9BE7 CD FD 9C     	call Stop_Amadeus_left
 404+ 9BEA C8           	ret z
 405+ 9BEB 20 4A        	jr nz,8F
 406+ 9BED
 407+ 9BED 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BF0 A7           	and a
 409+ 9BF1 20 44        	jr nz,8F
 410+ 9BF3
 411+ 9BF3 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BF6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BF7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BF9
 415+ 9BF9              ; ---------- ---------- ----------
 416+ 9BF9
 417+ 9BF9 3A CB 89     	ld a,(Vel_left)
 418+ 9BFC FE 02        	cp 2
 419+ 9BFE 28 0F        	jr z,1F
 420+ 9C00 38 04        	jr c,6F
 421+ 9C02 FE 04        	cp 4
 422+ 9C04 28 12        	jr z,7F
 423+ 9C06
 424+ 9C06              ; ---------- ---------- ----------
 425+ 9C06
 426+ 9C06 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9C09 FE F8        	cp $f8
 428+ 9C0B 20 2A        	jr nz,8F
 429+ 9C0D 18 10        	jr 4F
 430+ 9C0F 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9C12 FE F9        	cp $f9
 432+ 9C14 20 21        	jr nz,8F
 433+ 9C16 18 07        	jr 4F
 434+ 9C18 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C1B FE FB        	cp $fb
 436+ 9C1D 20 18        	jr nz,8F
 437+ 9C1F
 438+ 9C1F              ; ---------- ---------- ----------
 439+ 9C1F
 440+ 9C1F              4
 441+ 9C1F CD 25 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C22              ;	call Reinicio
 443+ 9C22
 444+ 9C22              ; ---------- ---------- ----------
 445+ 9C22
 446+ 9C22 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C24 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C25
 449+ 9C25              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C25              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C25
 452+ 9C25 CD 3E 9C     	call DESPLZ_IZQ
 453+ 9C28 C1           	pop bc
 454+ 9C29 10 F9        	djnz 5B
 455+ 9C2B 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C2E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C2F 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C32 CD 8E 9D     	call Genera_coordenadas
 459+ 9C35 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C37
 461+ 9C37              ; ---------- ---------- ----------
 462+ 9C37
 463+ 9C37              ; Movemos, no hay recolocación.
 464+ 9C37
 465+ 9C37 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C3A CD 3E 9C     	call DESPLZ_IZQ
 467+ 9C3D C9           2 ret
 468+ 9C3E
 469+ 9C3E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C3E              ;
 471+ 9C3E              ;	22/9/22
 472+ 9C3E
 473+ 9C3E              DESPLZ_IZQ
 474+ 9C3E
 475+ 9C3E CD 4D 9C     	call Desplaza_izquierda
 476+ 9C41 CD 99 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C44 CD C1 9C     	call Ciclo_completo_2
 478+ 9C47 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C4A CB BE        	res 7,(hl)
 480+ 9C4C C9           	ret
 481+ 9C4D
 482+ 9C4D              Desplaza_izquierda
 483+ 9C4D
 484+ 9C4D 3A CB 89     	ld a,(Vel_left)
 485+ 9C50 47           	ld b,a
 486+ 9C51 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C54 23           1 inc hl
 488+ 9C55 23           	inc hl
 489+ 9C56 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C58 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C5B CD 89 8D     	call Extrae_address
 492+ 9C5E 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C61
 494+ 9C61              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C61
 496+ 9C61              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C61              ; Cuántos movimientos hemos hecho ??
 498+ 9C61              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C61
 500+ 9C61 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C64 EB           	ex de,hl
 502+ 9C65 A7           	and a
 503+ 9C66 ED 52        	sbc hl,de
 504+ 9C68 CB 3D        	srl l
 505+ 9C6A 3E 08        6 ld a,8
 506+ 9C6C 95           	sub l
 507+ 9C6D 30 1E        	jr nc,3F
 508+ 9C6F
 509+ 9C6F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C6F              ; B="0".
 511+ 9C6F
 512+ 9C6F 04           4 inc b
 513+ 9C70 3C           	inc a
 514+ 9C71 20 FC        	jr nz,4B
 515+ 9C73 78           	ld a,b
 516+ 9C74 08           	ex af,af
 517+ 9C75 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C78 23           5 inc hl
 519+ 9C79 23           	inc hl
 520+ 9C7A 10 FC        	djnz 5B
 521+ 9C7C 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C7F CD 89 8D     	call Extrae_address
 523+ 9C82 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C85
 525+ 9C85              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C85              ; _(Posicion_actual).
 527+ 9C85
 528+ 9C85 21 B8 89     	ld hl,Posicion_actual
 529+ 9C88 35           	dec (hl)
 530+ 9C89 08           	ex af,af
 531+ 9C8A 6F           	ld l,a
 532+ 9C8B 18 DD        	jr 6B
 533+ 9C8D
 534+ 9C8D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C8D
 536+ 9C8D 47           3 ld b,a
 537+ 9C8E 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C91 23           2 inc hl
 539+ 9C92 23           	inc hl
 540+ 9C93 10 FC        	djnz 2B
 541+ 9C95 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C98 C9           8 ret
 543+ 9C99
 544+ 9C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C99              ;
 546+ 9C99              ;	modifica_parametros_1er_DESPLZ
 547+ 9C99              ;
 548+ 9C99              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C99              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C99              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C99
 552+ 9C99 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C9C A7           	and a
 554+ 9C9D 20 1E        	jr nz,1F
 555+ 9C9F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9CA0 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9CA3 21 B7 89     	ld hl,Columns
 558+ 9CA6 34           	inc (hl)
 559+ 9CA7 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9CAA E6 01        	and 1
 561+ 9CAC 20 0F        	jr nz,1F
 562+ 9CAE 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9CB1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9CB2 22 B8 89     	ld (Posicion_actual),hl
 565+ 9CB5 CD 8E 9D     	call Genera_coordenadas
 566+ 9CB8 CD 14 9D     	call Dec_CTRL_DESPLZ
 567+ 9CBB 18 03        	jr 2F
 568+ 9CBD CD 14 9D     1 call Dec_CTRL_DESPLZ
 569+ 9CC0 C9           2 ret
 570+ 9CC1
 571+ 9CC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CC1
 573+ 9CC1 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CC4 FE F7        	cp $f7
 575+ 9CC6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CC8 30 2C        	jr nc,3F
 577+ 9CCA
 578+ 9CCA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CCA
 580+ 9CCA 06 00        	ld b,0
 581+ 9CCC 04           4 inc b
 582+ 9CCD 3C           	inc a
 583+ 9CCE FE F7        	cp $f7
 584+ 9CD0 20 FA        	jr nz,4B
 585+ 9CD2 3E FF        	ld a,$ff
 586+ 9CD4 90           	sub b
 587+ 9CD5 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CD8 18 1C        	jr 3F
 589+ 9CDA
 590+ 9CDA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CDA
 592+ 9CDA 21 B7 89     1 ld hl,Columns
 593+ 9CDD 35           	dec (hl)
 594+ 9CDE AF           	xor a
 595+ 9CDF 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CE2 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CE5 E6 01        	and 1
 598+ 9CE7 28 0A        	jr z,2F
 599+ 9CE9 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CEC 2B           	dec hl
 601+ 9CED 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CF0 CD 8E 9D     	call Genera_coordenadas
 603+ 9CF3
 604+ 9CF3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CF3
 606+ 9CF3 CD B3 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CF6 C9           3 ret
 608+ 9CF7
 609+ 9CF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CF7              ;
 611+ 9CF7              ;	19/10/22
 612+ 9CF7              ;
 613+ 9CF7              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CF7              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CF7
 616+ 9CF7 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CFA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CFC C9           	ret
 619+ 9CFD
 620+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CFD              ;
 622+ 9CFD              ;	19/10/22
 623+ 9CFD              ;
 624+ 9CFD              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CFD              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CFD
 627+ 9CFD 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9D00 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9D02 C9           	ret
 630+ 9D03
 631+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9D03              ;
 633+ 9D03              ;	24/7/22
 634+ 9D03              ;
 635+ 9D03              ;	Inc_CTRL_DESPLZ
 636+ 9D03              ;
 637+ 9D03              ;
 638+ 9D03              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9D03
 640+ 9D03 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9D06 3A CC 89     	ld a,(Vel_right)
 642+ 9D09 A7           	and a
 643+ 9D0A 28 06        	jr z,1F
 644+ 9D0C 47           	ld b,a
 645+ 9D0D 34           3 inc (hl)
 646+ 9D0E 10 FD        	djnz 3B
 647+ 9D10 18 01        	jr 2F
 648+ 9D12 34           1 inc (hl)
 649+ 9D13 C9           2 ret
 650+ 9D14
 651+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9D14              ;
 653+ 9D14              ;	5/2/23
 654+ 9D14              ;
 655+ 9D14              ;	Dec_CTRL_DESPLZ
 656+ 9D14              ;
 657+ 9D14              ;
 658+ 9D14              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9D14
 660+ 9D14 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9D17 3A CB 89     	ld a,(Vel_left)
 662+ 9D1A A7           	and a
 663+ 9D1B 28 06        	jr z,1F
 664+ 9D1D 47           	ld b,a
 665+ 9D1E 35           3 dec (hl)
 666+ 9D1F 10 FD        	djnz 3B
 667+ 9D21 18 01        	jr 2F
 668+ 9D23 35           1 dec (hl)
 669+ 9D24 C9           2 ret
 670+ 9D25
 671+ 9D25              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D25
 673+ 9D25 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D28 01 1F 00     	ld bc,31
 675+ 9D2B A7           	and a
 676+ 9D2C ED 4A        	adc hl,bc
 677+ 9D2E 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D31 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D34 CB C6        	set 0,(hl)
 680+ 9D36 C9           	ret
 681+ 9D37
 682+ 9D37              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D37
 684+ 9D37 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D3A 01 1F 00     	ld bc,31
 686+ 9D3D A7           	and a
 687+ 9D3E ED 42        	sbc hl,bc
 688+ 9D40 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D43 21 E4 89     	ld hl,Ctrl_0
 690+ 9D46 CB CE        	set 1,(hl)
 691+ 9D48 C9           	ret
 692+ 9D49
 693+ 9D49              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D49
 695+ 9D49 24           Reaparece_abajo inc h
 696+ 9D4A 01 E0 17     	ld bc,$17e0
 697+ 9D4D A7           	and a
 698+ 9D4E ED 4A        	adc hl,bc
 699+ 9D50 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D53 21 E4 89     	ld hl,Ctrl_0
 701+ 9D56 CB D6        	set 2,(hl)
 702+ 9D58 C9           	ret
 703+ 9D59
 704+ 9D59              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D59
 706+ 9D59 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D5C A7           	and a
 708+ 9D5D ED 42        	sbc hl,bc
 709+ 9D5F 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D62 21 E4 89     	ld hl,Ctrl_0
 711+ 9D65 CB DE        	set 3,(hl)
 712+ 9D67 C9           	ret
 713+ 9D68
 714+ 9D68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D68              ;
 716+ 9D68              ;	15/07/23
 717+ 9D68
 718+ 9D68              Reinicio
 719+ 9D68
 720+ 9D68              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D68
 722+ 9D68 AF           	xor a
 723+ 9D69 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D6C CD 8A 9D     	call Limpia_contenido_hl
 725+ 9D6F
 726+ 9D6F 21 B8 89     	ld hl,Posicion_actual
 727+ 9D72 CD 8A 9D     	call Limpia_contenido_hl
 728+ 9D75
 729+ 9D75 CD AB A0     	call Inicializa_Puntero_indice_mov
 730+ 9D78 CD 35 A0     	call Inicia_Puntero_mov
 731+ 9D7B
 732+ 9D7B 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D7E 06 05        	ld b,5
 734+ 9D80 77           1 ld (hl),a
 735+ 9D81 23           	inc hl
 736+ 9D82 10 FC        	djnz 1B
 737+ 9D84
 738+ 9D84 21 F7 89     	ld hl,Ctrl_2
 739+ 9D87 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D89
 741+ 9D89 C9           	ret
 742+ 9D8A
 743+ 9D8A 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D8B 23           	inc hl
 745+ 9D8C 77           	ld (hl),a
 746+ 9D8D C9           	ret
 747+ 9D8E
 748+ 9D8E
# file closed: Direcciones.asm
1539  9D8E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D8E              ; ------------------------------------------------------------------------
   2+ 9D8E              ;
   3+ 9D8E              ;	02/04/23
   4+ 9D8E              ;
   5+ 9D8E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D8E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D8E              ;
   8+ 9D8E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D8E              ;
  10+ 9D8E              ;	Modifica: A,BC y DE.
  11+ 9D8E
  12+ 9D8E C5           Genera_coordenadas push bc
  13+ 9D8F E5           	push hl
  14+ 9D90 D5           	push de
  15+ 9D91
  16+ 9D91 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D94
  18+ 9D94 7D           	ld a,l
  19+ 9D95 E6 1F        	and $1f
  20+ 9D97 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D9A
  22+ 9D9A CD 03 9A     	call calcula_tercio
  23+ 9D9D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D9E
  25+ 9D9E 1E 00        	ld e,0
  26+ 9DA0 7D           	ld a,l
  27+ 9DA1 E6 E0        	and $e0
  28+ 9DA3 28 01        	jr z,1F
  29+ 9DA5 04           	inc b
  30+ 9DA6
  31+ 9DA6 04           1 inc b
  32+ 9DA7 05           	dec b
  33+ 9DA8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9DAA              ;														; _ , salimos.
  35+ 9DAA 1C           3 inc e
  36+ 9DAB D6 20        	sub 32
  37+ 9DAD 20 FB        	jr nz,3B
  38+ 9DAF 10 F5        	djnz 1B
  39+ 9DB1
  40+ 9DB1 7B           2 ld a,e
  41+ 9DB2 32 BD 89     	ld (Coordenada_y),a
  42+ 9DB5
  43+ 9DB5 D1           	pop de
  44+ 9DB6 E1           	pop hl
  45+ 9DB7 C1           	pop bc
  46+ 9DB8
  47+ 9DB8 C9           	ret
  48+ 9DB9
  49+ 9DB9              ; ------------------------------------------------------------------------
  50+ 9DB9              ;	28/05/23
  51+ 9DB9              ;
  52+ 9DB9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9DB9              ;	Fila superior "0", Columna izquierda "0".
  54+ 9DB9              ;
  55+ 9DB9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9DB9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9DB9              ;
  58+ 9DB9              ;		DE="$120d"
  59+ 9DB9              ;
  60+ 9DB9              ;		D, (Coordenada_X), Columnas, $12
  61+ 9DB9              ;		E, (Coordenada_y), Filas, $0d
  62+ 9DB9              ;
  63+ 9DB9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9DB9
  65+ 9DB9              ;	Modifica: A,BC y DE.
  66+ 9DB9
  67+ 9DB9
  68+ 9DB9              Genera_coordenadas_disparo
  69+ 9DB9
  70+ 9DB9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9DB9
  72+ 9DB9 7D           	ld a,l
  73+ 9DBA E6 1F        	and $1f
  74+ 9DBC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DBD CD 03 9A     	call calcula_tercio
  76+ 9DC0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DC1 1E 00        	ld e,0
  78+ 9DC3 7D           	ld a,l
  79+ 9DC4 E6 E0        	and $e0
  80+ 9DC6 28 01        	jr z,1F
  81+ 9DC8 04           	inc b
  82+ 9DC9 1C           1 inc e
  83+ 9DCA D6 20        	sub 32
  84+ 9DCC 20 FB        	jr nz,1B
  85+ 9DCE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DD0 C9           	ret
  87+ 9DD1
# file closed: Genera_coordenadas.asm
1540  9DD1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DD1
   2+ 9DD1
   3+ 9DD1              ;   07/07/23
   4+ 9DD1              ;
   5+ 9DD1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DD1              ;
   7+ 9DD1              ;   Codificación:
   8+ 9DD1              ;
   9+ 9DD1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DD1              ;
  11+ 9DD1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DD1              ;
  13+ 9DD1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DD1              ;
  15+ 9DD1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DD1              ;
  17+ 9DD1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DD1              ;                               ..... %01000010 Vel_up 4
  19+ 9DD1              ;                                               Vel_down 2
  20+ 9DD1              ;                               ..... $42
  21+ 9DD1              ;
  22+ 9DD1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DD1              ;
  24+ 9DD1              ;                               ..... %01000010 Vel_left 4
  25+ 9DD1              ;                                               Vel_right 2
  26+ 9DD1              ;                               ..... $42
  27+ 9DD1              ;
  28+ 9DD1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DD1              ;
  30+ 9DD1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DD1              ;
  32+ 9DD1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DD1              ;
  34+ 9DD1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DD1              ;                                     $53
  36+ 9DD1              ;
  37+ 9DD1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DD1              ;
  39+ 9DD1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DD1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DD1              ;
  42+ 9DD1              ;                       Arriba ..... $81
  43+ 9DD1              ;                       Arriba - izquierda ..... $a1
  44+ 9DD1              ;                       Arriba - derecha ..... $91
  45+ 9DD1              ;
  46+ 9DD1              ;                       Abajo ..... $41
  47+ 9DD1              ;                       Abajo - izquierda ..... $61
  48+ 9DD1              ;                       Abajo - derecha ..... $51
  49+ 9DD1              ;
  50+ 9DD1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DD1              ;
  52+ 9DD1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DD1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DD1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DD1              ;
  56+ 9DD1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DD1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DD1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DD1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DD1              ;
  61+ 9DD1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DD1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DD1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DD1              ;
  65+ 9DD1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DD1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DD1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DD1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DD1
  70+ 9DD1              ; ----- ----- ----- ----- -----
  71+ 9DD1
  72+ 9DD1 FD 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DD3 05 9E            defw F_1
  74+ 9DD5 0F 9E            defw F_2
  75+ 9DD7 19 9E            defw Codo_abajo_derecha
  76+ 9DD9 4D 9E            defw Derecha_y_subiendo
  77+ 9DDB 57 9E            defw Derecha_y_subiendo_1
  78+ 9DDD 61 9E            defw F_3
  79+ 9DDF 6B 9E            defw F_4
  80+ 9DE1 75 9E            defw Derecha_y_bajando
  81+ 9DE3 7F 9E            defw Derecha_y_bajando_1
  82+ 9DE5 89 9E            defw Derecha_y_bajando_2
  83+ 9DE7 93 9E            defw Codo_derecha_abajo
  84+ 9DE9 C3 9E            defw Codo_abajo_izq.
  85+ 9DEB F7 9E            defw Izquierda_y_subiendo
  86+ 9DED 01 9F            defw Izquierda_y_subiendo_1
  87+ 9DEF 0B 9F            defw F_5
  88+ 9DF1 15 9F            defw F_6
  89+ 9DF3 1F 9F            defw Izquierda_y_bajando
  90+ 9DF5 29 9F            defw Izquierda_y_bajando_1
  91+ 9DF7 33 9F            defw Izquierda_y_bajando_2
  92+ 9DF9 3D 9F            defw Codo_izquierda_abajo
  93+ 9DFB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DFD
  95+ 9DFD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9E01 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9E05
  98+ 9E05 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9E09 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9E0D 08 00
 100+ 9E0F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9E13 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9E17 0F FE
 102+ 9E19
 103+ 9E19 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E21 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E25 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E29 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E2D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E31 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E35 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E39 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E3D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E41 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E45 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E49 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E4D
 117+ 9E4D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E51 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E55 06 00
 119+ 9E57
 120+ 9E57 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E5B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E5F 02 00
 122+ 9E61
 123+ 9E61 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E65 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E69 04 00
 125+ 9E6B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E6F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E73 08 00
 127+ 9E75
 128+ 9E75 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E79 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E7D 02 00
 130+ 9E7F
 131+ 9E7F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E83 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E87 06 00
 133+ 9E89
 134+ 9E89 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E8D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E91 06 00
 136+ 9E93
 137+ 9E93              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E93
 139+ 9E93 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E97 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E9B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E9F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9EA3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9EA7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9EAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9EAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9EB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9EB7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EBB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EBF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EC3
 152+ 9EC3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EC7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9ECB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9ECF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9ED3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9ED7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EDB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EDF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EE3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EE7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EEB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EEF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EF3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EF7
 166+ 9EF7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EFB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EFF 06 00
 168+ 9F01
 169+ 9F01 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9F05 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9F09 02 00
 171+ 9F0B
 172+ 9F0B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9F0F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9F13 04 00
 174+ 9F15 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9F19 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F1D 08 00
 176+ 9F1F
 177+ 9F1F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F23 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F27 02 00
 179+ 9F29
 180+ 9F29 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F2D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F31 06 00
 182+ 9F33
 183+ 9F33 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F37 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F3B 06 00
 185+ 9F3D
 186+ 9F3D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F41 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F45 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F49 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F4D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F51 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F55 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F59 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F5D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F61 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F69 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F6D
 199+ 9F6D              ; ----- ----- ----- ----- -----
 200+ 9F6D              ;
 201+ 9F6D              ;   27/06/23
 202+ 9F6D
 203+ 9F6D              Movimiento
 204+ 9F6D
 205+ 9F6D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F6D
 207+ 9F6D              ;    ld hl,(Posicion_actual)
 208+ 9F6D
 209+ 9F6D 3A F7 89         ld a,(Ctrl_2)
 210+ 9F70 CB 57            bit 2,a
 211+ 9F72 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F74
 213+ 9F74 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F77 7E               ld a,(hl)
 215+ 9F78
 216+ 9F78              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F78
 218+ 9F78              Inicia_desplazamiento.
 219+ 9F78
 220+ 9F78              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F78
 222+ 9F78 CD 6C A0         call Ajusta_velocidad_desplazamiento
 223+ 9F7B
 224+ 9F7B              ; Iniciamos (Repetimos_mov).
 225+ 9F7B
 226+ 9F7B 7E               ld a,(hl)
 227+ 9F7C E6 0F            and $0f
 228+ 9F7E 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F81 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F84
 231+ 9F84              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F84
 233+ 9F84 23               inc hl
 234+ 9F85 7E               ld a,(hl)
 235+ 9F86 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F89 2B               dec hl
 237+ 9F8A
 238+ 9F8A 21 F7 89         ld hl,Ctrl_2
 239+ 9F8D CB D6            set 2,(hl)
 240+ 9F8F
 241+ 9F8F              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F8F              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F8F
 244+ 9F8F              Desplazamiento_iniciado
 245+ 9F8F
 246+ 9F8F CD 40 A0         call Aplica_desplazamiento
 247+ 9F92
 248+ 9F92 3A F7 89         ld a,(Ctrl_2)
 249+ 9F95 CB 67            bit 4,a
 250+ 9F97 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F98
 252+ 9F98 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F9B 35               dec (hl)
 254+ 9F9C C0               ret nz
 255+ 9F9D
 256+ 9F9D              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F9D              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F9D              ; Analiza (Cola_de_desplazamiento).
 259+ 9F9D
 260+ 9F9D 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9FA0 A7               and a
 262+ 9FA1 CC 95 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9FA4 28 30            jr z,Reinicia_el_movimiento
 264+ 9FA6
 265+ 9FA6 FE FF            cp $ff
 266+ 9FA8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9FAA
 268+ 9FAA FE FE            cp $fe
 269+ 9FAC CC 19 A0         call z,Fijamos_bucle
 270+ 9FAF 28 25            jr z,Reinicia_el_movimiento
 271+ 9FB1
 272+ 9FB1 FE FD            cp $fd
 273+ 9FB3 20 11            jr nz,1F
 274+ 9FB5
 275+ 9FB5              ; ---
 276+ 9FB5              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9FB5
 278+ 9FB5 3A F7 89         ld a,(Ctrl_2)
 279+ 9FB8 CB 5F            bit 3,a
 280+ 9FBA 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FBC
 282+ 9FBC              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FBC
 284+ 9FBC 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FBF CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FC1
 287+ 9FC1 CD 2A A0         call Inicia_Repetimos_movimiento
 288+ 9FC4 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FC6              ; ---
 290+ 9FC6
 291+ 9FC6 FE 01        1 cp 1
 292+ 9FC8 CA 03 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FCB
 294+ 9FCB 3D               dec a
 295+ 9FCC 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FCF
 297+ 9FCF 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FD2 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FD5              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FD5 C9               ret
 301+ 9FD6
 302+ 9FD6              Reinicia_el_movimiento
 303+ 9FD6
 304+ 9FD6 3A F7 89         ld a,(Ctrl_2)
 305+ 9FD9 CB 5F            bit 3,a
 306+ 9FDB 28 1B            jr z,2F
 307+ 9FDD
 308+ 9FDD              ; (Cola_de_desplazamiento)="254".
 309+ 9FDD
 310+ 9FDD 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FE0 35               dec (hl)
 312+ 9FE1 20 15            jr nz,2F
 313+ 9FE3
 314+ 9FE3              ; Fin de las repeticiones del último movimiento.
 315+ 9FE3
 316+ 9FE3 21 F7 89         ld hl,Ctrl_2
 317+ 9FE6 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FE8
 319+ 9FE8 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FEB 23               inc hl
 321+ 9FEC 23               inc hl
 322+ 9FED 23               inc hl
 323+ 9FEE 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FF1              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FF1 7E               ld a,(hl)
 326+ 9FF2 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FF5
 328+ 9FF5 C3 9D 9F         jp Cola
 329+ 9FF8
 330+ 9FF8
 331+ 9FF8 CD 35 A0     2 call Inicia_Puntero_mov
 332+ 9FFB
 333+ 9FFB 21 F7 89         ld hl,Ctrl_2
 334+ 9FFE CB 96            res 2,(hl)
 335+ A000
 336+ A000 C3 6D 9F         jp Movimiento
 337+ A003
 338+ A003              Siguiente_desplazamiento
 339+ A003
 340+ A003              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ A003              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ A003
 343+ A003 21 F7 89         ld hl,Ctrl_2
 344+ A006 CB 96            res 2,(hl)
 345+ A008
 346+ A008 2A E9 89         ld hl,(Puntero_mov)
 347+ A00B 23               inc hl
 348+ A00C 23               inc hl
 349+ A00D 22 E9 89         ld (Puntero_mov),hl
 350+ A010
 351+ A010 7E               ld a,(hl)
 352+ A011 A7               and a
 353+ A012 CC 95 A0         call z,Incrementa_Puntero_indice_mov
 354+ A015 CA D6 9F         jp z,Reinicia_el_movimiento
 355+ A018
 356+ A018 C9               ret
 357+ A019              ; Subrutinas -----------------------------------------
 358+ A019              ; ---------- --------- --------- ---------- ----------
 359+ A019              ;
 360+ A019              ;   24/07/23
 361+ A019              ;
 362+ A019              ;   Fijamos_bucle
 363+ A019              ;
 364+ A019              ;
 365+ A019
 366+ A019              Fijamos_bucle
 367+ A019
 368+ A019 3A ED 89         ld a,(Incrementa_puntero)
 369+ A01C 3C               inc a
 370+ A01D 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ A020
 372+ A020 CD 95 A0         call Incrementa_Puntero_indice_mov
 373+ A023 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A026 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A029 C9               ret
 376+ A02A
 377+ A02A              ; ---------- --------- --------- ---------- ----------
 378+ A02A              ;
 379+ A02A              ;   07/7/23
 380+ A02A              ;
 381+ A02A              ;   Inicia_Repetimos_movimiento
 382+ A02A              ;
 383+ A02A              ;
 384+ A02A
 385+ A02A              Inicia_Repetimos_movimiento
 386+ A02A
 387+ A02A              ; Iniciamos (Repetimos_movimiento).
 388+ A02A
 389+ A02A DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A02E DD 7E 02         ld a,(ix+2)
 391+ A031 32 F1 89         ld (Repetimos_movimiento),a
 392+ A034
 393+ A034 C9               ret
 394+ A035
 395+ A035              ; ---------- --------- --------- ---------- ----------
 396+ A035              ;
 397+ A035              ;   26/6/23
 398+ A035              ;
 399+ A035              ;   Inicia_Puntero_mov
 400+ A035              ;
 401+ A035              ;
 402+ A035
 403+ A035 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A038 5E               ld e,(hl)
 405+ A039 23               inc hl
 406+ A03A 56               ld d,(hl)
 407+ A03B EB               ex de,hl
 408+ A03C 22 E9 89         ld (Puntero_mov),hl
 409+ A03F C9               ret
 410+ A040
 411+ A040              ; ---------- --------- --------- ---------- ----------
 412+ A040              ;
 413+ A040              ;   27/06/23
 414+ A040              ;
 415+ A040              ;   Aplica_movimiento.
 416+ A040
 417+ A040              Aplica_desplazamiento
 418+ A040
 419+ A040              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A040
 421+ A040 2A E9 89         ld hl, (Puntero_mov)
 422+ A043
 423+ A043 7E               ld a,(hl)
 424+ A044 E6 F0            and $f0
 425+ A046 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A047
 427+ A047 CB 7E            bit 7,(hl)
 428+ A049 28 03            jr z,1F
 429+ A04B CD 7A 9A         call Mov_up
 430+ A04E 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A051 CB 76            bit 6,(hl)
 432+ A053 28 03            jr z,2F
 433+ A055 CD 49 9A         call Mov_down
 434+ A058 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A05B CB 6E            bit 5,(hl)
 436+ A05D 28 03            jr z,3F
 437+ A05F CD DB 9B         call Mov_left
 438+ A062 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A065 CB 66            bit 4,(hl)
 440+ A067 C8               ret z
 441+ A068 CD BD 9A         call Mov_right
 442+ A06B C9               ret
 443+ A06C
 444+ A06C              ; ---------- --------- --------- ---------- ----------
 445+ A06C              ;
 446+ A06C              ;   26/06/23
 447+ A06C              ;
 448+ A06C              ;   Ajusta_velocidad_desplazamiento.
 449+ A06C
 450+ A06C              Ajusta_velocidad_desplazamiento
 451+ A06C
 452+ A06C              ; 1er byte de la cadena de movimiento.
 453+ A06C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A06C
 455+ A06C CD 8A A0         call Extrae_nibble_alto
 456+ A06F
 457+ A06F 32 CD 89         ld (Vel_up),a
 458+ A072 79               ld a,c
 459+ A073 E6 0F            and $0f
 460+ A075 32 CE 89         ld (Vel_down),a
 461+ A078
 462+ A078              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A078              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A078
 465+ A078 23               inc hl
 466+ A079 CD 8A A0         call Extrae_nibble_alto
 467+ A07C
 468+ A07C 32 CB 89         ld (Vel_left),a
 469+ A07F 79               ld a,c
 470+ A080 E6 0F            and $0f
 471+ A082 32 CC 89         ld (Vel_right),a
 472+ A085
 473+ A085              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A085
 475+ A085 23               inc hl
 476+ A086 22 E9 89         ld (Puntero_mov),hl
 477+ A089 C9               ret
 478+ A08A
 479+ A08A 06 04        Extrae_nibble_alto ld b,4
 480+ A08C 7E               ld a,(hl)
 481+ A08D 4F               ld c,a
 482+ A08E E6 F0            and $f0
 483+ A090 CB 3F        1 srl a
 484+ A092 10 FC            djnz 1B
 485+ A094 C9               ret
 486+ A095
 487+ A095              ; ---------- --------- --------- ---------- ----------
 488+ A095              ;
 489+ A095              ;   5/7/23
 490+ A095              ;
 491+ A095              ;   Incrementa_Puntero_indice_mov
 492+ A095
 493+ A095              Incrementa_Puntero_indice_mov
 494+ A095
 495+ A095 21 ED 89         ld hl,Incrementa_puntero
 496+ A098 34               inc (hl)
 497+ A099
 498+ A099 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A09C 01 02 00         ld bc,2
 500+ A09F A7               and a
 501+ A0A0 09               add hl,bc
 502+ A0A1 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A0A4
 504+ A0A4 7E               ld a,(hl)
 505+ A0A5 A7               and a
 506+ A0A6
 507+ A0A6              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A0A6
 509+ A0A6              ;    jr z,$
 510+ A0A6
 511+ A0A6              ;! Reinicia el Patrón de movimiento.
 512+ A0A6
 513+ A0A6 CC AB A0         call z,Inicializa_Puntero_indice_mov
 514+ A0A9
 515+ A0A9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A0AA
 517+ A0AA C9               ret
 518+ A0AB
 519+ A0AB
 520+ A0AB              ; ---------- --------- --------- ---------- ----------
 521+ A0AB              ;
 522+ A0AB              ;   24/07/23
 523+ A0AB              ;
 524+ A0AB              ;   Inicializa_Puntero_indice_mov
 525+ A0AB
 526+ A0AB              Inicializa_Puntero_indice_mov
 527+ A0AB
 528+ A0AB              ; Existe etiqueta de bucle principal???
 529+ A0AB
 530+ A0AB 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A0AE 24               inc h
 532+ A0AF 25               dec h
 533+ A0B0 28 05            jr z,2F
 534+ A0B2
 535+ A0B2 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A0B5 18 14            jr 3F
 537+ A0B7
 538+ A0B7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A0B7
 540+ A0B7 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A0BA 47               ld b,a
 542+ A0BB
 543+ A0BB 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A0BE 2B           1 dec hl
 545+ A0BF 2B               dec hl
 546+ A0C0 10 FC            djnz 1B
 547+ A0C2 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0C5
 549+ A0C5 AF               xor a
 550+ A0C6 32 ED 89         ld (Incrementa_puntero),a
 551+ A0C9 18 06            jr 4F
 552+ A0CB
 553+ A0CB 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0CE 32 ED 89         ld (Incrementa_puntero),a
 555+ A0D1 C9           4 ret
 556+ A0D2
 557+ A0D2
 558+ A0D2
# file closed: Patrones_de_mov.asm
1541  A0D2              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0D2              ; Relojes y temporizaciones.
   2+ A0D2
   3+ A0D2              ; ------------------------------------------------------
   4+ A0D2              ;
   5+ A0D2              ;	16/7/23
   6+ A0D2              ;
   7+ A0D2              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0D2              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0D2              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0D2              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0D2              ;
  12+ A0D2              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0D2              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0D2
  15+ A0D2              ; Disparo_entidad db 1
  16+ A0D2              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0D2              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0D2
  19+ A0D2              Habilita_disparos
  20+ A0D2
  21+ A0D2 7E           	ld a,(hl)
  22+ A0D3 A7           	and a
  23+ A0D4 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0D5
  25+ A0D5 EB           	ex de,hl
  26+ A0D6
  27+ A0D6 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0D7 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0D8
  30+ A0D8              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0D8
  32+ A0D8 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0D9 7E           	ld a,(hl)
  34+ A0DA 23           	inc hl
  35+ A0DB 77           	ld (hl),a
  36+ A0DC
  37+ A0DC EB           	ex de,hl						; Habilitamos disparo.
  38+ A0DD 3E 01        	ld a,1
  39+ A0DF 77           	ld (hl),a
  40+ A0E0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1542  A0E1              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0E1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0E1              ;
   3+ A0E1              ;	9/8/23
   4+ A0E1              ;
   5+ A0E1              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0E1
   7+ A0E1              ;	ADC HL,SP	LD (addr),SP
   8+ A0E1              ;	ADD HL,SP	LD SP,(addr)
   9+ A0E1              ;	ADD IX,SP	LD SP,nn
  10+ A0E1              ; 	ADD IY,SP	LD SP,HL
  11+ A0E1              ;				LD SP,IX
  12+ A0E1              ;	DEC SP		LD SP,IY
  13+ A0E1
  14+ A0E1              ;	EX (SP),HL
  15+ A0E1              ;	EX (SP),IX
  16+ A0E1              ;	EX (SP),IY
  17+ A0E1
  18+ A0E1              ;	INC SP
  19+ A0E1
  20+ A0E1                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1543  74C8
1544  74C8              	SAVESNA "Pruebas.sna", START
1545  74C8
1546  74C8
1547  74C8
1548  74C8
# file closed: Banco_de_pruebas.asm
