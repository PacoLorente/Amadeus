# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4B 88     	call Frame
  15  A104
  16  A104 3A 7E 87     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	20/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4              ;
 355+ 85E4              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 356+ 85E4              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 357+ 85E4              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 358+ 85E4              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 359+ 85E4
 360+ 85E4              Indice_de_entidades
 361+ 85E4
 362+ 85E4 EE 85        	defw Entidad_1
 363+ 85E6 FE 85        	defw Entidad_2
 364+ 85E8 0E 86        	defw Entidad_3
 365+ 85EA 1E 86        	defw Entidad_4
 366+ 85EC 2E 86        	defw Entidad_5
 367+ 85EE
 368+ 85EE              ;	BADSAT, (Satélite malvado).
 369+ 85EE
 370+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 371+ 85F0 04           	db %00000100									; (Attr).
 372+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 373+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 374+ 85F5 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 375+ 85F7 01           	db 1											; (Cuad_objeto).
 376+ 85F8 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 377+ 85FC 80 99        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 378+ 85FE
 379+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 380+ 8600 02           	db %00000010									; (Attr).
 381+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 382+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 383+ 8605 5F 48        	defw $485f                                      ; (Posicion_inicio).
 384+ 8607 01           	db 1											; (Cuad_objeto).
 385+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 386+ 860C 80 99        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 387+ 860E
 388+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 389+ 8610 04           	db %00000100									; (Attr).
 390+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 391+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 392+ 8615 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 393+ 8617 01           	db 1											; (Cuad_objeto).
 394+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 395+ 861C 74 99        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 396+ 861E
 397+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 398+ 8620 01           	db %00000001									; (Attr).
 399+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 400+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 401+ 8625 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 402+ 8627 01           	db 1											; (Cuad_objeto).
 403+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 404+ 862C 80 99        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 405+ 862E
 406+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 407+ 8630 01           	db %00000001									; (Attr).
 408+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 409+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 410+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 411+ 8637 01           	db 1											; (Cuad_objeto).
 412+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 413+ 863C 76 99        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 56 86        	defw Nivel_2
   7+ 8642 63 86        	defw Nivel_3
   8+ 8644 73 86        	defw Nivel_4
   9+ 8646 85 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 09           Nivel_1 db 9                                    ; Nº de entidades.
  19+ 864D 01 01 01 01  	db 1,1,1,1,1,3,3,3,3 						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 8651 01 03 03 03
  19+ 8655 03
  20+ 8656 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 8657 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 865B 01 02
  22+ 865D 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8661 01 02
  23+ 8663 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 8664 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 8668 01
  25+ 8669 03 01 01 01  	db 3,1,1,1,1
  25+ 866D 01
  26+ 866E 03 01 01 01  	db 3,1,1,1,1
  26+ 8672 01
  27+ 8673 11           Nivel_4 db 17									; Nº de entidades.
  28+ 8674 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 8678 01
  29+ 8679 04 01 01 01  	db 4,1,1,1,1
  29+ 867D 01
  30+ 867E 04 01 01 01  	db 4,1,1,1,1
  30+ 8682 01
  31+ 8683 02 03        	db 2,3
  32+ 8685 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8686 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 868A 01
  34+ 868B 05 01 01 01  	db 5,1,1,1,1
  34+ 868F 01
  35+ 8690 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8694 01
  36+ 8695 05 01 01 01  	db 5,1,1,1,1
  36+ 8699 01
  37+ 869A
  38+ 869A              ;---------------------------------------------------------------------------------------------------------------
  39+ 869A              ;
  40+ 869A              ;   21/5/23
  41+ 869A              ;
  42+ 869A              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 869A              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 869A              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 869A              ;	_en la caja DRAW correspondiente.
  46+ 869A              ;
  47+ 869A              ;	MODIFICA: HL,DE y A.
  48+ 869A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 869A
  50+ 869A              Inicializa_Punteros_de_nivel
  51+ 869A
  52+ 869A 21 3E 86     	ld hl,Indice_de_niveles
  53+ 869D 22 B2 87     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 86A0 CD 4F 8A     	call Extrae_address
  55+ 86A3 7E           	ld a,(hl)
  56+ 86A4 32 85 87     	ld (Numero_de_entidades),a
  57+ 86A7 23           	inc hl
  58+ 86A8 22 B4 87     	ld (Datos_de_nivel),hl
  59+ 86AB C9           	ret
  60+ 86AC
  61+ 86AC              ;---------------------------------------------------------------------------------------------------------------
  62+ 86AC              ;
  63+ 86AC              ;   13/5/23
  64+ 86AC              ;
  65+ 86AC              ;	Destruye A,BC,HL,DE
  66+ 86AC
  67+ 86AC              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 86AC              ;	_del juego.
  69+ 86AC
  70+ 86AC              Prepara_cajas
  71+ 86AC
  72+ 86AC              ; Preparamos los punteros de las cajas.
  73+ 86AC
  74+ 86AC 21 68 84     	ld hl,Indice_de_cajas
  75+ 86AF CD 4F 8A     	call Extrae_address
  76+ 86B2 CD EF 86     	call Avanza_caja
  77+ 86B5
  78+ 86B5 CD 2A 87     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 86B8
  80+ 86B8 2A B4 87     	ld hl,(Datos_de_nivel)
  81+ 86BB
  82+ 86BB              ; HL está en los datos del nivel correspondiente.
  83+ 86BB              ; B actuará como contador de cajas.
  84+ 86BB
  85+ 86BB C5           1 push bc
  86+ 86BC
  87+ 86BC 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 86BD CD E0 86     	call PreparaBC
  89+ 86C0
  90+ 86C0 21 E4 85     	ld hl,Indice_de_entidades
  91+ 86C3 CD E8 86     	call SBC_HL_con_BC_y_Extrae
  92+ 86C6 22 8B 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 86C9
  94+ 86C9 CD F9 86     	call Datos_de_entidad_a_caja
  95+ 86CC
  96+ 86CC 2A 83 87     	ld hl,(Indice_restore_caja)
  97+ 86CF CD 4F 8A     	call Extrae_address
  98+ 86D2 CD EF 86     	call Avanza_caja
  99+ 86D5
 100+ 86D5 2A B4 87     	ld hl,(Datos_de_nivel)
 101+ 86D8 23           	inc hl
 102+ 86D9 22 B4 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 86DC
 104+ 86DC C1           	pop bc
 105+ 86DD 10 DC        	djnz 1B
 106+ 86DF C9           	ret
 107+ 86E0
 108+ 86E0 CB 27        PreparaBC sla a
 109+ 86E2 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 86E4 4F           	ld c,a
 111+ 86E5 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 86E7 C9           	ret
 113+ 86E8
 114+ 86E8 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 86E9 ED 4A        	adc hl,bc
 116+ 86EB CD 4F 8A     	call Extrae_address
 117+ 86EE C9           	ret
 118+ 86EF
 119+ 86EF 22 7F 87     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 86F2 13           	inc de
 121+ 86F3 13           	inc de
 122+ 86F4 EB           	ex de,hl
 123+ 86F5 22 83 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 86F8 C9           	ret
 125+ 86F9
 126+ 86F9              Datos_de_entidad_a_caja
 127+ 86F9
 128+ 86F9              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 86F9
 130+ 86F9 ED 5B 7F 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 86FD
 132+ 86FD 01 02 00     	ld bc,2
 133+ 8700 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8702
 135+ 8702 01 07 00     	ld bc,7
 136+ 8705 CD 24 87     	call Situa_DE
 137+ 8708
 138+ 8708 01 05 00     	ld bc,5
 139+ 870B ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 870D
 141+ 870D 01 04 00     	ld bc,4
 142+ 8710 CD 24 87     	call Situa_DE
 143+ 8713
 144+ 8713 01 07 00     	ld bc,7
 145+ 8716 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8718
 147+ 8718 01 18 00     	ld bc,24
 148+ 871B CD 24 87     	call Situa_DE
 149+ 871E
 150+ 871E 01 02 00     	ld bc,2
 151+ 8721 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8723
 153+ 8723 C9           	ret
 154+ 8724
 155+ 8724 EB           Situa_DE ex de,hl
 156+ 8725 A7           	and a
 157+ 8726 ED 4A        	adc hl,bc
 158+ 8728 EB           	ex de,hl
 159+ 8729 C9           	ret
 160+ 872A
 161+ 872A              ;---------------------------------------------------------------------------------------------------------------
 162+ 872A              ;
 163+ 872A              ;	21/5/23
 164+ 872A              ;
 165+ 872A              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 872A              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 872A              ;
 168+ 872A              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 872A              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 872A              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 872A              ;
 172+ 872A              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 872A              ;	MODIFICA: A y B.
 174+ 872A              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 872A
 176+ 872A              Admin_num_entidades
 177+ 872A
 178+ 872A              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 872A
 180+ 872A 3A 85 87     	ld a,(Numero_de_entidades)
 181+ 872D A7           	and a
 182+ 872E              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 872E 28 FE        	jr z,$
 184+ 8730              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 8730 FE 05        	cp 5
 186+ 8732 38 08        	jr c,1F
 187+ 8734
 188+ 8734              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 8734              ; Actualizamos variables.
 190+ 8734
 191+ 8734 3E 05        	ld a,5
 192+ 8736 32 86 87     	ld (Numero_parcial_de_entidades),a
 193+ 8739 47           	ld b,a
 194+ 873A 18 04        	jr 2F
 195+ 873C
 196+ 873C              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 197+ 873C              ; (Numero_de_entidades)="0".
 198+ 873C
 199+ 873C 32 86 87     1 ld (Numero_parcial_de_entidades),a
 200+ 873F 47           	ld b,a
 201+ 8740 C9           2 ret
# file closed: Niveles.asm
  25  8741
  26  8741              ; ******************************************************************************************************************************************************************************************
  27  8741              ; Constantes.
  28  8741              ; ******************************************************************************************************************************************************************************************
  29  8741              ;
  30  8741              ; 8/11/22
  31  8741              ;
  32  8741              ; Constantes generales.
  33  8741              ;
  34  8741
  35  8741              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  8741              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  8741              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  8741              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  8741
  40  8741              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  8741              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  8741              ;                               				        ; De momento situamos este almacén en $7000.
  43  8741              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  8741              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  8741              ;                               				        ; De momento situamos este almacén en $7060.
  46  8741
  47  8741              ; ******************************************************************************************************************************************************************************************
  48  8741              ; Variables.
  49  8741              ; ******************************************************************************************************************************************************************************************
  50  8741              ;
  51  8741              ; 10/11/22
  52  8741              ;
  53  8741              ; Variables de DRAW. (Motor principal).
  54  8741              ;
  55  8741              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  8741
  57  8741 00           Filas db 0												; Filas. [DRAW]
  58  8742 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  8743 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  8745 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  8747 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  8748 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  8749
  64  8749              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  8749
  66  8749 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  874A              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  874A              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  874A 00           Attr db 0												; Atributos de la entidad:
  70  874B
  71  874B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  874B              ;
  73  874B              ;	COLORES: 0 ..... NEGRO
  74  874B              ;    		 1 ..... AZUL
  75  874B              ; 			 2 ..... ROJO
  76  874B              ;			 3 ..... MAGENTA
  77  874B              ; 			 4 ..... VERDE
  78  874B              ; 			 5 ..... CIAN
  79  874B              ;			 6 ..... AMARILLO
  80  874B              ; 			 7 ..... BLANCO
  81  874B
  82  874B 00 00        Indice_Sprite_der defw 0
  83  874D 00 00        Indice_Sprite_izq defw 0
  84  874F 00 00        Puntero_DESPLZ_der defw 0
  85  8751 00 00        Puntero_DESPLZ_izq defw 0
  86  8753
  87  8753 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  8755 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  8756
  90  8756              ; Variables de objeto. (Características).
  91  8756
  92  8756 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  8757 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8758 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8759 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  875A
  97  875A 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  875B              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  875B              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  875B 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  875D 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  875F 00 00        	defw 0
 103  8761 00 00 00 00  	db 0,0,0,0
 104  8765
 105  8765 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  8767 00 00        	defw 0
 107  8769 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  876B 00 00 00 00  	db 0,0,0,0
 109  876F
 110  876F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  876F
 112  876F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  8770              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  8770              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  8770              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  8770              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  8770              ;
 118  8770              ; 														DESCRIPCIÖN:
 119  8770              ;
 120  8770              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  8770              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  8770              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  8770              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  8770              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  8770              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  8770              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  8770              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  8770              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  8770              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  8770              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  8770              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  8770              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  8770              ;
 134  8770              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  8770              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  8770              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  8770
 138  8770 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  8771
 140  8771              ; Movimiento.
 141  8771
 142  8771 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  8772 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  8774 00 00        Puntero_mov defw 0
 145  8776 00           Contador_db_mov db 0
 146  8777 00           Incrementa_puntero db 0
 147  8778 00           Repetimos_db db 0
 148  8779
 149  8779              ; Variables de funcionamiento. [DRAW].
 150  8779
 151  8779 00           Columnas db 0
 152  877A 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  877C              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  877C 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  877D
 156  877D              ; variables de control general.
 157  877D
 158  877D 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  877E
 160  877E              ; 61 Bytes por entidad.
 161  877E              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  877E              ;					         		---------;      ;---------
 163  877E
 164  877E
 165  877E              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  877E
 167  877E 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  877F
 169  877F              ;														DESCRIPCIÓN:
 170  877F              ;
 171  877F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  877F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  877F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  877F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  877F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  877F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  877F              ;														BIT 3, .............
 178  877F              ;														BIT 4, .............
 179  877F
 180  877F              ; Gestión de ENTIDADES y CAJAS.
 181  877F
 182  877F              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 183  877F 00 00        Puntero_store_caja defw 0
 184  8781 00 00        Puntero_restore_caja defw 0
 185  8783 00 00        Indice_restore_caja defw 0
 186  8785 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 187  8786 00           Numero_parcial_de_entidades db 0
 188  8787 00           Entidades_en_curso db 0									; ..... ..... .....
 189  8788 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 190  8789              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 191  8789              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 192  8789              ;														; _ (Numero_de_malotes)="0".
 193  8789 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 194  878B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 195  878D              ;														; _ puntero (Indice_entidades).
 196  878D
 197  878D
 198  878D              ;---------------------------------------------------------------------------------------------------------------
 199  878D              ;
 200  878D              ; Sirven para PINTAR.
 201  878D
 202  878D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 203  878F              ;														; _variable para almacenar lo posición del puntero_
 204  878F              ; 														; _de pila, SP.
 205  878F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 206  8791              ;														; La utiliza la rutina [Extrae_foto_registros].
 207  8791 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 208  8793              ;														; _el snapshot de los registros de la siguiente entidad.
 209  8793              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 210  8793 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 211  8795              ;														; _el snapshot de los registros del siguiente disparo.
 212  8795              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 213  8795
 214  8795              ;---------------------------------------------------------------------------------------------------------------
 215  8795
 216  8795              ; Gestión de Disparos.
 217  8795
 218  8795 00           Numero_de_disparotes db 0
 219  8796 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 220  8798 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 221  879A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 222  879B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 223  879B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 224  879B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 225  879D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 226  879D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 227  879D              ;														; _produzca colisión.
 228  879D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 229  879F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 230  879F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 231  87A2              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 232  87A2 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 233  87A5              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 234  87A5
 235  87A5              ;---------------------------------------------------------------------------------------------------------------
 236  87A5
 237  87A5              ; Relojes y temporizaciones.
 238  87A5
 239  87A5 00           Contador_de_frames db 0
 240  87A6 00           Secundero db 0
 241  87A7 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 242  87A8              ;														; Repite la oleada de entidades.
 243  87A8 01           Habilita_disparo_Amadeus db 1
 244  87A9 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 245  87AA 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 246  87AB
 247  87AB 01           Habilita_disparo_entidad db 1
 248  87AC 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 249  87AD 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 250  87AE
 251  87AE              ;---------------------------------------------------------------------------------------------------------------
 252  87AE
 253  87AE              ; Gestión de FRAMES.
 254  87AE
 255  87AE 00           Switch db 0
 256  87AF
 257  87AF              ; Variables de Raster y localización en pantalla.
 258  87AF
 259  87AF 00 FF        Temp_Raster defw $ff00
 260  87B1
 261  87B1              ;---------------------------------------------------------------------------------------------------------------
 262  87B1
 263  87B1              ; Gestión de NIVELES.
 264  87B1
 265  87B1 00           Nivel db 0												 ; Nivel actual del juego.
 266  87B2 00 00        Puntero_indice_NIVELES defw 0
 267  87B4 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 268  87B6              ; 														 ; _ que definen el NIVEL.
 269  87B6
 270  87B6
 271  87B6              ; Y todo comienza aquí .....
 272  87B6              ;
 273  87B6              ; Rutina principal *************************************************************************************************************************************************************************
 274  87B6              ;
 275  87B6              ;	14/11/22
 276  87B6
 277  87B6              START
 278  87B6
 279  87B6 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 280  87B9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 281  87BB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 282  87BD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 283  87BF F3           	DI
 284  87C0
 285  87C0 3E 07        	ld a,%00000111
 286  87C2 CD 82 95     	call Cls
 287  87C5
 288  87C5              ;	call Pinta_FILAS
 289  87C5
 290  87C5 CD 9A 86     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 291  87C8 CD 28 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 292  87CB
 293  87CB CD AC 86     4 call Prepara_cajas
 294  87CE
 295  87CE CD FB 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 296  87D1              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 297  87D1 CD D8 8A     	call Restore_entidad
 298  87D4
 299  87D4 21 86 87     	ld hl,Numero_parcial_de_entidades
 300  87D7 46           	ld b,(hl)
 301  87D8 04           	inc b
 302  87D9 05           	dec b
 303  87DA 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 304  87DC
 305  87DC              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 306  87DC              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 307  87DC              ;	Pintamos el resto de entidades:
 308  87DC
 309  87DC              ;	INICIA ENTIDADES !!!!!
 310  87DC C5           1 push bc  												; Guardo el contador de entidades.
 311  87DD CD 55 8A      	call Inicia_Puntero_objeto
 312  87E0 CD 96 95     	call Recompone_posicion_inicio
 313  87E3 CD D2 8F     	call Draw
 314  87E6 CD A0 7F     	call Guarda_foto_registros
 315  87E9 CD 9D 8A     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 316  87EC C1           	pop bc
 317  87ED 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 318  87EF
 319  87EF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 320  87EF
 321  87EF 3A 7E 87     	ld a,(Ctrl_1)
 322  87F2 CB 5F        	bit 3,a
 323  87F4 20 18        	jr nz,5F											; Loop
 324  87F6
 325  87F6              ; 	INICIA AMADEUS !!!!!
 326  87F6
 327  87F6 CD FF 8A     3 call Restore_Amadeus
 328  87F9 CD 55 8A     	call Inicia_Puntero_objeto
 329  87FC CD D2 8F     	call Draw
 330  87FF CD A0 7F     	call Guarda_foto_registros
 331  8802 11 76 84     	ld de,Amadeus_db
 332  8805 CD 11 8B     	call Store_Amadeus
 333  8808
 334  8808              ; 	INICIA DISPAROS !!!!!
 335  8808
 336  8808 CD 11 8A     	call Inicia_Puntero_Disparo_Entidades
 337  880B CD 18 8A     	call Inicia_Puntero_Disparo_Amadeus
 338  880E
 339  880E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 340  880E
 341  880E CD FB 89     5 call Inicia_punteros_de_cajas
 342  8811 CD D8 8A     	call Restore_entidad
 343  8814
 344  8814 3A 7E 87     	ld a,(Ctrl_1)
 345  8817 CB 5F        	bit 3,a
 346  8819 28 0A        	jr z,6F
 347  881B
 348  881B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 349  881B
 350  881B 21 7E 87     	ld hl,Ctrl_1
 351  881E CB 9E        	res 3,(hl)
 352  8820 CD 1F 8A     	call Calcula_numero_de_malotes
 353  8823 18 07        	jr 7F
 354  8825
 355  8825              ; ----------
 356  8825
 357  8825 3A 86 87     6 ld a,(Numero_parcial_de_entidades)
 358  8828 3C           	inc a
 359  8829 32 88 87     	ld (Numero_de_malotes),a
 360  882C
 361  882C AF           7 xor a
 362  882D FB           2 ei
 363  882E 28 FD        	jr z,2B
 364  8830
 365  8830 3A A6 87     	ld a,(Secundero)
 366  8833 47           	ld b,a
 367  8834 3A A7 87     	ld a,(Activa_recarga_cajas)
 368  8837 B8           	cp b
 369  8838 28 08        	jr z,8F
 370  883A
 371  883A 21 7E 87     	ld hl,Ctrl_1
 372  883D CB E6        	set 4,(hl)
 373  883F AF           	xor a
 374  8840 18 EB        	jr 2B
 375  8842
 376  8842 21 7E 87     8 ld hl,Ctrl_1
 377  8845 CB A6        	res 4,(hl)
 378  8847 F3           	di
 379  8848
 380  8848 C3 CB 87     	jp 4B
 381  884B
 382  884B              ; -----------------------------------------------------------------------------------
 383  884B
 384  884B              Frame
 385  884B
 386  884B              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 387  884B              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 388  884B
 389  884B              ; PINTAMOS.
 390  884B
 391  884B              ;    ld a,2
 392  884B              ;    out ($fe),a
 393  884B CD D6 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 394  884E CD 0F 93     	call Extrae_foto_disparos
 395  8851              ;    ld a,1
 396  8851              ;    out ($fe),a
 397  8851
 398  8851              ; ----------------------------------------------------------------------
 399  8851
 400  8851              ; RELOJES.
 401  8851
 402  8851 21 A5 87     	ld hl,Contador_de_frames
 403  8854 34           	inc (hl)											; 0 - 255
 404  8855
 405  8855 3E 3C        	ld a,60
 406  8857 BE           	cp (hl)
 407  8858 20 22        	jr nz,13F
 408  885A
 409  885A 36 00        	ld (hl),0
 410  885C
 411  885C 21 A6 87     	ld hl,Secundero
 412  885F 34           	inc (hl)
 413  8860
 414  8860 7E           	ld a,(hl)
 415  8861 E6 01        	and %00000001
 416  8863 20 10        	jr nz,20F
 417  8865
 418  8865 3A 86 87     	ld a,(Numero_parcial_de_entidades)
 419  8868 47           	ld b,a
 420  8869 3A 87 87     	ld a,(Entidades_en_curso)
 421  886C B8           	cp b
 422  886D 28 06        	jr z,20F
 423  886F 30 04        	jr nc,20F
 424  8871
 425  8871 3C           	inc a
 426  8872 32 87 87     	ld (Entidades_en_curso),a
 427  8875
 428  8875 3E 3C        20 ld a,60
 429  8877 BE           	cp (hl)
 430  8878 20 02        	jr nz,13F
 431  887A
 432  887A 36 00        	ld (hl),0
 433  887C
 434  887C 21 A8 87     13 ld hl,Habilita_disparo_Amadeus
 435  887F 11 AA 87     	ld de,Temporiza_disparo_Amadeus
 436  8882 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 437  8885
 438  8885 21 AB 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 439  8888 11 AD 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 440  888B CD D5 7F     	call Habilita_disparos
 441  888E
 442  888E              ; COLISIONES.
 443  888E
 444  888E CD 6C 8F     	call Selector_de_impactos
 445  8891
 446  8891              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 447  8891              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 448  8891              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 449  8891
 450  8891 AF           	xor a
 451  8892 32 9A 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 452  8895
 453  8895 CD FB 89     	call Inicia_punteros_de_cajas
 454  8898 CD D8 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 455  889B              ; 														; _ en DRAW.
 456  889B 3A 41 87     	ld a,(Filas)
 457  889E A7           	and a
 458  889F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 459  88A1 CD EA 8A     	call Incrementa_punteros_de_cajas
 460  88A4 18 F2        	jr 12B
 461  88A6
 462  88A6              ; ---------------------------------------------------------------------------------------
 463  88A6
 464  88A6 CD EA 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 465  88A9 21 00 70     	ld hl,Album_de_fotos
 466  88AC 22 91 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 467  88AF              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 468  88AF 3A 86 87     	ld a,(Numero_parcial_de_entidades)
 469  88B2 47               ld b,a
 470  88B3 A7           	and a
 471  88B4 20 16        	jr nz,2F
 472  88B6
 473  88B6 21 7E 87     	ld hl,Ctrl_1
 474  88B9 CB 66        	bit 4,(hl)
 475  88BB C2 34 89     	jp nz,4F
 476  88BE
 477  88BE 21 7E 87     	ld hl,Ctrl_1
 478  88C1 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 479  88C3 3A A6 87     	ld a,(Secundero)
 480  88C6 3C           	inc a
 481  88C7 32 A7 87     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 482  88CA
 483  88CA 18 68        	jr 4F
 484  88CC
 485  88CC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 486  88CC
 487  88CC              ; Código que ejecutamos con cada entidad:
 488  88CC
 489  88CC              ; Impacto ???
 490  88CC
 491  88CC 3A 87 87     2 ld a,(Entidades_en_curso)
 492  88CF A7           	and a
 493  88D0 28 62        	jr z,4F
 494  88D2 47           	ld b,a
 495  88D3
 496  88D3 C5           15 push bc 												; Nº de entidades en curso.
 497  88D4
 498  88D4 3A 5A 87     	ld a,(Impacto)
 499  88D7 A7           	and a
 500  88D8 28 14        	jr z,8F
 501  88DA
 502  88DA              ; Hay Impacto en esta entidad.
 503  88DA
 504  88DA CD B2 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 505  88DD CD 1A 8B     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 506  88E0
 507  88E0              ; -----
 508  88E0
 509  88E0 21 86 87     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 510  88E3 35           	dec (hl)
 511  88E4 21 87 87     	ld hl,Entidades_en_curso
 512  88E7 35           	dec (hl)
 513  88E8 21 85 87     	ld hl,Numero_de_entidades
 514  88EB 35           	dec (hl)
 515  88EC 18 27        	jr 7F
 516  88EE
 517  88EE              ; -----
 518  88EE
 519  88EE              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 520  88EE              ; _con las coordenadas de la entidad almacenada en DRAW.
 521  88EE
 522  88EE 3A 7E 87     8 ld a,(Ctrl_1)
 523  88F1 CB 57        	bit 2,a
 524  88F3 28 20        	jr z,7F
 525  88F5
 526  88F5 2A 9D 87     	ld hl,(Coordenadas_disparo_certero)
 527  88F8 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 528  88F9              ;														; E contiene la coordenada_X del disparo.
 529  88F9 2A 47 87     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 530  88FC              ;														; H Coordenado_y de la entidad.
 531  88FC A7           	and a
 532  88FD ED 52        	sbc hl,de
 533  88FF
 534  88FF CD A3 8F     	call Determina_resultado_comparativa
 535  8902 04           	inc b
 536  8903 05           	dec b
 537  8904
 538  8904              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 539  8904              ;	jr z,$
 540  8904              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 541  8904
 542  8904 28 0F        	jr z,7F
 543  8906
 544  8906              ; ----- ----- -----
 545  8906
 546  8906 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 547  8908 32 5A 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 548  890B 21 7E 87     	ld hl,Ctrl_1
 549  890E CB 96        	res 2,(hl)
 550  8910 21 9D 87     	ld hl,Coordenadas_disparo_certero
 551  8913 36 00        	ld (hl),0
 552  8915
 553  8915
 554  8915 CD 63 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 555  8918
 556  8918 3A 6F 87     	ld a,(Ctrl_0)
 557  891B CB 67        	bit 4,a
 558  891D 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 559  891F
 560  891F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 561  891F              ; [[[
 562  891F CD 73 8B     	call Detecta_disparo_entidad
 563  8922              ; ]]]
 564  8922 CD C2 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 565  8925
 566  8925 21 6F 87     	ld hl,Ctrl_0
 567  8928 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 568  892A AF           	xor a
 569  892B 32 70 87     	ld (Obj_dibujado),a
 570  892E
 571  892E CD 9D 8A     6 call Store_Restore_cajas
 572  8931
 573  8931 C1           	pop bc
 574  8932 10 9F        	djnz 15B
 575  8934
 576  8934              ; Tras la gestión de las entidades, ... AMADEUS.
 577  8934
 578  8934 CD FF 8A     4 call Restore_Amadeus
 579  8937
 580  8937 3A 5A 87     	ld a,(Impacto)
 581  893A A7           	and a
 582  893B 20 FE        	jr nz,$
 583  893D
 584  893D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 585  893D
 586  893D CD 93 89     	call Mov_Amadeus
 587  8940
 588  8940 3A 6F 87     	ld a,(Ctrl_0)
 589  8943 CB 67        	bit 4,a
 590  8945 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 591  8947
 592  8947 CD C2 89     	call Guarda_foto_entidad_a_pintar
 593  894A
 594  894A 21 6F 87     3 ld hl,Ctrl_0
 595  894D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 596  894F AF           	xor a
 597  8950 32 70 87     	ld (Obj_dibujado),a
 598  8953
 599  8953 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 600  8956 CD 11 8B     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 601  8959
 602  8959 CD 08 8E     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 603  895C
 604  895C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 605  895C
 606  895C CD 37 8A     	call Calcula_numero_de_disparotes
 607  895F CD 1F 8A     9 call Calcula_numero_de_malotes
 608  8962
 609  8962              ;	ld a,4
 610  8962              ;	out ($fe),a
 611  8962
 612  8962 C9           	ret
 613  8963
 614  8963              ; --------------------------------------------------------------------------------------------------------------
 615  8963              ;
 616  8963              ;	27/03/23
 617  8963
 618  8963              Mov_obj
 619  8963
 620  8963              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 621  8963
 622  8963 AF           	xor a
 623  8964 32 70 87     	ld (Obj_dibujado),a
 624  8967 32 6F 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 625  896A              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 626  896A              ; 														; _de la entidad.
 627  896A CD CC 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 628  896D              ;														; Obj_dibujado="0".
 629  896D              ; Movemos Entidades malignas.
 630  896D
 631  896D 21 72 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 632  8970 34           	inc (hl)
 633  8971 35           	dec (hl)                                            ; Salimos de la rutina.
 634  8972 C8           	ret z
 635  8973
 636  8973 CD 84 99     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 637  8976
 638  8976 3A 6F 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 639  8979 CB 67        	bit 4,a
 640  897B C8           	ret z
 641  897C
 642  897C              ; Ha habido desplazamiento de la entidad maligna.
 643  897C              ; Ha llegado a zona de AMADEUS ???
 644  897C
 645  897C 3A 48 87     	ld a,(Coordenada_y)
 646  897F FE 14        	cp $14
 647  8981 D4 39 8D     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 648  8984              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 649  8984              ; ---------
 650  8984
 651  8984 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 652  8986 32 70 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 653  8989 CD CC 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 654  898C CD E3 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 655  898F CD B2 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 656  8992 C9           	ret													; _de la misma.
 657  8993
 658  8993              ; --------------------------------------------------------------------------------------------------------------
 659  8993              ;
 660  8993              ;	29/1/23
 661  8993
 662  8993              Mov_Amadeus
 663  8993
 664  8993 AF           	xor a
 665  8994 32 70 87     	ld (Obj_dibujado),a
 666  8997 CD CC 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 667  899A              ;														; Obj_dibujado="0".
 668  899A              ; Movemos Amadeus.
 669  899A
 670  899A CD 3C 8B     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 671  899D 3A 6F 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 672  89A0 CB 67        	bit 4,a
 673  89A2 C8           	ret z
 674  89A3
 675  89A3              ; ---------
 676  89A3
 677  89A3 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 678  89A5 32 70 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 679  89A8 CD CC 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 680  89AB CD E3 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 681  89AE CD B2 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 682  89B1 C9           	ret													; _de la nave.
 683  89B2
 684  89B2              ; --------------------------------------------------------------------------------------------------------------
 685  89B2              ;
 686  89B2              ;	31/01/23
 687  89B2              ;
 688  89B2              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 689  89B2
 690  89B2              Guarda_foto_entidad_a_borrar
 691  89B2
 692  89B2 CD AC 92     	call Prepara_draw
 693  89B5 CD E6 91     	call calcula_CColumnass
 694  89B8 CD 1D 92     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 695  89BB CD 72 92     	call Define_rutina_de_impresion
 696  89BE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 697  89C1 C9           	ret
 698  89C2
 699  89C2              ; --------------------------------------------------------------------------------------------------------------
 700  89C2              ;
 701  89C2              ;	31/01/23
 702  89C2              ;
 703  89C2              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 704  89C2              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 705  89C2
 706  89C2              Guarda_foto_entidad_a_pintar
 707  89C2
 708  89C2 CD EF 89     	call Repone_pintar
 709  89C5 CD D2 8F     	call Draw
 710  89C8 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 711  89CB C9           	ret
 712  89CC
 713  89CC              ; --------------------------------------------------------------------------------------------------------------
 714  89CC              ;
 715  89CC              ;
 716  89CC
 717  89CC 21 41 87     Prepara_var_pintado_borrado	ld hl,Filas
 718  89CF 3A 70 87     	ld a,(Obj_dibujado)
 719  89D2 A7           	and a
 720  89D3 28 05        	jr z,1F
 721  89D5 11 65 87     	ld de,Variables_de_pintado
 722  89D8 18 03        	jr 2F
 723  89DA 11 5B 87     1 ld de,Variables_de_borrado
 724  89DD 01 08 00     2 ld bc,8
 725  89E0 ED B0        	ldir
 726  89E2 C9           	ret
 727  89E3
 728  89E3              ; --------------------------------------------------------------------------------------------------------------
 729  89E3
 730  89E3 21 5B 87     Repone_borrar ld hl,Variables_de_borrado
 731  89E6 11 41 87     	ld de,Filas
 732  89E9 01 08 00     	ld bc,8
 733  89EC ED B0        	ldir
 734  89EE C9           	ret
 735  89EF
 736  89EF 21 65 87     Repone_pintar ld hl,Variables_de_pintado
 737  89F2 11 41 87     	ld de,Filas
 738  89F5 01 08 00     	ld bc,8
 739  89F8 ED B0        	ldir
 740  89FA C9           	ret
 741  89FB
 742  89FB              ; *************************************************************************************************************************************************************
 743  89FB              ;
 744  89FB              ; 8/1/23
 745  89FB              ;
 746  89FB              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 747  89FB              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 748  89FB              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 749  89FB
 750  89FB              ; Destruye HL y DE !!!!!
 751  89FB
 752  89FB              Inicia_punteros_de_cajas
 753  89FB
 754  89FB 21 68 84     	ld hl,Indice_de_cajas
 755  89FE CD 4F 8A         call Extrae_address
 756  8A01 22 7F 87         ld (Puntero_store_caja),hl
 757  8A04 21 6A 84     	ld hl,Indice_de_cajas+2
 758  8A07 22 83 87     	ld (Indice_restore_caja),hl
 759  8A0A CD 4F 8A     	call Extrae_address
 760  8A0D 22 81 87     	ld (Puntero_restore_caja),hl
 761  8A10 C9               ret
 762  8A11
 763  8A11              ; *************************************************************************************************************************************************************
 764  8A11              ;
 765  8A11              ; 8/1/23
 766  8A11              ;
 767  8A11              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 768  8A11
 769  8A11 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 770  8A14 22 96 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 771  8A17 C9           	ret
 772  8A18 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 773  8A1B 22 98 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 774  8A1E C9           	ret
 775  8A1F
 776  8A1F              ; -------------------------------------------------------------------------------------------------------------
 777  8A1F              ;
 778  8A1F              ; 28/2/23
 779  8A1F              ;
 780  8A1F
 781  8A1F              Calcula_numero_de_malotes
 782  8A1F
 783  8A1F 21 00 70     	ld hl,Album_de_fotos
 784  8A22 EB           	ex de,hl
 785  8A23 2A 91 87     	ld hl,(Stack_snapshot)
 786  8A26
 787  8A26 06 00        	ld b,0
 788  8A28 7D           	ld a,l
 789  8A29 93           	sub e
 790  8A2A 28 07        	jr z,1F
 791  8A2C
 792  8A2C              ; Nº de malotes no es "0".
 793  8A2C
 794  8A2C D6 06        2 sub 6
 795  8A2E 04           	inc b
 796  8A2F A7           	and a
 797  8A30 20 FA        	jr nz,2B
 798  8A32 78           	ld a,b
 799  8A33
 800  8A33 32 88 87     1 ld (Numero_de_malotes),a
 801  8A36 C9           	ret
 802  8A37
 803  8A37              ; -------------------------------------------------------------------------------------------------------------
 804  8A37              ;
 805  8A37              ; 28/2/23
 806  8A37              ;
 807  8A37
 808  8A37              Calcula_numero_de_disparotes
 809  8A37
 810  8A37 21 60 70     	ld hl,Album_de_fotos_disparos
 811  8A3A EB           	ex de,hl
 812  8A3B 2A 93 87     	ld hl,(Stack_snapshot_disparos)
 813  8A3E
 814  8A3E 06 00        	ld b,0
 815  8A40 7D           	ld a,l
 816  8A41 93           	sub e
 817  8A42 28 07        	jr z,1F
 818  8A44
 819  8A44              ; Nº de malotes no es "0".
 820  8A44
 821  8A44 D6 06        2 sub 6
 822  8A46 04           	inc b
 823  8A47 A7           	and a
 824  8A48 20 FA        	jr nz,2B
 825  8A4A 78           	ld a,b
 826  8A4B
 827  8A4B 32 95 87     1 ld (Numero_de_disparotes),a
 828  8A4E C9           	ret
 829  8A4F              ; *************************************************************************************************************************************************************
 830  8A4F              ;
 831  8A4F              ; 20/10/22
 832  8A4F              ;
 833  8A4F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 834  8A4F              ;
 835  8A4F              ; Destruye el puntero y DE !!!!!
 836  8A4F
 837  8A4F 5E           Extrae_address ld e,(hl)
 838  8A50 23           	inc hl
 839  8A51 56           	ld d,(hl)
 840  8A52 2B           	dec hl
 841  8A53 EB           	ex de,hl
 842  8A54 C9           	ret
 843  8A55
 844  8A55              ; *************************************************************************************************************************************************************
 845  8A55              ;
 846  8A55              ;	7/2/23
 847  8A55              ;
 848  8A55              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 849  8A55              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 850  8A55              ;
 851  8A55              ;   Destruye HL y BC !!!!!,
 852  8A55              ;
 853  8A55              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 854  8A55              ;					"0" ..... Izquierda.
 855  8A55
 856  8A55              Inicia_Puntero_objeto
 857  8A55
 858  8A55 3A 55 87     	ld a,(Cuad_objeto)
 859  8A58 E6 01        	and 1
 860  8A5A F5           	push af
 861  8A5B CC 79 8A     	call z,Inicia_puntero_objeto_izq
 862  8A5E F1           	pop af
 863  8A5F 28 2B        	jr z,1F
 864  8A61 CD 66 8A     	call Inicia_puntero_objeto_der
 865  8A64 18 26        	jr 1F
 866  8A66
 867  8A66              ; Arrancamos desde la parte izquierda de la pantalla.
 868  8A66              ; Iniciamos (Indice_Sprite_der).
 869  8A66
 870  8A66 2A 4B 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 871  8A69 22 4F 87     	ld (Puntero_DESPLZ_der),hl
 872  8A6C CD 4F 8A     	call Extrae_address
 873  8A6F 22 45 87     	ld (Puntero_objeto),hl
 874  8A72
 875  8A72 2A 4D 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 876  8A75 22 51 87     	ld (Puntero_DESPLZ_izq),hl
 877  8A78 C9           	ret
 878  8A79
 879  8A79              ; Arrancamos desde la parte derecha de la pantalla.
 880  8A79              ; Iniciamos (Indice_Sprite_izq).
 881  8A79
 882  8A79 2A 4D 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 883  8A7C 22 51 87     	ld (Puntero_DESPLZ_izq),hl
 884  8A7F CD 4F 8A     	call Extrae_address
 885  8A82 22 45 87     	ld (Puntero_objeto),hl
 886  8A85
 887  8A85 2A 4B 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 888  8A88 22 4F 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 889  8A8B C9           	ret
 890  8A8C
 891  8A8C              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 892  8A8C
 893  8A8C 21 38 83     1 ld hl,Amadeus
 894  8A8F ED 4B 45 87  	ld bc,(Puntero_objeto)
 895  8A93 B7 ED 42     	sub hl,bc
 896  8A96 C0           	ret nz
 897  8A97 21 6F 87     	ld hl,Ctrl_0
 898  8A9A CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 899  8A9C C9           	ret 												; _de nuestra nave en los extremos.
 900  8A9D
 901  8A9D              ; *************************************************************************************************************************************************************
 902  8A9D              ;
 903  8A9D              ;	14/5/23
 904  8A9D              ;
 905  8A9D              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 906  8A9D              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 907  8A9D
 908  8A9D              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 909  8A9D              ;	_de la 2ª y 3ª entidad respectivamente.
 910  8A9D
 911  8A9D              Store_Restore_cajas
 912  8A9D
 913  8A9D E5           	push hl
 914  8A9E D5           	push de
 915  8A9F C5            	push bc
 916  8AA0
 917  8AA0              ;	STORE !!!!!
 918  8AA0              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 919  8AA0
 920  8AA0 21 41 87     	ld hl,Filas
 921  8AA3 ED 5B 7F 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 922  8AA7 01 3D 00     	ld bc,61
 923  8AAA ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 924  8AAC
 925  8AAC              ; 	Entidad_sospechosa. 20/4/23
 926  8AAC
 927  8AAC 3A 5A 87     	ld a,(Impacto)
 928  8AAF A7           	and a
 929  8AB0 28 0C        	jr z,1F
 930  8AB2
 931  8AB2 2A 7F 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 932  8AB5 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 933  8AB8 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 934  8AB9 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 935  8ABB 22 9B 87     	ld (Entidad_sospechosa_de_colision),hl
 936  8ABE
 937  8ABE              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 938  8ABE
 939  8ABE 2A 81 87     1 ld hl,(Puntero_restore_caja)
 940  8AC1 7E           	ld a,(hl)
 941  8AC2 A7           	and a
 942  8AC3 F5           	push af
 943  8AC4 28 08        	jr z,2F
 944  8AC6
 945  8AC6 11 41 87     	ld de,Filas
 946  8AC9 01 3D 00     	ld bc,61
 947  8ACC ED B0        	ldir
 948  8ACE
 949  8ACE CD EA 8A     2 call Incrementa_punteros_de_cajas
 950  8AD1 F1           	pop af
 951  8AD2 28 EA        	jr z,1B
 952  8AD4
 953  8AD4 C1           	pop bc
 954  8AD5 D1           	pop de
 955  8AD6 E1           	pop hl
 956  8AD7
 957  8AD7 C9           	ret
 958  8AD8
 959  8AD8              ; **************************************************************************************************
 960  8AD8              ;
 961  8AD8              ;	12/05/23
 962  8AD8              ;
 963  8AD8              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 964  8AD8
 965  8AD8 E5           Restore_entidad push hl
 966  8AD9 D5           	push de
 967  8ADA C5            	push bc
 968  8ADB
 969  8ADB 2A 7F 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 970  8ADE 11 41 87     	ld de,Filas
 971  8AE1 01 3D 00     	ld bc,61
 972  8AE4 ED B0        	ldir
 973  8AE6
 974  8AE6 C1           	pop bc
 975  8AE7 D1           	pop de
 976  8AE8 E1           	pop hl
 977  8AE9 C9           	ret
 978  8AEA
 979  8AEA
 980  8AEA              ; **************************************************************************************************
 981  8AEA              ;
 982  8AEA              ;	08/05/23
 983  8AEA              ;
 984  8AEA              ;	Incrementamos los dos punteros de entidades. (+1).
 985  8AEA
 986  8AEA 2A 81 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 987  8AED 22 7F 87     	ld (Puntero_store_caja),hl
 988  8AF0 2A 83 87     	ld hl,(Indice_restore_caja)
 989  8AF3 23           	inc hl
 990  8AF4 23           	inc hl
 991  8AF5 22 83 87     	ld (Indice_restore_caja),hl
 992  8AF8 CD 4F 8A         call Extrae_address
 993  8AFB 22 81 87         ld (Puntero_restore_caja),hl
 994  8AFE C9               ret
 995  8AFF
 996  8AFF              ; **************************************************************************************************
 997  8AFF              ;
 998  8AFF              ;	25/01/23
 999  8AFF              ;
1000  8AFF              ;	Restore_Amadeus
1001  8AFF              ;
1002  8AFF              ;	Cargamos en DRAW los parámetros de Amadeus.
1003  8AFF              ;
1004  8AFF
1005  8AFF E5           Restore_Amadeus	push hl
1006  8B00 D5           	push de
1007  8B01 C5            	push bc
1008  8B02 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1009  8B05 11 41 87     	ld de,Filas
1010  8B08 01 3D 00     	ld bc,61
1011  8B0B ED B0        	ldir
1012  8B0D C1           	pop bc
1013  8B0E D1           	pop de
1014  8B0F E1           	pop hl
1015  8B10 C9           	ret
1016  8B11
1017  8B11              ; *************************************************************************************************************************************************************
1018  8B11              ;
1019  8B11              ;	29/04/23
1020  8B11              ;
1021  8B11              ;	Store_Amadeus
1022  8B11              ;
1023  8B11              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1024  8B11              ;
1025  8B11              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1026  8B11              ;
1027  8B11              ;	DESTRUYE: HL y BC y DE.
1028  8B11
1029  8B11 21 41 87     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1030  8B14 01 3D 00     	ld bc,61
1031  8B17 ED B0        	ldir
1032  8B19 C9           	ret
1033  8B1A
1034  8B1A              ; -----------------------------------------------------------
1035  8B1A              ;
1036  8B1A              ;	27/04/23
1037  8B1A              ;
1038  8B1A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1039  8B1A              ;
1040  8B1A              ;	Destruye: HL,BC,DE,A
1041  8B1A
1042  8B1A 21 41 87     Borra_datos_entidad ld hl,Filas
1043  8B1D 01 3C 00     	ld bc,60
1044  8B20 AF           	xor a
1045  8B21 77           	ld (hl),a
1046  8B22 11 42 87     	ld de,Filas+1
1047  8B25 ED B0        	ldir
1048  8B27 C9           	ret
1049  8B28
1050  8B28              ; -----------------------------------------------------------
1051  8B28
1052  8B28              ; Teclado.
1053  8B28
1054  8B28 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1055  8B2A DB FE        	in a,($fe)
1056  8B2C E6 01        	and $01
1057  8B2E 28 02        	jr z,1f
1058  8B30 18 F6        	jr Pulsa_ENTER
1059  8B32 C9           1 ret
1060  8B33
1061  8B33              ; **************************************************************************************************
1062  8B33              ;
1063  8B33              ; Temporización.
1064  8B33
1065  8B33              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1066  8B33              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1067  8B33              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1068  8B33              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1069  8B33
1070  8B33              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1071  8B33              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1072  8B33              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1073  8B33
1074  8B33              ; A partir de $4f61 no hace falta DELAY.
1075  8B33
1076  8B33              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1077  8B33
1078  8B33 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1079  8B36 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1080  8B37 78           	LD A,B
1081  8B38 A7           	AND A
1082  8B39 20 FB        	JR NZ,wait
1083  8B3B C9           	RET
1084  8B3C
1085  8B3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1086  8B3C              ;
1087  8B3C              ;	5/3/23
1088  8B3C              ;
1089  8B3C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1090  8B3C
1091  8B3C              Movimiento_Amadeus
1092  8B3C
1093  8B3C              ; Disparo.
1094  8B3C
1095  8B3C 3A A8 87     	ld a,(Habilita_disparo_Amadeus)
1096  8B3F A7           	and a
1097  8B40 20 02        	jr nz,1F
1098  8B42 18 15        	jr 2F
1099  8B44
1100  8B44 3E F7        1 ld a,$f7													; "5" para disparar.
1101  8B46 DB FE        	in a,($fe)
1102  8B48 E6 10        	and $10
1103  8B4A
1104  8B4A F5           	push af
1105  8B4B CC B5 8B     	call z,Genera_disparo
1106  8B4E F1           	pop af
1107  8B4F 20 08        	jr nz,2F
1108  8B51
1109  8B51 3A A8 87     	ld a,(Habilita_disparo_Amadeus)
1110  8B54 EE 01        	xor 1
1111  8B56 32 A8 87     	ld (Habilita_disparo_Amadeus),a
1112  8B59
1113  8B59 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1114  8B5B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1115  8B5D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1116  8B5F CC 24 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1117  8B62 3E F7        	ld a,$f7
1118  8B64 DB FE        	in a,($fe)
1119  8B66 E6 01        	and $01
1120  8B68 C8           	ret z
1121  8B69
1122  8B69 3E F7        	ld a,$f7
1123  8B6B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1124  8B6D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1125  8B6F CC 06 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1126  8B72 C9           	ret
1127  8B73
1128  8B73              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1129  8B73              ;
1130  8B73              ;	Rutina provisional para que los malotes cagen balas.
1131  8B73
1132  8B73              Detecta_disparo_entidad
1133  8B73
1134  8B73 3A AB 87     	ld a,(Habilita_disparo_entidad)
1135  8B76 A7           	and a
1136  8B77 C8           	ret z
1137  8B78 3E 7F        	ld a,$7f
1138  8B7A DB FE        	in a,($fe)
1139  8B7C E6 01        	and 1
1140  8B7E C0           	ret nz
1141  8B7F CD B5 8B     	call Genera_disparo
1142  8B82 C9           	ret
1143  8B83
1144  8B83              ; Pinta indicadores de FILAS. ------------------------------------------------------
1145  8B83
1146  8B83 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1147  8B86
1148  8B86              ; ----------
1149  8B86 06 20        	ld b,32
1150  8B88 E5           2 push hl
1151  8B89 C5           	push bc
1152  8B8A              ; ----------
1153  8B8A
1154  8B8A 06 BF        	ld b,$bf
1155  8B8C 36 80        1 ld (hl),%10000000
1156  8B8E CD B8 92     	call NextScan
1157  8B91 10 F9        	djnz 1B
1158  8B93
1159  8B93              ; ----------
1160  8B93 C1           	pop bc
1161  8B94 E1           	pop hl
1162  8B95 2C           	inc l
1163  8B96 10 F0        	djnz 2B
1164  8B98              ; ----------
1165  8B98
1166  8B98 06 03        	ld b,3
1167  8B9A 21 00 47         ld hl,$4700
1168  8B9D CD A3 8B     3 call Bucle_1
1169  8BA0 10 FB            djnz 3B
1170  8BA2 C9               ret
1171  8BA3
1172  8BA3 C5           Bucle_1 push bc
1173  8BA4 E5                   push hl
1174  8BA5 D1                   pop de
1175  8BA6 13                   inc de
1176  8BA7 01 FF 00             ld bc,255
1177  8BAA 36 FF                ld (hl),255
1178  8BAC ED B0                ldir
1179  8BAE 23                   inc hl
1180  8BAF 3E 07                ld a,7
1181  8BB1 84                   add a,h
1182  8BB2 67                   ld h,a
1183  8BB3 C1                   pop bc
1184  8BB4 C9                   ret
1185  8BB5
1186  8BB5              ; ---------------------------------------------------------------
1187  8BB5
1188  8BB5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8BB5              ; ******************************************************************************************************************************************************************************************
   2+ 8BB5              ;
   3+ 8BB5              ;   17/04/23
   4+ 8BB5              ;
   5+ 8BB5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8BB5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8BB5              ;
   8+ 8BB5              ;
   9+ 8BB5              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8BB5              ;
  11+ 8BB5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8BB5              ;               _ hacen las entidades hacia abajo.
  13+ 8BB5              ;
  14+ 8BB5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8BB5              ;
  16+ 8BB5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8BB5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8BB5              ;
  19+ 8BB5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8BB5              ;           _ la bala.
  21+ 8BB5              ;
  22+ 8BB5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8BB5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8BB5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8BB5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8BB5              ;           _ en el momento de generarse la bala)).
  27+ 8BB5
  28+ 8BB5              Genera_disparo
  29+ 8BB5
  30+ 8BB5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8BB5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8BB5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8BB5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8BB5              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8BB5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8BB5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8BB5
  38+ 8BB5              ; Exclusiones:
  39+ 8BB5
  40+ 8BB5 3A 79 87         ld a,(Columnas)
  41+ 8BB8 47               ld b,a
  42+ 8BB9 3A 42 87         ld a,(Columns)
  43+ 8BBC B8               cp b
  44+ 8BBD C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8BBE
  46+ 8BBE              ; ----- ----- -----
  47+ 8BBE
  48+ 8BBE 3A 6F 87         ld a,(Ctrl_0)
  49+ 8BC1 CB 77            bit 6,a
  50+ 8BC3 20 06            jr nz,14F
  51+ 8BC5
  52+ 8BC5 3A 48 87         ld a,(Coordenada_y)
  53+ 8BC8 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8BCA D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8BCB
  56+ 8BCB 21 00 80     14 ld hl,Indice_disparo
  57+ 8BCE 3A 49 87         ld a,(CTRL_DESPLZ)
  58+ 8BD1 4F               ld c,a
  59+ 8BD2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8BD4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8BD4              ;                                            ""        ""       "f9", B="1"
  62+ 8BD4              ;                                            ""        ""       "fb", B="2"
  63+ 8BD4              ;                                            ""        ""       "fb", B="3"
  64+ 8BD4 A7               and a
  65+ 8BD5 28 10            jr z,1F
  66+ 8BD7 E6 01            and 1
  67+ 8BD9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8BDA
  69+ 8BDA 79               ld a,c
  70+ 8BDB 16 F9            ld d,$f9
  71+ 8BDD 23           2 inc hl
  72+ 8BDE 23               inc hl
  73+ 8BDF 04               inc b
  74+ 8BE0 BA               cp d
  75+ 8BE1 28 04            jr z,1F
  76+ 8BE3 14               inc d
  77+ 8BE4 14               inc d
  78+ 8BE5 18 F6            jr 2B
  79+ 8BE7
  80+ 8BE7 CD 4F 8A     1 call Extrae_address
  81+ 8BEA E5               push hl
  82+ 8BEB FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8BED DD 21 4B 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8BF1
  85+ 8BF1              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8BF1              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8BF1
  88+ 8BF1 3A 6F 87         ld a,(Ctrl_0)
  89+ 8BF4 CB 77            bit 6,a
  90+ 8BF6 20 04            jr nz,19F
  91+ 8BF8
  92+ 8BF8 AF               xor a
  93+ 8BF9 32 AB 87         ld (Habilita_disparo_entidad),a
  94+ 8BFC
  95+ 8BFC 3A 55 87     19 ld a,(Cuad_objeto)
  96+ 8BFF FE 02            cp 2
  97+ 8C01 38 66            jr c,3F
  98+ 8C03 28 64            jr z,3F
  99+ 8C05
 100+ 8C05              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8C05
 102+ 8C05 E6 01            and 1
 103+ 8C07 28 30            jr z,4F
 104+ 8C09
 105+ 8C09              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8C09              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8C09              ;
 108+ 8C09              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8C09              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8C09              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8C09
 112+ 8C09 2A 43 87     	ld hl,(Posicion_actual)
 113+ 8C0C
 114+ 8C0C              ;   Amadeus o entidad ???.
 115+ 8C0C
 116+ 8C0C 3A 6F 87         ld a,(Ctrl_0)
 117+ 8C0F CB 77            bit 6,a
 118+ 8C11 28 0A            jr z,8F
 119+ 8C13
 120+ 8C13              ; 	Dispara Amadeus.
 121+ 8C13
 122+ 8C13 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8C15 CD C7 92         call PreviousScan
 124+ 8C18 CD C7 92         call PreviousScan
 125+ 8C1B
 126+ 8C1B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8C1B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8C1B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8C1B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8C1B
 131+ 8C1B 18 11            jr 10F
 132+ 8C1D
 133+ 8C1D              ; 	Dispara Entidad.
 134+ 8C1D
 135+ 8C1D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8C20              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8C20
 138+ 8C20              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8C20              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8C20
 141+ 8C20 C5               push bc
 142+ 8C21 06 10            ld b,16
 143+ 8C23 CD B8 92     9 call NextScan
 144+ 8C26 10 FB            djnz 9B
 145+ 8C28 C1               pop bc
 146+ 8C29 CD 93 8C         call Ajusta_disparo_parte_izquierda
 147+ 8C2C 18 06            jr 17F
 148+ 8C2E
 149+ 8C2E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8C2E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8C2E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8C2E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8C2E
 154+ 8C2E CD 93 8C     10 call Ajusta_disparo_parte_izquierda
 155+ 8C31 CD 08 8D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8C34              ;                                                      ; _al generar el disparo.
 157+ 8C34
 158+ 8C34              ; 	LLegados a este punto tendremos:
 159+ 8C34              ;
 160+ 8C34              ;       Puntero_objeto_disparo en IY.
 161+ 8C34              ;       Rutinas_de_impresion en IX.
 162+ 8C34              ;       Puntero_de_impresion en HL.
 163+ 8C34              ;       Impacto/Dirección en BC.
 164+ 8C34
 165+ 8C34 CD 9B 8C     17 call Almacena_disparo
 166+ 8C37 18 52            jr 6F                                             ; RET.
 167+ 8C39
 168+ 8C39              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8C39              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8C39              ;
 171+ 8C39              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8C39              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8C39              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8C39
 175+ 8C39 2A 43 87     4 ld hl,(Posicion_actual)
 176+ 8C3C
 177+ 8C3C              ;   Amadeus o entidad ???.
 178+ 8C3C
 179+ 8C3C 3A 6F 87         ld a,(Ctrl_0)
 180+ 8C3F CB 77            bit 6,a
 181+ 8C41 28 0A            jr z,11F
 182+ 8C43
 183+ 8C43              ; 	Dispara Amadeus.
 184+ 8C43
 185+ 8C43 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8C45 CD C7 92         call PreviousScan
 187+ 8C48 CD C7 92         call PreviousScan
 188+ 8C4B
 189+ 8C4B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8C4B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8C4B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8C4B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8C4B
 194+ 8C4B 18 11            jr 13F
 195+ 8C4D
 196+ 8C4D              ; 	Dispara Entidad.
 197+ 8C4D
 198+ 8C4D 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8C50              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8C50
 201+ 8C50              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8C50              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8C50
 204+ 8C50 C5               push bc
 205+ 8C51 06 10            ld b,16
 206+ 8C53 CD B8 92     12 call NextScan
 207+ 8C56 10 FB            djnz 12B
 208+ 8C58 C1               pop bc
 209+ 8C59
 210+ 8C59 CD 8C 8C         call Ajusta_disparo_parte_derecha
 211+ 8C5C 18 06            jr 18F
 212+ 8C5E
 213+ 8C5E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8C5E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8C5E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8C5E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8C5E
 218+ 8C5E CD 8C 8C     13 call Ajusta_disparo_parte_derecha
 219+ 8C61 CD 08 8D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8C64              ;                                                       ; _al generar el disparo.
 221+ 8C64
 222+ 8C64              ; LLegados a este punto tendremos:
 223+ 8C64              ;
 224+ 8C64              ;       Puntero_objeto_disparo en IY.
 225+ 8C64              ;       Rutinas_de_impresion en IX.
 226+ 8C64              ;       Puntero_de_impresion en HL.
 227+ 8C64              ;       Impacto/Dirección en BC.
 228+ 8C64
 229+ 8C64 CD 9B 8C     18 call Almacena_disparo
 230+ 8C67 18 22            jr 6F                                               ; RET.
 231+ 8C69
 232+ 8C69              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8C69
 234+ 8C69 28 11        3 jr z,5F
 235+ 8C6B
 236+ 8C6B              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8C6B              ;
 238+ 8C6B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8C6B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8C6B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8C6B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8C6B
 243+ 8C6B              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8C6B              ;	   ""        ""       "f9", B="1"
 245+ 8C6B              ;	   ""        ""       "fb", B="2"
 246+ 8C6B              ; 	   ""        ""       "fb", B="3"
 247+ 8C6B
 248+ 8C6B 2A 43 87     	ld hl,(Posicion_actual)
 249+ 8C6E CD B8 92     	call NextScan
 250+ 8C71
 251+ 8C71              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8C71              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8C71              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8C71              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8C71
 256+ 8C71 CD 93 8C         call Ajusta_disparo_parte_izquierda
 257+ 8C74
 258+ 8C74              ; 	No se produce impacto. B="$80"
 259+ 8C74              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8C74
 261+ 8C74 01 80 80         ld bc,$8080
 262+ 8C77
 263+ 8C77              ; 	LLegados a este punto tendremos:
 264+ 8C77              ;
 265+ 8C77              ;       Puntero_objeto_disparo en IY.
 266+ 8C77              ;       Rutinas_de_impresion en IX.
 267+ 8C77              ;       Puntero_de_impresion en HL.
 268+ 8C77              ;       Impacto/Dirección en BC.
 269+ 8C77
 270+ 8C77 CD 9B 8C         call Almacena_disparo
 271+ 8C7A 18 0F            jr 6F                                           ; RET.
 272+ 8C7C
 273+ 8C7C              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8C7C              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8C7C              ;
 276+ 8C7C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8C7C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8C7C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8C7C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8C7C
 281+ 8C7C 2A 43 87     5 ld hl,(Posicion_actual)
 282+ 8C7F CD B8 92     	call NextScan
 283+ 8C82
 284+ 8C82              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8C82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8C82              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8C82              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8C82
 289+ 8C82 CD 8C 8C         call Ajusta_disparo_parte_derecha
 290+ 8C85
 291+ 8C85              ; 	No se produce impacto. B="$80"
 292+ 8C85              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8C85
 294+ 8C85 01 80 80     15 ld bc,$8080
 295+ 8C88
 296+ 8C88              ; 	LLegados a este punto tendremos:
 297+ 8C88              ;
 298+ 8C88              ;       Puntero_objeto_disparo en IY.
 299+ 8C88              ;       Rutinas_de_impresion en IX.
 300+ 8C88              ;       Puntero_de_impresion en HL.
 301+ 8C88              ;       Impacto/Dirección en BC.
 302+ 8C88
 303+ 8C88 CD 9B 8C         call Almacena_disparo
 304+ 8C8B
 305+ 8C8B C9           6 ret
 306+ 8C8C
 307+ 8C8C              ; ----------------------------------------------------------------
 308+ 8C8C              ;
 309+ 8C8C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8C8C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8C8C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8C8C
 313+ 8C8C 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8C8D FE 02            cp 2
 315+ 8C8F 38 01            jr c,1F
 316+ 8C91 23               inc hl
 317+ 8C92 C9           1 ret
 318+ 8C93
 319+ 8C93 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8C94 FE 01        	cp 1
 321+ 8C96 20 01        	jr nz,1F
 322+ 8C98 2B           	dec hl
 323+ 8C99 2B           1 dec hl
 324+ 8C9A C9               ret
 325+ 8C9B
 326+ 8C9B              ; ----------------------------------------------------------------
 327+ 8C9B              ;
 328+ 8C9B              ;   25/02/23
 329+ 8C9B              ;
 330+ 8C9B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8C9B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8C9B              ;
 333+ 8C9B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8C9B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8C9B
 336+ 8C9B              Almacena_disparo
 337+ 8C9B
 338+ 8C9B E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8C9C F1               pop af
 340+ 8C9D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8C9E
 342+ 8C9E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8C9F E6 01            and 1
 344+ 8CA1 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8CA3              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8CA3              ; 	Dispara AMADEUS.
 347+ 8CA3
 348+ 8CA3              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8CA3              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8CA3              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8CA3              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8CA3
 353+ 8CA3 C5               push bc
 354+ 8CA4 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8CA7 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8CAA A7               and a
 357+ 8CAB ED 42            sbc hl,bc
 358+ 8CAD CC 18 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8CB0 C1               pop bc
 360+ 8CB1 28 54            jr z,4F
 361+ 8CB3
 362+ 8CB3 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8CB6 23               inc hl
 364+ 8CB7 23               inc hl
 365+ 8CB8 22 98 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8CBB              ;                                                   ; _ Disparo_(+1).
 367+ 8CBB 18 18            jr 2F
 368+ 8CBD
 369+ 8CBD              ; Dispara una entidad.
 370+ 8CBD
 371+ 8CBD C5           1 push bc
 372+ 8CBE 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8CC1 2A 96 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8CC4 A7               and a
 375+ 8CC5 ED 42            sbc hl,bc
 376+ 8CC7 CC 11 8A         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8CCA C1               pop bc
 378+ 8CCB 28 3A            jr z,4F
 379+ 8CCD
 380+ 8CCD 2A 96 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8CD0 23               inc hl
 382+ 8CD1 23               inc hl
 383+ 8CD2 22 96 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8CD5              ;                                                   ; _ Disparo_(+1).
 385+ 8CD5 CD 4F 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8CD8              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8CD8              ;
 388+ 8CD8              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8CD8              ;                                                     Rutinas_de_impresion en IX.
 390+ 8CD8              ;                                                     Puntero_de_impresion en HL.
 391+ 8CD8              ;                                                     Impacto/Dirección en BC.
 392+ 8CD8
 393+ 8CD8 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8CD9 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8CDA 23               inc hl                                          ; _ al siguiente.
 396+ 8CDB A7               and a
 397+ 8CDC 20 C0            jr nz,3B
 398+ 8CDE
 399+ 8CDE 08               ex af,af
 400+ 8CDF ED 73 8D 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8CE3 F9               ld sp,hl
 402+ 8CE4
 403+ 8CE4 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8CE6 F5               push af                                         ; Puntero de impresión.
 405+ 8CE7 FD E5            push iy                                         ; Puntero objeto.
 406+ 8CE9 C5               push bc                                         ; Control.
 407+ 8CEA
 408+ 8CEA ED 7B 8D 87      ld sp,(Stack)
 409+ 8CEE
 410+ 8CEE              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8CEE
 412+ 8CEE 21 7E 87     	ld hl,Ctrl_1
 413+ 8CF1 CB C6        	set 0,(hl)
 414+ 8CF3
 415+ 8CF3 DD E5        	push ix
 416+ 8CF5 E1               pop hl
 417+ 8CF6 F5               push af
 418+ 8CF7 DD E1            pop ix
 419+ 8CF9
 420+ 8CF9 CD A0 7F     	call Guarda_foto_registros
 421+ 8CFC
 422+ 8CFC 21 7E 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8CFF CB 86        	res 0,(hl)
 424+ 8D01
 425+ 8D01              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8D01              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8D01
 428+ 8D01 CD 18 8A         call Inicia_Puntero_Disparo_Amadeus
 429+ 8D04 CD 11 8A         call Inicia_Puntero_Disparo_Entidades
 430+ 8D07
 431+ 8D07 C9           4 ret
 432+ 8D08
 433+ 8D08              ; ----------------------------------------------------------------
 434+ 8D08              ;
 435+ 8D08              ;   4/3/23
 436+ 8D08              ;
 437+ 8D08              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8D08              ;   _ al generarse el disparo.
 439+ 8D08              ;
 440+ 8D08              ;       "$80" ..... No se produce colisión.
 441+ 8D08              ;       "$81" ..... Se produce colisión.
 442+ 8D08
 443+ 8D08              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8D08              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8D08
 446+ 8D08
 447+ 8D08 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8D0A E5               push hl                                        ; Puntero de impresión.
 449+ 8D0B
 450+ 8D0B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8D0D CD 29 8D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8D10
 453+ 8D10 7B               ld a,e
 454+ 8D11 E6 01            and 1
 455+ 8D13 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8D15
 457+ 8D15 E1               pop hl
 458+ 8D16 E5               push hl
 459+ 8D17 CD B8 92         call NextScan
 460+ 8D1A
 461+ 8D1A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8D1B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8D1D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8D1F              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8D1F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8D21 CD 29 8D         call Bucle_2
 467+ 8D24
 468+ 8D24 43           2 ld b,e
 469+ 8D25 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8D26 FD E1            pop iy
 471+ 8D28 C9               ret
 472+ 8D29
 473+ 8D29               ; ---------- ----------
 474+ 8D29
 475+ 8D29 06 02        Bucle_2 ld b,2
 476+ 8D2B FD 7E 00     2 ld a,(iy)
 477+ 8D2E A6               and (hl)
 478+ 8D2F 28 02            jr z,1F
 479+ 8D31 1E 81            ld e,$81
 480+ 8D33 23           1 inc hl
 481+ 8D34 FD 23            inc iy
 482+ 8D36 10 F3            djnz 2B
 483+ 8D38 C9               ret
 484+ 8D39
 485+ 8D39              ; -------------------------------------------------------------------------------------------------------------
 486+ 8D39              ;
 487+ 8D39              ;   11/04/23
 488+ 8D39              ;
 489+ 8D39              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8D39              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8D39              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8D39              ;
 493+ 8D39              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8D39
 495+ 8D39              Compara_coordenadas_X
 496+ 8D39
 497+ 8D39              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8D39              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8D39
 500+ 8D39              ; Preparamos registros:
 501+ 8D39
 502+ 8D39 21 47 87         ld hl,Filas+6
 503+ 8D3C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8D3D 23               inc hl
 505+ 8D3E 23               inc hl
 506+ 8D3F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8D40 43               ld b,e
 508+ 8D41 21 55 87         ld hl,Filas+20
 509+ 8D44 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8D45 21 A2 87         ld hl,Coordenadas_X_Entidad
 511+ 8D48 CD 59 8F         call Guarda_coordenadas_X
 512+ 8D4B
 513+ 8D4B              ; Preparamos registros:
 514+ 8D4B
 515+ 8D4B 21 7C 84         ld hl,Amadeus_db+6
 516+ 8D4E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8D4F 23               inc hl
 518+ 8D50 23               inc hl
 519+ 8D51 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8D52 7B               ld a,e
 521+ 8D53 08               ex af,af'
 522+ 8D54 21 8A 84         ld hl,Amadeus_db+20
 523+ 8D57 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8D58 21 9F 87         ld hl,Coordenadas_X_Amadeus
 525+ 8D5B CD 59 8F         call Guarda_coordenadas_X
 526+ 8D5E
 527+ 8D5E              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8D5E              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8D5E
 530+ 8D5E 04               inc b
 531+ 8D5F 05               dec b
 532+ 8D60 28 04            jr z,1F
 533+ 8D62 06 03            ld b,3
 534+ 8D64 18 02            jr 2F
 535+ 8D66 06 02        1 ld b,2
 536+ 8D68 08           2 ex af,af'
 537+ 8D69 3C               inc a
 538+ 8D6A 3D               dec a
 539+ 8D6B 28 04            jr z,5F
 540+ 8D6D 0E 03            ld c,3
 541+ 8D6F 18 02            jr 6F
 542+ 8D71 0E 02        5 ld c,2
 543+ 8D73 79           6 ld a,c
 544+ 8D74 08               ex af,af'
 545+ 8D75 11 A2 87         ld de,Coordenadas_X_Entidad
 546+ 8D78 1A           4 ld a,(de)
 547+ 8D79 21 9F 87         ld hl,Coordenadas_X_Amadeus
 548+ 8D7C BE           3 cp (hl)
 549+ 8D7D 28 0E            jr z,7F
 550+ 8D7F 23               inc hl
 551+ 8D80 0D               dec c
 552+ 8D81 20 F9            jr nz,3B
 553+ 8D83 13               inc de
 554+ 8D84 08               ex af,af'
 555+ 8D85 4F               ld c,a
 556+ 8D86 08               ex af,af'
 557+ 8D87 10 EF            djnz 4B
 558+ 8D89
 559+ 8D89              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8D89
 561+ 8D89 CD 98 8F     8 call Limpia_Coordenadas_X
 562+ 8D8C C9               ret
 563+ 8D8D
 564+ 8D8D              7
 565+ 8D8D 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8D8F 32 5A 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8D92 21 9A 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8D95 CB D6            set 2,(hl)
 569+ 8D97 18 F0            jr 8B
 570+ 8D99
 571+ 8D99              ; -----------------------------------------------------------------------
 572+ 8D99              ;
 573+ 8D99              ;   17/04/23
 574+ 8D99              ;
 575+ 8D99
 576+ 8D99              Detecta_colision_nave_entidad
 577+ 8D99
 578+ 8D99              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8D99
 580+ 8D99 2A 43 87         ld hl,(Posicion_actual)
 581+ 8D9C CD 1D 92         call Calcula_puntero_de_impresion
 582+ 8D9F
 583+ 8D9F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8D9F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8D9F
 586+ 8D9F DD E5            push ix
 587+ 8DA1 E1               pop hl
 588+ 8DA2 E5               push hl
 589+ 8DA3
 590+ 8DA3              ; ----- ----- -----
 591+ 8DA3 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8DA5 06 0A            ld b,10
 593+ 8DA7 CD D7 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8DAA 7B               ld a,e
 595+ 8DAB FE 05            cp 5
 596+ 8DAD 38 0E            jr c,3F
 597+ 8DAF
 598+ 8DAF              ; LLegados a este punto:
 599+ 8DAF              ;
 600+ 8DAF              ;   HAY COLISIÓN !!!!!.
 601+ 8DAF              ;
 602+ 8DAF              ;   .db (Impacto) de Amadeus a "1".
 603+ 8DAF              ;   SET el bit3 de (Impacto2).
 604+ 8DAF              ;
 605+ 8DAF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8DAF
 607+ 8DAF 21 8F 84         ld hl,Amadeus_db+25
 608+ 8DB2 36 01            ld (hl),1
 609+ 8DB4 21 9A 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8DB7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8DB9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8DBB 18 18            jr 1F
 613+ 8DBD
 614+ 8DBD              ; -----
 615+ 8DBD
 616+ 8DBD E1           3 pop hl
 617+ 8DBE CD B8 92         call NextScan
 618+ 8DC1 E5               push hl
 619+ 8DC2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8DC3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8DC5 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8DC7 30 0C            jr nc,1F
 623+ 8DC9              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8DC9 10 DC            djnz 2B
 625+ 8DCB
 626+ 8DCB              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8DCB
 628+ 8DCB              ; LLegados a este punto:
 629+ 8DCB              ;
 630+ 8DCB              ;   NO HAY COLISIÓN !!!!!.
 631+ 8DCB              ;
 632+ 8DCB              ;   .db (Impacto) de Amadeus a "0".
 633+ 8DCB              ;   RES el bit2 de (Impacto2).
 634+ 8DCB              ;
 635+ 8DCB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8DCB              ;   Lo colocamos a "0".
 637+ 8DCB
 638+ 8DCB 21 9A 87         ld hl,Impacto2
 639+ 8DCE CB 96            res 2,(hl)
 640+ 8DD0 2A 9B 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8DD3 36 00            ld (hl),0
 642+ 8DD5
 643+ 8DD5 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8DD6 C9               ret
 645+ 8DD7
 646+ 8DD7               ; ---------- ----------
 647+ 8DD7
 648+ 8DD7 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8DD8 3A 42 87         ld a,(Columns)
 650+ 8DDB 47               ld b,a
 651+ 8DDC FD 7E 00     2 ld a,(iy)
 652+ 8DDF BE               cp (hl)
 653+ 8DE0 28 01            jr z,1F
 654+ 8DE2
 655+ 8DE2 1C               inc e
 656+ 8DE3
 657+ 8DE3 23           1 inc hl
 658+ 8DE4 FD 23            inc iy
 659+ 8DE6 10 F4            djnz 2B
 660+ 8DE8 C1               pop bc
 661+ 8DE9 C9               ret
 662+ 8DEA
 663+ 8DEA              ; -------------------------------------------------------------------------------------------------------------
 664+ 8DEA              ;
 665+ 8DEA              ;   13/03/23
 666+ 8DEA              ;
 667+ 8DEA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8DEA              ;
 669+ 8DEA              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8DEA
 671+ 8DEA 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8DED 7E               ld a,(hl)
 673+ 8DEE A7               and a
 674+ 8DEF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8DF0
 676+ 8DF0 44               ld b,h
 677+ 8DF1 4D               ld c,l
 678+ 8DF2 2A 93 87         ld hl,(Stack_snapshot_disparos)
 679+ 8DF5 E5               push hl
 680+ 8DF6 A7               and a
 681+ 8DF7 ED 42            sbc hl,bc
 682+ 8DF9 E5               push hl
 683+ 8DFA C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8DFB
 685+ 8DFB E1               pop hl
 686+ 8DFC 54               ld d,h
 687+ 8DFD 5D               ld e,l
 688+ 8DFE 1B               dec de
 689+ 8DFF ED B8            lddr                                                ; Limpiamos.
 690+ 8E01
 691+ 8E01 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8E04 22 93 87         ld (Stack_snapshot_disparos),hl
 693+ 8E07
 694+ 8E07 C9               ret
 695+ 8E08
 696+ 8E08              ; -------------------------------------------------------------------------------------------------------------
 697+ 8E08              ;
 698+ 8E08              ;   28/03/23
 699+ 8E08              ;
 700+ 8E08
 701+ 8E08 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8E0B 2A 98 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8E0E
 704+ 8E0E CD 4F 8A     2 call Extrae_address
 705+ 8E11 7E               ld a,(hl)
 706+ 8E12 A7               and a
 707+ 8E13 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8E15
 709+ 8E15              ; ----- ----- ----- ----- ----- -----
 710+ 8E15
 711+ 8E15 C5               push bc
 712+ 8E16 CD D2 8E         call foto_disparo_a_borrar
 713+ 8E19
 714+ 8E19              ; Existe colisión con este disparo???
 715+ 8E19
 716+ 8E19 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8E1A 7E               ld a,(hl)
 718+ 8E1B 2B               dec hl
 719+ 8E1C E6 01            and 1
 720+ 8E1E 28 1D            jr z,9F
 721+ 8E20
 722+ 8E20              ;   En este punto:
 723+ 8E20              ;
 724+ 8E20              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8E20              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8E20              ;   _con la entidad).
 727+ 8E20              ;
 728+ 8E20              ;   Disparo_2A defw 0                                ; Control.
 729+ 8E20              ;    defw 0                                          ; Puntero objeto.
 730+ 8E20              ;    defw 0                                          ; Puntero de impresión.
 731+ 8E20              ;    defw 0                                          ; Rutina de impresión.
 732+ 8E20
 733+ 8E20 E5               push hl
 734+ 8E21
 735+ 8E21 06 04            ld b,4
 736+ 8E23 23           19 inc hl
 737+ 8E24 10 FD            djnz 19B
 738+ 8E26
 739+ 8E26 CD 4F 8A         call Extrae_address
 740+ 8E29 CD E3 98         call Genera_coordenadas_disparo
 741+ 8E2C
 742+ 8E2C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8E2C
 744+ 8E2C 21 9D 87         ld hl,Coordenadas_disparo_certero
 745+ 8E2F 72               ld (hl),d
 746+ 8E30 23               inc hl
 747+ 8E31 73               ld (hl),e
 748+ 8E32
 749+ 8E32              ; Elimino el disparo de la base de datos.
 750+ 8E32
 751+ 8E32 E1               pop hl
 752+ 8E33 CD 4E 8F         call Elimina_disparo_de_base_de_datos
 753+ 8E36 21 9A 87         ld hl,Impacto2
 754+ 8E39 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8E3B
 756+ 8E3B 18 06            jr 11F
 757+ 8E3D
 758+ 8E3D CD FB 8E     9 call Mueve_disparo
 759+ 8E40 CD D2 8E         call foto_disparo_a_borrar
 760+ 8E43
 761+ 8E43 C1           11 pop bc
 762+ 8E44 18 04            jr 7F
 763+ 8E46
 764+ 8E46              ; ----- ----- ----- ----- ----- -----
 765+ 8E46
 766+ 8E46 ED 42        1 sbc hl,bc
 767+ 8E48 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8E4A 2A 98 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8E4D 23               inc hl
 770+ 8E4E 23               inc hl
 771+ 8E4F 22 98 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8E52 18 BA            jr 2B
 773+ 8E54 CD 18 8A     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8E57
 775+ 8E57 01 66 84         ld bc,Disparo_11
 776+ 8E5A 2A 96 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8E5D
 778+ 8E5D CD 4F 8A     5 call Extrae_address
 779+ 8E60 7E               ld a,(hl)
 780+ 8E61 A7               and a
 781+ 8E62 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8E64
 783+ 8E64              ; ----- ----- ----- ----- ----- -----
 784+ 8E64
 785+ 8E64 C5               push bc
 786+ 8E65 CD D2 8E         call foto_disparo_a_borrar
 787+ 8E68
 788+ 8E68              ; Existe colisión con este disparo???
 789+ 8E68
 790+ 8E68 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8E69 7E               ld a,(hl)
 792+ 8E6A 2B               dec hl
 793+ 8E6B E6 01            and 1
 794+ 8E6D 28 48            jr z,10F
 795+ 8E6F
 796+ 8E6F              ; La colisión se produce con Amadeus???
 797+ 8E6F              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8E6F
 799+ 8E6F E5               push hl
 800+ 8E70
 801+ 8E70 06 04            ld b,4
 802+ 8E72 23           16 inc hl
 803+ 8E73 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8E75 CD 4F 8A         call Extrae_address
 805+ 8E78 CD E3 98         call Genera_coordenadas_disparo
 806+ 8E7B
 807+ 8E7B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8E7C FE 16            cp $16
 809+ 8E7E 38 22            jr c,15F
 810+ 8E80
 811+ 8E80              ; (Colisiones en filas 16 y 17).
 812+ 8E80
 813+ 8E80 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8E81
 815+ 8E81              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8E81
 817+ 8E81 21 7C 84         ld hl,Amadeus_db+6
 818+ 8E84 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8E85 23               inc hl
 820+ 8E86 23               inc hl
 821+ 8E87 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8E88 21 8A 84         ld hl,Amadeus_db+20
 823+ 8E8B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8E8C 21 9F 87         ld hl,Coordenadas_X_Amadeus
 825+ 8E8F CD 59 8F         call Guarda_coordenadas_X
 826+ 8E92
 827+ 8E92 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8E93
 829+ 8E93              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8E93
 831+ 8E93 06 03            ld b,3
 832+ 8E95 21 9F 87         ld hl,Coordenadas_X_Amadeus
 833+ 8E98 7E           18 ld a,(hl)
 834+ 8E99 BA               cp d
 835+ 8E9A 20 03            jr nz,17F
 836+ 8E9C
 837+ 8E9C              ; Colisión Amadeus !!!!!!!!!!
 838+ 8E9C
 839+ 8E9C E1               pop hl
 840+ 8E9D 18 09            jr 14F
 841+ 8E9F
 842+ 8E9F 23           17 inc hl
 843+ 8EA0 10 F6            djnz 18B
 844+ 8EA2
 845+ 8EA2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8EA2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8EA2
 848+ 8EA2 E1           15 pop hl
 849+ 8EA3 23               inc hl
 850+ 8EA4 35               dec (hl)
 851+ 8EA5 2B               dec hl
 852+ 8EA6 18 0F            jr 10F
 853+ 8EA8
 854+ 8EA8              ; -----------------------debug
 855+ 8EA8
 856+ 8EA8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8EA8              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8EA8
 859+ 8EA8 E5           14 push hl
 860+ 8EA9 CD 4E 8F         call Elimina_disparo_de_base_de_datos
 861+ 8EAC 21 9A 87         ld hl,Impacto2
 862+ 8EAF CB CE            set 1,(hl)
 863+ 8EB1 CD 98 8F         call Limpia_Coordenadas_X
 864+ 8EB4
 865+ 8EB4 E1               pop hl
 866+ 8EB5 18 06            jr 12F
 867+ 8EB7
 868+ 8EB7 CD FB 8E     10 call Mueve_disparo
 869+ 8EBA CD D2 8E         call foto_disparo_a_borrar
 870+ 8EBD C1           12 pop bc
 871+ 8EBE
 872+ 8EBE 18 04            jr 8F
 873+ 8EC0
 874+ 8EC0              ; ----- ----- ----- ----- ----- -----
 875+ 8EC0
 876+ 8EC0 ED 42        4 sbc hl,bc
 877+ 8EC2 28 0A            jr z,6F
 878+ 8EC4
 879+ 8EC4 2A 96 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8EC7 23               inc hl
 881+ 8EC8 23               inc hl
 882+ 8EC9 22 96 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8ECC 18 8F            jr 5B
 884+ 8ECE
 885+ 8ECE CD 11 8A     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8ED1 C9               ret
 887+ 8ED2
 888+ 8ED2              ; ------------------------------------------------------------------
 889+ 8ED2
 890+ 8ED2              foto_disparo_a_borrar
 891+ 8ED2
 892+ 8ED2 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8ED3 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8ED4 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8ED5
 896+ 8ED5 E5               push hl
 897+ 8ED6 23               inc hl
 898+ 8ED7 23               inc hl
 899+ 8ED8 ED 73 8D 87      ld (Stack),sp
 900+ 8EDC F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8EDD FD E1            pop iy
 902+ 8EDF DD E1            pop ix
 903+ 8EE1 E1               pop hl
 904+ 8EE2 ED 7B 8D 87      ld sp,(Stack)
 905+ 8EE6 3A 7E 87         ld a,(Ctrl_1)
 906+ 8EE9 CB C7            set 0,a
 907+ 8EEB 32 7E 87         ld (Ctrl_1),a
 908+ 8EEE CD A0 7F         call Guarda_foto_registros
 909+ 8EF1 3A 7E 87         ld a,(Ctrl_1)
 910+ 8EF4 CB 87            res 0,a
 911+ 8EF6 32 7E 87         ld (Ctrl_1),a
 912+ 8EF9 E1               pop hl
 913+ 8EFA C9               ret
 914+ 8EFB
 915+ 8EFB E5           Mueve_disparo push hl
 916+ 8EFC 7E               ld a,(hl)
 917+ 8EFD 06 04            ld b,4
 918+ 8EFF 23           1 inc hl
 919+ 8F00 10 FD            djnz 1B
 920+ 8F02
 921+ 8F02              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8F02
 923+ 8F02 CD 4F 8A         call Extrae_address
 924+ 8F05
 925+ 8F05 E6 01            and 1
 926+ 8F07 28 2B            jr z,2F
 927+ 8F09
 928+ 8F09              ; Disparo hacia arriba, (Amadeus).
 929+ 8F09
 930+ 8F09              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8F09              ; _ de la dificultad.
 932+ 8F09
 933+ 8F09 CD C7 92         call PreviousScan
 934+ 8F0C CD C7 92         call PreviousScan
 935+ 8F0F CD C7 92         call PreviousScan
 936+ 8F12
 937+ 8F12              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8F12
 939+ 8F12 7C               ld a,h
 940+ 8F13 FE 40            cp $40
 941+ 8F15 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8F17
 943+ 8F17              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8F17
 945+ 8F17 EB               ex de,hl
 946+ 8F18 06 04            ld b,4
 947+ 8F1A 2B           6 dec hl
 948+ 8F1B 10 FD            djnz 6B
 949+ 8F1D
 950+ 8F1D CD 4E 8F         call Elimina_disparo_de_base_de_datos
 951+ 8F20 E1               pop hl
 952+ 8F21 18 10            jr 7F
 953+ 8F23
 954+ 8F23              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8F23
 956+ 8F23 D5           3 push de
 957+ 8F24 C5               push bc
 958+ 8F25
 959+ 8F25 CD 08 8D         call Comprueba_Colision
 960+ 8F28
 961+ 8F28              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8F28
 963+ 8F28 78               ld a,b
 964+ 8F29
 965+ 8F29 C1               pop bc
 966+ 8F2A D1               pop de
 967+ 8F2B
 968+ 8F2B EB               ex de,hl
 969+ 8F2C
 970+ 8F2C 73               ld (hl),e
 971+ 8F2D 23               inc hl
 972+ 8F2E 72               ld (hl),d
 973+ 8F2F
 974+ 8F2F E1           4 pop hl
 975+ 8F30 23               inc hl
 976+ 8F31 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8F32 2B               dec hl
 978+ 8F33 C9           7 ret
 979+ 8F34
 980+ 8F34              ; Disparo hacia abajo, (Entidad).
 981+ 8F34
 982+ 8F34              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8F34              ; _ de la dificultad.
 984+ 8F34
 985+ 8F34 CD B8 92     2 call NextScan
 986+ 8F37 CD B8 92         call NextScan
 987+ 8F3A CD B8 92         call NextScan
 988+ 8F3D
 989+ 8F3D              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8F3D
 991+ 8F3D 7C               ld a,h
 992+ 8F3E FE 58            cp $58
 993+ 8F40 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8F42
 995+ 8F42 EB               ex de,hl
 996+ 8F43 06 04            ld b,4
 997+ 8F45 2B           5 dec hl
 998+ 8F46 10 FD            djnz 5B
 999+ 8F48
1000+ 8F48 CD 4E 8F         call Elimina_disparo_de_base_de_datos
1001+ 8F4B E1               pop hl
1002+ 8F4C 18 E5            jr 7B
1003+ 8F4E
1004+ 8F4E              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8F4E
1006+ 8F4E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8F51 AF               xor a
1008+ 8F52 77               ld (hl),a
1009+ 8F53 54               ld d,h
1010+ 8F54 5D               ld e,l
1011+ 8F55 13               inc de
1012+ 8F56 ED B0            ldir
1013+ 8F58 C9               ret
1014+ 8F59
1015+ 8F59              ; -----------------------------------------------------------------
1016+ 8F59              ;
1017+ 8F59              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8F59              ;
1019+ 8F59              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8F59              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8F59              ;
1022+ 8F59              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8F59              ;
1024+ 8F59              ;   INPUTS:
1025+ 8F59              ;
1026+ 8F59              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8F59              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8F59              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8F59
1030+ 8F59              ;   MODIFICA: A, HL, DE y C
1031+ 8F59
1032+ 8F59 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8F5A 79               ld a,c
1034+ 8F5B E6 01            and 1
1035+ 8F5D 20 03            jr nz,1F
1036+ 8F5F 14               inc d
1037+ 8F60 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8F62
1039+ 8F62              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8F62              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8F62
1042+ 8F62 15           1 dec d
1043+ 8F63 23           2 inc hl
1044+ 8F64 72               ld (hl),d
1045+ 8F65
1046+ 8F65 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8F66 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8F67 C8               ret z
1049+ 8F68
1050+ 8F68 AF               xor a
1051+ 8F69 5F               ld e,a
1052+ 8F6A 18 ED            jr Guarda_coordenadas_X
1053+ 8F6C
1054+ 8F6C              ; -----------------------------------------------------------------
1055+ 8F6C              ;
1056+ 8F6C              ;   12/04/23
1057+ 8F6C              ;
1058+ 8F6C
1059+ 8F6C 3A 9A 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8F6F A7               and a
1061+ 8F70 C8               ret z
1062+ 8F71
1063+ 8F71 FE 04            cp 4
1064+ 8F73 20 09            jr nz,1F
1065+ 8F75
1066+ 8F75
1067+ 8F75              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8F75
1069+ 8F75 CD 99 8D         call Detecta_colision_nave_entidad
1070+ 8F78
1071+ 8F78 21 9A 87         ld hl,Impacto2
1072+ 8F7B CB 5E            bit 3,(hl)
1073+ 8F7D C0               ret nz                                               ; Existe colisión, RET.
1074+ 8F7E
1075+ 8F7E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8F7E              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8F7E
1078+ 8F7E 21 9A 87     1 ld hl,Impacto2
1079+ 8F81 CB 4E            bit 1,(hl)
1080+ 8F83 28 07            jr z,2F
1081+ 8F85
1082+ 8F85 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8F88 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8F8A 18 0B            jr 3F
1085+ 8F8C
1086+ 8F8C 21 9A 87     2 ld hl,Impacto2
1087+ 8F8F CB 46            bit 0,(hl)
1088+ 8F91 C8               ret z
1089+ 8F92
1090+ 8F92              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8F92
1092+ 8F92 21 7E 87         ld hl,Ctrl_1
1093+ 8F95 CB D6            set 2,(hl)
1094+ 8F97
1095+ 8F97 C9           3 ret
1096+ 8F98
1097+ 8F98              ; -----------------------------------------------------------------
1098+ 8F98              ;
1099+ 8F98              ;   16/04/23
1100+ 8F98              ;
1101+ 8F98
1102+ 8F98 AF           Limpia_Coordenadas_X xor a
1103+ 8F99 06 06            ld b,6
1104+ 8F9B 21 9F 87         ld hl,Coordenadas_X_Amadeus
1105+ 8F9E 77           1 ld (hl),a
1106+ 8F9F 23               inc hl
1107+ 8FA0 10 FC            djnz 1B
1108+ 8FA2 C9               ret
1109+ 8FA3
1110+ 8FA3              ; -----------------------------------------------------------------
1111+ 8FA3              ;
1112+ 8FA3              ;   25/04/23
1113+ 8FA3              ;
1114+ 8FA3
1115+ 8FA3              Determina_resultado_comparativa
1116+ 8FA3
1117+ 8FA3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8FA3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8FA3              ;
1120+ 8FA3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8FA3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8FA3              ;
1123+ 8FA3              ;   SBC HL,DE
1124+ 8FA3
1125+ 8FA3 7C               ld a,h
1126+ 8FA4 06 00            ld b,0
1127+ 8FA6
1128+ 8FA6 CD B6 8F         call Compara_cositas
1129+ 8FA9
1130+ 8FA9 04               inc b
1131+ 8FAA 05               dec b
1132+ 8FAB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8FAC
1134+ 8FAC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8FAD 06 00            ld b,0
1136+ 8FAF
1137+ 8FAF CD B6 8F         call Compara_cositas
1138+ 8FB2 18 01            jr 2F
1139+ 8FB4
1140+ 8FB4 04           1 inc b
1141+ 8FB5 C9           2 ret
1142+ 8FB6
1143+ 8FB6 A7           Compara_cositas and a
1144+ 8FB7 28 17            jr z,1F
1145+ 8FB9
1146+ 8FB9 FE FD            cp $fd
1147+ 8FBB 28 13            jr z,1F
1148+ 8FBD FE FE            cp $fe
1149+ 8FBF 28 0F            jr z,1F
1150+ 8FC1 FE FF            cp $ff
1151+ 8FC3 28 0B            jr z,1F
1152+ 8FC5 FE 01            cp $01
1153+ 8FC7 28 07            jr z,1F
1154+ 8FC9 FE 02            cp $02
1155+ 8FCB 28 03            jr z,1F
1156+ 8FCD FE 03            cp $03
1157+ 8FCF C0               ret nz
1158+ 8FD0
1159+ 8FD0 04           1 inc b
1160+ 8FD1 C9               ret
1161+ 8FD2
# file closed: Disparo.asm
1189  8FD2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FD2              ; ******************************************************************************************************************************************************************************************
   2+ 8FD2              ;
   3+ 8FD2              ; 01/23
   4+ 8FD2              ;
   5+ 8FD2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FD2
   7+ 8FD2 CD AC 92     Draw call Prepara_draw
   8+ 8FD5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8FD6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8FD7 28 05        	jr z,2F
  11+ 8FD9
  12+ 8FD9 3A 55 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8FDC 18 0C        	jr 1F
  14+ 8FDE 2A 53 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8FE1 22 43 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8FE4 CD 73 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8FE7              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8FE7 CD 06 9A     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8FEA 3A 6F 87     1 ld a,(Ctrl_0)
  20+ 8FED CB 6F        	bit 5,a
  21+ 8FEF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8FF1
  23+ 8FF1 CD 09 90     	call Comprueba_limite_horizontal
  24+ 8FF4 CD 99 90     	call Comprueba_limite_vertical
  25+ 8FF7
  26+ 8FF7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8FF7
  28+ 8FF7 CD E6 91     3 call calcula_CColumnass
  29+ 8FFA CD 1D 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8FFD CD 72 92     	call Define_rutina_de_impresion
  31+ 9000
  32+ 9000 3A 6F 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9003 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9005 32 6F 87     	ld (Ctrl_0),a
  35+ 9008
  36+ 9008 C9           	ret
  37+ 9009
  38+ 9009              ; *******************************************************************************************************************************************************************************************
  39+ 9009              ;	21/01/23
  40+ 9009              ;
  41+ 9009              ; 	Comprueba_limite_horizontal.
  42+ 9009              ;
  43+ 9009              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9009              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9009              ;
  46+ 9009              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9009              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9009              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9009              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9009
  51+ 9009
  52+ 9009
  53+ 9009 3A 6F 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 900C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 900E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9010 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9012 32 6F 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9015 18 09            jr 6F
  59+ 9017 CB 5F        1 bit 3,a
  60+ 9019 28 0A            jr z,2F
  61+ 901B E6 F7            and $f7
  62+ 901D 32 6F 87         ld (Ctrl_0),a
  63+ 9020 CD 73 91     6 call Inicializacion
  64+ 9023 18 5B            jr 5F
  65+ 9025 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9026
  67+ 9026              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9026              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9026
  70+ 9026 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9027 2A 7A 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 902A CD 78 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 902D 67           	ld h,a
  74+ 902E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 902F CD 78 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9032 67           	ld h,a
  77+ 9033 A7           	and a
  78+ 9034 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9036 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9037 3A 55 87     	ld a,(Cuad_objeto)
  81+ 903A FE 02        	cp 2
  82+ 903C 38 1E        	jr c,3F
  83+ 903E 28 1C        	jr z,3F
  84+ 9040 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9041 28 23            jr z,7F
  86+ 9043 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9045 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9047 E1           	pop hl
  89+ 9048
  90+ 9048              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9048              ; _para indicar con E="2" en caso necesario.
  92+ 9048
  93+ 9048 E5               push hl
  94+ 9049 C5               push bc
  95+ 904A CD 78 95     	call calcula_tercio
  96+ 904D FE 01        	cp 1
  97+ 904F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9051 CD 81 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9054 28 26            jr z,9F
 100+ 9056 38 24            jr c,9F
 101+ 9058 1E 00        11 ld e,0
 102+ 905A 18 22            jr 8F
 103+ 905C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 905D 28 07        	jr z, 7F
 105+ 905F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9061 1E 00         	ld e,0
 107+ 9063 E1           	pop hl
 108+ 9064 18 04        	jr 4F
 109+ 9066 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9068 18 15            jr 10F
 111+ 906A
 112+ 906A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 906A              ; _para indicar con E="2" en caso necesario.
 114+ 906A
 115+ 906A E5           4 push hl
 116+ 906B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 906C CD 78 95     	call calcula_tercio
 118+ 906F FE 01        	cp 1
 119+ 9071 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9073 CD 81 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9076 28 04            jr z,9F
 122+ 9078 30 02            jr nc,9F
 123+ 907A 18 02        	jr 8F
 124+ 907C 1E 02        9 ld e,2
 125+ 907E C1           8 pop bc
 126+ 907F E1           10 pop hl
 127+ 9080 C9           5 ret
 128+ 9081
 129+ 9081              ; --------------------
 130+ 9081              ;
 131+ 9081              ; 25/08/22
 132+ 9081
 133+ 9081 CD 78 95     Comprueba_centro call calcula_tercio
 134+ 9084 67               ld h,a
 135+ 9085 08           	ex af,af
 136+ 9086 FE 02        	cp 2
 137+ 9088 38 07        	jr c,1F
 138+ 908A 28 05        	jr z,1F
 139+ 908C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 908F 18 03        	jr 2F
 141+ 9091 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9094 08           2 ex af,af
 143+ 9095 A7               and a
 144+ 9096 ED 42            sbc hl,bc
 145+ 9098 C9               ret
 146+ 9099
 147+ 9099              ; *********************************************************************************************************************************************************************************************
 148+ 9099              ;
 149+ 9099              ;   16/8/22
 150+ 9099              ;
 151+ 9099              ;	Comprueba_limite_vertical
 152+ 9099              ;
 153+ 9099              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9099              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9099              ;
 156+ 9099
 157+ 9099 2A 43 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 909C 7D           	ld a,l
 159+ 909D E6 1F        	and $1F
 160+ 909F 57           	ld d,a
 161+ 90A0 3A 7C 87     	ld a,(Limite_vertical)
 162+ 90A3 BA           	cp d 											; Límite - Posición.
 163+ 90A4 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 90A5 3A 55 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 90A8 CB 47        	bit 0,a
 166+ 90AA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 90AC
 168+ 90AC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 90AC
 170+ 90AC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 90AD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 90AF
 173+ 90AF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 90AF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 90AF
 176+ 90AF 3A 47 87         ld a,(Coordenada_X)
 177+ 90B2 16 0F            ld d,Centro_izquierda
 178+ 90B4 A7               and a
 179+ 90B5 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 90B6 28 1E            jr z,3F
 181+ 90B8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 90BA              ;                                                    ; _salimos sin modificar nada.
 183+ 90BA 18 0E            jr 2F
 184+ 90BC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 90BD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 90BF
 187+ 90BF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 90BF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 90BF
 190+ 90BF 3A 47 87         ld a,(Coordenada_X)
 191+ 90C2 16 10            ld d,Centro_derecha
 192+ 90C4 A7               and a
 193+ 90C5 92               sub d
 194+ 90C6 28 0E            jr z,3F
 195+ 90C8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 90CA              ;                                                    ; _salimos sin modificar nada.
 197+ 90CA CB 43        2 bit 0,e
 198+ 90CC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 90CE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 90CF CD 63 91         call Modificaccionne
 201+ 90D2 C1           	pop bc
 202+ 90D3 CD 73 91         call Inicializacion
 203+ 90D6 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 90D7
 205+ 90D7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 90D7
 207+ 90D7 C5           4 push bc
 208+ 90D8 01 42 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 90DB 0A           	ld a,(bc)
 210+ 90DC 3D           	dec a
 211+ 90DD 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 90DE 7D           	ld a,l
 213+ 90DF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 90E0 CB 47        	bit 0,a
 215+ 90E2 28 03        	jr z,5F
 216+ 90E4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 90E5 18 2E        	jr 7F
 218+ 90E7
 219+ 90E7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 90E7
 221+ 90E7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 90E8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 90E9 3A 6F 87     	ld a,(Ctrl_0)
 224+ 90EC CB 4F        	bit 1,a
 225+ 90EE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 90F0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 90F1
 228+ 90F1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 90F1
 230+ 90F1 1C               inc e
 231+ 90F2 1D               dec e
 232+ 90F3 20 07            jr nz,12F
 233+ 90F5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 90F6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 90F7 22 43 87     	ld (Posicion_actual),hl
 236+ 90FA 18 44        13 jr 9F
 237+ 90FC CB 43        12 bit 0,e
 238+ 90FE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9100              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9100 C1           	pop bc
 241+ 9101 18 D3        	jr 3B
 242+ 9103 80           14 add b
 243+ 9104 6F               ld l,a
 244+ 9105 22 43 87     	ld (Posicion_actual),hl
 245+ 9108 CD 63 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 910B 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 910D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 910F 32 6F 87         ld (Ctrl_0),a
 249+ 9112 F1           	pop af
 250+ 9113 18 2B        	jr 9F
 251+ 9115
 252+ 9115              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9115
 254+ 9115 F5           7 push af
 255+ 9116 3A 6F 87     	ld a,(Ctrl_0)
 256+ 9119 CB 47        	bit 0,a
 257+ 911B 20 1D        	jr nz,8F
 258+ 911D F1           	pop af
 259+ 911E
 260+ 911E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 911E
 262+ 911E 1C           	inc e
 263+ 911F 1D               dec e
 264+ 9120 20 07            jr nz,10F
 265+ 9122 90           	sub b
 266+ 9123 6F               ld l,a
 267+ 9124 22 43 87     	ld (Posicion_actual),hl
 268+ 9127 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9129              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9129 CB 43        10 bit 0,e
 271+ 912B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 912D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 912D C1           	pop bc
 274+ 912E 18 A6        	jr 3B
 275+ 9130 90           16 sub b
 276+ 9131 6F               ld l,a
 277+ 9132 22 43 87     	ld (Posicion_actual),hl
 278+ 9135 CD 63 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9138 18 06            jr 9F
 280+ 913A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 913C 32 6F 87         ld (Ctrl_0),a
 282+ 913F F1           	pop af
 283+ 9140 C1           9 pop bc
 284+ 9141 1E 00        	ld e,0
 285+ 9143 CD 73 91         call Inicializacion
 286+ 9146 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9147 08           	ex af,af
 288+ 9148 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 9149 18 8B            jr 3B
 290+ 914B
 291+ 914B              ; --------------------
 292+ 914B
 293+ 914B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 914D CD C7 92     1 call PreviousScan
 295+ 9150 10 FB            djnz 1B
 296+ 9152 22 43 87     	ld (Posicion_actual),hl
 297+ 9155 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9156 C9           	ret
 299+ 9157
 300+ 9157              ; --------------------
 301+ 9157
 302+ 9157 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 9159 CD B8 92     1 call NextScan
 304+ 915C 10 FB            djnz 1B
 305+ 915E 22 43 87     	ld (Posicion_actual),hl
 306+ 9161 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9162 C9           	ret
 308+ 9163
 309+ 9163              ; --------------------
 310+ 9163              ;
 311+ 9163              ;	22/01/23
 312+ 9163              ;
 313+ 9163              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9163              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9163              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9163
 317+ 9163
 318+ 9163              Modificaccionne
 319+ 9163
 320+ 9163 3A 55 87     	ld a,(Cuad_objeto)
 321+ 9166 FE 02        	cp 2
 322+ 9168 CC 4B 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 916B DC 4B 91         call c,Modifica_Pos_actual
 324+ 916E C8           	ret z
 325+ 916F CD 57 91         call Modifica_Pos_actual2
 326+ 9172 C9               ret
 327+ 9173
 328+ 9173              ; *************************************************************************************************************************************************************************************************
 329+ 9173              ;
 330+ 9173              ;	13/8/22
 331+ 9173              ;
 332+ 9173              ;	Inicializacion
 333+ 9173              ;
 334+ 9173              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9173              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9173              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9173              ;
 338+ 9173              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9173              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9173              ;	_ desaparece/aparece.
 341+ 9173
 342+ 9173              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9173              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9173              ;
 345+ 9173              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9173              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9173              ; 		   [E] ="0"
 348+ 9173
 349+ 9173              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9173
 351+ 9173 CD 78 95     Inicializacion call calcula_tercio
 352+ 9176 28 36        	jr z,primit
 353+ 9178 E6 02        	and 2
 354+ 917A 20 07        	jr nz,segmit
 355+ 917C 7D           	ld a,l
 356+ 917D FE 7F        	cp $7f
 357+ 917F 38 2D        	jr c,primit
 358+ 9181 28 2B        	jr z,primit
 359+ 9183 CD E0 91     segmit call column
 360+ 9186 38 13        	jr c,tercuad
 361+ 9188 3E 04        cuarcuad ld a,4
 362+ 918A 32 55 87     	ld (Cuad_objeto),a
 363+ 918D 21 20 48     	ld hl,$4820
 364+ 9190 22 7A 87     	ld (Limite_horizontal),hl
 365+ 9193 21 7C 87     	ld hl,Limite_vertical
 366+ 9196 36 0D        	ld (hl),$0d
 367+ 9198 08           	ex af,af
 368+ 9199 18 3C        	jr 1F
 369+ 919B              tercuad
 370+ 919B 3E 03        	ld a,3
 371+ 919D 32 55 87     	ld (Cuad_objeto),a
 372+ 91A0 21 20 48     	ld hl,$4820
 373+ 91A3 22 7A 87     	ld (Limite_horizontal),hl
 374+ 91A6 21 7C 87     	ld hl,Limite_vertical
 375+ 91A9 36 12        	ld (hl),$12
 376+ 91AB 08           	ex af,af
 377+ 91AC 18 29        	jr 1F
 378+ 91AE CD E0 91     primit call column
 379+ 91B1 38 13        	jr c, primcuad
 380+ 91B3              segcuad
 381+ 91B3 3E 02        	ld a,2
 382+ 91B5 32 55 87     	ld (Cuad_objeto),a
 383+ 91B8 21 C0 4F     	ld hl,$4fc0
 384+ 91BB 22 7A 87     	ld (Limite_horizontal),hl
 385+ 91BE 21 7C 87     	ld hl,Limite_vertical
 386+ 91C1 36 0D        	ld (hl),$0d
 387+ 91C3 08           	ex af,af
 388+ 91C4 18 11        	jr 1F
 389+ 91C6              primcuad
 390+ 91C6 3E 01        	ld a,1
 391+ 91C8 32 55 87     	ld (Cuad_objeto),a
 392+ 91CB 21 C0 4F     	ld hl,$4fc0
 393+ 91CE 22 7A 87     	ld (Limite_horizontal),hl
 394+ 91D1 21 7C 87     	ld hl,Limite_vertical
 395+ 91D4 36 12        	ld (hl),$12
 396+ 91D6 08           	ex af,af
 397+ 91D7 CD B8 98     1 call Genera_coordenadas
 398+ 91DA 21 6F 87     	ld hl,Ctrl_0
 399+ 91DD CB EE        	set 5,(hl)
 400+ 91DF C9           	ret
 401+ 91E0
 402+ 91E0              ; ------------------------------------------------------------------------------------------------------------------
 403+ 91E0
 404+ 91E0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 91E0              ;
 406+ 91E0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 91E0
 408+ 91E0 7D           column ld a,l
 409+ 91E1 E6 1F        	and $1f
 410+ 91E3 FE 10         	cp $10
 411+ 91E5 C9            	ret
 412+ 91E6
 413+ 91E6              ; --------------------------------------------------------------------------------------------------------------------
 414+ 91E6              ;
 415+ 91E6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 91E6              ;
 417+ 91E6              ; 14/12/22
 418+ 91E6              ;
 419+ 91E6              ;	Modifica: A y BC.
 420+ 91E6
 421+ 91E6 3A 55 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 91E9 E6 01        	and 1
 423+ 91EB 28 17        	jr z,1F
 424+ 91ED
 425+ 91ED              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 91ED
 427+ 91ED 3A 47 87     	ld a,(Coordenada_X)
 428+ 91F0 47           	ld b,a
 429+ 91F1 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 91F2 79           	ld a,c
 431+ 91F3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 91F4 38 08        	jr c,2F
 433+ 91F6 47           	ld b,a
 434+ 91F7 79           	ld a,c
 435+ 91F8 90           	sub b
 436+ 91F9 32 79 87     	ld (Columnas),a
 437+ 91FC 18 1B        	jr 4F
 438+ 91FE 79           2 ld a,c
 439+ 91FF 32 79 87     	ld (Columnas),a
 440+ 9202 18 15        	jr 4F
 441+ 9204
 442+ 9204              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9204
 444+ 9204 3A 47 87     1 ld a,(Coordenada_X)
 445+ 9207 81           	add c
 446+ 9208 3D           	dec a
 447+ 9209 D6 1F        	sub $1f
 448+ 920B 38 08        	jr c,3F
 449+ 920D 47           	ld b,a
 450+ 920E 79           	ld a,c
 451+ 920F 90           	sub b
 452+ 9210 32 79 87     	ld (Columnas),a
 453+ 9213 18 04        	jr 4F
 454+ 9215 79           3 ld a,c
 455+ 9216 32 79 87     	ld (Columnas),a
 456+ 9219 D9           4 exx
 457+ 921A 4F           	ld c,a
 458+ 921B D9           	exx
 459+ 921C C9            ret
 460+ 921D
 461+ 921D              ; --------------------------------------------------------------------------------------------------------------------
 462+ 921D              ;
 463+ 921D              ; 7/1/23
 464+ 921D              ;
 465+ 921D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 921D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 921D              ;
 468+ 921D              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 921D              ;	DESTRUYE: HL,B Y A.
 470+ 921D
 471+ 921D 3A 55 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9220 FE 02        	cp 2
 473+ 9222 38 18        	jr c,1F
 474+ 9224 28 16        	jr z,1F
 475+ 9226 E6 01        	and 1
 476+ 9228 28 0D        	jr z,3F
 477+ 922A
 478+ 922A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 922A
 480+ 922A CD 66 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 922D
 482+ 922D 7D           9 ld a,l
 483+ 922E E6 1F        	and $1f
 484+ 9230 28 2A        	jr z,7F
 485+ 9232 2B           	dec hl
 486+ 9233 10 F8        	djnz 9B
 487+ 9235 18 25        	jr 7F
 488+ 9237
 489+ 9237              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9237
 491+ 9237 2A 43 87     3 ld hl,(Posicion_actual)
 492+ 923A 18 20        	jr 7F
 493+ 923C
 494+ 923C 28 14        1 jr z,2F
 495+ 923E
 496+ 923E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 923E
 498+ 923E CD 66 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9241 7D           4 ld a,l
 500+ 9242 E6 1F        	and $1f
 501+ 9244 28 03        	jr z,6F
 502+ 9246 2B           	dec hl
 503+ 9247 10 F8        	djnz 4B
 504+ 9249 06 0F        6 ld b,15
 505+ 924B CD C7 92     5 call PreviousScan
 506+ 924E 10 FB        	djnz 5B
 507+ 9250 18 0A        	jr 7F
 508+ 9252
 509+ 9252              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9252
 511+ 9252 CD 66 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9255 06 0F        	ld b,15
 513+ 9257 CD C7 92     8 call PreviousScan
 514+ 925A 10 FB        	djnz 8B
 515+ 925C
 516+ 925C E5           7 push hl
 517+ 925D DD E1        	pop ix
 518+ 925F
 519+ 925F 2A 45 87     	ld hl,(Puntero_objeto)
 520+ 9262 E5           	push hl
 521+ 9263 FD E1        	pop iy
 522+ 9265
 523+ 9265 C9           	ret
 524+ 9266
 525+ 9266              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9266              ;
 527+ 9266              ;	2/1/23
 528+ 9266              ;
 529+ 9266              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9266              ;
 531+ 9266              ;	Tras esta rutina tenemos:
 532+ 9266              ;
 533+ 9266              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9266              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9266              ;
 536+ 9266              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9266
 538+ 9266 2A 43 87     Operandos ld hl,(Posicion_actual)
 539+ 9269 3A 79 87     	ld a,(Columnas)
 540+ 926C 3D           	dec a
 541+ 926D 20 01        	jr nz,1F
 542+ 926F 3C           	inc a
 543+ 9270 47           1 ld b,a
 544+ 9271 C9           	ret
 545+ 9272
 546+ 9272              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9272              ;
 548+ 9272              ;	3/1/23
 549+ 9272              ;
 550+ 9272              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9272              ;
 552+ 9272              ;	Destruye: A,B,HL y DE.
 553+ 9272
 554+ 9272              Define_rutina_de_impresion
 555+ 9272
 556+ 9272 3A 42 87     	ld a,(Columns)
 557+ 9275 47           	ld b,a
 558+ 9276 3A 79 87     	ld a,(Columnas)
 559+ 9279 B8           	cp b
 560+ 927A 20 0D        	jr nz,2f
 561+ 927C
 562+ 927C              ;	La entidad se imprime entera.
 563+ 927C
 564+ 927C 21 48 93     	ld hl, Indice_entidades_completas
 565+ 927F E6 01        	and 1
 566+ 9281 28 02        	jr z,1F
 567+ 9283
 568+ 9283 23           	inc hl
 569+ 9284 23           	inc hl
 570+ 9285
 571+ 9285 CD 4F 8A     1 call Extrae_address
 572+ 9288 C9           	ret		;	ret
 573+ 9289
 574+ 9289              ;	La entidad no se imprime entera en pantalla.
 575+ 9289
 576+ 9289 3A 55 87     2 ld a,(Cuad_objeto)
 577+ 928C E6 01        	and 1
 578+ 928E 28 17        	jr z,3F
 579+ 9290
 580+ 9290              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9290
 582+ 9290 21 4C 93     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9293 3A 42 87     4 ld a,(Columns)
 584+ 9296 E6 01        	and 1
 585+ 9298 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 929A
 587+ 929A 23           	inc hl
 588+ 929B 23           	inc hl
 589+ 929C
 590+ 929C 3A 79 87     	ld a,(Columnas)
 591+ 929F E6 01        	and 1
 592+ 92A1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 92A3
 594+ 92A3 23           	inc hl
 595+ 92A4 23           	inc hl
 596+ 92A5
 597+ 92A5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 92A7
 599+ 92A7 21 52 93     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 92AA 18 E7        	jr 4B
 601+ 92AC
 602+ 92AC              ; --------------------------------------------------------------------------------------------------------------------
 603+ 92AC              ;
 604+ 92AC              ;	Prepara_draw
 605+ 92AC              ;
 606+ 92AC              ;	Es una rutina de carga.
 607+ 92AC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 92AC              ;
 609+ 92AC              ;	FUNCIONAMIENTO:
 610+ 92AC              ;
 611+ 92AC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 92AC              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 92AC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 92AC              ;
 615+ 92AC              ;	DESTRUYE:
 616+ 92AC              ;
 617+ 92AC              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 92AC
 619+ 92AC 21 41 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 92AF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 92B0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 92B1 4E           	ld c,(hl)
 623+ 92B2 2A 43 87     	ld hl,(Posicion_actual)
 624+ 92B5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 92B7 C9           	ret
 626+ 92B8
 627+ 92B8              ;----------------------------------------------------------------------------------------------------------------
 628+ 92B8              ;
 629+ 92B8              ;	5/08/22
 630+ 92B8              ;
 631+ 92B8              ;   NextScan.
 632+ 92B8              ;
 633+ 92B8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 92B8              ;
 635+ 92B8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 92B8              ;
 637+ 92B8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 92B8              ;
 639+ 92B8              ;       DESTRUIDOS: AF y HL !!!
 640+ 92B8              ;
 641+ 92B8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 92B8              ;
 643+ 92B8
 644+ 92B8 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 92B9 7C               ld a,h
 646+ 92BA E6 07            and 7
 647+ 92BC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 92BD
 649+ 92BD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 92BE C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 92C0 6F               ld l,a
 652+ 92C1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 92C2
 654+ 92C2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 92C3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 92C5 67               ld h,a
 657+ 92C6 C9               ret
 658+ 92C7
 659+ 92C7              ;----------------------------------------------------------------------------------------------------------------
 660+ 92C7              ;
 661+ 92C7              ;	5/08/22
 662+ 92C7              ;
 663+ 92C7              ;   PreviousScan.
 664+ 92C7              ;
 665+ 92C7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 92C7              ;
 667+ 92C7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 92C7              ;
 669+ 92C7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 92C7              ;
 671+ 92C7              ;       DESTRUIDOS: AF y HL !!!
 672+ 92C7              ;
 673+ 92C7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 92C7              ;
 675+ 92C7
 676+ 92C7 7C           PreviousScan ld a,h
 677+ 92C8 25               dec h               ; Dec H.
 678+ 92C9 E6 07            and 7
 679+ 92CB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 92CC
 681+ 92CC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 92CD D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 92CF 6F               ld l,a
 684+ 92D0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 92D1
 686+ 92D1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 92D2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 92D4 67               ld h,a
 689+ 92D5 C9               ret
 690+ 92D6
 691+ 92D6              ; -----------------------------------------------------------------------------------
 692+ 92D6              ;
 693+ 92D6              ;	28/2/23
 694+ 92D6              ;
 695+ 92D6              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 92D6              ;	Extrae fotos de Album_de_fotos.
 697+ 92D6
 698+ 92D6              Extrae_foto_entidades
 699+ 92D6
 700+ 92D6 3A 88 87     	ld a,(Numero_de_malotes)
 701+ 92D9 A7           	and a
 702+ 92DA C8           	ret z
 703+ 92DB ED 73 8D 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 92DF 31 00 70     	ld sp,Album_de_fotos
 705+ 92E2
 706+ 92E2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 92E4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 92E5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 92E6
 710+ 92E6 ED 73 8F 87  	ld (Stack_2),sp
 711+ 92EA ED 7B 8D 87  	ld sp,(Stack)
 712+ 92EE
 713+ 92EE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 92EE
 715+ 92EE 3E CD        	ld a,$cd
 716+ 92F0 32 F8 92     	ld (Imprime),a
 717+ 92F3 EB           	ex de,hl
 718+ 92F4 22 F9 92     	ld (Imprime+1),hl
 719+ 92F7 EB           	ex de,hl
 720+ 92F8
 721+ 92F8              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 92F8
 723+ 92F8 00 00 00     Imprime db 0,0,0
 724+ 92FB
 725+ 92FB 3A 88 87     	ld a,(Numero_de_malotes)
 726+ 92FE 3D           	dec a
 727+ 92FF 28 09        	jr z,1F
 728+ 9301 32 88 87      	ld (Numero_de_malotes),a
 729+ 9304
 730+ 9304 ED 7B 8F 87   	ld sp,(Stack_2)
 731+ 9308 18 D8        	jr 2B
 732+ 930A
 733+ 930A AF           1 xor a
 734+ 930B 32 8F 87     	ld (Stack_2),a
 735+ 930E C9           	ret
 736+ 930F
 737+ 930F              ; -----------------------------------------------------------------------------------
 738+ 930F              ;
 739+ 930F              ;	28/2/23
 740+ 930F              ;
 741+ 930F              ;	Pinta los disparos generados.
 742+ 930F
 743+ 930F              Extrae_foto_disparos
 744+ 930F
 745+ 930F 3A 95 87     	ld a,(Numero_de_disparotes)
 746+ 9312 A7           	and a
 747+ 9313 C8           	ret z
 748+ 9314 ED 73 8D 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9318 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 931B
 751+ 931B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 931D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 931E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 931F
 755+ 931F ED 73 8F 87  	ld (Stack_2),sp
 756+ 9323 ED 7B 8D 87  	ld sp,(Stack)
 757+ 9327
 758+ 9327              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9327
 760+ 9327 3E CD        	ld a,$cd
 761+ 9329 32 31 93     	ld (Imprime2),a
 762+ 932C EB           	ex de,hl
 763+ 932D 22 32 93     	ld (Imprime2+1),hl
 764+ 9330 EB           	ex de,hl
 765+ 9331
 766+ 9331              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9331
 768+ 9331 00 00 00     Imprime2 db 0,0,0
 769+ 9334
 770+ 9334 3A 95 87     	ld a,(Numero_de_disparotes)
 771+ 9337 3D           	dec a
 772+ 9338 28 09        	jr z,1F
 773+ 933A 32 95 87      	ld (Numero_de_disparotes),a
 774+ 933D
 775+ 933D ED 7B 8F 87  	ld sp,(Stack_2)
 776+ 9341 18 D8        	jr 2B
 777+ 9343
 778+ 9343 AF           1 xor a
 779+ 9344 32 8F 87     	ld (Stack_2),a
 780+ 9347 C9           	ret
 781+ 9348
# file closed: Draw_XOR.asm
1190  9348              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9348              ;   índices de Rutinas de impresión.
   2+ 9348
   3+ 9348 58 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 934A 85 93            defw Pinta_Amadeus_3x2
   5+ 934C
   6+ 934C DB 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 934E 7B 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9350 2F 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9352
  10+ 9352 05 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9354 09 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9356 BD 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9358
  14+ 9358
  15+ 9358              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9358              ;
  17+ 9358              ;   12/12/22
  18+ 9358              ;
  19+ 9358              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9358              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9358              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9358              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9358              ;
  24+ 9358              ;   Modifica: DE y HL.
  25+ 9358
  26+ 9358 ED 73 8D 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 935C FD F9        	ld sp,iy
  28+ 935E 06 10            ld b,16
  29+ 9360 D1           1 pop de
  30+ 9361 7B               ld a,e
  31+ 9362 AE               xor (hl)
  32+ 9363 77           	ld (hl),a
  33+ 9364 23           	inc hl
  34+ 9365 7A               ld a,d
  35+ 9366 AE               xor (hl)
  36+ 9367 77           	ld (hl),a
  37+ 9368 2B           	dec hl
  38+ 9369 24           	inc h
  39+ 936A 7C               ld a,h
  40+ 936B E6 07            and 7
  41+ 936D 20 0A            jr nz,2F
  42+ 936F 7D               ld a,l
  43+ 9370 C6 20            add a,$20
  44+ 9372 6F               ld l,a
  45+ 9373 38 04            jr c,2F
  46+ 9375 7C               ld a,h
  47+ 9376 D6 08            sub 8
  48+ 9378 67               ld h,a
  49+ 9379 7C           2 ld a,h
  50+ 937A FE 58            cp $58
  51+ 937C 28 02            jr z,3F
  52+ 937E 10 E0            djnz 1B
  53+ 9380 ED 7B 8D 87  3 ld sp,(Stack)
  54+ 9384 C9           	ret
  55+ 9385
  56+ 9385 ED 73 8D 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9389 FD F9        	ld sp,iy
  58+ 938B 06 08            ld b,8
  59+ 938D D1           1 pop de
  60+ 938E 7B               ld a,e
  61+ 938F AE               xor (hl)
  62+ 9390 77           	ld (hl),a
  63+ 9391 23           	inc hl
  64+ 9392 7A               ld a,d
  65+ 9393 AE               xor (hl)
  66+ 9394 77           	ld (hl),a
  67+ 9395 23           	inc hl
  68+ 9396 D1           	pop de
  69+ 9397 7B               ld a,e
  70+ 9398 AE               xor (hl)
  71+ 9399 77           	ld (hl),a
  72+ 939A 2B           	dec hl
  73+ 939B 2B           	dec hl
  74+ 939C 24           	inc h
  75+ 939D 7C               ld a,h
  76+ 939E E6 07            and 7
  77+ 93A0 20 0A            jr nz,2F
  78+ 93A2 7D               ld a,l
  79+ 93A3 C6 20            add a,$20
  80+ 93A5 6F               ld l,a
  81+ 93A6 38 04            jr c,2F
  82+ 93A8 7C               ld a,h
  83+ 93A9 D6 08            sub 8
  84+ 93AB 67               ld h,a
  85+ 93AC 7C           2 ld a,h
  86+ 93AD FE 58            cp $58
  87+ 93AF 28 25            jr z,4F
  88+ 93B1 7A               ld a,d
  89+ 93B2 AE               xor (hl)
  90+ 93B3 77               ld (hl),a
  91+ 93B4 D1           	pop de
  92+ 93B5 23           	inc hl
  93+ 93B6 7B               ld a,e
  94+ 93B7 AE               xor (hl)
  95+ 93B8 77           	ld (hl),a
  96+ 93B9 23           	inc hl
  97+ 93BA 7A               ld a,d
  98+ 93BB AE               xor (hl)
  99+ 93BC 77           	ld (hl),a
 100+ 93BD 2B           	dec hl
 101+ 93BE 2B           	dec hl
 102+ 93BF 24           	inc h
 103+ 93C0 7C               ld a,h
 104+ 93C1 E6 07            and 7
 105+ 93C3 20 0A            jr nz,3F
 106+ 93C5 7D               ld a,l
 107+ 93C6 C6 20            add a,$20
 108+ 93C8 6F               ld l,a
 109+ 93C9 38 04            jr c,3F
 110+ 93CB 7C               ld a,h
 111+ 93CC D6 08            sub 8
 112+ 93CE 67               ld h,a
 113+ 93CF 7C           3 ld a,h
 114+ 93D0 FE 58            cp $58
 115+ 93D2 28 02            jr z,4F
 116+ 93D4 10 B7            djnz 1B
 117+ 93D6 ED 7B 8D 87  4 ld sp,(Stack)
 118+ 93DA C9           	ret
 119+ 93DB
 120+ 93DB              ; ---------------------------------------------------
 121+ 93DB
 122+ 93DB ED 73 8D 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 93DF FD F9        	ld sp,iy
 124+ 93E1
 125+ 93E1              ; >>>
 126+ 93E1
 127+ 93E1 06 10            ld b,16
 128+ 93E3 D1           1 pop de
 129+ 93E4 7A           	ld a,d
 130+ 93E5 AE           	xor (hl)
 131+ 93E6 77           	ld (hl),a
 132+ 93E7 24           	inc h
 133+ 93E8 7C               ld a,h
 134+ 93E9 E6 07            and 7
 135+ 93EB 20 0C            jr nz,2F
 136+ 93ED 7D               ld a,l
 137+ 93EE C6 20            add a,$20
 138+ 93F0 6F               ld l,a
 139+ 93F1 38 06            jr c,2F
 140+ 93F3 7C               ld a,h
 141+ 93F4 D6 08            sub 8
 142+ 93F6 67               ld h,a
 143+ 93F7 18 00            jr 2F
 144+ 93F9 7C           2 ld a,h
 145+ 93FA FE 58            cp $58
 146+ 93FC 28 02            jr z,3F
 147+ 93FE 10 E3            djnz 1B
 148+ 9400 ED 7B 8D 87  3 ld sp,(Stack)
 149+ 9404 C9           	ret
 150+ 9405
 151+ 9405 ED 73 8D 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9409 FD F9        	ld sp,iy
 153+ 940B
 154+ 940B              ; >>>
 155+ 940B
 156+ 940B 06 10            ld b,16
 157+ 940D D1           1 pop de
 158+ 940E 7B           	ld a,e
 159+ 940F AE           	xor (hl)
 160+ 9410 77           	ld (hl),a
 161+ 9411 24           	inc h
 162+ 9412 7C               ld a,h
 163+ 9413 E6 07            and 7
 164+ 9415 20 0C            jr nz,2F
 165+ 9417 7D               ld a,l
 166+ 9418 C6 20            add a,$20
 167+ 941A 6F               ld l,a
 168+ 941B 38 06            jr c,2F
 169+ 941D 7C               ld a,h
 170+ 941E D6 08            sub 8
 171+ 9420 67               ld h,a
 172+ 9421 18 00            jr 2F
 173+ 9423 7C           2 ld a,h
 174+ 9424 FE 58            cp $58
 175+ 9426 28 02            jr z,3F
 176+ 9428 10 E3            djnz 1B
 177+ 942A ED 7B 8D 87  3 ld sp,(Stack)
 178+ 942E C9           	ret
 179+ 942F
 180+ 942F              ; ---------------------------------------------------
 181+ 942F
 182+ 942F ED 73 8D 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9433 FD F9        	ld sp,iy
 184+ 9435 06 08            ld b,8
 185+ 9437 D1           1 pop de
 186+ 9438 7A           	ld a,d
 187+ 9439 AE           	xor (hl)
 188+ 943A 77           	ld (hl),a
 189+ 943B 23           	inc hl
 190+ 943C D1           	pop de
 191+ 943D 7B           	ld a,e
 192+ 943E AE           	xor (hl)
 193+ 943F 77           	ld (hl),a
 194+ 9440 2B           	dec hl
 195+ 9441 24            	inc h
 196+ 9442 7C               ld a,h
 197+ 9443 E6 07            and 7
 198+ 9445 20 0A            jr nz,2F
 199+ 9447 7D               ld a,l
 200+ 9448 C6 20            add a,$20
 201+ 944A 6F               ld l,a
 202+ 944B 38 04            jr c,2F
 203+ 944D 7C               ld a,h
 204+ 944E D6 08            sub 8
 205+ 9450 67               ld h,a
 206+ 9451 7C           2 ld a,h
 207+ 9452 FE 58            cp $58
 208+ 9454 28 20            jr z,4F
 209+ 9456 D1               pop de
 210+ 9457 7B           	ld a,e
 211+ 9458 AE           	xor (hl)
 212+ 9459 77           	ld (hl),a
 213+ 945A 23           	inc hl
 214+ 945B 7A           	ld a,d
 215+ 945C AE           	xor (hl)
 216+ 945D 77           	ld (hl),a
 217+ 945E 2B           	dec hl
 218+ 945F 24           	inc h
 219+ 9460 7C               ld a,h
 220+ 9461 E6 07            and 7
 221+ 9463 20 0A            jr nz,3F
 222+ 9465 7D               ld a,l
 223+ 9466 C6 20            add a,$20
 224+ 9468 6F               ld l,a
 225+ 9469 38 04            jr c,3F
 226+ 946B 7C               ld a,h
 227+ 946C D6 08            sub 8
 228+ 946E 67               ld h,a
 229+ 946F 7C           3 ld a,h
 230+ 9470 FE 58            cp $58
 231+ 9472 28 02            jr z,4F
 232+ 9474 10 C1            djnz 1B
 233+ 9476 ED 7B 8D 87  4 ld sp,(Stack)
 234+ 947A C9           	ret
 235+ 947B
 236+ 947B ED 73 8D 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 947F FD F9        	ld sp,iy
 238+ 9481 06 08            ld b,8
 239+ 9483 D1           1 pop de
 240+ 9484 D1           	pop de
 241+ 9485 7B           	ld a,e
 242+ 9486 AE           	xor (hl)
 243+ 9487 77           	ld (hl),a
 244+ 9488 24            	inc h
 245+ 9489 7C               ld a,h
 246+ 948A E6 07            and 7
 247+ 948C 20 0A            jr nz,2F
 248+ 948E 7D               ld a,l
 249+ 948F C6 20            add a,$20
 250+ 9491 6F               ld l,a
 251+ 9492 38 04            jr c,2F
 252+ 9494 7C               ld a,h
 253+ 9495 D6 08            sub 8
 254+ 9497 67               ld h,a
 255+ 9498 7C           2 ld a,h
 256+ 9499 FE 58            cp $58
 257+ 949B 28 1B            jr z,4F
 258+ 949D D1               pop de
 259+ 949E 7A           	ld a,d
 260+ 949F AE           	xor (hl)
 261+ 94A0 77           	ld (hl),a
 262+ 94A1 24           	inc h
 263+ 94A2 7C               ld a,h
 264+ 94A3 E6 07            and 7
 265+ 94A5 20 0A            jr nz,3F
 266+ 94A7 7D               ld a,l
 267+ 94A8 C6 20            add a,$20
 268+ 94AA 6F               ld l,a
 269+ 94AB 38 04            jr c,3F
 270+ 94AD 7C               ld a,h
 271+ 94AE D6 08            sub 8
 272+ 94B0 67               ld h,a
 273+ 94B1 7C           3 ld a,h
 274+ 94B2 FE 58            cp $58
 275+ 94B4 28 02            jr z,4F
 276+ 94B6 10 CB            djnz 1B
 277+ 94B8 ED 7B 8D 87  4 ld sp,(Stack)
 278+ 94BC C9           	ret
 279+ 94BD
 280+ 94BD ED 73 8D 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 94C1 FD F9        	ld sp,iy
 282+ 94C3 06 08            ld b,8
 283+ 94C5 D1           1 pop de
 284+ 94C6 7B           	ld a,e
 285+ 94C7 AE           	xor (hl)
 286+ 94C8 77           	ld (hl),a
 287+ 94C9 23           	inc hl
 288+ 94CA 7A           	ld a,d
 289+ 94CB AE           	xor (hl)
 290+ 94CC 77           	ld (hl),a
 291+ 94CD 2B           	dec hl
 292+ 94CE 24             	inc h
 293+ 94CF 7C               ld a,h
 294+ 94D0 E6 07            and 7
 295+ 94D2 20 0A            jr nz,2F
 296+ 94D4 7D               ld a,l
 297+ 94D5 C6 20            add a,$20
 298+ 94D7 6F               ld l,a
 299+ 94D8 38 04            jr c,2F
 300+ 94DA 7C               ld a,h
 301+ 94DB D6 08            sub 8
 302+ 94DD 67               ld h,a
 303+ 94DE 7C           2 ld a,h
 304+ 94DF FE 58            cp $58
 305+ 94E1 28 21            jr z,4F
 306+ 94E3 D1               pop de
 307+ 94E4 7A           	ld a,d
 308+ 94E5 AE           	xor (hl)
 309+ 94E6 77           	ld (hl),a
 310+ 94E7 23           	inc hl
 311+ 94E8 D1               pop de
 312+ 94E9 7B           	ld a,e
 313+ 94EA AE           	xor (hl)
 314+ 94EB 77           	ld (hl),a
 315+ 94EC 2B           	dec hl
 316+ 94ED 24           	inc h
 317+ 94EE 7C               ld a,h
 318+ 94EF E6 07            and 7
 319+ 94F1 20 0A            jr nz,3F
 320+ 94F3 7D               ld a,l
 321+ 94F4 C6 20            add a,$20
 322+ 94F6 6F               ld l,a
 323+ 94F7 38 04            jr c,3F
 324+ 94F9 7C               ld a,h
 325+ 94FA D6 08            sub 8
 326+ 94FC 67               ld h,a
 327+ 94FD 7C           3 ld a,h
 328+ 94FE FE 58            cp $58
 329+ 9500 28 02            jr z,4F
 330+ 9502 10 C1            djnz 1B
 331+ 9504 ED 7B 8D 87  4 ld sp,(Stack)
 332+ 9508 C9           	ret
 333+ 9509
 334+ 9509 ED 73 8D 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 950D FD F9        	ld sp,iy
 336+ 950F 06 08            ld b,8
 337+ 9511 D1           1 pop de
 338+ 9512 7B           	ld a,e
 339+ 9513 AE           	xor (hl)
 340+ 9514 77           	ld (hl),a
 341+ 9515 24            	inc h
 342+ 9516 7C               ld a,h
 343+ 9517 E6 07            and 7
 344+ 9519 20 0A            jr nz,2F
 345+ 951B 7D               ld a,l
 346+ 951C C6 20            add a,$20
 347+ 951E 6F               ld l,a
 348+ 951F 38 04            jr c,2F
 349+ 9521 7C               ld a,h
 350+ 9522 D6 08            sub 8
 351+ 9524 67               ld h,a
 352+ 9525 7C           2 ld a,h
 353+ 9526 FE 58            cp $58
 354+ 9528 28 1C            jr z,4F
 355+ 952A D1               pop de
 356+ 952B 7A           	ld a,d
 357+ 952C AE           	xor (hl)
 358+ 952D 77           	ld (hl),a
 359+ 952E 24           	inc h
 360+ 952F 7C               ld a,h
 361+ 9530 E6 07            and 7
 362+ 9532 20 0A            jr nz,3F
 363+ 9534 7D               ld a,l
 364+ 9535 C6 20            add a,$20
 365+ 9537 6F               ld l,a
 366+ 9538 38 04            jr c,3F
 367+ 953A 7C               ld a,h
 368+ 953B D6 08            sub 8
 369+ 953D 67               ld h,a
 370+ 953E 7C           3 ld a,h
 371+ 953F FE 58            cp $58
 372+ 9541 28 03            jr z,4F
 373+ 9543 D1               pop de
 374+ 9544 10 CB            djnz 1B
 375+ 9546 ED 7B 8D 87  4 ld sp,(Stack)
 376+ 954A C9           	ret
 377+ 954B
 378+ 954B              ; ---------------------------------------------------
 379+ 954B              ;
 380+ 954B              ;   27/02/23
 381+ 954B              ;
 382+ 954B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 954B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 954B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 954B
 386+ 954B ED 73 8D 87  Pinta_Disparo ld (Stack),sp
 387+ 954F FD F9            ld sp,iy
 388+ 9551 06 02            ld b,2
 389+ 9553 D1           1 pop de
 390+ 9554 7B               ld a,e
 391+ 9555 AE               xor (hl)
 392+ 9556 77               ld (hl),a
 393+ 9557 23               inc hl
 394+ 9558 7A               ld a,d
 395+ 9559 AE               xor (hl)
 396+ 955A 77               ld (hl),a
 397+ 955B 2B               dec hl
 398+ 955C
 399+ 955C 24               inc h
 400+ 955D 7C               ld a,h
 401+ 955E E6 07            and 7
 402+ 9560 20 0A            jr nz,2F
 403+ 9562 7D               ld a,l
 404+ 9563 C6 20            add a,$20
 405+ 9565 6F               ld l,a
 406+ 9566 38 04            jr c,2F
 407+ 9568 7C               ld a,h
 408+ 9569 D6 08            sub 8
 409+ 956B 67               ld h,a
 410+ 956C 7C           2 ld a,h
 411+ 956D FE 58            cp $58
 412+ 956F 28 02            jr z,3F
 413+ 9571
 414+ 9571 10 E0            djnz 1B
 415+ 9573 ED 7B 8D 87  3 ld sp,(Stack)
 416+ 9577 C9               ret
 417+ 9578
# file closed: Rutinas_de_impresion_sprites.asm
1191  9578              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9578              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9578              ;
   3+ 9578              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9578              ;
   5+ 9578              ; *****************************************************************************************************************************************************************************************
   6+ 9578              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9578
   8+ 9578 7C           calcula_tercio ld a,h
   9+ 9579 E6 18        	and $18
  10+ 957B CB 2F        	sra a
  11+ 957D CB 2F        	sra a
  12+ 957F CB 2F        	sra a
  13+ 9581 C9           	ret
  14+ 9582
# file closed: calcula_tercio.asm
1192  9582              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9582              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9582              ;
   3+ 9582              ;
   4+ 9582              ;	CLS.
   5+ 9582              ;
   6+ 9582              ;	Limpia la pantalla y define sus atributos.
   7+ 9582              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9582              ;
   9+ 9582              ;	COLORES: 0 ..... NEGRO
  10+ 9582              ;    		 1 ..... AZUL
  11+ 9582              ; 			 2 ..... ROJO
  12+ 9582              ;			 3 ..... MAGENTA
  13+ 9582              ; 			 4 ..... VERDE
  14+ 9582              ; 			 5 ..... CIAN
  15+ 9582              ;			 6 ..... AMARILLO
  16+ 9582              ; 			 7 ..... BLANCO
  17+ 9582              ;
  18+ 9582              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9582              ;
  20+ 9582              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9582
  22+ 9582
  23+ 9582 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9585 11 01 40     	LD DE,$4001
  25+ 9588 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 958B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 958D ED B0        	LDIR
  28+ 958F 01 FF 02     	LD BC,767
  29+ 9592 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9593 ED B0        	LDIR
  31+ 9595 C9           	ret
  32+ 9596
# file closed: Cls.asm
1193  9596              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9596              ; ******************************************************************************************************************************************************************************************
   2+ 9596              ;
   3+ 9596              ;   20/05/23
   4+ 9596              ;
   5+ 9596              ;	Recompone_posicion_inicio
   6+ 9596              ;
   7+ 9596              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9596              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9596              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9596              ;	_ a una u otra rutina.
  11+ 9596
  12+ 9596              Recompone_posicion_inicio
  13+ 9596
  14+ 9596 2A 53 87     	ld hl,(Posicion_inicio)
  15+ 9599 7D           	ld a,l
  16+ 959A E6 1F        	and $1f
  17+ 959C 28 08        	jr z,1F
  18+ 959E
  19+ 959E FE 1F        	cp $1f
  20+ 95A0 C0           	ret nz
  21+ 95A1
  22+ 95A1 CD 24 97     	call Mov_left
  23+ 95A4 18 03        	jr 2F
  24+ 95A6
  25+ 95A6 CD 06 96     1 call Mov_right
  26+ 95A9
  27+ 95A9 C9           2 ret
  28+ 95AA
  29+ 95AA
  30+ 95AA              ; ******************************************************************************************************************************************************************************************
  31+ 95AA              ;
  32+ 95AA              ;   22/01/23
  33+ 95AA              ;
  34+ 95AA              ;	Mov_down
  35+ 95AA              ;
  36+ 95AA              ; 	Mueve el Sprite X px hacia abajo.
  37+ 95AA              ;
  38+ 95AA              ;
  39+ 95AA 21 6F 87     Mov_down ld hl,Ctrl_0
  40+ 95AD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  41+ 95AF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  42+ 95AF              ; 																	; _ en el caso de que no lo haya.
  43+ 95AF 3A 59 87     	ld a,(Vel_down)
  44+ 95B2 47           	ld b,a
  45+ 95B3 2A 43 87         ld hl,(Posicion_actual)
  46+ 95B6 CD 78 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  47+ 95B9 E6 02        	and 2
  48+ 95BB 28 0F        	jr z,1F
  49+ 95BD
  50+ 95BD              ; Nos encontramos en el último tercio de pantalla.
  51+ 95BD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  52+ 95BD
  53+ 95BD 7C           	ld a,h
  54+ 95BE FE 57        	cp $57
  55+ 95C0 20 0A        	jr nz,1F
  56+ 95C2 7D           	ld a,l
  57+ 95C3 C6 20        	add $20
  58+ 95C5 30 05        	jr nc,1F
  59+ 95C7
  60+ 95C7              ; ------------------------------
  61+ 95C7 CD A2 98     	call Reaparece_arriba
  62+ 95CA              ;	call Reinicio
  63+ 95CA              ; ------------------------------
  64+ 95CA
  65+ 95CA 18 08        	jr 3F
  66+ 95CC CD B8 92     1 call NextScan
  67+ 95CF 22 43 87     	ld (Posicion_actual),hl
  68+ 95D2 10 E2            djnz 2B
  69+ 95D4 CD B8 98     3 call Genera_coordenadas
  70+ 95D7 C9           	ret
  71+ 95D8
  72+ 95D8              ; ******************************************************************************************************************************************************************************************
  73+ 95D8              ;
  74+ 95D8              ;   22/01/23
  75+ 95D8              ;
  76+ 95D8              ;	Mov_up
  77+ 95D8              ;
  78+ 95D8              ; 	Mueve el Sprite hacia arriba.
  79+ 95D8              ;
  80+ 95D8              ;
  81+ 95D8 21 6F 87     Mov_up ld hl,Ctrl_0
  82+ 95DB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  83+ 95DD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  84+ 95DD              ; 																		; _ en el caso de que no lo haya.
  85+ 95DD 3A 58 87     	ld a,(Vel_up)
  86+ 95E0 47           	ld b,a
  87+ 95E1 2A 43 87     	ld hl,(Posicion_actual)
  88+ 95E4 CD 78 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  89+ 95E7 A7           	and a
  90+ 95E8 20 10        	jr nz,1F
  91+ 95EA
  92+ 95EA              ; Nos encontramos en el 1er tercio de pantalla.
  93+ 95EA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  94+ 95EA
  95+ 95EA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  96+ 95EB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  97+ 95ED 20 0B            jr nz,1F
  98+ 95EF 7D               ld a,l
  99+ 95F0 D6 20            sub $20
 100+ 95F2 30 06            jr nc,1F
 101+ 95F4 25               dec h
 102+ 95F5
 103+ 95F5              ; -----------------------------
 104+ 95F5 CD 92 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 105+ 95F8              ;	call Reinicio
 106+ 95F8              ; -----------------------------
 107+ 95F8
 108+ 95F8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 109+ 95FA CD C7 92     1 call PreviousScan
 110+ 95FD 22 43 87     	ld (Posicion_actual),hl
 111+ 9600 10 E2            djnz 3B
 112+ 9602 CD B8 98     2 call Genera_coordenadas
 113+ 9605 C9           	ret
 114+ 9606
 115+ 9606              ; ******************************************************************************************************************************************************************************************
 116+ 9606              ;
 117+ 9606              ;	19/10/22
 118+ 9606              ;
 119+ 9606              ;	Mov_right.
 120+ 9606              ;
 121+ 9606              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 122+ 9606              ;
 123+ 9606
 124+ 9606 21 6F 87     Mov_right ld hl,Ctrl_0
 125+ 9609 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 126+ 960B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 127+ 960B              ; 																	; _ en el caso de que no lo haya.
 128+ 960B 3A 6F 87     	ld a,(Ctrl_0)
 129+ 960E CB 77        	bit 6,a
 130+ 9610 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 131+ 9612
 132+ 9612 CD 40 98     	call Stop_Amadeus_right
 133+ 9615 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 134+ 9616 18 4D        	jr 8F
 135+ 9618
 136+ 9618 3A 47 87     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 137+ 961B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 138+ 961D 20 46        	jr nz,8F
 139+ 961F
 140+ 961F 3A 49 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 141+ 9622 A7           	and a 															; _[3] para continuar con el DESPLZ.
 142+ 9623 28 40        	jr z,8F
 143+ 9625
 144+ 9625              ; ---------- ---------- ----------
 145+ 9625              ;
 146+ 9625              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 147+ 9625
 148+ 9625 3A 57 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 149+ 9628 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 150+ 962A 28 11        	jr z,1F
 151+ 962C 38 06        	jr c,6F
 152+ 962E FE 04        	cp 4
 153+ 9630 28 14        	jr z,7F
 154+ 9632 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 155+ 9634
 156+ 9634              ; ---------- ---------- ----------
 157+ 9634              ;
 158+ 9634              ; Perfiles de velocidad
 159+ 9634              ;
 160+ 9634
 161+ 9634 3A 49 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 162+ 9637 FE FE        	cp $fe
 163+ 9639 20 2A        	jr nz,8F
 164+ 963B 18 10        	jr 3F
 165+ 963D 3A 49 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 166+ 9640 FE FD        	cp $fd
 167+ 9642 20 21        	jr nz,8F
 168+ 9644 18 07        	jr 3F
 169+ 9646 3A 49 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 170+ 9649 FE FB        	cp $fb
 171+ 964B 20 18        	jr nz,8F
 172+ 964D
 173+ 964D              ; ---------- ---------- ----------
 174+ 964D
 175+ 964D              3
 176+ 964D CD 80 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 177+ 9650              ;	call Reinicio
 178+ 9650
 179+ 9650              ; ---------- ---------- ----------
 180+ 9650              ;
 181+ 9650              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 182+ 9650
 183+ 9650 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 184+ 9652 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 185+ 9653 CD 6C 96     	call DESPLZ_DER
 186+ 9656 C1           	pop bc
 187+ 9657 10 F9        	djnz 5B
 188+ 9659 2A 43 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 189+ 965C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 190+ 965D 22 43 87     	ld (Posicion_actual),hl
 191+ 9660 CD B8 98     	call Genera_coordenadas
 192+ 9663 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 193+ 9665
 194+ 9665              ; ---------- ---------- ----------
 195+ 9665
 196+ 9665 2A 43 87     8 ld hl,(Posicion_actual)
 197+ 9668 CD 6C 96     	call DESPLZ_DER
 198+ 966B C9           2 ret
 199+ 966C
 200+ 966C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 201+ 966C              ;
 202+ 966C              ;	22/9/22
 203+ 966C              ;
 204+ 966C
 205+ 966C CD 7B 96     DESPLZ_DER call Desplaza_derecha
 206+ 966F CD C7 96         call modifica_parametros_1er_DESPLZ_2
 207+ 9672 CD F0 96         call Ciclo_completo
 208+ 9675 21 6F 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 209+ 9678 CB FE        	set 7,(hl)
 210+ 967A C9           	ret
 211+ 967B
 212+ 967B              ; ******************************************************************************************************************************************************************************************
 213+ 967B              ;	15/02/23
 214+ 967B              ;
 215+ 967B
 216+ 967B 3A 57 87     Desplaza_derecha ld a,(Vel_right)
 217+ 967E 47           	ld b,a
 218+ 967F 2A 4F 87     	ld hl,(Puntero_DESPLZ_der)
 219+ 9682 23           1 inc hl
 220+ 9683 23           	inc hl
 221+ 9684 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 222+ 9686 22 4F 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 223+ 9689 CD 4F 8A     	call Extrae_address
 224+ 968C 22 45 87     	ld (Puntero_objeto),hl
 225+ 968F
 226+ 968F              ; Modifica (Puntero_DESPLZ_izq).
 227+ 968F
 228+ 968F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 229+ 968F              ; Cuántos movimientos hemos hecho ??
 230+ 968F              ; DE contiene (Puntero_DESPLZ_der).
 231+ 968F
 232+ 968F 2A 4B 87     7 ld hl,(Indice_Sprite_der)
 233+ 9692 EB           	ex de,hl
 234+ 9693 A7           	and a
 235+ 9694 ED 52        	sbc hl,de
 236+ 9696 CB 3D        	srl l
 237+ 9698 3E 08        6 ld a,8
 238+ 969A 95           	sub l
 239+ 969B 30 1E        	jr nc,3F
 240+ 969D
 241+ 969D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 242+ 969D              ; B="0".
 243+ 969D
 244+ 969D 04           4 inc b
 245+ 969E 3C           	inc a
 246+ 969F 20 FC        	jr nz,4B
 247+ 96A1 78           	ld a,b
 248+ 96A2 08           	ex af,af
 249+ 96A3 2A 4B 87     	ld hl,(Indice_Sprite_der)
 250+ 96A6 23           5 inc hl
 251+ 96A7 23           	inc hl
 252+ 96A8 10 FC        	djnz 5B
 253+ 96AA 22 4F 87     	ld (Puntero_DESPLZ_der),hl
 254+ 96AD CD 4F 8A     	call Extrae_address
 255+ 96B0 22 45 87     	ld (Puntero_objeto),hl
 256+ 96B3
 257+ 96B3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 258+ 96B3              ; _(Posicion_actual).
 259+ 96B3
 260+ 96B3 21 43 87     	ld hl,Posicion_actual
 261+ 96B6 34           	inc (hl)
 262+ 96B7 08               ex af,af
 263+ 96B8 6F           	ld l,a
 264+ 96B9 18 DD        	jr 6B
 265+ 96BB
 266+ 96BB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 267+ 96BB
 268+ 96BB 47           3 ld b,a
 269+ 96BC 2A 4D 87     	ld hl,(Indice_Sprite_izq)
 270+ 96BF 23           2 inc hl
 271+ 96C0 23           	inc hl
 272+ 96C1 10 FC        	djnz 2B
 273+ 96C3 22 51 87     	ld (Puntero_DESPLZ_izq),hl
 274+ 96C6 C9           8 ret
 275+ 96C7
 276+ 96C7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 277+ 96C7              ;
 278+ 96C7              ;	24/7/22
 279+ 96C7              ;
 280+ 96C7              ;	modifica_parametros_1er_DESPLZ_2
 281+ 96C7              ;
 282+ 96C7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 283+ 96C7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 284+ 96C7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 285+ 96C7
 286+ 96C7 3A 49 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 287+ 96CA A7           	and a
 288+ 96CB 20 1F        	jr nz,1F
 289+ 96CD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 290+ 96CF 32 49 87         ld (CTRL_DESPLZ),a
 291+ 96D2
 292+ 96D2 21 42 87     	ld hl,Columns
 293+ 96D5 34           	inc (hl)
 294+ 96D6 3A 55 87     	ld a,(Cuad_objeto)
 295+ 96D9 E6 01        	and 1
 296+ 96DB 28 0F        	jr z,1F
 297+ 96DD 2A 43 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 298+ 96E0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 299+ 96E1 22 43 87     	ld (Posicion_actual),hl
 300+ 96E4 CD B8 98     	call Genera_coordenadas
 301+ 96E7 CD 4C 98     	call Inc_CTRL_DESPLZ
 302+ 96EA 18 03        	jr 2F
 303+ 96EC CD 4C 98     1 call Inc_CTRL_DESPLZ
 304+ 96EF C9           2 ret
 305+ 96F0
 306+ 96F0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 307+ 96F0              ;
 308+ 96F0              ;	24/7/22
 309+ 96F0              ;
 310+ 96F0              ;	Ciclo_completo.
 311+ 96F0              ;
 312+ 96F0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 313+ 96F0              ;
 314+ 96F0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 315+ 96F0              ; 	Decrementamos (Columns).
 316+ 96F0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 317+ 96F0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 318+ 96F0
 319+ 96F0
 320+ 96F0 3A 49 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 321+ 96F3 FE FF        	cp $ff
 322+ 96F5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 323+ 96F7 E6 F0        	and $f0
 324+ 96F9 20 28        	jr nz,3F
 325+ 96FB
 326+ 96FB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 327+ 96FB
 328+ 96FB 3A 49 87     	ld a,(CTRL_DESPLZ)
 329+ 96FE 47           	ld b,a
 330+ 96FF 3E F8        	ld a,$f8
 331+ 9701 80           	add b
 332+ 9702 32 49 87     	ld (CTRL_DESPLZ),a
 333+ 9705 18 1C        	jr 3F
 334+ 9707 21 42 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 335+ 970A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 336+ 970B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 337+ 970C 32 49 87     	ld (CTRL_DESPLZ),a
 338+ 970F 3A 55 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 339+ 9712 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 340+ 9714 20 0A        	jr nz,2F
 341+ 9716 2A 43 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 342+ 9719 23           	inc hl
 343+ 971A 22 43 87     	ld (Posicion_actual),hl
 344+ 971D CD B8 98     	call Genera_coordenadas
 345+ 9720
 346+ 9720              ; Inicia el puntero de Sprite.
 347+ 9720
 348+ 9720 CD 66 8A     2 call Inicia_puntero_objeto_der
 349+ 9723 C9           3 ret
 350+ 9724
 351+ 9724              ; ******************************************************************************************************************************************************************************************
 352+ 9724              ;
 353+ 9724              ;	15/02/23
 354+ 9724              ;
 355+ 9724              ;	Mov_left.
 356+ 9724              ;
 357+ 9724              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 358+ 9724              ;
 359+ 9724 21 6F 87     Mov_left ld hl,Ctrl_0
 360+ 9727 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 361+ 9729              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 362+ 9729              ; 																	; _ en el caso de que no lo haya.
 363+ 9729 3A 6F 87     	ld a,(Ctrl_0)
 364+ 972C CB 77        	bit 6,a
 365+ 972E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 366+ 9730
 367+ 9730 CD 46 98     	call Stop_Amadeus_left
 368+ 9733 C8           	ret z
 369+ 9734 20 4A        	jr nz,8F
 370+ 9736
 371+ 9736 3A 47 87     11 ld a,(Coordenada_X)
 372+ 9739 A7           	and a
 373+ 973A 20 44        	jr nz,8F
 374+ 973C
 375+ 973C 3A 49 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 376+ 973F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 377+ 9740 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 378+ 9742
 379+ 9742              ; ---------- ---------- ----------
 380+ 9742
 381+ 9742 3A 56 87     	ld a,(Vel_left)
 382+ 9745 FE 02        	cp 2
 383+ 9747 28 0F        	jr z,1F
 384+ 9749 38 04        	jr c,6F
 385+ 974B FE 04        	cp 4
 386+ 974D 28 12        	jr z,7F
 387+ 974F
 388+ 974F              ; ---------- ---------- ----------
 389+ 974F
 390+ 974F 3A 49 87     6 ld a,(CTRL_DESPLZ)
 391+ 9752 FE F8        	cp $f8
 392+ 9754 20 2A        	jr nz,8F
 393+ 9756 18 10        	jr 4F
 394+ 9758 3A 49 87     1 ld a,(CTRL_DESPLZ)
 395+ 975B FE F9        	cp $f9
 396+ 975D 20 21        	jr nz,8F
 397+ 975F 18 07        	jr 4F
 398+ 9761 3A 49 87     7 ld a,(CTRL_DESPLZ)
 399+ 9764 FE FB        	cp $fb
 400+ 9766 20 18        	jr nz,8F
 401+ 9768
 402+ 9768              ; ---------- ---------- ----------
 403+ 9768
 404+ 9768              4
 405+ 9768 CD 6E 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 406+ 976B              ;	call Reinicio
 407+ 976B
 408+ 976B              ; ---------- ---------- ----------
 409+ 976B
 410+ 976B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 411+ 976D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 412+ 976E
 413+ 976E              ;	ld hl,(Indice_Sprite_izq)
 414+ 976E              ;	ld (Puntero_DESPLZ_izq),hl
 415+ 976E
 416+ 976E CD 87 97     	call DESPLZ_IZQ
 417+ 9771 C1           	pop bc
 418+ 9772 10 F9        	djnz 5B
 419+ 9774 2A 43 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 420+ 9777 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 421+ 9778 22 43 87     	ld (Posicion_actual),hl
 422+ 977B CD B8 98     	call Genera_coordenadas
 423+ 977E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 424+ 9780
 425+ 9780              ; ---------- ---------- ----------
 426+ 9780
 427+ 9780              ; Movemos, no hay recolocación.
 428+ 9780
 429+ 9780 2A 43 87     8 ld hl,(Posicion_actual)
 430+ 9783 CD 87 97     	call DESPLZ_IZQ
 431+ 9786 C9           2 ret
 432+ 9787
 433+ 9787              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 434+ 9787              ;
 435+ 9787              ;	22/9/22
 436+ 9787
 437+ 9787              DESPLZ_IZQ
 438+ 9787
 439+ 9787 CD 96 97     	call Desplaza_izquierda
 440+ 978A CD E2 97         call modifica_parametros_1er_DESPLZ
 441+ 978D CD 0A 98     	call Ciclo_completo_2
 442+ 9790 21 6F 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 443+ 9793 CB BE        	res 7,(hl)
 444+ 9795 C9           	ret
 445+ 9796
 446+ 9796              Desplaza_izquierda
 447+ 9796
 448+ 9796 3A 56 87     	ld a,(Vel_left)
 449+ 9799 47           	ld b,a
 450+ 979A 2A 51 87     	ld hl,(Puntero_DESPLZ_izq)
 451+ 979D 23           1 inc hl
 452+ 979E 23           	inc hl
 453+ 979F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 454+ 97A1 22 51 87     	ld (Puntero_DESPLZ_izq),hl
 455+ 97A4 CD 4F 8A     	call Extrae_address
 456+ 97A7 22 45 87     	ld (Puntero_objeto),hl
 457+ 97AA
 458+ 97AA              ; Modifica (Puntero_DESPLZ_der).
 459+ 97AA
 460+ 97AA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 461+ 97AA              ; Cuántos movimientos hemos hecho ??
 462+ 97AA              ; DE contiene (Puntero_DESPLZ_izq).
 463+ 97AA
 464+ 97AA 2A 4D 87     7 ld hl,(Indice_Sprite_izq)
 465+ 97AD EB           	ex de,hl
 466+ 97AE A7           	and a
 467+ 97AF ED 52        	sbc hl,de
 468+ 97B1 CB 3D        	srl l
 469+ 97B3 3E 08        6 ld a,8
 470+ 97B5 95           	sub l
 471+ 97B6 30 1E        	jr nc,3F
 472+ 97B8
 473+ 97B8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 474+ 97B8              ; B="0".
 475+ 97B8
 476+ 97B8 04           4 inc b
 477+ 97B9 3C           	inc a
 478+ 97BA 20 FC        	jr nz,4B
 479+ 97BC 78           	ld a,b
 480+ 97BD 08           	ex af,af
 481+ 97BE 2A 4D 87     	ld hl,(Indice_Sprite_izq)
 482+ 97C1 23           5 inc hl
 483+ 97C2 23           	inc hl
 484+ 97C3 10 FC        	djnz 5B
 485+ 97C5 22 51 87     	ld (Puntero_DESPLZ_izq),hl
 486+ 97C8 CD 4F 8A     	call Extrae_address
 487+ 97CB 22 45 87     	ld (Puntero_objeto),hl
 488+ 97CE
 489+ 97CE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 490+ 97CE              ; _(Posicion_actual).
 491+ 97CE
 492+ 97CE 21 43 87     	ld hl,Posicion_actual
 493+ 97D1 35           	dec (hl)
 494+ 97D2 08           	ex af,af
 495+ 97D3 6F           	ld l,a
 496+ 97D4 18 DD        	jr 6B
 497+ 97D6
 498+ 97D6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 499+ 97D6
 500+ 97D6 47           3 ld b,a
 501+ 97D7 2A 4B 87     	ld hl,(Indice_Sprite_der)
 502+ 97DA 23           2 inc hl
 503+ 97DB 23           	inc hl
 504+ 97DC 10 FC        	djnz 2B
 505+ 97DE 22 4F 87     	ld (Puntero_DESPLZ_der),hl
 506+ 97E1 C9           8 ret
 507+ 97E2
 508+ 97E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 97E2              ;
 510+ 97E2              ;	modifica_parametros_1er_DESPLZ
 511+ 97E2              ;
 512+ 97E2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 513+ 97E2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 514+ 97E2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 515+ 97E2
 516+ 97E2 3A 49 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 517+ 97E5 A7           	and a
 518+ 97E6 20 1E        	jr nz,1F
 519+ 97E8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 520+ 97E9 32 49 87         ld (CTRL_DESPLZ),a
 521+ 97EC 21 42 87     	ld hl,Columns
 522+ 97EF 34           	inc (hl)
 523+ 97F0 3A 55 87     	ld a,(Cuad_objeto)
 524+ 97F3 E6 01        	and 1
 525+ 97F5 20 0F        	jr nz,1F
 526+ 97F7 2A 43 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 527+ 97FA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 528+ 97FB 22 43 87     	ld (Posicion_actual),hl
 529+ 97FE CD B8 98     	call Genera_coordenadas
 530+ 9801 CD 5D 98     	call Dec_CTRL_DESPLZ
 531+ 9804 18 03        	jr 2F
 532+ 9806 CD 5D 98     1 call Dec_CTRL_DESPLZ
 533+ 9809 C9           2 ret
 534+ 980A
 535+ 980A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 536+ 980A
 537+ 980A 3A 49 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 538+ 980D FE F7        	cp $f7
 539+ 980F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 540+ 9811 30 2C        	jr nc,3F
 541+ 9813
 542+ 9813              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 543+ 9813
 544+ 9813 06 00        	ld b,0
 545+ 9815 04           4 inc b
 546+ 9816 3C           	inc a
 547+ 9817 FE F7        	cp $f7
 548+ 9819 20 FA        	jr nz,4B
 549+ 981B 3E FF        	ld a,$ff
 550+ 981D 90           	sub b
 551+ 981E 32 49 87     	ld (CTRL_DESPLZ),a
 552+ 9821 18 1C        	jr 3F
 553+ 9823
 554+ 9823              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 555+ 9823
 556+ 9823 21 42 87     1 ld hl,Columns
 557+ 9826 35           	dec (hl)
 558+ 9827 AF           	xor a
 559+ 9828 32 49 87     	ld (CTRL_DESPLZ),a
 560+ 982B 3A 55 87     	ld a,(Cuad_objeto)
 561+ 982E E6 01        	and 1
 562+ 9830 28 0A        	jr z,2F
 563+ 9832 2A 43 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 564+ 9835 2B           	dec hl
 565+ 9836 22 43 87     	ld (Posicion_actual),hl
 566+ 9839 CD B8 98     	call Genera_coordenadas
 567+ 983C
 568+ 983C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 569+ 983C
 570+ 983C CD 79 8A     2 call Inicia_puntero_objeto_izq
 571+ 983F C9           3 ret
 572+ 9840
 573+ 9840              ; ---------- ---------- ---------- ---------- ---------- ----------
 574+ 9840              ;
 575+ 9840              ;	19/10/22
 576+ 9840              ;
 577+ 9840              ;	(cp 29) para un Amadeus de 3 Columns.
 578+ 9840              ;	(cp 30)   ""  ""    ""     2 Columns.
 579+ 9840
 580+ 9840 3A 47 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 581+ 9843 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 582+ 9845 C9           	ret
 583+ 9846
 584+ 9846              ; ---------- ---------- ---------- ---------- ---------- ----------
 585+ 9846              ;
 586+ 9846              ;	19/10/22
 587+ 9846              ;
 588+ 9846              ;	(cp 2) para un Amadeus de 3 Columns.
 589+ 9846              ;	(cp 1)   ""  ""    ""     2 Columns.
 590+ 9846
 591+ 9846 3A 47 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 592+ 9849 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 593+ 984B C9           	ret
 594+ 984C
 595+ 984C              ; ---------- ---------- ---------- ---------- ---------- ----------
 596+ 984C              ;
 597+ 984C              ;	24/7/22
 598+ 984C              ;
 599+ 984C              ;	Inc_CTRL_DESPLZ
 600+ 984C              ;
 601+ 984C              ;
 602+ 984C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 603+ 984C
 604+ 984C 21 49 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 605+ 984F 3A 57 87     	ld a,(Vel_right)
 606+ 9852 A7           	and a
 607+ 9853 28 06        	jr z,1F
 608+ 9855 47           	ld b,a
 609+ 9856 34           3 inc (hl)
 610+ 9857 10 FD        	djnz 3B
 611+ 9859 18 01        	jr 2F
 612+ 985B 34           1 inc (hl)
 613+ 985C C9           2 ret
 614+ 985D
 615+ 985D              ; ---------- ---------- ---------- ---------- ---------- ----------
 616+ 985D              ;
 617+ 985D              ;	5/2/23
 618+ 985D              ;
 619+ 985D              ;	Dec_CTRL_DESPLZ
 620+ 985D              ;
 621+ 985D              ;
 622+ 985D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 623+ 985D
 624+ 985D 21 49 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 625+ 9860 3A 56 87     	ld a,(Vel_left)
 626+ 9863 A7           	and a
 627+ 9864 28 06        	jr z,1F
 628+ 9866 47           	ld b,a
 629+ 9867 35           3 dec (hl)
 630+ 9868 10 FD        	djnz 3B
 631+ 986A 18 01        	jr 2F
 632+ 986C 35           1 dec (hl)
 633+ 986D C9           2 ret
 634+ 986E
 635+ 986E              ; ---------- ---------- ---------- ---------- ---------- ----------
 636+ 986E
 637+ 986E 2A 43 87     Reaparece_derecha ld hl,(Posicion_actual)
 638+ 9871 01 1F 00     	ld bc,31
 639+ 9874 A7           	and a
 640+ 9875 ED 4A        	adc hl,bc
 641+ 9877 22 43 87     	ld (Posicion_actual),hl
 642+ 987A 21 6F 87     	ld hl,Ctrl_0														; $xxx1
 643+ 987D CB C6        	set 0,(hl)
 644+ 987F C9           	ret
 645+ 9880
 646+ 9880              ; ---------- ---------- ---------- ---------- ---------- ----------
 647+ 9880
 648+ 9880 2A 43 87     Reaparece_izquierda ld hl,(Posicion_actual)
 649+ 9883 01 1F 00     	ld bc,31
 650+ 9886 A7           	and a
 651+ 9887 ED 42        	sbc hl,bc
 652+ 9889 22 43 87     	ld (Posicion_actual),hl 											; $xx1x
 653+ 988C 21 6F 87     	ld hl,Ctrl_0
 654+ 988F CB CE        	set 1,(hl)
 655+ 9891 C9           	ret
 656+ 9892
 657+ 9892              ; ---------- ---------- ---------- ---------- ---------- ----------
 658+ 9892
 659+ 9892 24           Reaparece_abajo inc h
 660+ 9893 01 E0 17     	ld bc,$17e0
 661+ 9896 A7           	and a
 662+ 9897 ED 4A        	adc hl,bc
 663+ 9899 22 43 87     	ld (Posicion_actual),hl
 664+ 989C 21 6F 87     	ld hl,Ctrl_0
 665+ 989F CB D6        	set 2,(hl)
 666+ 98A1 C9           	ret
 667+ 98A2
 668+ 98A2              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 98A2
 670+ 98A2 01 E0 17     Reaparece_arriba ld bc,$17e0
 671+ 98A5 A7           	and a
 672+ 98A6 ED 42        	sbc hl,bc
 673+ 98A8 22 43 87     	ld (Posicion_actual),hl
 674+ 98AB 21 6F 87     	ld hl,Ctrl_0
 675+ 98AE CB DE        	set 3,(hl)
 676+ 98B0 C9           	ret
 677+ 98B1
 678+ 98B1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 679+ 98B1
 680+ 98B1 2A 53 87     Reinicio ld hl,(Posicion_inicio)
 681+ 98B4 22 43 87     	ld (Posicion_actual),hl
 682+ 98B7 C9           	ret
# file closed: Direcciones.asm
1194  98B8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 98B8              ; ------------------------------------------------------------------------
   2+ 98B8              ;
   3+ 98B8              ;	02/04/23
   4+ 98B8              ;
   5+ 98B8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 98B8              ;	Fila superior "0", Columna izquierda "0".
   7+ 98B8              ;
   8+ 98B8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 98B8              ;
  10+ 98B8              ;	Modifica: A,BC y DE.
  11+ 98B8
  12+ 98B8 C5           Genera_coordenadas push bc
  13+ 98B9 E5           	push hl
  14+ 98BA D5           	push de
  15+ 98BB
  16+ 98BB 2A 43 87     	ld hl,(Posicion_actual)
  17+ 98BE
  18+ 98BE 7D           	ld a,l
  19+ 98BF E6 1F        	and $1f
  20+ 98C1 32 47 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 98C4
  22+ 98C4 CD 78 95     	call calcula_tercio
  23+ 98C7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 98C8
  25+ 98C8 1E 00        	ld e,0
  26+ 98CA 7D           	ld a,l
  27+ 98CB E6 E0        	and $e0
  28+ 98CD 28 01        	jr z,1F
  29+ 98CF 04           	inc b
  30+ 98D0
  31+ 98D0 04           1 inc b
  32+ 98D1 05           	dec b
  33+ 98D2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 98D4              ;														; _ , salimos.
  35+ 98D4 1C           3 inc e
  36+ 98D5 D6 20        	sub 32
  37+ 98D7 20 FB        	jr nz,3B
  38+ 98D9 10 F5        	djnz 1B
  39+ 98DB
  40+ 98DB 7B           2 ld a,e
  41+ 98DC 32 48 87     	ld (Coordenada_y),a
  42+ 98DF
  43+ 98DF D1           	pop de
  44+ 98E0 E1           	pop hl
  45+ 98E1 C1           	pop bc
  46+ 98E2
  47+ 98E2 C9           	ret
  48+ 98E3
  49+ 98E3              ; ------------------------------------------------------------------------
  50+ 98E3              ;	28/03/23
  51+ 98E3              ;
  52+ 98E3              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 98E3              ;	Fila superior "0", Columna izquierda "0".
  54+ 98E3              ;
  55+ 98E3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 98E3              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 98E3              ;
  58+ 98E3              ;		DE="$120d"
  59+ 98E3              ;
  60+ 98E3              ;		D, (Coordenada_X), Columnas, $12
  61+ 98E3              ;		E, (Coordenada_y), Filas, $0d
  62+ 98E3              ;
  63+ 98E3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 98E3
  65+ 98E3              ;	Modifica: A,BC y DE.
  66+ 98E3
  67+ 98E3
  68+ 98E3              Genera_coordenadas_disparo
  69+ 98E3
  70+ 98E3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 98E3
  72+ 98E3 7D           	ld a,l
  73+ 98E4 E6 1F        	and $1f
  74+ 98E6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 98E7 CD 78 95     	call calcula_tercio
  76+ 98EA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 98EB 1E 00        	ld e,0
  78+ 98ED 7D           	ld a,l
  79+ 98EE E6 E0        	and $e0
  80+ 98F0 28 01        	jr z,1F
  81+ 98F2 04           	inc b
  82+ 98F3 1C           1 inc e
  83+ 98F4 D6 20        	sub 32
  84+ 98F6 20 FB        	jr nz,1B
  85+ 98F8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 98FA C9           	ret
  87+ 98FB
# file closed: Genera_coordenadas.asm
1195  98FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 98FB
   2+ 98FB
   3+ 98FB              ;   11/8/22
   4+ 98FB              ;
   5+ 98FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 98FB              ;
   7+ 98FB              ;   Mov_obj.asm
   8+ 98FB              ;
   9+ 98FB              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 98FB              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 98FB              ;
  12+ 98FB              ;   Codificación:
  13+ 98FB              ;
  14+ 98FB              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 98FB
  16+ 98FB              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 98FB
  18+ 98FB 02 40 00     Arriba db 2,%01000000,0
  19+ 98FE 02 80 00     Abajo db 2,%10000000,0
  20+ 9901 02 20 00     Derecha db 2,%00100000,0
  21+ 9904 02 10 00     Izquierda db 2,%00010000,0
  22+ 9907 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 990B 60 42 60 40
  22+ 990F 63
  23+ 9910 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9914 22 A3 80 A0
  24+ 9918 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 991C 84 A0 83 A0
  25+ 9920 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9924 80 A3 22 A0
  26+ 9928 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 992C 40 60 42 60
  27+ 9930 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9934
  29+ 9934 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9938 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 993C 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9940 84 00
  32+ 9942 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9946 84 00
  33+ 9948 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 994C 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9950 1F 1F 1F 1F
  35+ 9954 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9958 1F 1F 1F 1F
  35+ 995C 1F
  36+ 995D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9961 2F 2F 2F 2F
  36+ 9965 2F 2F
  37+ 9967 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 996B 2F 2F 00
  38+ 996E
  39+ 996E              ; ----- ----- ----- ----- -----
  40+ 996E
  41+ 996E 4C 99        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9970 48 99        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9972 04 99        Indice_mov_Izquierda defw Izquierda
  44+ 9974 01 99        Indice_mov_Derecha defw Derecha
  45+ 9976 FE 98        Indice_mov_Abajo defw Abajo
  46+ 9978 FB 98        Indice_mov_Arriba defw Arriba
  47+ 997A 38 99        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 997C 3C 99        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 997E 34 99        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9980 42 99        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9982 07 99        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9984              ; ----- ----- ----- ----- -----
  53+ 9984
  54+ 9984 3A 76 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9987 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9988 28 02            jr z,1F
  57+ 998A 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 998C 3A 77 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 998F C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9991 32 77 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9994              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9994 2A 74 87         ld hl,(Puntero_mov)
  63+ 9997 7E               ld a,(hl)
  64+ 9998 32 76 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 999B 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 999C 22 74 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 999F
  68+ 999F 3A 78 87     Decoder ld a,(Repetimos_db)
  69+ 99A2 A7               and a
  70+ 99A3 20 0C            jr nz,12F
  71+ 99A5 2A 74 87         ld hl,(Puntero_mov)
  72+ 99A8 7E               ld a,(hl)
  73+ 99A9 A7               and a
  74+ 99AA 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 99AC E6 0F            and $0f
  76+ 99AE 32 78 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 99B1              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 99B1 2A 74 87     12 ld hl,(Puntero_mov)
  79+ 99B4 CB 7E            bit 7,(hl)
  80+ 99B6 28 03            jr z,2F
  81+ 99B8 CD AA 95         call Mov_down
  82+ 99BB 2A 74 87     2 ld hl, (Puntero_mov)
  83+ 99BE CB 76            bit 6,(hl)
  84+ 99C0 28 03            jr z,3F
  85+ 99C2 CD D8 95         call Mov_up
  86+ 99C5 2A 74 87     3 ld hl, (Puntero_mov)
  87+ 99C8 CB 6E            bit 5,(hl)
  88+ 99CA 28 03            jr z,4F
  89+ 99CC CD 06 96         call Mov_right
  90+ 99CF 2A 74 87     4 ld hl, (Puntero_mov)
  91+ 99D2 CB 66            bit 4,(hl)
  92+ 99D4 28 03            jr z,5F
  93+ 99D6 CD 24 97         call Mov_left
  94+ 99D9
  95+ 99D9              ; ---------- --------- --------- ---------- ----------
  96+ 99D9
  97+ 99D9 3A 78 87     5 ld a,(Repetimos_db)
  98+ 99DC A7               and a
  99+ 99DD 28 07            jr z,6F
 100+ 99DF 3D               dec a
 101+ 99E0 32 78 87         ld (Repetimos_db),a
 102+ 99E3 28 01            jr z,6f
 103+ 99E5 C9           11 ret
 104+ 99E6 21 76 87     6 ld hl,Contador_db_mov
 105+ 99E9 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 99EA 2A 74 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 99ED 23               inc hl
 108+ 99EE 22 74 87         ld (Puntero_mov),hl
 109+ 99F1 18 F2            jr 11B
 110+ 99F3 2A 72 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 99F6 3A 77 87         ld a,(Incrementa_puntero)
 112+ 99F9 47               ld b,a
 113+ 99FA 23           8 inc hl
 114+ 99FB 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 99FD 5E               ld e,(hl)
 116+ 99FE 23               inc hl
 117+ 99FF 56               ld d,(hl)
 118+ 9A00 EB               ex de,hl
 119+ 9A01 22 74 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9A04 18 DF            jr 11B
 121+ 9A06
 122+ 9A06              ; ---------- --------- --------- ---------- ----------
 123+ 9A06              ;
 124+ 9A06              ;   11/8/22
 125+ 9A06              ;
 126+ 9A06              ;   Prepara_Puntero_mov
 127+ 9A06
 128+ 9A06 E5           Prepara_Puntero_mov push hl
 129+ 9A07 D5               push de
 130+ 9A08 2A 72 87         ld hl,(Puntero_indice_mov)
 131+ 9A0B 5E               ld e,(hl)
 132+ 9A0C 23               inc hl
 133+ 9A0D 56               ld d,(hl)
 134+ 9A0E EB               ex de,hl
 135+ 9A0F 22 74 87         ld (Puntero_mov),hl
 136+ 9A12 D1               pop de
 137+ 9A13 E1               pop hl
 138+ 9A14 C9               ret
 139+ 9A15
 140+ 9A15              ; ---------- --------- --------- ---------- ----------
 141+ 9A15              ;
 142+ 9A15              ;   11/8/22
 143+ 9A15              ;
 144+ 9A15              ;   Reinicia_el_movimiento
 145+ 9A15
 146+ 9A15 CD 06 9A     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9A18 AF               xor a
 148+ 9A19 32 76 87         ld (Contador_db_mov),a
 149+ 9A1C 32 77 87         ld (Incrementa_puntero),a
 150+ 9A1F C3 84 99         jp Movimiento
 151+ 9A22 C9               ret
 152+ 9A23              ; ---------- --------- --------- ---------- ----------
 153+ 9A23
 154+ 9A23
 155+ 9A23
 156+ 9A23
 157+ 9A23
 158+ 9A23
 159+ 9A23
 160+ 9A23
 161+ 9A23
 162+ 9A23
 163+ 9A23
 164+ 9A23
 165+ 9A23
 166+ 9A23
 167+ 9A23
 168+ 9A23
 169+ 9A23
 170+ 9A23
# file closed: Patrones_de_mov.asm
1196  9A23              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9A23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9A23              ;
   3+ 9A23              ;	3/1/23
   4+ 9A23              ;
   5+ 9A23              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9A23
   7+ 9A23              ;	ADC HL,SP	LD (addr),SP
   8+ 9A23              ;	ADD HL,SP	LD SP,(addr)
   9+ 9A23              ;	ADD IX,SP	LD SP,nn
  10+ 9A23              ; 	ADD IY,SP	LD SP,HL
  11+ 9A23              ;				LD SP,IX
  12+ 9A23              ;	DEC SP		LD SP,IY
  13+ 9A23
  14+ 9A23              ;	EX (SP),HL
  15+ 9A23              ;	EX (SP),IX
  16+ 9A23              ;	EX (SP),IY
  17+ 9A23
  18+ 9A23              ;	INC SP
  19+ 9A23
  20+ 9A23
  21+ 9A23                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 8D 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 7E 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 93 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 91 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 93 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 91 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 8D 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1197  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1198  7FE6
1199  7FE6              	SAVESNA "Pruebas.sna", START
1200  7FE6
1201  7FE6
1202  7FE6
# file closed: Banco_de_pruebas.asm
