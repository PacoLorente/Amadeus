# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD BC 8E     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 11 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 15 8A        	defw End_Snapshot_1
 267+ 8500 19 8A        	defw End_Snapshot_2
 268+ 8502 1D 8A        	defw End_Snapshot_3
 269+ 8504 13 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 17 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1B 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1F 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  20  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 98 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 98 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  21  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C0 01 02
  22+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C6 01 02
  23+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CD 01
  25+ 88CE 03 01 01 01  	db 3,1,1,1,1
  25+ 88D2 01
  26+ 88D3 03 01 01 01  	db 3,1,1,1,1
  26+ 88D7 01
  27+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DD 01
  29+ 88DE 04 01 01 01  	db 4,1,1,1,1
  29+ 88E2 01
  30+ 88E3 04 01 01 01  	db 4,1,1,1,1
  30+ 88E7 01
  31+ 88E8 02 03        	db 2,3
  32+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EF 01
  34+ 88F0 05 01 01 01  	db 5,1,1,1,1
  34+ 88F4 01
  35+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F9 01
  36+ 88FA 05 01 01 01  	db 5,1,1,1,1
  36+ 88FE 01
  37+ 88FF
  38+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FF              ;
  40+ 88FF              ;   21/5/23
  41+ 88FF              ;
  42+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FF              ;	_en la caja DRAW correspondiente.
  46+ 88FF              ;
  47+ 88FF              ;	MODIFICA: HL,DE y A.
  48+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FF
  50+ 88FF              Inicializa_Punteros_de_nivel
  51+ 88FF
  52+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8902 22 4B 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8905 CD 92 8D     	call Extrae_address
  55+ 8908 7E           	ld a,(hl)
  56+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  57+ 890C 23           	inc hl
  58+ 890D 22 4D 8A     	ld (Datos_de_nivel),hl
  59+ 8910 C9           	ret
  60+ 8911
  61+ 8911              ;---------------------------------------------------------------------------------------------------------------
  62+ 8911              ;
  63+ 8911              ;   13/5/23
  64+ 8911              ;
  65+ 8911              ;	Destruye A,BC,HL,DE
  66+ 8911
  67+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8911              ;	_del juego.
  69+ 8911
  70+ 8911              Prepara_cajas
  71+ 8911
  72+ 8911              ; Preparamos los punteros de las cajas.
  73+ 8911
  74+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8914 CD 92 8D     	call Extrae_address
  76+ 8917 CD 54 89     	call Avanza_caja
  77+ 891A
  78+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891D
  80+ 891D 2A 4D 8A     	ld hl,(Datos_de_nivel)
  81+ 8920
  82+ 8920              ; HL está en los datos del nivel correspondiente.
  83+ 8920              ; B actuará como contador de cajas.
  84+ 8920
  85+ 8920 C5           1 push bc
  86+ 8921
  87+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8922 CD 45 89     	call PreparaBC
  89+ 8925
  90+ 8925 21 85 88     	ld hl,Indice_de_entidades
  91+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892E
  94+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  95+ 8931
  96+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  97+ 8934 CD 92 8D     	call Extrae_address
  98+ 8937 CD 54 89     	call Avanza_caja
  99+ 893A
 100+ 893A 2A 4D 8A     	ld hl,(Datos_de_nivel)
 101+ 893D 23           	inc hl
 102+ 893E 22 4D 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8941
 104+ 8941 C1           	pop bc
 105+ 8942 10 DC        	djnz 1B
 106+ 8944 C9           	ret
 107+ 8945
 108+ 8945 CB 27        PreparaBC sla a
 109+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8949 4F           	ld c,a
 111+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894C C9           	ret
 113+ 894D
 114+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894E ED 4A        	adc hl,bc
 116+ 8950 CD 92 8D     	call Extrae_address
 117+ 8953 C9           	ret
 118+ 8954
 119+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8957 13           	inc de
 121+ 8958 13           	inc de
 122+ 8959 EB           	ex de,hl
 123+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895D C9           	ret
 125+ 895E
 126+ 895E              Datos_de_entidad_a_caja
 127+ 895E
 128+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895E
 130+ 895E
 131+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8962
 133+ 8962 01 02 00     	ld bc,2
 134+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8967
 136+ 8967 01 07 00     	ld bc,7
 137+ 896A CD 92 89     	call Situa_DE
 138+ 896D
 139+ 896D 01 05 00     	ld bc,5
 140+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8972
 142+ 8972 01 04 00     	ld bc,4
 143+ 8975 CD 92 89     	call Situa_DE
 144+ 8978
 145+ 8978 01 07 00     	ld bc,7
 146+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897D
 148+ 897D 01 18 00     	ld bc,24
 149+ 8980 CD 92 89     	call Situa_DE
 150+ 8983
 151+ 8983 01 02 00     	ld bc,2
 152+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8988
 154+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8988
 157+ 8988 01 0F 00     	ld bc,15									; *****
 158+ 898B CD 92 89     	call Situa_DE
 159+ 898E
 160+ 898E 3E 03        	ld a,3
 161+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8991
 163+ 8991 C9           	ret
 164+ 8992
 165+ 8992 EB           Situa_DE ex de,hl
 166+ 8993 A7           	and a
 167+ 8994 ED 4A        	adc hl,bc
 168+ 8996 EB           	ex de,hl
 169+ 8997 C9           	ret
 170+ 8998
 171+ 8998              ;---------------------------------------------------------------------------------------------------------------
 172+ 8998              ;
 173+ 8998              ;	21/5/23
 174+ 8998              ;
 175+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8998              ;
 178+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8998              ;
 182+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8998              ;	MODIFICA: A y B.
 184+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8998
 186+ 8998              Admin_num_entidades
 187+ 8998
 188+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8998
 190+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 191+ 899B A7           	and a
 192+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899C              ;	jr z,$
 194+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899C
 196+ 899C 20 03        	jr nz,3F
 197+ 899E
 198+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899E
 200+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A1
 202+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 203+ 89A4 FE 0A        	cp 10
 204+ 89A6 38 08        	jr c,1F
 205+ 89A8
 206+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A8              ; Actualizamos variables.
 208+ 89A8
 209+ 89A8 3E 0A        	ld a,10
 210+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AD 47           	ld b,a
 212+ 89AE 18 04        	jr 2F
 213+ 89B0
 214+ 89B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B0              ; (Numero_de_entidades)="0".
 216+ 89B0
 217+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B3 47           	ld b,a
 219+ 89B4 C9           2 ret
# file closed: Niveles.asm
  22  89B5
  23  89B5              ; ******************************************************************************************************************************************************************************************
  24  89B5              ; Constantes.
  25  89B5              ; ******************************************************************************************************************************************************************************************
  26  89B5              ;
  27  89B5              ; 25/05/23
  28  89B5              ;
  29  89B5              ; Constantes generales.
  30  89B5              ;
  31  89B5
  32  89B5              Sprite_vacio equ $f000
  33  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  34  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  35  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  36  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  37  89B5
  38  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  39  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  40  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  41  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  42  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  43  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  44  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  45  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  46  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  47  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  48  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  49  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  50  89B5
  51  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  52  89B5
  53  89B5              ; ******************************************************************************************************************************************************************************************
  54  89B5              ; Variables.
  55  89B5              ; ******************************************************************************************************************************************************************************************
  56  89B5              ;
  57  89B5              ; 28/07/23
  58  89B5              ;
  59  89B5              ; Variables de DRAW. (Motor principal).
  60  89B5              ;
  61  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  62  89B5
  63  89B5 00           Filas db 0												; Filas. [DRAW]
  64  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  65  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  66  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  67  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  68  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  69  89BD
  70  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  71  89BD
  72  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  73  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  74  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  75  89BE 00           Attr db 0												; Atributos de la entidad:
  76  89BF
  77  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  78  89BF              ;
  79  89BF              ;	COLORES: 0 ..... NEGRO
  80  89BF              ;    		 1 ..... AZUL
  81  89BF              ; 			 2 ..... ROJO
  82  89BF              ;			 3 ..... MAGENTA
  83  89BF              ; 			 4 ..... VERDE
  84  89BF              ; 			 5 ..... CIAN
  85  89BF              ;			 6 ..... AMARILLO
  86  89BF              ; 			 7 ..... BLANCO
  87  89BF
  88  89BF 00 00        Indice_Sprite_der defw 0
  89  89C1 00 00        Indice_Sprite_izq defw 0
  90  89C3 00 00        Puntero_DESPLZ_der defw 0
  91  89C5 00 00        Puntero_DESPLZ_izq defw 0
  92  89C7
  93  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  94  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  95  89CA
  96  89CA              ; Variables de objeto. (Características).
  97  89CA
  98  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  99  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 101  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 102  89CE
 103  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 104  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 105  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 106  89CF
 107  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  89D3 00 00        	defw 0
 110  89D5 00 00 00 00  	db 0,0,0,0
 111  89D9
 112  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89DB 00 00        	defw 0
 114  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 115  89DF 00 00 00 00  	db 0,0,0,0
 116  89E3
 117  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 118  89E3
 119  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 120  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 121  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 122  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 123  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 124  89E4              ;
 125  89E4              ; 														DESCRIPCIÖN:
 126  89E4              ;
 127  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 128  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 129  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 130  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 131  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 132  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 133  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 134  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 135  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 136  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 137  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 138  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 139  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 140  89E4              ;
 141  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 142  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 143  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 144  89E4
 145  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 146  89E5
 147  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 148  89E5
 149  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 150  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 151  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 152  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 153  89EC              ;
 154  89EC              ;
 155  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 156  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 157  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 158  89ED 00           Incrementa_puntero_backup db 0
 159  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 160  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 161  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 162  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 163  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 164  89F2              ;
 165  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 166  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 167  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 168  89F2              ;
 169  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 170  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 171  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 172  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 173  89F2              ;
 174  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 175  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 176  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 177  89F2
 178  89F2
 179  89F2              ; Variables de funcionamiento. [DRAW].
 180  89F2
 181  89F2 00           Columnas db 0
 182  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 183  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 184  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6
 186  89F6              ; variables de control general.
 187  89F6
 188  89F6 00           Ctrl_2 db 0
 189  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 190  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 191  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 192  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 193  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 194  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 195  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 196  89F7              ;
 197  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 198  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 199  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 200  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 201  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 202  89F7
 203  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 204  89F8
 205  89F8              ;! 67 Bytes por entidad.
 206  89F8
 207  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 208  89F8              ;					         		---------;      ;---------
 209  89F8
 210  89F8
 211  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 212  89F8
 213  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 214  89F9
 215  89F9              ;														DESCRIPCIÓN:
 216  89F9              ;
 217  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 218  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 219  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 220  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 221  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 222  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 223  89F9
 224  89F9              ;														BIT 3, Recarga de nueva oleada.
 225  89F9              ;														BIT 4, Recarga de nueva oleada.
 226  89F9              ;														BIT 5, ****
 227  89F9
 228  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 229  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 230  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 231  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 232  89FB
 233  89FB
 234  89FB
 235  89FB              ; Gestión de ENTIDADES y CAJAS.
 236  89FB
 237  89FB 00 00        Puntero_store_caja defw 0
 238  89FD 00 00        Puntero_restore_caja defw 0
 239  89FF 00 00        Indice_restore_caja defw 0
 240  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 241  8A02 00           Numero_parcial_de_entidades db 0
 242  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 243  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 244  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 245  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 246  8A05              ;														; _ (Numero_de_malotes)="0".
 247  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 248  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 249  8A09              ;														; _ puntero (Indice_entidades).
 250  8A09
 251  8A09
 252  8A09              ;---------------------------------------------------------------------------------------------------------------
 253  8A09              ;
 254  8A09              ;	9/8/23
 255  8A09              ;
 256  8A09              ;	Álbumes.
 257  8A09
 258  8A09 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 259  8A0B              ;														; _variable para almacenar lo posición del puntero_
 260  8A0B              ; 														; _de pila, SP.
 261  8A0B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 262  8A0D              ;														; La utiliza la rutina [Extrae_foto_registros].
 263  8A0D 00 00        Stack_snapshot defw 0
 264  8A0F 00 00        Stack_snapshot_disparos defw 0
 265  8A11
 266  8A11 00 00        End_Snapshot defw 0
 267  8A13              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 268  8A13 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 269  8A15              ;														; _el snapshot de los registros del siguiente disparo.
 270  8A15              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 271  8A15 00 00        End_Snapshot_1 defw 0
 272  8A17 00 00        End_Snapshot_disparos_1 defw 0
 273  8A19 00 00        End_Snapshot_2 defw 0
 274  8A1B 00 00        End_Snapshot_disparos_2 defw 0
 275  8A1D 00 00        End_Snapshot_3 defw 0
 276  8A1F 00 00        End_Snapshot_disparos_3 defw 0
 277  8A21
 278  8A21 00 00        Puntero_indice_album_de_fotos defw 0
 279  8A23 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 280  8A25
 281  8A25 00 00        Puntero_indice_End_Snapshot defw 0
 282  8A27 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 283  8A29 00 00        Puntero_de_End_Snapshot defw 0
 284  8A2B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 285  8A2D
 286  8A2D              ;---------------------------------------------------------------------------------------------------------------
 287  8A2D
 288  8A2D              ; Gestión de Disparos.
 289  8A2D
 290  8A2D 00           Numero_de_disparotes db 0
 291  8A2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 292  8A30 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 293  8A32 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 294  8A33              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 295  8A33              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 296  8A33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 297  8A35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 298  8A35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 299  8A35              ;														; _produzca colisión.
 300  8A35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 301  8A37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 302  8A37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 303  8A3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 304  8A3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 306  8A3D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 307  8A3F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 308  8A40
 309  8A40              ;---------------------------------------------------------------------------------------------------------------
 310  8A40
 311  8A40              ; Relojes y temporizaciones.
 312  8A40
 313  8A40 00           Contador_de_frames db 0
 314  8A41 04           Clock_explosion db 4
 315  8A42 1E           Clock_Entidades_en_curso db 30
 316  8A43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 317  8A44              ;														; Repite la oleada de entidades.
 318  8A44 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 319  8A45 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 320  8A46 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 321  8A47
 322  8A47 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 323  8A48 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 324  8A49 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 325  8A4A
 326  8A4A              ;---------------------------------------------------------------------------------------------------------------
 327  8A4A
 328  8A4A              ; Gestión de NIVELES.
 329  8A4A
 330  8A4A 00           Nivel db 0												; Nivel actual del juego.
 331  8A4B 00 00        Puntero_indice_NIVELES defw 0
 332  8A4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 333  8A4F              ; 														; _ que definen el NIVEL.
 334  8A4F              ; Y todo comienza aquí .....
 335  8A4F              ;
 336  8A4F              ; Rutina principal *************************************************************************************************************************************************************************
 337  8A4F              ;
 338  8A4F              ;	14/11/22
 339  8A4F
 340  8A4F              START
 341  8A4F
 342  8A4F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 343  8A52 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 344  8A54 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 345  8A56 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 346  8A58 F3           	DI
 347  8A59
 348  8A59 3E 07        	ld a,%00000111
 349  8A5B CD D4 99     	call Cls
 350  8A5E
 351  8A5E CD 6B 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 352  8A61
 353  8A61              ; INICIALIZACIÓN.
 354  8A61
 355  8A61 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 356  8A64
 357  8A64 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 358  8A67
 359  8A67 CD DE 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 360  8A6A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 361  8A6A CD F4 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 362  8A6D              ;													     ; _ malotes antes de guardar ninguna foto.
 363  8A6D              ; ----------
 364  8A6D
 365  8A6D CD 1B 8E     	call Restore_entidad
 366  8A70
 367  8A70 21 02 8A     	ld hl,Numero_parcial_de_entidades
 368  8A73 46           	ld b,(hl)
 369  8A74 04           	inc b
 370  8A75 05           	dec b
 371  8A76 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 372  8A78
 373  8A78              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 374  8A78              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 375  8A78              ;	Pintamos el resto de entidades:
 376  8A78
 377  8A78              ;	INICIA ENTIDADES !!!!!
 378  8A78
 379  8A78 C5           1 push bc  												; Guardo el contador de entidades.
 380  8A79
 381  8A79 CD 85 8C     	call Inicia_entidad
 382  8A7C
 383  8A7C C1           	pop bc
 384  8A7D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 385  8A7F
 386  8A7F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 387  8A7F              ; (Esto se dá cuando se inicia una nueva oleada).
 388  8A7F
 389  8A7F 3A F8 89     	ld a,(Ctrl_1)
 390  8A82 CB 5F        	bit 3,a
 391  8A84 20 18        	jr nz,5F											; Loop
 392  8A86
 393  8A86              ; 	INICIA AMADEUS !!!!!
 394  8A86
 395  8A86 CD 42 8E     3 call Restore_Amadeus
 396  8A89 CD 98 8D     	call Inicia_Puntero_objeto
 397  8A8C CD 0A 94     	call Draw
 398  8A8F CD A0 7F     	call Guarda_foto_registros
 399  8A92 11 A4 85     	ld de,Amadeus_db
 400  8A95 CD 54 8E     	call Store_Amadeus
 401  8A98
 402  8A98              ; 	INICIA DISPAROS !!!!!
 403  8A98
 404  8A98 CD 54 8D     	call Inicia_Puntero_Disparo_Entidades
 405  8A9B CD 5B 8D     	call Inicia_Puntero_Disparo_Amadeus
 406  8A9E
 407  8A9E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 408  8A9E
 409  8A9E CD DE 8C     5 call Inicia_punteros_de_cajas
 410  8AA1 CD 1B 8E     	call Restore_entidad
 411  8AA4
 412  8AA4 3A F8 89     	ld a,(Ctrl_1)
 413  8AA7 CB 5F        	bit 3,a
 414  8AA9 28 0A        	jr z,6F
 415  8AAB
 416  8AAB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 417  8AAB
 418  8AAB 21 F8 89     	ld hl,Ctrl_1
 419  8AAE CB 9E        	res 3,(hl)
 420  8AB0 CD 62 8D     	call Calcula_numero_de_malotes
 421  8AB3 18 0A        	jr Main
 422  8AB5
 423  8AB5              ; ----------
 424  8AB5
 425  8AB5 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 426  8AB8 3C           	inc a
 427  8AB9 32 04 8A     	ld (Numero_de_malotes),a
 428  8ABC
 429  8ABC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 430  8ABC              ; _ tenemos calculado (Numero_de_malotes).
 431  8ABC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 432  8ABC              ; _ para situarnos en el siguiente album.
 433  8ABC
 434  8ABC CD 25 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 435  8ABF
 436  8ABF              ; ------------------------------------
 437  8ABF
 438  8ABF              Main
 439  8ABF
 440  8ABF FB           	ei ; Interrupciones habilitadas.
 441  8AC0
 442  8AC0              ; -----------------------------------------------------------------------
 443  8AC0              ;
 444  8AC0              ;	3/8/23
 445  8AC0
 446  8AC0 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 447  8AC3 47           	ld b,a
 448  8AC4 3A 40 8A     	ld a,(Contador_de_frames)
 449  8AC7 B8           	cp b
 450  8AC8 20 18        	jr nz,13F
 451  8ACA
 452  8ACA 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 453  8ACD 47           	ld b,a
 454  8ACE 3A 03 8A     	ld a,(Entidades_en_curso)
 455  8AD1 B8           	cp b
 456  8AD2 28 0E        	jr z,13F
 457  8AD4 30 0C        	jr nc,13F
 458  8AD6
 459  8AD6 3C           	inc a
 460  8AD7 32 03 8A     	ld (Entidades_en_curso),a
 461  8ADA
 462  8ADA 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 463  8ADD
 464  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 465  8ADD              ;! _ IMPREDECIBLE !!!!
 466  8ADD
 467  8ADD C6 64        	add 100
 468  8ADF 32 42 8A     	ld (Clock_Entidades_en_curso),a
 469  8AE2
 470  8AE2              ; Habilita disparos.
 471  8AE2
 472  8AE2 21 44 8A     13 ld hl,Disparo_Amadeus
 473  8AE5 11 46 8A     	ld de,CLOCK_repone_disparo_Amadeus
 474  8AE8 CD 99 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 475  8AEB
 476  8AEB 21 47 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 477  8AEE 11 49 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 478  8AF1 CD 99 A0     	call Habilita_disparos
 479  8AF4
 480  8AF4              ; COLISIONES.
 481  8AF4
 482  8AF4 CD EC 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 483  8AF7
 484  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 485  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 486  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 487  8AF7
 488  8AF7 AF           	xor a
 489  8AF8 32 32 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 490  8AFB
 491  8AFB CD DE 8C     	call Inicia_punteros_de_cajas
 492  8AFE CD 1B 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 493  8B01              ; 														; _ en DRAW.
 494  8B01 3A B5 89     	ld a,(Filas)
 495  8B04 A7           	and a
 496  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 497  8B07 CD 2D 8E     	call Incrementa_punteros_de_cajas
 498  8B0A 18 F2        	jr 12B
 499  8B0C
 500  8B0C              ; ---------------------------------------------------------------------------------------
 501  8B0C
 502  8B0C 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 503  8B0F 47               ld b,a
 504  8B10 A7           	and a
 505  8B11 20 14        	jr nz,11F
 506  8B13
 507  8B13 21 F8 89     	ld hl,Ctrl_1
 508  8B16 CB 66        	bit 4,(hl)
 509  8B18 C2 A4 8B     	jp nz,16F
 510  8B1B
 511  8B1B 21 F8 89     	ld hl,Ctrl_1
 512  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 513  8B20
 514  8B20 3A 40 8A     	ld a,(Contador_de_frames)
 515  8B23 3C           	inc a
 516  8B24 32 43 8A     	ld (Activa_recarga_cajas),a
 517  8B27
 518  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 519  8B27
 520  8B27 3A 03 8A     11 ld a,(Entidades_en_curso)
 521  8B2A A7           	and a
 522  8B2B CA A4 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 523  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 524  8B2F
 525  8B2F              ; Código que ejecutamos con cada entidad:
 526  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 527  8B2F
 528  8B2F C5           15 push bc 												; Nº de entidades en curso.
 529  8B30
 530  8B30              ; Impacto ???
 531  8B30
 532  8B30 3A CE 89     	ld a,(Impacto)
 533  8B33 A7           	and a
 534  8B34 28 2D        	jr z,8F
 535  8B36
 536  8B36              ; Hay Impacto en esta entidad.
 537  8B36
 538  8B36 21 41 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 539  8B39 35           	dec (hl)
 540  8B3A 20 62        	jr nz,17F
 541  8B3C
 542  8B3C              ;! Velocidad de la animación de la explosión.
 543  8B3C
 544  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 545  8B3E              ;														; _,(velocidad de la explosión).
 546  8B3E CD 95 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 547  8B41
 548  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 549  8B41
 550  8B41 3A F6 89     	ld a,(Ctrl_2)
 551  8B44 CB 4F        	bit 1,a
 552  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 553  8B48
 554  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 555  8B48
 556  8B48 3A BD 89     	ld a,(CTRL_DESPLZ)
 557  8B4B A7           	and a
 558  8B4C 20 08        	jr nz,18F
 559  8B4E
 560  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 561  8B51 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 562  8B54 18 06        	jr 19F
 563  8B56
 564  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 565  8B59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 566  8B5C
 567  8B5C 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 568  8B5F CB CE        	set 1,(hl)
 569  8B61 18 22        	jr 7F
 570  8B63
 571  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 572  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 573  8B63
 574  8B63 3A F8 89     8 ld a,(Ctrl_1)
 575  8B66 CB 57        	bit 2,a
 576  8B68 28 1B        	jr z,7F
 577  8B6A
 578  8B6A 2A 35 8A     	ld hl,(Coordenadas_disparo_certero)
 579  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 580  8B6E              ;														; E contiene la coordenada_X del disparo.
 581  8B6E 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 582  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 583  8B71 A7           	and a
 584  8B72 ED 52        	sbc hl,de
 585  8B74
 586  8B74 CD 23 93     	call Determina_resultado_comparativa
 587  8B77
 588  8B77 78           	ld a,b
 589  8B78 A7           	and a
 590  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 591  8B7B
 592  8B7B              ; ----- ----- -----
 593  8B7B
 594  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 595  8B7D 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 596  8B80
 597  8B80 21 F8 89     	ld hl,Ctrl_1
 598  8B83 CB 96        	res 2,(hl)
 599  8B85
 600  8B85 CD 07 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 601  8B88
 602  8B88 3A E3 89     	ld a,(Ctrl_0)
 603  8B8B CB 67        	bit 4,a
 604  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 605  8B8F
 606  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 607  8B8F              ; [[[
 608  8B8F CD B6 8E     	call Detecta_disparo_entidad
 609  8B92              ; ]]]
 610  8B92 CD A5 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 611  8B95
 612  8B95 21 E3 89     	ld hl,Ctrl_0
 613  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 614  8B9A AF           	xor a
 615  8B9B 32 E4 89     	ld (Obj_dibujado),a
 616  8B9E
 617  8B9E CD E0 8D     17 call Store_Restore_cajas
 618  8BA1
 619  8BA1 C1           	pop bc
 620  8BA2 10 8B        	djnz 15B
 621  8BA4
 622  8BA4              ; ------------------------------------
 623  8BA4
 624  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 625  8BA4              ; Hemos gestionado todas las unidades.
 626  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 627  8BA4
 628  8BA4              ;	ld hl,Ctrl_1
 629  8BA4              ;	res 2,(hl)
 630  8BA4
 631  8BA4              ; ------------------------------------
 632  8BA4
 633  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 634  8BA4
 635  8BA4 CD 42 8E     16 call Restore_Amadeus
 636  8BA7
 637  8BA7 3A CE 89     	ld a,(Impacto)
 638  8BAA A7           	and a
 639  8BAB 20 FE        	jr nz,$
 640  8BAD
 641  8BAD CD 66 8C     	call Mov_Amadeus
 642  8BB0
 643  8BB0 3A E3 89     	ld a,(Ctrl_0)
 644  8BB3 CB 67        	bit 4,a
 645  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 646  8BB7
 647  8BB7 CD A5 8C     	call Guarda_foto_entidad_a_pintar
 648  8BBA
 649  8BBA 21 E3 89     14 ld hl,Ctrl_0
 650  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 651  8BBF AF           	xor a
 652  8BC0 32 E4 89     	ld (Obj_dibujado),a
 653  8BC3
 654  8BC3 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 655  8BC6 CD 54 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 656  8BC9
 657  8BC9 CD 80 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 658  8BCC
 659  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 660  8BCC
 661  8BCC              ;	call Calcula_numero_de_disparotes
 662  8BCC CD 62 8D     9 call Calcula_numero_de_malotes
 663  8BCF
 664  8BCF CD 25 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 665  8BD2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 666  8BD2              ;														; _ interrupción.
 667  8BD2 21 F8 89     	ld hl,Ctrl_1
 668  8BD5 CB AE        	res 5,(hl)
 669  8BD7
 670  8BD7 3E 04        	ld a,4
 671  8BD9 D3 FE        	out ($fe),a
 672  8BDB
 673  8BDB              ; ----------------------------------------
 674  8BDB
 675  8BDB 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 676  8BDE CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 677  8BE0 CA BF 8A     	jp z,Main
 678  8BE3
 679  8BE3              ; -----
 680  8BE3              ;	(((
 681  8BE3
 682  8BE3 3A 40 8A     	ld a,(Contador_de_frames)
 683  8BE6 47           	ld b,a
 684  8BE7 3A 43 8A     	ld a,(Activa_recarga_cajas)
 685  8BEA B8           	cp b
 686  8BEB 28 08        	jr z,20F
 687  8BED
 688  8BED 21 F8 89     	ld hl,Ctrl_1
 689  8BF0 CB E6        	set 4,(hl)
 690  8BF2 C3 BF 8A     	jp Main
 691  8BF5
 692  8BF5 21 F8 89     20 ld hl,Ctrl_1
 693  8BF8 CB A6        	res 4,(hl)
 694  8BFA F3           	di
 695  8BFB
 696  8BFB 3A 40 8A     	ld a,(Contador_de_frames)
 697  8BFE
 698  8BFE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 699  8BFE              ;! _ IMPREDECIBLE !!!!
 700  8BFE
 701  8BFE C6 0A        	add 10
 702  8C00 32 42 8A     	ld (Clock_Entidades_en_curso),a
 703  8C03
 704  8C03 C3 64 8A     	jp 4B
 705  8C06
 706  8C06 C9           	ret
 707  8C07
 708  8C07              ; --------------------------------------------------------------------------------------------------------------
 709  8C07              ;
 710  8C07              ;	27/05/23
 711  8C07
 712  8C07              Mov_obj
 713  8C07
 714  8C07              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 715  8C07
 716  8C07 3A F6 89     	ld a,(Ctrl_2)
 717  8C0A CB 4F        	bit 1,a
 718  8C0C 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 719  8C0E
 720  8C0E              ; Explosión:
 721  8C0E
 722  8C0E 3A F7 89     	ld a,(Frames_explosion)
 723  8C11 A7           	and a
 724  8C12 20 11        	jr nz,4F
 725  8C14
 726  8C14              ; Una alimaña menos!!!!!!!!!1
 727  8C14
 728  8C14 CD 5D 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 729  8C17 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 730  8C1A 35           	dec (hl)
 731  8C1B 21 03 8A     	ld hl,Entidades_en_curso
 732  8C1E 35           	dec (hl)
 733  8C1F 21 01 8A     	ld hl,Numero_de_entidades
 734  8C22 35           	dec (hl)
 735  8C23 18 40        	jr 3F
 736  8C25
 737  8C25              ; -----
 738  8C25
 739  8C25              ;	`Movemos´ la explosión.
 740  8C25
 741  8C25 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 742  8C28 23           	inc hl
 743  8C29 23           	inc hl
 744  8C2A 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 745  8C2D CD 92 8D     	call Extrae_address
 746  8C30 22 B9 89     	ld (Puntero_objeto),hl
 747  8C33
 748  8C33 21 F7 89     	ld hl,Frames_explosion
 749  8C36 35           	dec (hl)
 750  8C37
 751  8C37 CD 95 8C     	call Guarda_foto_entidad_a_borrar
 752  8C3A 18 29        	jr 3F
 753  8C3C
 754  8C3C AF           2 xor a
 755  8C3D 32 E4 89     	ld (Obj_dibujado),a
 756  8C40 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 757  8C43              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 758  8C43              ; 														; _de la entidad.
 759  8C43 CD AF 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 760  8C46              ;														; Obj_dibujado="0".
 761  8C46              ; Movemos Entidades malignas.
 762  8C46
 763  8C46              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 764  8C46              ;	and a 												; _a movernos. (Limitador_de_entidades).
 765  8C46              ;	ret z
 766  8C46
 767  8C46 CD 34 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 768  8C49
 769  8C49 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 770  8C4C CB 67        	bit 4,a
 771  8C4E C8           	ret z
 772  8C4F
 773  8C4F              ; Ha habido desplazamiento de la entidad maligna.
 774  8C4F              ; Ha llegado a zona de AMADEUS ???
 775  8C4F
 776  8C4F 3A BC 89     	ld a,(Coordenada_y)
 777  8C52 FE 14        	cp $14
 778  8C54 D4 B1 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 779  8C57              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 780  8C57              ; ---------
 781  8C57
 782  8C57 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 783  8C59 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 784  8C5C CD AF 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 785  8C5F CD C6 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 786  8C62 CD 95 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 787  8C65 C9           3 ret													; _de la misma.
 788  8C66
 789  8C66              ; --------------------------------------------------------------------------------------------------------------
 790  8C66              ;
 791  8C66              ;	29/1/23
 792  8C66
 793  8C66              Mov_Amadeus
 794  8C66
 795  8C66 AF           	xor a
 796  8C67 32 E4 89     	ld (Obj_dibujado),a
 797  8C6A CD AF 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 798  8C6D              ;														; Obj_dibujado="0".
 799  8C6D              ; Movemos Amadeus.
 800  8C6D
 801  8C6D CD 7F 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 802  8C70 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 803  8C73 CB 67        	bit 4,a
 804  8C75 C8           	ret z
 805  8C76
 806  8C76              ; ---------
 807  8C76
 808  8C76 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 809  8C78 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 810  8C7B CD AF 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 811  8C7E CD C6 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 812  8C81 CD 95 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 813  8C84 C9           	ret													; _de la nave.
 814  8C85
 815  8C85              ; -----------------------------------------------------------------------------------
 816  8C85
 817  8C85 CD 98 8D     Inicia_entidad	call Inicia_Puntero_objeto
 818  8C88 CD E8 99     	call Recompone_posicion_inicio
 819  8C8B CD 0A 94     	call Draw
 820  8C8E CD A0 7F     	call Guarda_foto_registros
 821  8C91 CD E0 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 822  8C94 C9           	ret
 823  8C95
 824  8C95              ; --------------------------------------------------------------------------------------------------------------
 825  8C95              ;
 826  8C95              ;	31/01/23
 827  8C95              ;
 828  8C95              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 829  8C95
 830  8C95              Guarda_foto_entidad_a_borrar
 831  8C95
 832  8C95 CD EE 96     	call Prepara_draw
 833  8C98 CD 1E 96     	call calcula_CColumnass
 834  8C9B CD 55 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 835  8C9E CD B4 96     	call Define_rutina_de_impresion
 836  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 837  8CA4 C9           	ret
 838  8CA5
 839  8CA5              ; --------------------------------------------------------------------------------------------------------------
 840  8CA5              ;
 841  8CA5              ;	31/01/23
 842  8CA5              ;
 843  8CA5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 844  8CA5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 845  8CA5
 846  8CA5              Guarda_foto_entidad_a_pintar
 847  8CA5
 848  8CA5 CD D2 8C     	call Repone_pintar
 849  8CA8 CD 0A 94     	call Draw
 850  8CAB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 851  8CAE C9           	ret
 852  8CAF
 853  8CAF              ; --------------------------------------------------------------------------------------------------------------
 854  8CAF              ;
 855  8CAF              ;
 856  8CAF
 857  8CAF 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 858  8CB2 3A E4 89     	ld a,(Obj_dibujado)
 859  8CB5 A7           	and a
 860  8CB6 28 05        	jr z,1F
 861  8CB8 11 D9 89     	ld de,Variables_de_pintado
 862  8CBB 18 03        	jr 2F
 863  8CBD 11 CF 89     1 ld de,Variables_de_borrado
 864  8CC0 01 08 00     2 ld bc,8
 865  8CC3 ED B0        	ldir
 866  8CC5 C9           	ret
 867  8CC6
 868  8CC6              ; --------------------------------------------------------------------------------------------------------------
 869  8CC6
 870  8CC6 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 871  8CC9 11 B5 89     	ld de,Filas
 872  8CCC 01 08 00     	ld bc,8
 873  8CCF ED B0        	ldir
 874  8CD1 C9           	ret
 875  8CD2
 876  8CD2 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 877  8CD5 11 B5 89     	ld de,Filas
 878  8CD8 01 08 00     	ld bc,8
 879  8CDB ED B0        	ldir
 880  8CDD C9           	ret
 881  8CDE
 882  8CDE              ; *************************************************************************************************************************************************************
 883  8CDE              ;
 884  8CDE              ; 8/1/23
 885  8CDE              ;
 886  8CDE              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 887  8CDE              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 888  8CDE              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 889  8CDE
 890  8CDE              ; Destruye HL y DE !!!!!
 891  8CDE
 892  8CDE              Inicia_punteros_de_cajas
 893  8CDE
 894  8CDE 21 8C 85     	ld hl,Indice_de_cajas
 895  8CE1 CD 92 8D         call Extrae_address
 896  8CE4 22 FB 89         ld (Puntero_store_caja),hl
 897  8CE7 21 8E 85     	ld hl,Indice_de_cajas+2
 898  8CEA 22 FF 89     	ld (Indice_restore_caja),hl
 899  8CED CD 92 8D     	call Extrae_address
 900  8CF0 22 FD 89     	ld (Puntero_restore_caja),hl
 901  8CF3 C9               ret
 902  8CF4
 903  8CF4              ; ---------------------------------------------------------------
 904  8CF4              ;
 905  8CF4              ;	9/8/23
 906  8CF4              ;
 907  8CF4              ;	Inicialización y gestión de álbumes de fotos y cajas.
 908  8CF4
 909  8CF4              Inicia_punteros_de_albumes_y_malotes
 910  8CF4
 911  8CF4 21 EC 84     	ld hl,Indice_album_de_fotos
 912  8CF7 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 913  8CFA CD 92 8D     	call Extrae_address
 914  8CFD 22 0D 8A     	ld (Stack_snapshot),hl
 915  8D00
 916  8D00 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 917  8D03 22 23 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 918  8D06 CD 92 8D     	call Extrae_address
 919  8D09 22 0F 8A     	ld (Stack_snapshot_disparos),hl
 920  8D0C
 921  8D0C 21 FC 84     	ld hl,Indice_End_Snapshot
 922  8D0F 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 923  8D12 CD 92 8D     	call Extrae_address
 924  8D15 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 925  8D18
 926  8D18 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 927  8D1B 22 27 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 928  8D1E CD 92 8D     	call Extrae_address
 929  8D21 22 2B 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 930  8D24
 931  8D24 C9           	ret
 932  8D25
 933  8D25              ;	12/8/23
 934  8D25
 935  8D25              Avanza_puntero_de_album_de_fotos_y_malotes
 936  8D25
 937  8D25              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 938  8D25
 939  8D25              ; Estamos en el último álbum del índice???.
 940  8D25
 941  8D25 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
 942  8D28 01 F2 84     	ld bc,Indice_album_de_fotos+6
 943  8D2B A7           	and a
 944  8D2C ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 945  8D2E 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 946  8D30
 947  8D30 21 F8 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 948  8D33 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 949  8D35 76           	halt
 950  8D36 C9           	ret
 951  8D37
 952  8D37 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 953  8D3A 23           	inc hl
 954  8D3B 23           	inc hl
 955  8D3C 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 956  8D3F CD 92 8D     	call Extrae_address
 957  8D42 22 0D 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 958  8D45
 959  8D45 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
 960  8D48 23           	inc hl
 961  8D49 23           	inc hl
 962  8D4A 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 963  8D4D CD 92 8D     	call Extrae_address
 964  8D50 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 965  8D53
 966  8D53 C9           	ret
 967  8D54
 968  8D54              ; *************************************************************************************************************************************************************
 969  8D54              ;
 970  8D54              ; 8/1/23
 971  8D54              ;
 972  8D54              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 973  8D54
 974  8D54 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 975  8D57 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 976  8D5A C9           	ret
 977  8D5B 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 978  8D5E 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 979  8D61 C9           	ret
 980  8D62
 981  8D62              ; -------------------------------------------------------------------------------------------------------------
 982  8D62              ;
 983  8D62              ; 3/8/23
 984  8D62              ;
 985  8D62
 986  8D62              Calcula_numero_de_malotes
 987  8D62
 988  8D62 21 00 70     	ld hl,Album_de_fotos
 989  8D65 EB           	ex de,hl
 990  8D66 2A 11 8A     	ld hl,(End_Snapshot)
 991  8D69
 992  8D69 06 00        	ld b,0
 993  8D6B 7D           	ld a,l
 994  8D6C 93           	sub e
 995  8D6D 28 07        	jr z,1F
 996  8D6F
 997  8D6F              ; Nº de malotes no es "0".
 998  8D6F
 999  8D6F D6 06        2 sub 6
1000  8D71 04           	inc b
1001  8D72 A7           	and a
1002  8D73 20 FA        	jr nz,2B
1003  8D75 78           	ld a,b
1004  8D76
1005  8D76 32 04 8A     1 ld (Numero_de_malotes),a
1006  8D79 C9           	ret
1007  8D7A
1008  8D7A              ; -------------------------------------------------------------------------------------------------------------
1009  8D7A              ;
1010  8D7A              ; 28/2/23
1011  8D7A              ;
1012  8D7A
1013  8D7A              Calcula_numero_de_disparotes
1014  8D7A
1015  8D7A 21 0D 72     	ld hl,Album_de_fotos_disparos
1016  8D7D EB           	ex de,hl
1017  8D7E 2A 2B 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1018  8D81
1019  8D81 06 00        	ld b,0
1020  8D83 7D           	ld a,l
1021  8D84 93           	sub e
1022  8D85 28 07        	jr z,1F
1023  8D87
1024  8D87              ; Nº de malotes no es "0".
1025  8D87
1026  8D87 D6 06        2 sub 6
1027  8D89 04           	inc b
1028  8D8A A7           	and a
1029  8D8B 20 FA        	jr nz,2B
1030  8D8D 78           	ld a,b
1031  8D8E
1032  8D8E 32 2D 8A     1 ld (Numero_de_disparotes),a
1033  8D91 C9           	ret
1034  8D92
1035  8D92              ; *************************************************************************************************************************************************************
1036  8D92              ;
1037  8D92              ; 20/10/22
1038  8D92              ;
1039  8D92              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1040  8D92              ;
1041  8D92              ; Destruye el puntero y DE !!!!!
1042  8D92
1043  8D92 5E           Extrae_address ld e,(hl)
1044  8D93 23           	inc hl
1045  8D94 56           	ld d,(hl)
1046  8D95 2B           	dec hl
1047  8D96 EB           	ex de,hl
1048  8D97 C9           	ret
1049  8D98
1050  8D98              ; *************************************************************************************************************************************************************
1051  8D98              ;
1052  8D98              ;	7/2/23
1053  8D98              ;
1054  8D98              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1055  8D98              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1056  8D98              ;
1057  8D98              ;   Destruye HL y BC !!!!!,
1058  8D98              ;
1059  8D98              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1060  8D98              ;					"0" ..... Izquierda.
1061  8D98
1062  8D98              Inicia_Puntero_objeto
1063  8D98
1064  8D98 3A C9 89     	ld a,(Cuad_objeto)
1065  8D9B E6 01        	and 1
1066  8D9D F5           	push af
1067  8D9E CC BC 8D     	call z,Inicia_puntero_objeto_izq
1068  8DA1 F1           	pop af
1069  8DA2 28 2B        	jr z,1F
1070  8DA4 CD A9 8D     	call Inicia_puntero_objeto_der
1071  8DA7 18 26        	jr 1F
1072  8DA9
1073  8DA9              ; Arrancamos desde la parte izquierda de la pantalla.
1074  8DA9              ; Iniciamos (Indice_Sprite_der).
1075  8DA9
1076  8DA9 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1077  8DAC 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1078  8DAF CD 92 8D     	call Extrae_address
1079  8DB2 22 B9 89     	ld (Puntero_objeto),hl
1080  8DB5
1081  8DB5 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1082  8DB8 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1083  8DBB C9           	ret
1084  8DBC
1085  8DBC              ; Arrancamos desde la parte derecha de la pantalla.
1086  8DBC              ; Iniciamos (Indice_Sprite_izq).
1087  8DBC
1088  8DBC 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1089  8DBF 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1090  8DC2 CD 92 8D     	call Extrae_address
1091  8DC5 22 B9 89     	ld (Puntero_objeto),hl
1092  8DC8
1093  8DC8 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1094  8DCB 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1095  8DCE C9           	ret
1096  8DCF
1097  8DCF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1098  8DCF
1099  8DCF 21 40 83     1 ld hl,Amadeus
1100  8DD2 ED 4B B9 89  	ld bc,(Puntero_objeto)
1101  8DD6 B7 ED 42     	sub hl,bc
1102  8DD9 C0           	ret nz
1103  8DDA 21 E3 89     	ld hl,Ctrl_0
1104  8DDD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1105  8DDF C9           	ret 												; _de nuestra nave en los extremos.
1106  8DE0
1107  8DE0              ; *************************************************************************************************************************************************************
1108  8DE0              ;
1109  8DE0              ;	14/5/23
1110  8DE0              ;
1111  8DE0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1112  8DE0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1113  8DE0
1114  8DE0              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1115  8DE0              ;	_de la 2ª y 3ª entidad respectivamente.
1116  8DE0
1117  8DE0              Store_Restore_cajas
1118  8DE0
1119  8DE0 E5           	push hl
1120  8DE1 D5           	push de
1121  8DE2 C5            	push bc
1122  8DE3
1123  8DE3              ;	STORE !!!!!
1124  8DE3              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1125  8DE3
1126  8DE3 21 B5 89     	ld hl,Filas
1127  8DE6 ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1128  8DEA 01 43 00     	ld bc,67
1129  8DED ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1130  8DEF
1131  8DEF              ; 	Entidad_sospechosa. 20/4/23
1132  8DEF
1133  8DEF 3A CE 89     	ld a,(Impacto)
1134  8DF2 A7           	and a
1135  8DF3 28 0C        	jr z,1F
1136  8DF5
1137  8DF5 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1138  8DF8 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1139  8DFB A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1140  8DFC ED 4A        	adc hl,bc 											; _ "0" más adelante.
1141  8DFE 22 33 8A     	ld (Entidad_sospechosa_de_colision),hl
1142  8E01
1143  8E01              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1144  8E01
1145  8E01 2A FD 89     1 ld hl,(Puntero_restore_caja)
1146  8E04 7E           	ld a,(hl)
1147  8E05 A7           	and a
1148  8E06 F5           	push af
1149  8E07 28 08        	jr z,2F
1150  8E09
1151  8E09 11 B5 89     	ld de,Filas
1152  8E0C 01 43 00     	ld bc,67
1153  8E0F ED B0        	ldir
1154  8E11
1155  8E11 CD 2D 8E     2 call Incrementa_punteros_de_cajas
1156  8E14 F1           	pop af
1157  8E15 28 EA        	jr z,1B
1158  8E17
1159  8E17 C1           	pop bc
1160  8E18 D1           	pop de
1161  8E19 E1           	pop hl
1162  8E1A
1163  8E1A C9           	ret
1164  8E1B
1165  8E1B              ; **************************************************************************************************
1166  8E1B              ;
1167  8E1B              ;	12/05/23
1168  8E1B              ;
1169  8E1B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1170  8E1B
1171  8E1B E5           Restore_entidad push hl
1172  8E1C D5           	push de
1173  8E1D C5            	push bc
1174  8E1E
1175  8E1E 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1176  8E21 11 B5 89     	ld de,Filas
1177  8E24 01 43 00     	ld bc,67
1178  8E27 ED B0        	ldir
1179  8E29
1180  8E29 C1           	pop bc
1181  8E2A D1           	pop de
1182  8E2B E1           	pop hl
1183  8E2C C9           	ret
1184  8E2D
1185  8E2D
1186  8E2D              ; **************************************************************************************************
1187  8E2D              ;
1188  8E2D              ;	08/05/23
1189  8E2D              ;
1190  8E2D              ;	Incrementamos los dos punteros de entidades. (+1).
1191  8E2D
1192  8E2D 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1193  8E30 22 FB 89     	ld (Puntero_store_caja),hl
1194  8E33 2A FF 89     	ld hl,(Indice_restore_caja)
1195  8E36 23           	inc hl
1196  8E37 23           	inc hl
1197  8E38 22 FF 89     	ld (Indice_restore_caja),hl
1198  8E3B CD 92 8D         call Extrae_address
1199  8E3E 22 FD 89         ld (Puntero_restore_caja),hl
1200  8E41 C9               ret
1201  8E42
1202  8E42              ; **************************************************************************************************
1203  8E42              ;
1204  8E42              ;	25/01/23
1205  8E42              ;
1206  8E42              ;	Restore_Amadeus
1207  8E42              ;
1208  8E42              ;	Cargamos en DRAW los parámetros de Amadeus.
1209  8E42              ;
1210  8E42
1211  8E42 E5           Restore_Amadeus	push hl
1212  8E43 D5           	push de
1213  8E44 C5            	push bc
1214  8E45 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1215  8E48 11 B5 89     	ld de,Filas
1216  8E4B 01 43 00     	ld bc,67
1217  8E4E ED B0        	ldir
1218  8E50 C1           	pop bc
1219  8E51 D1           	pop de
1220  8E52 E1           	pop hl
1221  8E53 C9           	ret
1222  8E54
1223  8E54              ; *************************************************************************************************************************************************************
1224  8E54              ;
1225  8E54              ;	29/04/23
1226  8E54              ;
1227  8E54              ;	Store_Amadeus
1228  8E54              ;
1229  8E54              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1230  8E54              ;
1231  8E54              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1232  8E54              ;
1233  8E54              ;	DESTRUYE: HL y BC y DE.
1234  8E54
1235  8E54 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1236  8E57 01 43 00     	ld bc,67
1237  8E5A ED B0        	ldir
1238  8E5C C9           	ret
1239  8E5D
1240  8E5D              ; -----------------------------------------------------------
1241  8E5D              ;
1242  8E5D              ;	27/04/23
1243  8E5D              ;
1244  8E5D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1245  8E5D              ;
1246  8E5D              ;	Destruye: HL,BC,DE,A
1247  8E5D
1248  8E5D 21 B5 89     Borra_datos_entidad ld hl,Filas
1249  8E60 01 42 00     	ld bc,66
1250  8E63 AF           	xor a
1251  8E64 77           	ld (hl),a
1252  8E65 11 B6 89     	ld de,Filas+1
1253  8E68 ED B0        	ldir
1254  8E6A C9           	ret
1255  8E6B
1256  8E6B              ; -----------------------------------------------------------
1257  8E6B
1258  8E6B              ; Teclado.
1259  8E6B
1260  8E6B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1261  8E6D DB FE        	in a,($fe)
1262  8E6F E6 01        	and $01
1263  8E71 28 02        	jr z,1f
1264  8E73 18 F6        	jr Pulsa_ENTER
1265  8E75 C9           1 ret
1266  8E76
1267  8E76              ; **************************************************************************************************
1268  8E76              ;
1269  8E76              ; Temporización.
1270  8E76
1271  8E76              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1272  8E76              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1273  8E76              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1274  8E76              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1275  8E76
1276  8E76              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1277  8E76              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1278  8E76              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1279  8E76
1280  8E76              ; A partir de $4f61 no hace falta DELAY.
1281  8E76
1282  8E76              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1283  8E76
1284  8E76 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1285  8E79 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1286  8E7A 78           	LD A,B
1287  8E7B A7           	AND A
1288  8E7C 20 FB        	JR NZ,wait
1289  8E7E C9           	RET
1290  8E7F
1291  8E7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1292  8E7F              ;
1293  8E7F              ;	5/3/23
1294  8E7F              ;
1295  8E7F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1296  8E7F
1297  8E7F              Movimiento_Amadeus
1298  8E7F
1299  8E7F              ; Disparo.
1300  8E7F
1301  8E7F 3A 44 8A     	ld a,(Disparo_Amadeus)
1302  8E82 A7           	and a
1303  8E83 20 02        	jr nz,1F
1304  8E85 18 15        	jr 2F
1305  8E87
1306  8E87 3E F7        1 ld a,$f7													; "5" para disparar.
1307  8E89 DB FE        	in a,($fe)
1308  8E8B E6 10        	and $10
1309  8E8D
1310  8E8D F5           	push af
1311  8E8E CC 14 8F     	call z,Genera_disparo
1312  8E91 F1           	pop af
1313  8E92 20 08        	jr nz,2F
1314  8E94
1315  8E94 3A 44 8A     	ld a,(Disparo_Amadeus)
1316  8E97 EE 01        	xor 1
1317  8E99 32 44 8A     	ld (Disparo_Amadeus),a
1318  8E9C
1319  8E9C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1320  8E9E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1321  8EA0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1322  8EA2 CC A2 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1323  8EA5 3E F7        	ld a,$f7
1324  8EA7 DB FE        	in a,($fe)
1325  8EA9 E6 01        	and $01
1326  8EAB C8           	ret z
1327  8EAC
1328  8EAC 3E F7        	ld a,$f7
1329  8EAE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1330  8EB0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1331  8EB2 CC 84 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1332  8EB5 C9           	ret
1333  8EB6
1334  8EB6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1335  8EB6              ;
1336  8EB6              ;	Rutina provisional para que los malotes cagen balas.
1337  8EB6
1338  8EB6              Detecta_disparo_entidad
1339  8EB6
1340  8EB6 3A 47 8A     	ld a,(Disparo_entidad)
1341  8EB9 A7           	and a
1342  8EBA C8           	ret z
1343  8EBB
1344  8EBB              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1345  8EBB
1346  8EBB              ;	ld a,$7f				; Detecta SPACE.
1347  8EBB              ;	in a,($fe)
1348  8EBB              ;	and 1
1349  8EBB              ;	ret nz
1350  8EBB
1351  8EBB              ;	call Genera_disparo
1352  8EBB C9           	ret
1353  8EBC
1354  8EBC              ; ----------------------------------------------------------------------
1355  8EBC              ;
1356  8EBC              ;	11/8/23
1357  8EBC
1358  8EBC              Frame
1359  8EBC
1360  8EBC              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1361  8EBC              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1362  8EBC
1363  8EBC              ; PINTAMOS.
1364  8EBC
1365  8EBC F5           	push af
1366  8EBD C5           	push bc
1367  8EBE D5           	push de
1368  8EBF E5           	push hl
1369  8EC0
1370  8EC0 3E 02            ld a,2
1371  8EC2 D3 FE            out ($fe),a											; Rojo.
1372  8EC4
1373  8EC4              ;! debuggg !!!
1374  8EC4 3A 40 8A     	ld a,(Contador_de_frames)
1375  8EC7 FE E5        	cp $e5	; 1er FRAME, (sin mover AMADEUS), donde nos pasamos del FRAME RATE.!!!!!
1376  8EC9 30 FE        	jr nc,$
1377  8ECB 28 FE        	jr z,$
1378  8ECD              ;! debuggg !!!
1379  8ECD
1380  8ECD CD 18 97     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1381  8ED0 CD 5B 97     	call Extrae_foto_disparos
1382  8ED3 3E 01            ld a,1
1383  8ED5 D3 FE            out ($fe),a											; Azul.
1384  8ED7
1385  8ED7              ; 	Gestiona los álbumes de fotos.
1386  8ED7
1387  8ED7 CD 62 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1388  8EDA CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1389  8EDD
1390  8EDD              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1391  8EDD
1392  8EDD 3A F8 89     	ld a,(Ctrl_1)
1393  8EE0 CB 6F        	bit 5,a
1394  8EE2 20 1E        	jr nz,1F
1395  8EE4
1396  8EE4              ;	ld a,(Contador_de_frames)
1397  8EE4              ;	jr $
1398  8EE4
1399  8EE4              ; No hemos terminado de guardar el último FRAME.
1400  8EE4
1401  8EE4 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
1402  8EE7 2B           	dec hl
1403  8EE8 2B           	dec hl
1404  8EE9 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
1405  8EEC
1406  8EEC 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
1407  8EEF 2B           	dec hl
1408  8EF0 2B           	dec hl
1409  8EF1 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
1410  8EF4 CD 92 8D     	call Extrae_address
1411  8EF7 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
1412  8EFA CD 92 8D     	call Extrae_address
1413  8EFD 22 0D 8A     	ld (Stack_snapshot),hl
1414  8F00
1415  8F00 18 09        	jr 2F
1416  8F02
1417  8F02              ; FRAME completo.
1418  8F02
1419  8F02 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1420  8F05 CD 92 8D     	call Extrae_address
1421  8F08 22 0D 8A     	ld (Stack_snapshot),hl
1422  8F0B
1423  8F0B              ;	En este punto:
1424  8F0B
1425  8F0B              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1426  8F0B              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1427  8F0B
1428  8F0B              ; RELOJES.
1429  8F0B
1430  8F0B 21 40 8A     2 ld hl,Contador_de_frames
1431  8F0E 34           	inc (hl)											; 0 - 255
1432  8F0F
1433  8F0F E1           	pop hl
1434  8F10 D1           	pop de
1435  8F11 C1           	pop bc
1436  8F12 F1           	pop af
1437  8F13
1438  8F13 C9           	ret
1439  8F14
1440  8F14              ; ---------------------------------------------------------------
1441  8F14
1442  8F14              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F14              ; ******************************************************************************************************************************************************************************************
   2+ 8F14              ;
   3+ 8F14              ;   21/07/23
   4+ 8F14              ;
   5+ 8F14              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F14              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F14              ;
   8+ 8F14              ;
   9+ 8F14              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F14              ;
  11+ 8F14              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F14              ;               _ hacen las entidades hacia abajo.
  13+ 8F14              ;
  14+ 8F14              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F14              ;
  16+ 8F14              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F14              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F14              ;
  19+ 8F14              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F14              ;           _ la bala.
  21+ 8F14              ;
  22+ 8F14              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F14              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F14              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F14              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F14              ;           _ en el momento de generarse la bala)).
  27+ 8F14
  28+ 8F14              Genera_disparo
  29+ 8F14
  30+ 8F14              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F14              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F14              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F14              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F14              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F14              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F14              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F14
  38+ 8F14              ; Exclusiones:
  39+ 8F14
  40+ 8F14 3A CD 89         ld a,(Vel_down)
  41+ 8F17 47               ld b,a
  42+ 8F18 3A 3F 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F1B B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F1C D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F1D 3A F2 89         ld a,(Columnas)
  46+ 8F20 47               ld b,a
  47+ 8F21 3A B6 89         ld a,(Columns)
  48+ 8F24 B8               cp b
  49+ 8F25 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F26
  51+ 8F26              ; ----- ----- -----
  52+ 8F26
  53+ 8F26 3A E3 89         ld a,(Ctrl_0)
  54+ 8F29 CB 77            bit 6,a
  55+ 8F2B 20 06            jr nz,14F
  56+ 8F2D
  57+ 8F2D 3A BC 89         ld a,(Coordenada_y)
  58+ 8F30 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F32 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F33
  61+ 8F33 21 00 80     14 ld hl,Indice_disparo
  62+ 8F36 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F39 4F               ld c,a
  64+ 8F3A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F3C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F3C              ;                                            ""        ""       "f9", B="1"
  67+ 8F3C              ;                                            ""        ""       "fb", B="2"
  68+ 8F3C              ;                                            ""        ""       "fb", B="3"
  69+ 8F3C A7               and a
  70+ 8F3D 28 10            jr z,1F
  71+ 8F3F E6 01            and 1
  72+ 8F41 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F42
  74+ 8F42 79               ld a,c
  75+ 8F43 16 F9            ld d,$f9
  76+ 8F45 23           2 inc hl
  77+ 8F46 23               inc hl
  78+ 8F47 04               inc b
  79+ 8F48 BA               cp d
  80+ 8F49 28 04            jr z,1F
  81+ 8F4B 14               inc d
  82+ 8F4C 14               inc d
  83+ 8F4D 18 F6            jr 2B
  84+ 8F4F
  85+ 8F4F CD 92 8D     1 call Extrae_address
  86+ 8F52 E5               push hl
  87+ 8F53 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F55 DD 21 9D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F59
  90+ 8F59              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F59              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F59
  93+ 8F59 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F5C CB 77            bit 6,a
  95+ 8F5E 20 04            jr nz,19F
  96+ 8F60
  97+ 8F60 AF               xor a
  98+ 8F61 32 47 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F64
 100+ 8F64 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F67 FE 02            cp 2
 102+ 8F69 38 66            jr c,3F
 103+ 8F6B 28 64            jr z,3F
 104+ 8F6D
 105+ 8F6D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F6D
 107+ 8F6D E6 01            and 1
 108+ 8F6F 28 30            jr z,4F
 109+ 8F71
 110+ 8F71              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F71              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F71              ;
 113+ 8F71              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F71              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F71              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F71
 117+ 8F71 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F74
 119+ 8F74              ;   Amadeus o entidad ???.
 120+ 8F74
 121+ 8F74 3A E3 89         ld a,(Ctrl_0)
 122+ 8F77 CB 77            bit 6,a
 123+ 8F79 28 0A            jr z,8F
 124+ 8F7B
 125+ 8F7B              ; 	Dispara Amadeus.
 126+ 8F7B
 127+ 8F7B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F7D CD 09 97         call PreviousScan
 129+ 8F80 CD 09 97         call PreviousScan
 130+ 8F83
 131+ 8F83              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F83              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F83              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F83              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F83
 136+ 8F83 18 11            jr 10F
 137+ 8F85
 138+ 8F85              ; 	Dispara Entidad.
 139+ 8F85
 140+ 8F85 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F88              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F88
 143+ 8F88              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F88              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F88
 146+ 8F88 C5               push bc
 147+ 8F89 06 10            ld b,16
 148+ 8F8B CD FA 96     9 call NextScan
 149+ 8F8E 10 FB            djnz 9B
 150+ 8F90 C1               pop bc
 151+ 8F91 CD FB 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F94 18 06            jr 17F
 153+ 8F96
 154+ 8F96              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F96              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F96              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F96              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F96
 159+ 8F96 CD FB 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F99 CD 70 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F9C              ;                                                      ; _al generar el disparo.
 162+ 8F9C
 163+ 8F9C              ; 	LLegados a este punto tendremos:
 164+ 8F9C              ;
 165+ 8F9C              ;       Puntero_objeto_disparo en IY.
 166+ 8F9C              ;       Rutinas_de_impresion en IX.
 167+ 8F9C              ;       Puntero_de_impresion en HL.
 168+ 8F9C              ;       Impacto/Dirección en BC.
 169+ 8F9C
 170+ 8F9C CD 03 90     17 call Almacena_disparo
 171+ 8F9F 18 52            jr 6F                                             ; RET.
 172+ 8FA1
 173+ 8FA1              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FA1              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FA1              ;
 176+ 8FA1              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FA1              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FA1              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FA1
 180+ 8FA1 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8FA4
 182+ 8FA4              ;   Amadeus o entidad ???.
 183+ 8FA4
 184+ 8FA4 3A E3 89         ld a,(Ctrl_0)
 185+ 8FA7 CB 77            bit 6,a
 186+ 8FA9 28 0A            jr z,11F
 187+ 8FAB
 188+ 8FAB              ; 	Dispara Amadeus.
 189+ 8FAB
 190+ 8FAB 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FAD CD 09 97         call PreviousScan
 192+ 8FB0 CD 09 97         call PreviousScan
 193+ 8FB3
 194+ 8FB3              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FB3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FB3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FB3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FB3
 199+ 8FB3 18 11            jr 13F
 200+ 8FB5
 201+ 8FB5              ; 	Dispara Entidad.
 202+ 8FB5
 203+ 8FB5 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FB8              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FB8
 206+ 8FB8              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FB8              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FB8
 209+ 8FB8 C5               push bc
 210+ 8FB9 06 10            ld b,16
 211+ 8FBB CD FA 96     12 call NextScan
 212+ 8FBE 10 FB            djnz 12B
 213+ 8FC0 C1               pop bc
 214+ 8FC1
 215+ 8FC1 CD F4 8F         call Ajusta_disparo_parte_derecha
 216+ 8FC4 18 06            jr 18F
 217+ 8FC6
 218+ 8FC6              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FC6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FC6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FC6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FC6
 223+ 8FC6 CD F4 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FC9 CD 70 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FCC              ;                                                       ; _al generar el disparo.
 226+ 8FCC
 227+ 8FCC              ; LLegados a este punto tendremos:
 228+ 8FCC              ;
 229+ 8FCC              ;       Puntero_objeto_disparo en IY.
 230+ 8FCC              ;       Rutinas_de_impresion en IX.
 231+ 8FCC              ;       Puntero_de_impresion en HL.
 232+ 8FCC              ;       Impacto/Dirección en BC.
 233+ 8FCC
 234+ 8FCC CD 03 90     18 call Almacena_disparo
 235+ 8FCF 18 22            jr 6F                                               ; RET.
 236+ 8FD1
 237+ 8FD1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FD1
 239+ 8FD1 28 11        3 jr z,5F
 240+ 8FD3
 241+ 8FD3              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FD3              ;
 243+ 8FD3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FD3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FD3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FD3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FD3
 248+ 8FD3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FD3              ;	   ""        ""       "f9", B="1"
 250+ 8FD3              ;	   ""        ""       "fb", B="2"
 251+ 8FD3              ; 	   ""        ""       "fb", B="3"
 252+ 8FD3
 253+ 8FD3 2A B7 89     	ld hl,(Posicion_actual)
 254+ 8FD6 CD FA 96     	call NextScan
 255+ 8FD9
 256+ 8FD9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FD9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FD9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FD9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FD9
 261+ 8FD9 CD FB 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FDC
 263+ 8FDC              ; 	No se produce impacto. B="$80"
 264+ 8FDC              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FDC
 266+ 8FDC 01 80 80         ld bc,$8080
 267+ 8FDF
 268+ 8FDF              ; 	LLegados a este punto tendremos:
 269+ 8FDF              ;
 270+ 8FDF              ;       Puntero_objeto_disparo en IY.
 271+ 8FDF              ;       Rutinas_de_impresion en IX.
 272+ 8FDF              ;       Puntero_de_impresion en HL.
 273+ 8FDF              ;       Impacto/Dirección en BC.
 274+ 8FDF
 275+ 8FDF CD 03 90         call Almacena_disparo
 276+ 8FE2 18 0F            jr 6F                                           ; RET.
 277+ 8FE4
 278+ 8FE4              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FE4              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FE4              ;
 281+ 8FE4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FE4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FE4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FE4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FE4
 286+ 8FE4 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 8FE7 CD FA 96     	call NextScan
 288+ 8FEA
 289+ 8FEA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FEA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FEA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FEA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FEA
 294+ 8FEA CD F4 8F         call Ajusta_disparo_parte_derecha
 295+ 8FED
 296+ 8FED              ; 	No se produce impacto. B="$80"
 297+ 8FED              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FED
 299+ 8FED 01 80 80     15 ld bc,$8080
 300+ 8FF0
 301+ 8FF0              ; 	LLegados a este punto tendremos:
 302+ 8FF0              ;
 303+ 8FF0              ;       Puntero_objeto_disparo en IY.
 304+ 8FF0              ;       Rutinas_de_impresion en IX.
 305+ 8FF0              ;       Puntero_de_impresion en HL.
 306+ 8FF0              ;       Impacto/Dirección en BC.
 307+ 8FF0
 308+ 8FF0 CD 03 90         call Almacena_disparo
 309+ 8FF3
 310+ 8FF3 C9           6 ret
 311+ 8FF4
 312+ 8FF4              ; ----------------------------------------------------------------
 313+ 8FF4              ;
 314+ 8FF4              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FF4              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FF4              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FF4
 318+ 8FF4 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FF5 FE 02            cp 2
 320+ 8FF7 38 01            jr c,1F
 321+ 8FF9 23               inc hl
 322+ 8FFA C9           1 ret
 323+ 8FFB
 324+ 8FFB 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FFC FE 01        	cp 1
 326+ 8FFE 20 01        	jr nz,1F
 327+ 9000 2B           	dec hl
 328+ 9001 2B           1 dec hl
 329+ 9002 C9               ret
 330+ 9003
 331+ 9003              ; ----------------------------------------------------------------
 332+ 9003              ;
 333+ 9003              ;   25/02/23
 334+ 9003              ;
 335+ 9003              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9003              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9003              ;
 338+ 9003              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9003              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9003
 341+ 9003              Almacena_disparo
 342+ 9003
 343+ 9003 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9004 F1               pop af
 345+ 9005 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9006
 347+ 9006 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9007 E6 01            and 1
 349+ 9009 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 900B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 900B              ; 	Dispara AMADEUS.
 352+ 900B
 353+ 900B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 900B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 900B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 900B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 900B
 358+ 900B C5               push bc
 359+ 900C 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 900F 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9012 A7               and a
 362+ 9013 ED 42            sbc hl,bc
 363+ 9015 CC 5B 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9018 C1               pop bc
 365+ 9019 28 54            jr z,4F
 366+ 901B
 367+ 901B 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 901E 23               inc hl
 369+ 901F 23               inc hl
 370+ 9020 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9023              ;                                                   ; _ Disparo_(+1).
 372+ 9023 18 18            jr 2F
 373+ 9025
 374+ 9025              ; Dispara una entidad.
 375+ 9025
 376+ 9025 C5           1 push bc
 377+ 9026 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9029 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 902C A7               and a
 380+ 902D ED 42            sbc hl,bc
 381+ 902F CC 54 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9032 C1               pop bc
 383+ 9033 28 3A            jr z,4F
 384+ 9035
 385+ 9035 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9038 23               inc hl
 387+ 9039 23               inc hl
 388+ 903A 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 903D              ;                                                   ; _ Disparo_(+1).
 390+ 903D CD 92 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9040              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9040              ;
 393+ 9040              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9040              ;                                                     Rutinas_de_impresion en IX.
 395+ 9040              ;                                                     Puntero_de_impresion en HL.
 396+ 9040              ;                                                     Impacto/Dirección en BC.
 397+ 9040
 398+ 9040 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9041 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9042 23               inc hl                                          ; _ al siguiente.
 401+ 9043 A7               and a
 402+ 9044 20 C0            jr nz,3B
 403+ 9046
 404+ 9046 08               ex af,af
 405+ 9047 ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 904B F9               ld sp,hl
 407+ 904C
 408+ 904C DD E5            push ix                                         ; Rutina de impresión.
 409+ 904E F5               push af                                         ; Puntero de impresión.
 410+ 904F FD E5            push iy                                         ; Puntero objeto.
 411+ 9051 C5               push bc                                         ; Control.
 412+ 9052
 413+ 9052 ED 7B 09 8A      ld sp,(Stack)
 414+ 9056
 415+ 9056              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9056
 417+ 9056 21 F8 89     	ld hl,Ctrl_1
 418+ 9059 CB C6        	set 0,(hl)
 419+ 905B
 420+ 905B DD E5        	push ix
 421+ 905D E1               pop hl
 422+ 905E F5               push af
 423+ 905F DD E1            pop ix
 424+ 9061
 425+ 9061 CD A0 7F     	call Guarda_foto_registros
 426+ 9064
 427+ 9064 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9067 CB 86        	res 0,(hl)
 429+ 9069
 430+ 9069              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9069              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9069
 433+ 9069 CD 5B 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 906C CD 54 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 906F
 436+ 906F C9           4 ret
 437+ 9070
 438+ 9070              ; ----------------------------------------------------------------
 439+ 9070              ;
 440+ 9070              ;   4/3/23
 441+ 9070              ;
 442+ 9070              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9070              ;   _ al generarse el disparo.
 444+ 9070              ;
 445+ 9070              ;       "$80" ..... No se produce colisión.
 446+ 9070              ;       "$81" ..... Se produce colisión.
 447+ 9070              ;
 448+ 9070              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9070              ;         _ que forman el disparo.
 450+ 9070
 451+ 9070
 452+ 9070              Comprueba_Colision
 453+ 9070
 454+ 9070              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9070
 456+ 9070 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9072 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9073
 459+ 9073 CD A9 90         call Modifica_H_Velocidad_disparo
 460+ 9076
 461+ 9076 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9077 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9079 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 907B
 465+ 907B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 907D CD 99 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9080
 468+ 9080 7B               ld a,e
 469+ 9081 E6 01            and 1
 470+ 9083 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9085              ;                                                  ; _ para activar IMPACTO.
 472+ 9085 E1               pop hl
 473+ 9086 E5               push hl
 474+ 9087 CD FA 96         call NextScan
 475+ 908A
 476+ 908A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 908B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 908D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 908F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 908F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9091 CD 99 90         call Bucle_2
 482+ 9094
 483+ 9094 43           1 ld b,e
 484+ 9095 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9096 FD E1            pop iy
 486+ 9098 C9               ret
 487+ 9099
 488+ 9099              ; ---------- ----------
 489+ 9099
 490+ 9099 06 02        Bucle_2 ld b,2
 491+ 909B FD 7E 00     2 ld a,(iy)
 492+ 909E A6               and (hl)
 493+ 909F 28 02            jr z,1F
 494+ 90A1 1E 81            ld e,$81
 495+ 90A3 23           1 inc hl
 496+ 90A4 FD 23            inc iy
 497+ 90A6 10 F3            djnz 2B
 498+ 90A8 C9               ret
 499+ 90A9
 500+ 90A9              ; ---------- ----------
 501+ 90A9              ;
 502+ 90A9              ;   21/7/23
 503+ 90A9
 504+ 90A9              Modifica_H_Velocidad_disparo
 505+ 90A9
 506+ 90A9 3A 3F 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90AC FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90AE D0               ret nc                                         ; _ incrementamos H.
 509+ 90AF 24               inc h
 510+ 90B0
 511+ 90B0 C9               ret
 512+ 90B1
 513+ 90B1              ; -------------------------------------------------------------------------------------------------------------
 514+ 90B1              ;
 515+ 90B1              ;   11/04/23
 516+ 90B1              ;
 517+ 90B1              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90B1              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90B1              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90B1              ;
 521+ 90B1              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90B1
 523+ 90B1              Compara_coordenadas_X
 524+ 90B1
 525+ 90B1              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90B1              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90B1
 528+ 90B1              ; Preparamos registros:
 529+ 90B1
 530+ 90B1 21 BB 89         ld hl,Filas+6
 531+ 90B4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90B5 23               inc hl
 533+ 90B6 23               inc hl
 534+ 90B7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90B8 43               ld b,e
 536+ 90B9
 537+ 90B9 21 C9 89         ld hl,Filas+20
 538+ 90BC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90BD 21 3A 8A         ld hl,Coordenadas_X_Entidad
 540+ 90C0 CD DC 92         call Guarda_coordenadas_X
 541+ 90C3
 542+ 90C3              ; Preparamos registros:
 543+ 90C3
 544+ 90C3 21 AA 85         ld hl,Amadeus_db+6
 545+ 90C6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90C7 23               inc hl
 547+ 90C8 23               inc hl
 548+ 90C9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90CA 7B               ld a,e
 550+ 90CB 08               ex af,af'
 551+ 90CC 21 B8 85         ld hl,Amadeus_db+20
 552+ 90CF 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90D0 21 37 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90D3 CD DC 92         call Guarda_coordenadas_X
 555+ 90D6
 556+ 90D6              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90D6              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90D6
 559+ 90D6 04               inc b
 560+ 90D7 05               dec b
 561+ 90D8 28 04            jr z,1F
 562+ 90DA 06 03            ld b,3
 563+ 90DC 18 02            jr 2F
 564+ 90DE 06 02        1 ld b,2
 565+ 90E0 08           2 ex af,af'
 566+ 90E1 3C               inc a
 567+ 90E2 3D               dec a
 568+ 90E3 28 04            jr z,5F
 569+ 90E5 0E 03            ld c,3
 570+ 90E7 18 02            jr 6F
 571+ 90E9 0E 02        5 ld c,2
 572+ 90EB 79           6 ld a,c
 573+ 90EC 08               ex af,af'
 574+ 90ED 11 3A 8A         ld de,Coordenadas_X_Entidad
 575+ 90F0 1A           4 ld a,(de)
 576+ 90F1 21 37 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90F4 BE           3 cp (hl)
 578+ 90F5 28 0E            jr z,7F
 579+ 90F7 23               inc hl
 580+ 90F8 0D               dec c
 581+ 90F9 20 F9            jr nz,3B
 582+ 90FB 13               inc de
 583+ 90FC 08               ex af,af'
 584+ 90FD 4F               ld c,a
 585+ 90FE 08               ex af,af'
 586+ 90FF 10 EF            djnz 4B
 587+ 9101
 588+ 9101              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9101
 590+ 9101 CD 18 93     8 call Limpia_Coordenadas_X
 591+ 9104 C9               ret
 592+ 9105
 593+ 9105 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9107 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 910A 21 32 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 910D CB D6            set 2,(hl)
 597+ 910F 18 F0            jr 8B
 598+ 9111
 599+ 9111              ; -----------------------------------------------------------------------
 600+ 9111              ;
 601+ 9111              ;   17/04/23
 602+ 9111              ;
 603+ 9111
 604+ 9111              Detecta_colision_nave_entidad
 605+ 9111
 606+ 9111              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9111
 608+ 9111 2A B7 89         ld hl,(Posicion_actual)
 609+ 9114 CD 55 96         call Calcula_puntero_de_impresion
 610+ 9117
 611+ 9117              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9117              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9117
 614+ 9117 DD E5            push ix
 615+ 9119 E1               pop hl
 616+ 911A E5               push hl
 617+ 911B
 618+ 911B              ; ----- ----- -----
 619+ 911B 1E 00            ld e,0                                         ; Indica impacto.
 620+ 911D 06 0A            ld b,10
 621+ 911F CD 4F 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9122 7B               ld a,e
 623+ 9123 FE 05            cp 5
 624+ 9125 38 0E            jr c,3F
 625+ 9127
 626+ 9127              ; LLegados a este punto:
 627+ 9127              ;
 628+ 9127              ;   HAY COLISIÓN !!!!!.
 629+ 9127              ;
 630+ 9127              ;   .db (Impacto) de Amadeus a "1".
 631+ 9127              ;   SET el bit3 de (Impacto2).
 632+ 9127              ;
 633+ 9127              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9127
 635+ 9127 21 BD 85         ld hl,Amadeus_db+25
 636+ 912A 36 01            ld (hl),1
 637+ 912C 21 32 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 912F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9131 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9133 18 18            jr 1F
 641+ 9135
 642+ 9135              ; -----
 643+ 9135
 644+ 9135 E1           3 pop hl
 645+ 9136 CD FA 96         call NextScan
 646+ 9139 E5               push hl
 647+ 913A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 913B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 913D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 913F 30 0C            jr nc,1F
 651+ 9141              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9141 10 DC            djnz 2B
 653+ 9143
 654+ 9143              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9143
 656+ 9143              ; LLegados a este punto:
 657+ 9143              ;
 658+ 9143              ;   NO HAY COLISIÓN !!!!!.
 659+ 9143              ;
 660+ 9143              ;   .db (Impacto) de Amadeus a "0".
 661+ 9143              ;   RES el bit2 de (Impacto2).
 662+ 9143              ;
 663+ 9143              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9143              ;   Lo colocamos a "0".
 665+ 9143
 666+ 9143 21 32 8A         ld hl,Impacto2
 667+ 9146 CB 96            res 2,(hl)
 668+ 9148 2A 33 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 914B 36 00            ld (hl),0
 670+ 914D
 671+ 914D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 914E C9               ret
 673+ 914F
 674+ 914F               ; ---------- ----------
 675+ 914F
 676+ 914F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9150 3A B6 89         ld a,(Columns)
 678+ 9153 47               ld b,a
 679+ 9154 FD 7E 00     2 ld a,(iy)
 680+ 9157 BE               cp (hl)
 681+ 9158 28 01            jr z,1F
 682+ 915A
 683+ 915A 1C               inc e
 684+ 915B
 685+ 915B 23           1 inc hl
 686+ 915C FD 23            inc iy
 687+ 915E 10 F4            djnz 2B
 688+ 9160 C1               pop bc
 689+ 9161 C9               ret
 690+ 9162
 691+ 9162              ; -------------------------------------------------------------------------------------------------------------
 692+ 9162              ;
 693+ 9162              ;   13/03/23
 694+ 9162              ;
 695+ 9162              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9162              ;
 697+ 9162              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9162
 699+ 9162 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9165 7E               ld a,(hl)
 701+ 9166 A7               and a
 702+ 9167 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9168
 704+ 9168 44               ld b,h
 705+ 9169 4D               ld c,l
 706+ 916A 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
 707+ 916D E5               push hl
 708+ 916E A7               and a
 709+ 916F ED 42            sbc hl,bc
 710+ 9171 E5               push hl
 711+ 9172 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9173
 713+ 9173 E1               pop hl
 714+ 9174 54               ld d,h
 715+ 9175 5D               ld e,l
 716+ 9176 1B               dec de
 717+ 9177 ED B8            lddr                                                ; Limpiamos.
 718+ 9179
 719+ 9179 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 917C 22 0F 8A         ld (Stack_snapshot_disparos),hl
 721+ 917F
 722+ 917F C9               ret
 723+ 9180
 724+ 9180              ; -------------------------------------------------------------------------------------------------------------
 725+ 9180              ;
 726+ 9180              ;   18/07/23
 727+ 9180              ;
 728+ 9180
 729+ 9180              Motor_de_disparos
 730+ 9180
 731+ 9180              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9180
 733+ 9180 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9183 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9186
 736+ 9186 CD 92 8D     2 call Extrae_address
 737+ 9189 7E               ld a,(hl)
 738+ 918A A7               and a
 739+ 918B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 918D
 741+ 918D              ; ----- ----- ----- ----- ----- -----
 742+ 918D
 743+ 918D C5               push bc
 744+ 918E CD 52 92         call foto_disparo_a_borrar
 745+ 9191
 746+ 9191              ; Existe colisión con este disparo???
 747+ 9191
 748+ 9191 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9192 7E               ld a,(hl)
 750+ 9193 2B               dec hl
 751+ 9194 E6 01            and 1
 752+ 9196 28 1D            jr z,9F
 753+ 9198
 754+ 9198              ;   En este punto:
 755+ 9198              ;
 756+ 9198              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9198              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9198              ;   _con la entidad).
 759+ 9198              ;
 760+ 9198              ;   Disparo_2A defw 0                                ; Control.
 761+ 9198              ;    defw 0                                          ; Puntero objeto.
 762+ 9198              ;    defw 0                                          ; Puntero de impresión.
 763+ 9198              ;    defw 0                                          ; Rutina de impresión.
 764+ 9198
 765+ 9198 E5               push hl
 766+ 9199
 767+ 9199 06 04            ld b,4
 768+ 919B 23           19 inc hl
 769+ 919C 10 FD            djnz 19B
 770+ 919E
 771+ 919E CD 92 8D         call Extrae_address
 772+ 91A1 CD 80 9D         call Genera_coordenadas_disparo
 773+ 91A4
 774+ 91A4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91A4
 776+ 91A4 21 35 8A         ld hl,Coordenadas_disparo_certero
 777+ 91A7 72               ld (hl),d
 778+ 91A8 23               inc hl
 779+ 91A9 73               ld (hl),e
 780+ 91AA
 781+ 91AA              ; Elimino el disparo de la base de datos.
 782+ 91AA
 783+ 91AA E1               pop hl
 784+ 91AB CD D1 92         call Elimina_disparo_de_base_de_datos
 785+ 91AE 21 32 8A         ld hl,Impacto2
 786+ 91B1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91B3
 788+ 91B3 18 06            jr 11F
 789+ 91B5
 790+ 91B5 CD 7B 92     9 call Mueve_disparo
 791+ 91B8 CD 52 92         call foto_disparo_a_borrar
 792+ 91BB
 793+ 91BB C1           11 pop bc
 794+ 91BC 18 04            jr 7F
 795+ 91BE
 796+ 91BE              ; ----- ----- ----- ----- ----- -----
 797+ 91BE
 798+ 91BE ED 42        1 sbc hl,bc
 799+ 91C0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91C2
 801+ 91C2 2A 30 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91C5 23               inc hl
 803+ 91C6 23               inc hl
 804+ 91C7 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91CA 18 BA            jr 2B
 806+ 91CC
 807+ 91CC CD 5B 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91CF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91CF
 810+ 91CF              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91CF
 812+ 91CF 01 8A 85         ld bc,Disparo_11
 813+ 91D2 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91D5
 815+ 91D5 CD 92 8D     5 call Extrae_address
 816+ 91D8 7E               ld a,(hl)
 817+ 91D9 A7               and a
 818+ 91DA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91DC
 820+ 91DC              ; ----- ----- ----- ----- ----- -----
 821+ 91DC
 822+ 91DC C5               push bc
 823+ 91DD CD 52 92         call foto_disparo_a_borrar
 824+ 91E0
 825+ 91E0              ; Existe colisión con este disparo???
 826+ 91E0
 827+ 91E0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91E1 7E               ld a,(hl)
 829+ 91E2 2B               dec hl
 830+ 91E3 E6 01            and 1
 831+ 91E5 28 4D            jr z,10F
 832+ 91E7
 833+ 91E7              ;! La colisión se produce con Amadeus???
 834+ 91E7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91E7
 836+ 91E7 E5               push hl
 837+ 91E8
 838+ 91E8 06 04            ld b,4
 839+ 91EA 23           16 inc hl
 840+ 91EB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91ED
 842+ 91ED CD 92 8D         call Extrae_address
 843+ 91F0 CD 80 9D         call Genera_coordenadas_disparo
 844+ 91F3
 845+ 91F3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91F4 FE 16            cp $16
 847+ 91F6 38 2A            jr c,15F
 848+ 91F8
 849+ 91F8
 850+ 91F8              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91F8
 852+ 91F8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91F9
 854+ 91F9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91F9
 856+ 91F9
 857+ 91F9 2A 3D 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91FC
 859+ 91FC              ; Coordenada X de Amadeus en D.
 860+ 91FC
 861+ 91FC 7D               ld a,l
 862+ 91FD E6 1F            and $1F
 863+ 91FF 57               ld d,a
 864+ 9200
 865+ 9200 21 AC 85         ld hl,Amadeus_db+8
 866+ 9203 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9204
 868+ 9204 21 37 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9207 CD DC 92         call Guarda_coordenadas_X
 870+ 920A
 871+ 920A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 920B
 873+ 920B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 920B
 875+ 920B 06 02            ld b,2
 876+ 920D C5           20 push bc
 877+ 920E
 878+ 920E 06 03            ld b,3
 879+ 9210 21 37 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9213 7E           18 ld a,(hl)
 881+ 9214 BA               cp d
 882+ 9215 20 04            jr nz,17F
 883+ 9217
 884+ 9217              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9217
 886+ 9217 C1               pop bc
 887+ 9218 E1               pop hl
 888+ 9219 18 0D            jr 14F
 889+ 921B
 890+ 921B 23           17 inc hl
 891+ 921C 10 F5            djnz 18B
 892+ 921E
 893+ 921E 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 921F
 895+ 921F C1               pop bc
 896+ 9220 10 EB            djnz 20B
 897+ 9222
 898+ 9222
 899+ 9222              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9222              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9222
 902+ 9222 E1           15 pop hl
 903+ 9223 23               inc hl
 904+ 9224 35               dec (hl)
 905+ 9225 2B               dec hl
 906+ 9226 18 0C            jr 10F
 907+ 9228
 908+ 9228              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9228              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9228
 911+ 9228 E5           14 push hl
 912+ 9229 CD D1 92         call Elimina_disparo_de_base_de_datos
 913+ 922C 21 32 8A         ld hl,Impacto2
 914+ 922F CB CE            set 1,(hl)
 915+ 9231 E1               pop hl
 916+ 9232 18 06            jr 12F
 917+ 9234
 918+ 9234              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9234
 920+ 9234 CD 7B 92     10 call Mueve_disparo
 921+ 9237 CD 52 92         call foto_disparo_a_borrar
 922+ 923A C1           12 pop bc
 923+ 923B
 924+ 923B 18 04            jr 8F
 925+ 923D
 926+ 923D              ; ----- ----- ----- ----- ----- -----
 927+ 923D
 928+ 923D ED 42        4 sbc hl,bc
 929+ 923F 28 0A            jr z,6F
 930+ 9241
 931+ 9241 2A 2E 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9244 23               inc hl
 933+ 9245 23               inc hl
 934+ 9246 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9249 18 8A            jr 5B
 936+ 924B
 937+ 924B CD 54 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 924E CD 18 93         call Limpia_Coordenadas_X
 939+ 9251 C9               ret
 940+ 9252
 941+ 9252              ; ------------------------------------------------------------------
 942+ 9252
 943+ 9252              foto_disparo_a_borrar
 944+ 9252
 945+ 9252 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9253 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9254 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9255
 949+ 9255 E5               push hl
 950+ 9256 23               inc hl
 951+ 9257 23               inc hl
 952+ 9258 ED 73 09 8A      ld (Stack),sp
 953+ 925C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 925D FD E1            pop iy
 955+ 925F DD E1            pop ix
 956+ 9261 E1               pop hl
 957+ 9262 ED 7B 09 8A      ld sp,(Stack)
 958+ 9266 3A F8 89         ld a,(Ctrl_1)
 959+ 9269 CB C7            set 0,a
 960+ 926B 32 F8 89         ld (Ctrl_1),a
 961+ 926E CD A0 7F         call Guarda_foto_registros
 962+ 9271 3A F8 89         ld a,(Ctrl_1)
 963+ 9274 CB 87            res 0,a
 964+ 9276 32 F8 89         ld (Ctrl_1),a
 965+ 9279 E1               pop hl
 966+ 927A C9               ret
 967+ 927B
 968+ 927B              ;---------------------------------------------------
 969+ 927B              ;
 970+ 927B              ;   18/07/23
 971+ 927B              ;
 972+ 927B
 973+ 927B              Mueve_disparo
 974+ 927B
 975+ 927B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 927B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 927B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 927B
 979+ 927B E5               push hl
 980+ 927C
 981+ 927C 7E               ld a,(hl)
 982+ 927D
 983+ 927D 06 04            ld b,4
 984+ 927F 23           1 inc hl
 985+ 9280 10 FD            djnz 1B
 986+ 9282
 987+ 9282              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9282
 989+ 9282 CD 92 8D         call Extrae_address
 990+ 9285
 991+ 9285 E6 01            and 1
 992+ 9287 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9289
 994+ 9289              ; Disparo hacia arriba, (Amadeus).
 995+ 9289
 996+ 9289              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9289              ; _ de la dificultad.
 998+ 9289
 999+ 9289 CD 09 97         call PreviousScan
1000+ 928C CD 09 97         call PreviousScan
1001+ 928F CD 09 97         call PreviousScan
1002+ 9292 CD 09 97         call PreviousScan
1003+ 9295
1004+ 9295              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9295
1006+ 9295 7C               ld a,h
1007+ 9296 FE 40            cp $40
1008+ 9298 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 929A
1010+ 929A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 929A
1012+ 929A EB               ex de,hl
1013+ 929B 06 04            ld b,4
1014+ 929D 2B           6 dec hl
1015+ 929E 10 FD            djnz 6B
1016+ 92A0
1017+ 92A0 CD D1 92         call Elimina_disparo_de_base_de_datos
1018+ 92A3 E1               pop hl
1019+ 92A4 18 10            jr 7F
1020+ 92A6
1021+ 92A6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92A6              ; HL contiene el puntero de impresión del disparo.
1023+ 92A6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92A6
1025+ 92A6 D5           3 push de
1026+ 92A7 C5               push bc
1027+ 92A8
1028+ 92A8 CD 70 90         call Comprueba_Colision
1029+ 92AB
1030+ 92AB              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92AB
1032+ 92AB 78               ld a,b
1033+ 92AC
1034+ 92AC C1               pop bc
1035+ 92AD D1               pop de
1036+ 92AE
1037+ 92AE EB               ex de,hl
1038+ 92AF
1039+ 92AF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92B0 23               inc hl                                      ; _ movimiento.
1041+ 92B1 72               ld (hl),d
1042+ 92B2
1043+ 92B2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92B3
1045+ 92B3 23               inc hl                                      ; _ en curso.
1046+ 92B4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92B5 2B               dec hl
1048+ 92B6
1049+ 92B6 C9           7 ret
1050+ 92B7
1051+ 92B7              ; Disparo hacia abajo, (Entidad).
1052+ 92B7
1053+ 92B7 3A 3F 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92BA 47               ld b,a
1055+ 92BB
1056+ 92BB CD FA 96     4 call NextScan
1057+ 92BE 10 FB            djnz 4B
1058+ 92C0
1059+ 92C0              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92C0
1061+ 92C0 7C               ld a,h
1062+ 92C1 FE 58            cp $58
1063+ 92C3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92C5
1065+ 92C5 EB               ex de,hl
1066+ 92C6 06 04            ld b,4
1067+ 92C8 2B           5 dec hl
1068+ 92C9 10 FD            djnz 5B
1069+ 92CB
1070+ 92CB CD D1 92         call Elimina_disparo_de_base_de_datos
1071+ 92CE E1               pop hl
1072+ 92CF 18 E5            jr 7B
1073+ 92D1
1074+ 92D1              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92D1
1076+ 92D1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92D4 AF               xor a
1078+ 92D5 77               ld (hl),a
1079+ 92D6 54               ld d,h
1080+ 92D7 5D               ld e,l
1081+ 92D8 13               inc de
1082+ 92D9 ED B0            ldir
1083+ 92DB C9               ret
1084+ 92DC
1085+ 92DC              ; -----------------------------------------------------------------
1086+ 92DC              ;
1087+ 92DC              ;   19/7/23
1088+ 92DC              ;
1089+ 92DC              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92DC              ;
1091+ 92DC              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92DC              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92DC              ;
1094+ 92DC              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92DC              ;
1096+ 92DC              ;   INPUTS:
1097+ 92DC              ;
1098+ 92DC              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92DC              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92DC
1101+ 92DC              ;   MODIFICA: A, HL, BC y DE.
1102+ 92DC
1103+ 92DC              Guarda_coordenadas_X
1104+ 92DC
1105+ 92DC 7B               ld a,e
1106+ 92DD A7               and a
1107+ 92DE 20 04            jr nz,1F
1108+ 92E0
1109+ 92E0 06 02            ld b,2
1110+ 92E2 18 02            jr 2F
1111+ 92E4
1112+ 92E4 06 03        1 ld b,3
1113+ 92E6 72           2 ld (hl),d
1114+ 92E7 23               inc hl
1115+ 92E8 14               inc d
1116+ 92E9 10 FB            djnz 2B
1117+ 92EB
1118+ 92EB C9               ret
1119+ 92EC
1120+ 92EC              ; -----------------------------------------------------------------
1121+ 92EC              ;
1122+ 92EC              ;   12/04/23
1123+ 92EC              ;
1124+ 92EC
1125+ 92EC 3A 32 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92EF A7               and a
1127+ 92F0 C8               ret z
1128+ 92F1
1129+ 92F1 FE 04            cp 4
1130+ 92F3 20 09            jr nz,1F
1131+ 92F5
1132+ 92F5
1133+ 92F5              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92F5
1135+ 92F5 CD 11 91         call Detecta_colision_nave_entidad
1136+ 92F8
1137+ 92F8 21 32 8A         ld hl,Impacto2
1138+ 92FB CB 5E            bit 3,(hl)
1139+ 92FD C0               ret nz                                               ; Existe colisión, RET.
1140+ 92FE
1141+ 92FE              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92FE              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92FE
1144+ 92FE 21 32 8A     1 ld hl,Impacto2
1145+ 9301 CB 4E            bit 1,(hl)
1146+ 9303 28 07            jr z,2F
1147+ 9305
1148+ 9305 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9308 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 930A 18 0B            jr 3F
1151+ 930C
1152+ 930C 21 32 8A     2 ld hl,Impacto2
1153+ 930F CB 46            bit 0,(hl)
1154+ 9311 C8               ret z
1155+ 9312
1156+ 9312              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9312
1158+ 9312 21 F8 89         ld hl,Ctrl_1
1159+ 9315 CB D6            set 2,(hl)
1160+ 9317
1161+ 9317 C9           3 ret
1162+ 9318
1163+ 9318              ; -----------------------------------------------------------------
1164+ 9318              ;
1165+ 9318              ;   19/7/23
1166+ 9318              ;
1167+ 9318              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9318
1169+ 9318 AF           Limpia_Coordenadas_X xor a
1170+ 9319 06 06            ld b,6
1171+ 931B 21 37 8A         ld hl,Coordenadas_X_Amadeus
1172+ 931E 77           1 ld (hl),a
1173+ 931F 23               inc hl
1174+ 9320 10 FC            djnz 1B
1175+ 9322 C9               ret
1176+ 9323
1177+ 9323              ; -----------------------------------------------------------------
1178+ 9323              ;
1179+ 9323              ;   25/04/23
1180+ 9323              ;
1181+ 9323
1182+ 9323              Determina_resultado_comparativa
1183+ 9323
1184+ 9323              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9323              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9323              ;
1187+ 9323              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9323              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9323              ;
1190+ 9323              ;   SBC HL,DE
1191+ 9323
1192+ 9323              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9323              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9323
1195+ 9323              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9323              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9323
1198+ 9323
1199+ 9323 3A C9 89         ld a,(Cuad_objeto)
1200+ 9326 FE 02            cp 2
1201+ 9328 28 26            jr z,2F
1202+ 932A 38 24            jr c,2F
1203+ 932C
1204+ 932C              ; Cuadrantes 3º y 4º
1205+ 932C
1206+ 932C E6 01            and 1
1207+ 932E 28 10            jr z,4F
1208+ 9330
1209+ 9330              ; Cuadrante 3º
1210+ 9330
1211+ 9330 7C               ld a,h
1212+ 9331 06 00            ld b,0
1213+ 9333
1214+ 9333 CD BE 93         call Compara_cositas_H3
1215+ 9336
1216+ 9336 04               inc b
1217+ 9337 05               dec b
1218+ 9338 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9339
1220+ 9339 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 933A 06 00            ld b,0
1222+ 933C
1223+ 933C CD D0 93         call Compara_cositas_L3
1224+ 933F C9               ret
1225+ 9340
1226+ 9340              ; Cuadrante 4º
1227+ 9340
1228+ 9340 7C           4 ld a,h
1229+ 9341 06 00            ld b,0
1230+ 9343
1231+ 9343 CD E2 93         call Compara_cositas_H4
1232+ 9346
1233+ 9346 04               inc b
1234+ 9347 05               dec b
1235+ 9348 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9349
1237+ 9349 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 934A 06 00            ld b,0
1239+ 934C
1240+ 934C CD F8 93         call Compara_cositas_L4
1241+ 934F C9               ret
1242+ 9350
1243+ 9350              ; Cuadrantes 1º y 2º.
1244+ 9350
1245+ 9350 28 10        2 jr z,3F
1246+ 9352
1247+ 9352              ; 1er Cuadrante
1248+ 9352
1249+ 9352 7C               ld a,h
1250+ 9353 06 00            ld b,0
1251+ 9355
1252+ 9355 CD 96 93         call Compara_cositas_H1
1253+ 9358
1254+ 9358 04               inc b
1255+ 9359 05               dec b
1256+ 935A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 935B
1258+ 935B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 935C 06 00            ld b,0
1260+ 935E
1261+ 935E CD AC 93         call Compara_cositas_L1
1262+ 9361 C9               ret
1263+ 9362
1264+ 9362
1265+ 9362              ; 2º Cuadrante
1266+ 9362
1267+ 9362 7C           3 ld a,h
1268+ 9363 06 00            ld b,0
1269+ 9365
1270+ 9365 CD 72 93         call Compara_cositas_H2
1271+ 9368
1272+ 9368 04               inc b
1273+ 9369 05               dec b
1274+ 936A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 936B
1276+ 936B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 936C 06 00            ld b,0
1278+ 936E
1279+ 936E CD 84 93         call Compara_cositas_L2
1280+ 9371 C9               ret
1281+ 9372
1282+ 9372 A7           Compara_cositas_H2 and a
1283+ 9373 28 0D            jr z,1F
1284+ 9375              ;    cp $fd
1285+ 9375              ;    jr z,1F
1286+ 9375              ;    cp $fe
1287+ 9375              ;    jr z,1F
1288+ 9375 FE FF            cp $ff
1289+ 9377 28 09            jr z,1F
1290+ 9379 FE 01            cp $01
1291+ 937B 28 05            jr z,1F
1292+ 937D FE 02            cp $02
1293+ 937F 28 01            jr z,1F
1294+ 9381 C0               ret nz
1295+ 9382 04           1 inc b
1296+ 9383 C9               ret
1297+ 9384
1298+ 9384 A7           Compara_cositas_L2 and a
1299+ 9385 28 0D            jr z,1F
1300+ 9387              ;    cp $fd
1301+ 9387              ;    jr z,1F
1302+ 9387 FE FE            cp $fe
1303+ 9389 28 09            jr z,1F
1304+ 938B FE FF            cp $ff
1305+ 938D 28 05            jr z,1F
1306+ 938F FE 01            cp $01
1307+ 9391 28 01            jr z,1F
1308+ 9393              ;    cp $02
1309+ 9393              ;    jr z,1F
1310+ 9393 C0               ret nz
1311+ 9394 04           1 inc b
1312+ 9395 C9               ret
1313+ 9396
1314+ 9396 A7           Compara_cositas_H1 and a
1315+ 9397 28 11            jr z,1F
1316+ 9399              ;    cp $fd
1317+ 9399              ;    jr z,1F
1318+ 9399              ;    cp $fe
1319+ 9399              ;    jr z,1F
1320+ 9399 FE FF            cp $ff
1321+ 939B 28 0D            jr z,1F
1322+ 939D FE 01            cp $01
1323+ 939F 28 09            jr z,1F
1324+ 93A1 FE 02            cp $02
1325+ 93A3 28 05            jr z,1F
1326+ 93A5 FE 03            cp $03
1327+ 93A7 28 01            jr z,1F
1328+ 93A9 C0               ret nz
1329+ 93AA 04           1 inc b
1330+ 93AB C9               ret
1331+ 93AC
1332+ 93AC A7           Compara_cositas_L1 and a
1333+ 93AD 28 0D            jr z,1F
1334+ 93AF              ;    cp $fd
1335+ 93AF              ;    jr z,1F
1336+ 93AF              ;    cp $fe
1337+ 93AF              ;    jr z,1F
1338+ 93AF              ;    cp $ff
1339+ 93AF              ;    jr z,1F
1340+ 93AF FE 01            cp $01
1341+ 93B1 28 09            jr z,1F
1342+ 93B3 FE 02            cp $02
1343+ 93B5 28 05            jr z,1F
1344+ 93B7 FE 03            cp $03
1345+ 93B9 28 01            jr z,1F
1346+ 93BB C0               ret nz
1347+ 93BC 04           1 inc b
1348+ 93BD C9               ret
1349+ 93BE
1350+ 93BE A7           Compara_cositas_H3 and a
1351+ 93BF 28 0D            jr z,1F
1352+ 93C1              ;    cp $fd
1353+ 93C1              ;    jr z,1F
1354+ 93C1 FE FE            cp $fe
1355+ 93C3 28 09            jr z,1F
1356+ 93C5 FE FF            cp $ff
1357+ 93C7 28 05            jr z,1F
1358+ 93C9 FE 01            cp $01
1359+ 93CB 28 01            jr z,1F
1360+ 93CD              ;    cp $02
1361+ 93CD              ;    jr z,1F
1362+ 93CD              ;    cp $03
1363+ 93CD              ;    jr z,1F
1364+ 93CD C0               ret nz
1365+ 93CE 04           1 inc b
1366+ 93CF C9               ret
1367+ 93D0
1368+ 93D0 A7           Compara_cositas_L3 and a
1369+ 93D1 28 0D            jr z,1F
1370+ 93D3              ;    cp $fd
1371+ 93D3              ;    jr z,1F
1372+ 93D3              ;    cp $fe
1373+ 93D3              ;    jr z,1F
1374+ 93D3              ;    cp $ff
1375+ 93D3              ;    jr z,1F
1376+ 93D3 FE 01            cp $01
1377+ 93D5 28 09            jr z,1F
1378+ 93D7 FE 02            cp $02
1379+ 93D9 28 05            jr z,1F
1380+ 93DB FE 03            cp $03
1381+ 93DD 28 01            jr z,1F
1382+ 93DF C0               ret nz
1383+ 93E0 04           1 inc b
1384+ 93E1 C9               ret
1385+ 93E2
1386+ 93E2 A7           Compara_cositas_H4 and a
1387+ 93E3 28 11            jr z,1F
1388+ 93E5 FE FD            cp $fd
1389+ 93E7 28 0D            jr z,1F
1390+ 93E9 FE FE            cp $fe
1391+ 93EB 28 09            jr z,1F
1392+ 93ED FE FF            cp $ff
1393+ 93EF 28 05            jr z,1F
1394+ 93F1 FE 01            cp $01
1395+ 93F3 28 01            jr z,1F
1396+ 93F5              ;    cp $02
1397+ 93F5              ;    jr z,1F
1398+ 93F5              ;    cp $03
1399+ 93F5              ;    jr z,1F
1400+ 93F5 C0               ret nz
1401+ 93F6 04           1 inc b
1402+ 93F7 C9               ret
1403+ 93F8
1404+ 93F8 A7           Compara_cositas_L4 and a
1405+ 93F9 28 0D            jr z,1F
1406+ 93FB              ;    cp $fd
1407+ 93FB              ;    jr z,1F
1408+ 93FB FE FE            cp $fe
1409+ 93FD 28 09            jr z,1F
1410+ 93FF FE FF            cp $ff
1411+ 9401 28 05            jr z,1F
1412+ 9403 FE 01            cp $01
1413+ 9405 28 01            jr z,1F
1414+ 9407              ;    cp $02
1415+ 9407              ;    jr z,1F
1416+ 9407              ;    cp $03
1417+ 9407              ;    jr z,1F
1418+ 9407 C0               ret nz
1419+ 9408 04           1 inc b
1420+ 9409 C9               ret
# file closed: Disparo.asm
1443  940A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 940A              ; ******************************************************************************************************************************************************************************************
   2+ 940A              ;
   3+ 940A              ; 26/06/23
   4+ 940A              ;
   5+ 940A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 940A
   7+ 940A CD EE 96     Draw call Prepara_draw
   8+ 940D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 940E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 940F 28 05        	jr z,2F
  11+ 9411
  12+ 9411 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9414 18 0C        	jr 1F
  14+ 9416
  15+ 9416 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9419 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 941C CD AB 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 941F              ;													; _la esquina superior izquierda de la pantalla.
  19+ 941F CD FC 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9422
  21+ 9422 3A E3 89     1 ld a,(Ctrl_0)
  22+ 9425 CB 6F        	bit 5,a
  23+ 9427 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9429
  25+ 9429 CD 41 94     	call Comprueba_limite_horizontal
  26+ 942C CD D1 94     	call Comprueba_limite_vertical
  27+ 942F
  28+ 942F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 942F              ; -----------------------
  30+ 942F              ; -----------------------
  31+ 942F              ; -----------------------
  32+ 942F
  33+ 942F CD 1E 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9432 CD 55 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9435 CD B4 96     	call Define_rutina_de_impresion
  36+ 9438
  37+ 9438 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 943B CB AF        	res 5,a											; _a ser de utilidad.
  39+ 943D 32 E3 89     	ld (Ctrl_0),a
  40+ 9440
  41+ 9440 C9           	ret
  42+ 9441
  43+ 9441              ; *******************************************************************************************************************************************************************************************
  44+ 9441              ;	21/01/23
  45+ 9441              ;
  46+ 9441              ; 	Comprueba_limite_horizontal.
  47+ 9441              ;
  48+ 9441              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9441              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9441              ;
  51+ 9441              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9441              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9441              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9441              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9441
  56+ 9441
  57+ 9441
  58+ 9441 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9444 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9446 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9448 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 944A 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 944D 18 09            jr 6F
  64+ 944F CB 5F        1 bit 3,a
  65+ 9451 28 0A            jr z,2F
  66+ 9453 E6 F7            and $f7
  67+ 9455 32 E3 89         ld (Ctrl_0),a
  68+ 9458 CD AB 95     6 call Inicializacion
  69+ 945B 18 5B            jr 5F
  70+ 945D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 945E
  72+ 945E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 945E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 945E
  75+ 945E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 945F 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9462 CD CA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9465 67           	ld h,a
  79+ 9466 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9467 CD CA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 946A 67           	ld h,a
  82+ 946B A7           	and a
  83+ 946C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 946E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 946F 3A C9 89     	ld a,(Cuad_objeto)
  86+ 9472 FE 02        	cp 2
  87+ 9474 38 1E        	jr c,3F
  88+ 9476 28 1C        	jr z,3F
  89+ 9478 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9479 28 23            jr z,7F
  91+ 947B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 947D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 947F E1           	pop hl
  94+ 9480
  95+ 9480              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9480              ; _para indicar con E="2" en caso necesario.
  97+ 9480
  98+ 9480 E5               push hl
  99+ 9481 C5               push bc
 100+ 9482 CD CA 99     	call calcula_tercio
 101+ 9485 FE 01        	cp 1
 102+ 9487 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9489 CD B9 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 948C 28 26            jr z,9F
 105+ 948E 38 24            jr c,9F
 106+ 9490 1E 00        11 ld e,0
 107+ 9492 18 22            jr 8F
 108+ 9494 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9495 28 07        	jr z, 7F
 110+ 9497 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9499 1E 00         	ld e,0
 112+ 949B E1           	pop hl
 113+ 949C 18 04        	jr 4F
 114+ 949E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94A0 18 15            jr 10F
 116+ 94A2
 117+ 94A2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94A2              ; _para indicar con E="2" en caso necesario.
 119+ 94A2
 120+ 94A2 E5           4 push hl
 121+ 94A3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94A4 CD CA 99     	call calcula_tercio
 123+ 94A7 FE 01        	cp 1
 124+ 94A9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94AB CD B9 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94AE 28 04            jr z,9F
 127+ 94B0 30 02            jr nc,9F
 128+ 94B2 18 02        	jr 8F
 129+ 94B4 1E 02        9 ld e,2
 130+ 94B6 C1           8 pop bc
 131+ 94B7 E1           10 pop hl
 132+ 94B8 C9           5 ret
 133+ 94B9
 134+ 94B9              ; --------------------
 135+ 94B9              ;
 136+ 94B9              ; 25/08/22
 137+ 94B9
 138+ 94B9 CD CA 99     Comprueba_centro call calcula_tercio
 139+ 94BC 67               ld h,a
 140+ 94BD 08           	ex af,af
 141+ 94BE FE 02        	cp 2
 142+ 94C0 38 07        	jr c,1F
 143+ 94C2 28 05        	jr z,1F
 144+ 94C4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94C7 18 03        	jr 2F
 146+ 94C9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94CC 08           2 ex af,af
 148+ 94CD A7               and a
 149+ 94CE ED 42            sbc hl,bc
 150+ 94D0 C9               ret
 151+ 94D1
 152+ 94D1              ; *********************************************************************************************************************************************************************************************
 153+ 94D1              ;
 154+ 94D1              ;   16/8/22
 155+ 94D1              ;
 156+ 94D1              ;	Comprueba_limite_vertical
 157+ 94D1              ;
 158+ 94D1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94D1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94D1              ;
 161+ 94D1
 162+ 94D1 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94D4 7D           	ld a,l
 164+ 94D5 E6 1F        	and $1F
 165+ 94D7 57           	ld d,a
 166+ 94D8 3A F5 89     	ld a,(Limite_vertical)
 167+ 94DB BA           	cp d 											; Límite - Posición.
 168+ 94DC 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94DD 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94E0 CB 47        	bit 0,a
 171+ 94E2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94E4
 173+ 94E4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94E4
 175+ 94E4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94E5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94E7
 178+ 94E7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94E7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94E7
 181+ 94E7 3A BB 89         ld a,(Coordenada_X)
 182+ 94EA 16 0F            ld d,Centro_izquierda
 183+ 94EC A7               and a
 184+ 94ED 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94EE 28 1E            jr z,3F
 186+ 94F0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94F2              ;                                                    ; _salimos sin modificar nada.
 188+ 94F2 18 0E            jr 2F
 189+ 94F4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94F5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94F7
 192+ 94F7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94F7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94F7
 195+ 94F7 3A BB 89         ld a,(Coordenada_X)
 196+ 94FA 16 10            ld d,Centro_derecha
 197+ 94FC A7               and a
 198+ 94FD 92               sub d
 199+ 94FE 28 0E            jr z,3F
 200+ 9500 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9502              ;                                                    ; _salimos sin modificar nada.
 202+ 9502 CB 43        2 bit 0,e
 203+ 9504 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9506 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9507 CD 9B 95         call Modificaccionne
 206+ 950A C1           	pop bc
 207+ 950B CD AB 95         call Inicializacion
 208+ 950E C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 950F
 210+ 950F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 950F
 212+ 950F C5           4 push bc
 213+ 9510 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9513 0A           	ld a,(bc)
 215+ 9514 3D           	dec a
 216+ 9515 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9516 7D           	ld a,l
 218+ 9517 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9518 CB 47        	bit 0,a
 220+ 951A 28 03        	jr z,5F
 221+ 951C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 951D 18 2E        	jr 7F
 223+ 951F
 224+ 951F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 951F
 226+ 951F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9520 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9521 3A E3 89     	ld a,(Ctrl_0)
 229+ 9524 CB 4F        	bit 1,a
 230+ 9526 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9528 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9529
 233+ 9529              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9529
 235+ 9529 1C               inc e
 236+ 952A 1D               dec e
 237+ 952B 20 07            jr nz,12F
 238+ 952D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 952E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 952F 22 B7 89     	ld (Posicion_actual),hl
 241+ 9532 18 44        13 jr 9F
 242+ 9534 CB 43        12 bit 0,e
 243+ 9536 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9538              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9538 C1           	pop bc
 246+ 9539 18 D3        	jr 3B
 247+ 953B 80           14 add b
 248+ 953C 6F               ld l,a
 249+ 953D 22 B7 89     	ld (Posicion_actual),hl
 250+ 9540 CD 9B 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9543 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9545 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9547 32 E3 89         ld (Ctrl_0),a
 254+ 954A F1           	pop af
 255+ 954B 18 2B        	jr 9F
 256+ 954D
 257+ 954D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 954D
 259+ 954D F5           7 push af
 260+ 954E 3A E3 89     	ld a,(Ctrl_0)
 261+ 9551 CB 47        	bit 0,a
 262+ 9553 20 1D        	jr nz,8F
 263+ 9555 F1           	pop af
 264+ 9556
 265+ 9556              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9556
 267+ 9556 1C           	inc e
 268+ 9557 1D               dec e
 269+ 9558 20 07            jr nz,10F
 270+ 955A 90           	sub b
 271+ 955B 6F               ld l,a
 272+ 955C 22 B7 89     	ld (Posicion_actual),hl
 273+ 955F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9561              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9561 CB 43        10 bit 0,e
 276+ 9563 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9565              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9565 C1           	pop bc
 279+ 9566 18 A6        	jr 3B
 280+ 9568 90           16 sub b
 281+ 9569 6F               ld l,a
 282+ 956A 22 B7 89     	ld (Posicion_actual),hl
 283+ 956D CD 9B 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9570 18 06            jr 9F
 285+ 9572 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9574 32 E3 89         ld (Ctrl_0),a
 287+ 9577 F1           	pop af
 288+ 9578 C1           9 pop bc
 289+ 9579 1E 00        	ld e,0
 290+ 957B CD AB 95         call Inicializacion
 291+ 957E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 957F 08           	ex af,af
 293+ 9580 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9581 18 8B            jr 3B
 295+ 9583
 296+ 9583              ; --------------------
 297+ 9583
 298+ 9583 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9585 CD 09 97     1 call PreviousScan
 300+ 9588 10 FB            djnz 1B
 301+ 958A 22 B7 89     	ld (Posicion_actual),hl
 302+ 958D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 958E C9           	ret
 304+ 958F
 305+ 958F              ; --------------------
 306+ 958F
 307+ 958F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9591 CD FA 96     1 call NextScan
 309+ 9594 10 FB            djnz 1B
 310+ 9596 22 B7 89     	ld (Posicion_actual),hl
 311+ 9599 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 959A C9           	ret
 313+ 959B
 314+ 959B              ; --------------------
 315+ 959B              ;
 316+ 959B              ;	22/01/23
 317+ 959B              ;
 318+ 959B              ;	E="1". Hemos cambiado de cuadrante.
 319+ 959B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 959B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 959B
 322+ 959B
 323+ 959B              Modificaccionne
 324+ 959B
 325+ 959B 3A C9 89     	ld a,(Cuad_objeto)
 326+ 959E FE 02        	cp 2
 327+ 95A0 CC 83 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95A3 DC 83 95         call c,Modifica_Pos_actual
 329+ 95A6 C8           	ret z
 330+ 95A7 CD 8F 95         call Modifica_Pos_actual2
 331+ 95AA C9               ret
 332+ 95AB
 333+ 95AB              ; *************************************************************************************************************************************************************************************************
 334+ 95AB              ;
 335+ 95AB              ;	13/8/22
 336+ 95AB              ;
 337+ 95AB              ;	Inicializacion
 338+ 95AB              ;
 339+ 95AB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95AB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95AB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95AB              ;
 343+ 95AB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95AB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95AB              ;	_ desaparece/aparece.
 346+ 95AB
 347+ 95AB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95AB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95AB              ;
 350+ 95AB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95AB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95AB              ; 		   [E] ="0"
 353+ 95AB
 354+ 95AB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95AB
 356+ 95AB CD CA 99     Inicializacion call calcula_tercio
 357+ 95AE 28 36        	jr z,primit
 358+ 95B0 E6 02        	and 2
 359+ 95B2 20 07        	jr nz,segmit
 360+ 95B4 7D           	ld a,l
 361+ 95B5 FE 7F        	cp $7f
 362+ 95B7 38 2D        	jr c,primit
 363+ 95B9 28 2B        	jr z,primit
 364+ 95BB CD 18 96     segmit call column
 365+ 95BE 38 13        	jr c,tercuad
 366+ 95C0 3E 04        cuarcuad ld a,4
 367+ 95C2 32 C9 89     	ld (Cuad_objeto),a
 368+ 95C5 21 20 48     	ld hl,$4820
 369+ 95C8 22 F3 89     	ld (Limite_horizontal),hl
 370+ 95CB 21 F5 89     	ld hl,Limite_vertical
 371+ 95CE 36 0D        	ld (hl),$0d
 372+ 95D0 08           	ex af,af
 373+ 95D1 18 3C        	jr 1F
 374+ 95D3              tercuad
 375+ 95D3 3E 03        	ld a,3
 376+ 95D5 32 C9 89     	ld (Cuad_objeto),a
 377+ 95D8 21 20 48     	ld hl,$4820
 378+ 95DB 22 F3 89     	ld (Limite_horizontal),hl
 379+ 95DE 21 F5 89     	ld hl,Limite_vertical
 380+ 95E1 36 12        	ld (hl),$12
 381+ 95E3 08           	ex af,af
 382+ 95E4 18 29        	jr 1F
 383+ 95E6 CD 18 96     primit call column
 384+ 95E9 38 13        	jr c, primcuad
 385+ 95EB              segcuad
 386+ 95EB 3E 02        	ld a,2
 387+ 95ED 32 C9 89     	ld (Cuad_objeto),a
 388+ 95F0 21 C0 4F     	ld hl,$4fc0
 389+ 95F3 22 F3 89     	ld (Limite_horizontal),hl
 390+ 95F6 21 F5 89     	ld hl,Limite_vertical
 391+ 95F9 36 0D        	ld (hl),$0d
 392+ 95FB 08           	ex af,af
 393+ 95FC 18 11        	jr 1F
 394+ 95FE              primcuad
 395+ 95FE 3E 01        	ld a,1
 396+ 9600 32 C9 89     	ld (Cuad_objeto),a
 397+ 9603 21 C0 4F     	ld hl,$4fc0
 398+ 9606 22 F3 89     	ld (Limite_horizontal),hl
 399+ 9609 21 F5 89     	ld hl,Limite_vertical
 400+ 960C 36 12        	ld (hl),$12
 401+ 960E 08           	ex af,af
 402+ 960F CD 55 9D     1 call Genera_coordenadas
 403+ 9612 21 E3 89     	ld hl,Ctrl_0
 404+ 9615 CB EE        	set 5,(hl)
 405+ 9617 C9           	ret
 406+ 9618
 407+ 9618              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9618
 409+ 9618              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9618              ;
 411+ 9618              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9618
 413+ 9618 7D           column ld a,l
 414+ 9619 E6 1F        	and $1f
 415+ 961B FE 10         	cp $10
 416+ 961D C9            	ret
 417+ 961E
 418+ 961E              ; --------------------------------------------------------------------------------------------------------------------
 419+ 961E              ;
 420+ 961E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 961E              ;
 422+ 961E              ; 14/12/22
 423+ 961E              ;
 424+ 961E              ;	Modifica: A y BC.
 425+ 961E
 426+ 961E 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9621 E6 01        	and 1
 428+ 9623 28 17        	jr z,1F
 429+ 9625
 430+ 9625              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9625
 432+ 9625 3A BB 89     	ld a,(Coordenada_X)
 433+ 9628 47           	ld b,a
 434+ 9629 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 962A 79           	ld a,c
 436+ 962B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 962C 38 08        	jr c,2F
 438+ 962E 47           	ld b,a
 439+ 962F 79           	ld a,c
 440+ 9630 90           	sub b
 441+ 9631 32 F2 89     	ld (Columnas),a
 442+ 9634 18 1B        	jr 4F
 443+ 9636 79           2 ld a,c
 444+ 9637 32 F2 89     	ld (Columnas),a
 445+ 963A 18 15        	jr 4F
 446+ 963C
 447+ 963C              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 963C
 449+ 963C 3A BB 89     1 ld a,(Coordenada_X)
 450+ 963F 81           	add c
 451+ 9640 3D           	dec a
 452+ 9641 D6 1F        	sub $1f
 453+ 9643 38 08        	jr c,3F
 454+ 9645 47           	ld b,a
 455+ 9646 79           	ld a,c
 456+ 9647 90           	sub b
 457+ 9648 32 F2 89     	ld (Columnas),a
 458+ 964B 18 04        	jr 4F
 459+ 964D 79           3 ld a,c
 460+ 964E 32 F2 89     	ld (Columnas),a
 461+ 9651 D9           4 exx
 462+ 9652 4F           	ld c,a
 463+ 9653 D9           	exx
 464+ 9654 C9            ret
 465+ 9655
 466+ 9655              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9655              ;
 468+ 9655              ;   19/7/23
 469+ 9655              ;
 470+ 9655              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9655              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9655              ;
 473+ 9655              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9655              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9655              ;
 476+ 9655              ;	DESTRUYE: HL,B Y A.
 477+ 9655
 478+ 9655 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9658 FE 02        	cp 2
 480+ 965A 38 18        	jr c,1F
 481+ 965C 28 16        	jr z,1F
 482+ 965E E6 01        	and 1
 483+ 9660 28 0D        	jr z,3F
 484+ 9662
 485+ 9662              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9662
 487+ 9662 CD A8 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9665
 489+ 9665 7D           9 ld a,l
 490+ 9666 E6 1F        	and $1f
 491+ 9668 28 2A        	jr z,7F
 492+ 966A 2B           	dec hl
 493+ 966B 10 F8        	djnz 9B
 494+ 966D 18 25        	jr 7F
 495+ 966F
 496+ 966F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 966F
 498+ 966F 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 9672 18 20        	jr 7F
 500+ 9674
 501+ 9674 28 14        1 jr z,2F
 502+ 9676
 503+ 9676              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9676
 505+ 9676 CD A8 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9679
 507+ 9679 7D           4 ld a,l
 508+ 967A E6 1F        	and $1f
 509+ 967C 28 03        	jr z,6F
 510+ 967E 2B           	dec hl
 511+ 967F 10 F8        	djnz 4B
 512+ 9681 06 0F        6 ld b,15
 513+ 9683 CD 09 97     5 call PreviousScan
 514+ 9686 10 FB        	djnz 5B
 515+ 9688 18 0A        	jr 7F
 516+ 968A
 517+ 968A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 968A
 519+ 968A CD A8 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 968D 06 0F        	ld b,15
 521+ 968F CD 09 97     8 call PreviousScan
 522+ 9692 10 FB        	djnz 8B
 523+ 9694
 524+ 9694 E5           7 push hl
 525+ 9695 DD E1        	pop ix
 526+ 9697
 527+ 9697 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 969A E5           	push hl
 529+ 969B FD E1        	pop iy
 530+ 969D
 531+ 969D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 969D
 533+ 969D 3A E3 89     	ld a,(Ctrl_0)
 534+ 96A0 CB 77        	bit 6,a
 535+ 96A2 C8           	ret z
 536+ 96A3
 537+ 96A3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96A3              ; _ entidad / Amadeus´.
 539+ 96A3
 540+ 96A3 DD 22 3D 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96A7
 542+ 96A7 C9           	ret
 543+ 96A8
 544+ 96A8              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96A8              ;
 546+ 96A8              ;	2/1/23
 547+ 96A8              ;
 548+ 96A8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96A8              ;
 550+ 96A8              ;	Tras esta rutina tenemos:
 551+ 96A8              ;
 552+ 96A8              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96A8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96A8              ;
 555+ 96A8              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96A8
 557+ 96A8 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 96AB 3A F2 89     	ld a,(Columnas)
 559+ 96AE 3D           	dec a
 560+ 96AF 20 01        	jr nz,1F
 561+ 96B1 3C           	inc a
 562+ 96B2 47           1 ld b,a
 563+ 96B3 C9           	ret
 564+ 96B4
 565+ 96B4              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96B4              ;
 567+ 96B4              ;	3/1/23
 568+ 96B4              ;
 569+ 96B4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96B4              ;
 571+ 96B4              ;	Destruye: A,B,HL y DE.
 572+ 96B4
 573+ 96B4              Define_rutina_de_impresion
 574+ 96B4
 575+ 96B4 3A B6 89     	ld a,(Columns)
 576+ 96B7 47           	ld b,a
 577+ 96B8 3A F2 89     	ld a,(Columnas)
 578+ 96BB B8           	cp b
 579+ 96BC 20 0D        	jr nz,2f
 580+ 96BE
 581+ 96BE              ;	La entidad se imprime entera.
 582+ 96BE
 583+ 96BE 21 9A 97     	ld hl, Indice_entidades_completas
 584+ 96C1 E6 01        	and 1
 585+ 96C3 28 02        	jr z,1F
 586+ 96C5
 587+ 96C5 23           	inc hl
 588+ 96C6 23           	inc hl
 589+ 96C7
 590+ 96C7 CD 92 8D     1 call Extrae_address
 591+ 96CA C9           	ret		;	ret
 592+ 96CB
 593+ 96CB              ;	La entidad no se imprime entera en pantalla.
 594+ 96CB
 595+ 96CB 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96CE E6 01        	and 1
 597+ 96D0 28 17        	jr z,3F
 598+ 96D2
 599+ 96D2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96D2
 601+ 96D2 21 9E 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96D5 3A B6 89     4 ld a,(Columns)
 603+ 96D8 E6 01        	and 1
 604+ 96DA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96DC
 606+ 96DC 23           	inc hl
 607+ 96DD 23           	inc hl
 608+ 96DE
 609+ 96DE 3A F2 89     	ld a,(Columnas)
 610+ 96E1 E6 01        	and 1
 611+ 96E3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96E5
 613+ 96E5 23           	inc hl
 614+ 96E6 23           	inc hl
 615+ 96E7
 616+ 96E7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96E9
 618+ 96E9 21 A4 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96EC 18 E7        	jr 4B
 620+ 96EE
 621+ 96EE              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96EE              ;
 623+ 96EE              ;	Prepara_draw
 624+ 96EE              ;
 625+ 96EE              ;	Es una rutina de carga.
 626+ 96EE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96EE              ;
 628+ 96EE              ;	FUNCIONAMIENTO:
 629+ 96EE              ;
 630+ 96EE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96EE              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96EE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96EE              ;
 634+ 96EE              ;	DESTRUYE:
 635+ 96EE              ;
 636+ 96EE              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96EE
 638+ 96EE 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96F1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96F2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96F3 4E           	ld c,(hl)
 642+ 96F4 2A B7 89     	ld hl,(Posicion_actual)
 643+ 96F7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96F9 C9           	ret
 645+ 96FA
 646+ 96FA              ;----------------------------------------------------------------------------------------------------------------
 647+ 96FA              ;
 648+ 96FA              ;	5/08/22
 649+ 96FA              ;
 650+ 96FA              ;   NextScan.
 651+ 96FA              ;
 652+ 96FA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96FA              ;
 654+ 96FA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96FA              ;
 656+ 96FA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96FA              ;
 658+ 96FA              ;       DESTRUIDOS: AF y HL !!!
 659+ 96FA              ;
 660+ 96FA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96FA              ;
 662+ 96FA
 663+ 96FA 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96FB 7C               ld a,h
 665+ 96FC E6 07            and 7
 666+ 96FE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96FF
 668+ 96FF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9700 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9702 6F               ld l,a
 671+ 9703 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9704
 673+ 9704 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9705 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9707 67               ld h,a
 676+ 9708 C9               ret
 677+ 9709
 678+ 9709              ;----------------------------------------------------------------------------------------------------------------
 679+ 9709              ;
 680+ 9709              ;	5/08/22
 681+ 9709              ;
 682+ 9709              ;   PreviousScan.
 683+ 9709              ;
 684+ 9709              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9709              ;
 686+ 9709              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9709              ;
 688+ 9709              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9709              ;
 690+ 9709              ;       DESTRUIDOS: AF y HL !!!
 691+ 9709              ;
 692+ 9709              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9709              ;
 694+ 9709
 695+ 9709 7C           PreviousScan ld a,h
 696+ 970A 25               dec h               ; Dec H.
 697+ 970B E6 07            and 7
 698+ 970D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 970E
 700+ 970E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 970F D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9711 6F               ld l,a
 703+ 9712 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9713
 705+ 9713 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9714 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9716 67               ld h,a
 708+ 9717 C9               ret
 709+ 9718
 710+ 9718              ; -----------------------------------------------------------------------------------
 711+ 9718              ;
 712+ 9718              ;	31/7/23
 713+ 9718              ;
 714+ 9718              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9718              ;	Extrae fotos de Album_de_fotos.
 716+ 9718
 717+ 9718              Extrae_foto_entidades
 718+ 9718
 719+ 9718              ;	ld a,(Contador_de_frames)
 720+ 9718              ;	cp $1e
 721+ 9718              ;	jr z,$
 722+ 9718
 723+ 9718 21 01 70     	ld hl,Album_de_fotos+1
 724+ 971B 7E           	ld a,(hl)
 725+ 971C A7           	and a
 726+ 971D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 971E
 728+ 971E 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 9721 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 9722 C8           	ret z
 731+ 9723
 732+ 9723              ; -----------------------------------
 733+ 9723
 734+ 9723 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9727 31 00 70     	ld sp,Album_de_fotos
 736+ 972A
 737+ 972A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 972C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 972D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 972E
 741+ 972E ED 73 0B 8A  	ld (Stack_2),sp
 742+ 9732 ED 7B 09 8A  	ld sp,(Stack)
 743+ 9736
 744+ 9736              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9736
 746+ 9736 3E CD        	ld a,$cd
 747+ 9738 32 40 97     	ld (Imprime),a
 748+ 973B EB           	ex de,hl
 749+ 973C 22 41 97     	ld (Imprime+1),hl
 750+ 973F EB           	ex de,hl
 751+ 9740
 752+ 9740              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9740
 754+ 9740 00 00 00     Imprime db 0,0,0
 755+ 9743
 756+ 9743 ED 73 09 8A  	ld (Stack),sp
 757+ 9747
 758+ 9747 3A 04 8A     	ld a,(Numero_de_malotes)
 759+ 974A 3D           	dec a
 760+ 974B 28 09        	jr z,1F
 761+ 974D 32 04 8A      	ld (Numero_de_malotes),a
 762+ 9750
 763+ 9750 ED 7B 0B 8A  	ld sp,(Stack_2)
 764+ 9754 18 D4        	jr 2B
 765+ 9756
 766+ 9756 AF           1 xor a
 767+ 9757 32 0B 8A     	ld (Stack_2),a
 768+ 975A
 769+ 975A C9           	ret
 770+ 975B
 771+ 975B              ; -----------------------------------------------------------------------------------
 772+ 975B              ;
 773+ 975B              ;	28/2/23
 774+ 975B              ;
 775+ 975B              ;	Pinta los disparos generados.
 776+ 975B
 777+ 975B              Extrae_foto_disparos
 778+ 975B
 779+ 975B 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 780+ 975E 7E               ld a,(hl)
 781+ 975F A7               and a
 782+ 9760 C8               ret z
 783+ 9761
 784+ 9761 3A 2D 8A     	ld a,(Numero_de_disparotes)
 785+ 9764 A7           	and a
 786+ 9765 C8           	ret z
 787+ 9766 ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 976A 31 0D 72     	ld sp,Album_de_fotos_disparos
 789+ 976D
 790+ 976D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 976F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9770 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9771
 794+ 9771 ED 73 0B 8A  	ld (Stack_2),sp
 795+ 9775 ED 7B 09 8A  	ld sp,(Stack)
 796+ 9779
 797+ 9779              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9779
 799+ 9779 3E CD        	ld a,$cd
 800+ 977B 32 83 97     	ld (Imprime2),a
 801+ 977E EB           	ex de,hl
 802+ 977F 22 84 97     	ld (Imprime2+1),hl
 803+ 9782 EB           	ex de,hl
 804+ 9783
 805+ 9783              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9783
 807+ 9783 00 00 00     Imprime2 db 0,0,0
 808+ 9786
 809+ 9786 3A 2D 8A     	ld a,(Numero_de_disparotes)
 810+ 9789 3D           	dec a
 811+ 978A 28 09        	jr z,1F
 812+ 978C 32 2D 8A      	ld (Numero_de_disparotes),a
 813+ 978F
 814+ 978F ED 7B 0B 8A  	ld sp,(Stack_2)
 815+ 9793 18 D8        	jr 2B
 816+ 9795
 817+ 9795 AF           1 xor a
 818+ 9796 32 0B 8A     	ld (Stack_2),a
 819+ 9799 C9           	ret
 820+ 979A
# file closed: Draw_XOR.asm
1444  979A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 979A              ;   índices de Rutinas de impresión.
   2+ 979A
   3+ 979A AA 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 979C D7 97            defw Pinta_Amadeus_3x2
   5+ 979E
   6+ 979E 2D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97A0 CD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97A2 81 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A4
  10+ 97A4 57 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A6 5B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97A8 0F 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97AA
  14+ 97AA
  15+ 97AA              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97AA              ;
  17+ 97AA              ;   12/12/22
  18+ 97AA              ;
  19+ 97AA              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97AA              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97AA              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97AA              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97AA              ;
  24+ 97AA              ;   Modifica: DE y HL.
  25+ 97AA
  26+ 97AA ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97AE FD F9        	ld sp,iy
  28+ 97B0 06 10            ld b,16
  29+ 97B2 D1           1 pop de
  30+ 97B3 7B               ld a,e
  31+ 97B4 AE               xor (hl)
  32+ 97B5 77           	ld (hl),a
  33+ 97B6 23           	inc hl
  34+ 97B7 7A               ld a,d
  35+ 97B8 AE               xor (hl)
  36+ 97B9 77           	ld (hl),a
  37+ 97BA 2B           	dec hl
  38+ 97BB 24           	inc h
  39+ 97BC 7C               ld a,h
  40+ 97BD E6 07            and 7
  41+ 97BF 20 0A            jr nz,2F
  42+ 97C1 7D               ld a,l
  43+ 97C2 C6 20            add a,$20
  44+ 97C4 6F               ld l,a
  45+ 97C5 38 04            jr c,2F
  46+ 97C7 7C               ld a,h
  47+ 97C8 D6 08            sub 8
  48+ 97CA 67               ld h,a
  49+ 97CB 7C           2 ld a,h
  50+ 97CC FE 58            cp $58
  51+ 97CE 28 02            jr z,3F
  52+ 97D0 10 E0            djnz 1B
  53+ 97D2 ED 7B 09 8A  3 ld sp,(Stack)
  54+ 97D6 C9           	ret
  55+ 97D7
  56+ 97D7 ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97DB FD F9        	ld sp,iy
  58+ 97DD 06 08            ld b,8
  59+ 97DF D1           1 pop de
  60+ 97E0 7B               ld a,e
  61+ 97E1 AE               xor (hl)
  62+ 97E2 77           	ld (hl),a
  63+ 97E3 23           	inc hl
  64+ 97E4 7A               ld a,d
  65+ 97E5 AE               xor (hl)
  66+ 97E6 77           	ld (hl),a
  67+ 97E7 23           	inc hl
  68+ 97E8 D1           	pop de
  69+ 97E9 7B               ld a,e
  70+ 97EA AE               xor (hl)
  71+ 97EB 77           	ld (hl),a
  72+ 97EC 2B           	dec hl
  73+ 97ED 2B           	dec hl
  74+ 97EE 24           	inc h
  75+ 97EF 7C               ld a,h
  76+ 97F0 E6 07            and 7
  77+ 97F2 20 0A            jr nz,2F
  78+ 97F4 7D               ld a,l
  79+ 97F5 C6 20            add a,$20
  80+ 97F7 6F               ld l,a
  81+ 97F8 38 04            jr c,2F
  82+ 97FA 7C               ld a,h
  83+ 97FB D6 08            sub 8
  84+ 97FD 67               ld h,a
  85+ 97FE 7C           2 ld a,h
  86+ 97FF FE 58            cp $58
  87+ 9801 28 25            jr z,4F
  88+ 9803 7A               ld a,d
  89+ 9804 AE               xor (hl)
  90+ 9805 77               ld (hl),a
  91+ 9806 D1           	pop de
  92+ 9807 23           	inc hl
  93+ 9808 7B               ld a,e
  94+ 9809 AE               xor (hl)
  95+ 980A 77           	ld (hl),a
  96+ 980B 23           	inc hl
  97+ 980C 7A               ld a,d
  98+ 980D AE               xor (hl)
  99+ 980E 77           	ld (hl),a
 100+ 980F 2B           	dec hl
 101+ 9810 2B           	dec hl
 102+ 9811 24           	inc h
 103+ 9812 7C               ld a,h
 104+ 9813 E6 07            and 7
 105+ 9815 20 0A            jr nz,3F
 106+ 9817 7D               ld a,l
 107+ 9818 C6 20            add a,$20
 108+ 981A 6F               ld l,a
 109+ 981B 38 04            jr c,3F
 110+ 981D 7C               ld a,h
 111+ 981E D6 08            sub 8
 112+ 9820 67               ld h,a
 113+ 9821 7C           3 ld a,h
 114+ 9822 FE 58            cp $58
 115+ 9824 28 02            jr z,4F
 116+ 9826 10 B7            djnz 1B
 117+ 9828 ED 7B 09 8A  4 ld sp,(Stack)
 118+ 982C C9           	ret
 119+ 982D
 120+ 982D              ; ---------------------------------------------------
 121+ 982D
 122+ 982D ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9831 FD F9        	ld sp,iy
 124+ 9833
 125+ 9833              ; >>>
 126+ 9833
 127+ 9833 06 10            ld b,16
 128+ 9835 D1           1 pop de
 129+ 9836 7A           	ld a,d
 130+ 9837 AE           	xor (hl)
 131+ 9838 77           	ld (hl),a
 132+ 9839 24           	inc h
 133+ 983A 7C               ld a,h
 134+ 983B E6 07            and 7
 135+ 983D 20 0C            jr nz,2F
 136+ 983F 7D               ld a,l
 137+ 9840 C6 20            add a,$20
 138+ 9842 6F               ld l,a
 139+ 9843 38 06            jr c,2F
 140+ 9845 7C               ld a,h
 141+ 9846 D6 08            sub 8
 142+ 9848 67               ld h,a
 143+ 9849 18 00            jr 2F
 144+ 984B 7C           2 ld a,h
 145+ 984C FE 58            cp $58
 146+ 984E 28 02            jr z,3F
 147+ 9850 10 E3            djnz 1B
 148+ 9852 ED 7B 09 8A  3 ld sp,(Stack)
 149+ 9856 C9           	ret
 150+ 9857
 151+ 9857 ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 985B FD F9        	ld sp,iy
 153+ 985D
 154+ 985D              ; >>>
 155+ 985D
 156+ 985D 06 10            ld b,16
 157+ 985F D1           1 pop de
 158+ 9860 7B           	ld a,e
 159+ 9861 AE           	xor (hl)
 160+ 9862 77           	ld (hl),a
 161+ 9863 24           	inc h
 162+ 9864 7C               ld a,h
 163+ 9865 E6 07            and 7
 164+ 9867 20 0C            jr nz,2F
 165+ 9869 7D               ld a,l
 166+ 986A C6 20            add a,$20
 167+ 986C 6F               ld l,a
 168+ 986D 38 06            jr c,2F
 169+ 986F 7C               ld a,h
 170+ 9870 D6 08            sub 8
 171+ 9872 67               ld h,a
 172+ 9873 18 00            jr 2F
 173+ 9875 7C           2 ld a,h
 174+ 9876 FE 58            cp $58
 175+ 9878 28 02            jr z,3F
 176+ 987A 10 E3            djnz 1B
 177+ 987C ED 7B 09 8A  3 ld sp,(Stack)
 178+ 9880 C9           	ret
 179+ 9881
 180+ 9881              ; ---------------------------------------------------
 181+ 9881
 182+ 9881 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9885 FD F9        	ld sp,iy
 184+ 9887 06 08            ld b,8
 185+ 9889 D1           1 pop de
 186+ 988A 7A           	ld a,d
 187+ 988B AE           	xor (hl)
 188+ 988C 77           	ld (hl),a
 189+ 988D 23           	inc hl
 190+ 988E D1           	pop de
 191+ 988F 7B           	ld a,e
 192+ 9890 AE           	xor (hl)
 193+ 9891 77           	ld (hl),a
 194+ 9892 2B           	dec hl
 195+ 9893 24            	inc h
 196+ 9894 7C               ld a,h
 197+ 9895 E6 07            and 7
 198+ 9897 20 0A            jr nz,2F
 199+ 9899 7D               ld a,l
 200+ 989A C6 20            add a,$20
 201+ 989C 6F               ld l,a
 202+ 989D 38 04            jr c,2F
 203+ 989F 7C               ld a,h
 204+ 98A0 D6 08            sub 8
 205+ 98A2 67               ld h,a
 206+ 98A3 7C           2 ld a,h
 207+ 98A4 FE 58            cp $58
 208+ 98A6 28 20            jr z,4F
 209+ 98A8 D1               pop de
 210+ 98A9 7B           	ld a,e
 211+ 98AA AE           	xor (hl)
 212+ 98AB 77           	ld (hl),a
 213+ 98AC 23           	inc hl
 214+ 98AD 7A           	ld a,d
 215+ 98AE AE           	xor (hl)
 216+ 98AF 77           	ld (hl),a
 217+ 98B0 2B           	dec hl
 218+ 98B1 24           	inc h
 219+ 98B2 7C               ld a,h
 220+ 98B3 E6 07            and 7
 221+ 98B5 20 0A            jr nz,3F
 222+ 98B7 7D               ld a,l
 223+ 98B8 C6 20            add a,$20
 224+ 98BA 6F               ld l,a
 225+ 98BB 38 04            jr c,3F
 226+ 98BD 7C               ld a,h
 227+ 98BE D6 08            sub 8
 228+ 98C0 67               ld h,a
 229+ 98C1 7C           3 ld a,h
 230+ 98C2 FE 58            cp $58
 231+ 98C4 28 02            jr z,4F
 232+ 98C6 10 C1            djnz 1B
 233+ 98C8 ED 7B 09 8A  4 ld sp,(Stack)
 234+ 98CC C9           	ret
 235+ 98CD
 236+ 98CD ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98D1 FD F9        	ld sp,iy
 238+ 98D3 06 08            ld b,8
 239+ 98D5 D1           1 pop de
 240+ 98D6 D1           	pop de
 241+ 98D7 7B           	ld a,e
 242+ 98D8 AE           	xor (hl)
 243+ 98D9 77           	ld (hl),a
 244+ 98DA 24            	inc h
 245+ 98DB 7C               ld a,h
 246+ 98DC E6 07            and 7
 247+ 98DE 20 0A            jr nz,2F
 248+ 98E0 7D               ld a,l
 249+ 98E1 C6 20            add a,$20
 250+ 98E3 6F               ld l,a
 251+ 98E4 38 04            jr c,2F
 252+ 98E6 7C               ld a,h
 253+ 98E7 D6 08            sub 8
 254+ 98E9 67               ld h,a
 255+ 98EA 7C           2 ld a,h
 256+ 98EB FE 58            cp $58
 257+ 98ED 28 1B            jr z,4F
 258+ 98EF D1               pop de
 259+ 98F0 7A           	ld a,d
 260+ 98F1 AE           	xor (hl)
 261+ 98F2 77           	ld (hl),a
 262+ 98F3 24           	inc h
 263+ 98F4 7C               ld a,h
 264+ 98F5 E6 07            and 7
 265+ 98F7 20 0A            jr nz,3F
 266+ 98F9 7D               ld a,l
 267+ 98FA C6 20            add a,$20
 268+ 98FC 6F               ld l,a
 269+ 98FD 38 04            jr c,3F
 270+ 98FF 7C               ld a,h
 271+ 9900 D6 08            sub 8
 272+ 9902 67               ld h,a
 273+ 9903 7C           3 ld a,h
 274+ 9904 FE 58            cp $58
 275+ 9906 28 02            jr z,4F
 276+ 9908 10 CB            djnz 1B
 277+ 990A ED 7B 09 8A  4 ld sp,(Stack)
 278+ 990E C9           	ret
 279+ 990F
 280+ 990F ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9913 FD F9        	ld sp,iy
 282+ 9915 06 08            ld b,8
 283+ 9917 D1           1 pop de
 284+ 9918 7B           	ld a,e
 285+ 9919 AE           	xor (hl)
 286+ 991A 77           	ld (hl),a
 287+ 991B 23           	inc hl
 288+ 991C 7A           	ld a,d
 289+ 991D AE           	xor (hl)
 290+ 991E 77           	ld (hl),a
 291+ 991F 2B           	dec hl
 292+ 9920 24             	inc h
 293+ 9921 7C               ld a,h
 294+ 9922 E6 07            and 7
 295+ 9924 20 0A            jr nz,2F
 296+ 9926 7D               ld a,l
 297+ 9927 C6 20            add a,$20
 298+ 9929 6F               ld l,a
 299+ 992A 38 04            jr c,2F
 300+ 992C 7C               ld a,h
 301+ 992D D6 08            sub 8
 302+ 992F 67               ld h,a
 303+ 9930 7C           2 ld a,h
 304+ 9931 FE 58            cp $58
 305+ 9933 28 21            jr z,4F
 306+ 9935 D1               pop de
 307+ 9936 7A           	ld a,d
 308+ 9937 AE           	xor (hl)
 309+ 9938 77           	ld (hl),a
 310+ 9939 23           	inc hl
 311+ 993A D1               pop de
 312+ 993B 7B           	ld a,e
 313+ 993C AE           	xor (hl)
 314+ 993D 77           	ld (hl),a
 315+ 993E 2B           	dec hl
 316+ 993F 24           	inc h
 317+ 9940 7C               ld a,h
 318+ 9941 E6 07            and 7
 319+ 9943 20 0A            jr nz,3F
 320+ 9945 7D               ld a,l
 321+ 9946 C6 20            add a,$20
 322+ 9948 6F               ld l,a
 323+ 9949 38 04            jr c,3F
 324+ 994B 7C               ld a,h
 325+ 994C D6 08            sub 8
 326+ 994E 67               ld h,a
 327+ 994F 7C           3 ld a,h
 328+ 9950 FE 58            cp $58
 329+ 9952 28 02            jr z,4F
 330+ 9954 10 C1            djnz 1B
 331+ 9956 ED 7B 09 8A  4 ld sp,(Stack)
 332+ 995A C9           	ret
 333+ 995B
 334+ 995B ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 995F FD F9        	ld sp,iy
 336+ 9961 06 08            ld b,8
 337+ 9963 D1           1 pop de
 338+ 9964 7B           	ld a,e
 339+ 9965 AE           	xor (hl)
 340+ 9966 77           	ld (hl),a
 341+ 9967 24            	inc h
 342+ 9968 7C               ld a,h
 343+ 9969 E6 07            and 7
 344+ 996B 20 0A            jr nz,2F
 345+ 996D 7D               ld a,l
 346+ 996E C6 20            add a,$20
 347+ 9970 6F               ld l,a
 348+ 9971 38 04            jr c,2F
 349+ 9973 7C               ld a,h
 350+ 9974 D6 08            sub 8
 351+ 9976 67               ld h,a
 352+ 9977 7C           2 ld a,h
 353+ 9978 FE 58            cp $58
 354+ 997A 28 1C            jr z,4F
 355+ 997C D1               pop de
 356+ 997D 7A           	ld a,d
 357+ 997E AE           	xor (hl)
 358+ 997F 77           	ld (hl),a
 359+ 9980 24           	inc h
 360+ 9981 7C               ld a,h
 361+ 9982 E6 07            and 7
 362+ 9984 20 0A            jr nz,3F
 363+ 9986 7D               ld a,l
 364+ 9987 C6 20            add a,$20
 365+ 9989 6F               ld l,a
 366+ 998A 38 04            jr c,3F
 367+ 998C 7C               ld a,h
 368+ 998D D6 08            sub 8
 369+ 998F 67               ld h,a
 370+ 9990 7C           3 ld a,h
 371+ 9991 FE 58            cp $58
 372+ 9993 28 03            jr z,4F
 373+ 9995 D1               pop de
 374+ 9996 10 CB            djnz 1B
 375+ 9998 ED 7B 09 8A  4 ld sp,(Stack)
 376+ 999C C9           	ret
 377+ 999D
 378+ 999D              ; ---------------------------------------------------
 379+ 999D              ;
 380+ 999D              ;   27/02/23
 381+ 999D              ;
 382+ 999D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999D
 386+ 999D ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 99A1 FD F9            ld sp,iy
 388+ 99A3 06 03            ld b,3
 389+ 99A5 D1           1 pop de
 390+ 99A6 7B               ld a,e
 391+ 99A7 AE               xor (hl)
 392+ 99A8 77               ld (hl),a
 393+ 99A9 23               inc hl
 394+ 99AA 7A               ld a,d
 395+ 99AB AE               xor (hl)
 396+ 99AC 77               ld (hl),a
 397+ 99AD 2B               dec hl
 398+ 99AE
 399+ 99AE 24               inc h
 400+ 99AF 7C               ld a,h
 401+ 99B0 E6 07            and 7
 402+ 99B2 20 0A            jr nz,2F
 403+ 99B4 7D               ld a,l
 404+ 99B5 C6 20            add a,$20
 405+ 99B7 6F               ld l,a
 406+ 99B8 38 04            jr c,2F
 407+ 99BA 7C               ld a,h
 408+ 99BB D6 08            sub 8
 409+ 99BD 67               ld h,a
 410+ 99BE 7C           2 ld a,h
 411+ 99BF FE 58            cp $58
 412+ 99C1 28 02            jr z,3F
 413+ 99C3
 414+ 99C3 10 E0            djnz 1B
 415+ 99C5 ED 7B 09 8A  3 ld sp,(Stack)
 416+ 99C9 C9               ret
 417+ 99CA
# file closed: Rutinas_de_impresion_sprites.asm
1445  99CA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99CA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99CA              ;
   3+ 99CA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99CA              ;
   5+ 99CA              ; *****************************************************************************************************************************************************************************************
   6+ 99CA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99CA
   8+ 99CA 7C           calcula_tercio ld a,h
   9+ 99CB E6 18        	and $18
  10+ 99CD CB 2F        	sra a
  11+ 99CF CB 2F        	sra a
  12+ 99D1 CB 2F        	sra a
  13+ 99D3 C9           	ret
  14+ 99D4
# file closed: calcula_tercio.asm
1446  99D4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D4              ;
   3+ 99D4              ;
   4+ 99D4              ;	CLS.
   5+ 99D4              ;
   6+ 99D4              ;	Limpia la pantalla y define sus atributos.
   7+ 99D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D4              ;
   9+ 99D4              ;	COLORES: 0 ..... NEGRO
  10+ 99D4              ;    		 1 ..... AZUL
  11+ 99D4              ; 			 2 ..... ROJO
  12+ 99D4              ;			 3 ..... MAGENTA
  13+ 99D4              ; 			 4 ..... VERDE
  14+ 99D4              ; 			 5 ..... CIAN
  15+ 99D4              ;			 6 ..... AMARILLO
  16+ 99D4              ; 			 7 ..... BLANCO
  17+ 99D4              ;
  18+ 99D4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D4              ;
  20+ 99D4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D4
  22+ 99D4
  23+ 99D4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D7 11 01 40     	LD DE,$4001
  25+ 99DA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99DF ED B0        	LDIR
  28+ 99E1 01 FF 02     	LD BC,767
  29+ 99E4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E5 ED B0        	LDIR
  31+ 99E7 C9           	ret
  32+ 99E8
# file closed: Cls.asm
1447  99E8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E8              ; ******************************************************************************************************************************************************************************************
   2+ 99E8              ;
   3+ 99E8              ;   20/05/23
   4+ 99E8              ;
   5+ 99E8              ;	Recompone_posicion_inicio
   6+ 99E8              ;
   7+ 99E8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99E8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99E8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99E8              ;	_ a una u otra rutina.
  11+ 99E8
  12+ 99E8              Recompone_posicion_inicio
  13+ 99E8
  14+ 99E8 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 99EB 7D           	ld a,l
  16+ 99EC E6 1F        	and $1f
  17+ 99EE 28 16        	jr z,1F
  18+ 99F0
  19+ 99F0 FE 1F        	cp $1f
  20+ 99F2 28 0D        	jr z,3F
  21+ 99F4
  22+ 99F4 21 F6 89     	ld hl,Ctrl_2
  23+ 99F7 CB C6        	set 0,(hl)
  24+ 99F9 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 99FC 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 99FF 18 08        	jr 2F
  27+ 9A01
  28+ 9A01 CD A2 9B     3 call Mov_left
  29+ 9A04 18 03        	jr 2F
  30+ 9A06
  31+ 9A06 CD 84 9A     1 call Mov_right
  32+ 9A09 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A0C 22 B9 89     	ld (Puntero_objeto),hl
  34+ 9A0F C9           	ret
  35+ 9A10
  36+ 9A10              ; ******************************************************************************************************************************************************************************************
  37+ 9A10              ;
  38+ 9A10              ;   27/05/23
  39+ 9A10              ;
  40+ 9A10              ;	Mov_down
  41+ 9A10              ;
  42+ 9A10              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A10              ;
  44+ 9A10              ;
  45+ 9A10              Mov_down
  46+ 9A10
  47+ 9A10 CD 72 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A13              ;																	; _ repone (Puntero_objeto).
  49+ 9A13 21 E3 89     	ld hl,Ctrl_0
  50+ 9A16 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A18              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A18              ; 																	; _ en el caso de que no lo haya.
  53+ 9A18 3A CD 89     	ld a,(Vel_down)
  54+ 9A1B 47           	ld b,a
  55+ 9A1C 2A B7 89         ld hl,(Posicion_actual)
  56+ 9A1F CD CA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A22 E6 02        	and 2
  58+ 9A24 28 0F        	jr z,1F
  59+ 9A26
  60+ 9A26              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A26              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A26
  63+ 9A26 7C           	ld a,h
  64+ 9A27 FE 57        	cp $57
  65+ 9A29 20 0A        	jr nz,1F
  66+ 9A2B
  67+ 9A2B 7D           	ld a,l
  68+ 9A2C C6 20        	add $20
  69+ 9A2E 30 05        	jr nc,1F
  70+ 9A30
  71+ 9A30              ; ------------------------------
  72+ 9A30              ;	call Reaparece_arriba
  73+ 9A30 CD 2F 9D     	call Reinicio
  74+ 9A33              ; ------------------------------
  75+ 9A33
  76+ 9A33 18 08        	jr 3F
  77+ 9A35 CD FA 96     1 call NextScan
  78+ 9A38 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A3B 10 E2            djnz 2B
  80+ 9A3D CD 55 9D     3 call Genera_coordenadas
  81+ 9A40 C9           	ret
  82+ 9A41
  83+ 9A41              ; ******************************************************************************************************************************************************************************************
  84+ 9A41              ;
  85+ 9A41              ;   27/05/23
  86+ 9A41              ;
  87+ 9A41              ;	Mov_up
  88+ 9A41              ;
  89+ 9A41              ; 	Mueve el Sprite hacia arriba.
  90+ 9A41              ;
  91+ 9A41              ;
  92+ 9A41              Mov_up
  93+ 9A41
  94+ 9A41 CD 72 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A44              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A44 21 E3 89     	ld hl,Ctrl_0
  97+ 9A47 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A49              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A49              ; 																		; _ en el caso de que no lo haya.
 100+ 9A49 3A CC 89     	ld a,(Vel_up)
 101+ 9A4C 47           	ld b,a
 102+ 9A4D 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A50 CD CA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A53 A7           	and a
 105+ 9A54 20 10        	jr nz,1F
 106+ 9A56
 107+ 9A56              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A56              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A56
 110+ 9A56 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A57 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A59 20 0B            jr nz,1F
 113+ 9A5B 7D               ld a,l
 114+ 9A5C D6 20            sub $20
 115+ 9A5E 30 06            jr nc,1F
 116+ 9A60 25               dec h
 117+ 9A61
 118+ 9A61              ; -----------------------------
 119+ 9A61 CD 10 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A64              ;	call Reinicio
 121+ 9A64              ; -----------------------------
 122+ 9A64
 123+ 9A64 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A66 CD 09 97     1 call PreviousScan
 125+ 9A69 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A6C 10 E2            djnz 3B
 127+ 9A6E CD 55 9D     2 call Genera_coordenadas
 128+ 9A71 C9           	ret
 129+ 9A72
 130+ 9A72              ; -----------------------------
 131+ 9A72              ;
 132+ 9A72              ;	27/5/23
 133+ 9A72              ;
 134+ 9A72              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A72              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A72              ;
 137+ 9A72              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A72              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A72              ;
 140+ 9A72              ;	Modifica: A y (Puntero_objeto).
 141+ 9A72
 142+ 9A72 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A75 CB 47        	bit 0,a
 144+ 9A77 C8           	ret z
 145+ 9A78 CB 87        	res 0,a
 146+ 9A7A 32 F6 89     	ld (Ctrl_2),a
 147+ 9A7D 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A80 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9A83 C9           	ret
 150+ 9A84
 151+ 9A84              ; ******************************************************************************************************************************************************************************************
 152+ 9A84              ;
 153+ 9A84              ;	19/10/22
 154+ 9A84              ;
 155+ 9A84              ;	Mov_right.
 156+ 9A84              ;
 157+ 9A84              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A84              ;
 159+ 9A84
 160+ 9A84 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9A87 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A89              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A89              ; 																	; _ en el caso de que no lo haya.
 164+ 9A89 3A E3 89     	ld a,(Ctrl_0)
 165+ 9A8C CB 77        	bit 6,a
 166+ 9A8E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A90
 168+ 9A90 CD BE 9C     	call Stop_Amadeus_right
 169+ 9A93 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A94 18 4D        	jr 8F
 171+ 9A96
 172+ 9A96 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A99 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A9B 20 46        	jr nz,8F
 175+ 9A9D
 176+ 9A9D 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9AA0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AA1 28 40        	jr z,8F
 179+ 9AA3
 180+ 9AA3              ; ---------- ---------- ----------
 181+ 9AA3              ;
 182+ 9AA3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AA3
 184+ 9AA3 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AA6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AA8 28 11        	jr z,1F
 187+ 9AAA 38 06        	jr c,6F
 188+ 9AAC FE 04        	cp 4
 189+ 9AAE 28 14        	jr z,7F
 190+ 9AB0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AB2
 192+ 9AB2              ; ---------- ---------- ----------
 193+ 9AB2              ;
 194+ 9AB2              ; Perfiles de velocidad
 195+ 9AB2              ;
 196+ 9AB2
 197+ 9AB2 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AB5 FE FE        	cp $fe
 199+ 9AB7 20 2A        	jr nz,8F
 200+ 9AB9 18 10        	jr 3F
 201+ 9ABB 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ABE FE FD        	cp $fd
 203+ 9AC0 20 21        	jr nz,8F
 204+ 9AC2 18 07        	jr 3F
 205+ 9AC4 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AC7 FE FB        	cp $fb
 207+ 9AC9 20 18        	jr nz,8F
 208+ 9ACB
 209+ 9ACB              ; ---------- ---------- ----------
 210+ 9ACB
 211+ 9ACB              3
 212+ 9ACB CD FE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ACE              ;	call Reinicio
 214+ 9ACE
 215+ 9ACE              ; ---------- ---------- ----------
 216+ 9ACE              ;
 217+ 9ACE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ACE
 219+ 9ACE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AD0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AD1 CD EA 9A     	call DESPLZ_DER
 222+ 9AD4 C1           	pop bc
 223+ 9AD5 10 F9        	djnz 5B
 224+ 9AD7 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ADA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ADB 22 B7 89     	ld (Posicion_actual),hl
 227+ 9ADE CD 55 9D     	call Genera_coordenadas
 228+ 9AE1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AE3
 230+ 9AE3              ; ---------- ---------- ----------
 231+ 9AE3
 232+ 9AE3 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9AE6 CD EA 9A     	call DESPLZ_DER
 234+ 9AE9 C9           2 ret
 235+ 9AEA
 236+ 9AEA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AEA              ;
 238+ 9AEA              ;	22/9/22
 239+ 9AEA              ;
 240+ 9AEA
 241+ 9AEA CD F9 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AED CD 45 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AF0 CD 6E 9B         call Ciclo_completo
 244+ 9AF3 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AF6 CB FE        	set 7,(hl)
 246+ 9AF8 C9           	ret
 247+ 9AF9
 248+ 9AF9              ; ******************************************************************************************************************************************************************************************
 249+ 9AF9              ;	15/02/23
 250+ 9AF9              ;
 251+ 9AF9
 252+ 9AF9 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9AFC 47           	ld b,a
 254+ 9AFD 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B00 23           1 inc hl
 256+ 9B01 23           	inc hl
 257+ 9B02 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B04 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B07 CD 92 8D     	call Extrae_address
 260+ 9B0A 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9B0D
 262+ 9B0D              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B0D
 264+ 9B0D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B0D              ; Cuántos movimientos hemos hecho ??
 266+ 9B0D              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B0D
 268+ 9B0D 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B10 EB           	ex de,hl
 270+ 9B11 A7           	and a
 271+ 9B12 ED 52        	sbc hl,de
 272+ 9B14 CB 3D        	srl l
 273+ 9B16 3E 08        6 ld a,8
 274+ 9B18 95           	sub l
 275+ 9B19 30 1E        	jr nc,3F
 276+ 9B1B
 277+ 9B1B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B1B              ; B="0".
 279+ 9B1B
 280+ 9B1B 04           4 inc b
 281+ 9B1C 3C           	inc a
 282+ 9B1D 20 FC        	jr nz,4B
 283+ 9B1F 78           	ld a,b
 284+ 9B20 08           	ex af,af
 285+ 9B21 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9B24 23           5 inc hl
 287+ 9B25 23           	inc hl
 288+ 9B26 10 FC        	djnz 5B
 289+ 9B28 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B2B CD 92 8D     	call Extrae_address
 291+ 9B2E 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B31
 293+ 9B31              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B31              ; _(Posicion_actual).
 295+ 9B31
 296+ 9B31 21 B7 89     	ld hl,Posicion_actual
 297+ 9B34 34           	inc (hl)
 298+ 9B35 08               ex af,af
 299+ 9B36 6F           	ld l,a
 300+ 9B37 18 DD        	jr 6B
 301+ 9B39
 302+ 9B39              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B39
 304+ 9B39 47           3 ld b,a
 305+ 9B3A 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B3D 23           2 inc hl
 307+ 9B3E 23           	inc hl
 308+ 9B3F 10 FC        	djnz 2B
 309+ 9B41 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B44 C9           8 ret
 311+ 9B45
 312+ 9B45              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B45              ;
 314+ 9B45              ;	24/7/22
 315+ 9B45              ;
 316+ 9B45              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B45              ;
 318+ 9B45              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B45              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B45              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B45
 322+ 9B45 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B48 A7           	and a
 324+ 9B49 20 1F        	jr nz,1F
 325+ 9B4B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B4D 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B50
 328+ 9B50 21 B6 89     	ld hl,Columns
 329+ 9B53 34           	inc (hl)
 330+ 9B54 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B57 E6 01        	and 1
 332+ 9B59 28 0F        	jr z,1F
 333+ 9B5B 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B5E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B5F 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B62 CD 55 9D     	call Genera_coordenadas
 337+ 9B65 CD CA 9C     	call Inc_CTRL_DESPLZ
 338+ 9B68 18 03        	jr 2F
 339+ 9B6A CD CA 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B6D C9           2 ret
 341+ 9B6E
 342+ 9B6E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B6E              ;
 344+ 9B6E              ;	24/7/22
 345+ 9B6E              ;
 346+ 9B6E              ;	Ciclo_completo.
 347+ 9B6E              ;
 348+ 9B6E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B6E              ;
 350+ 9B6E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B6E              ; 	Decrementamos (Columns).
 352+ 9B6E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B6E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B6E
 355+ 9B6E
 356+ 9B6E 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B71 FE FF        	cp $ff
 358+ 9B73 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B75 E6 F0        	and $f0
 360+ 9B77 20 28        	jr nz,3F
 361+ 9B79
 362+ 9B79              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B79
 364+ 9B79 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9B7C 47           	ld b,a
 366+ 9B7D 3E F8        	ld a,$f8
 367+ 9B7F 80           	add b
 368+ 9B80 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9B83 18 1C        	jr 3F
 370+ 9B85 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B88 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B89 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B8A 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9B8D 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B90 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B92 20 0A        	jr nz,2F
 377+ 9B94 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B97 23           	inc hl
 379+ 9B98 22 B7 89     	ld (Posicion_actual),hl
 380+ 9B9B CD 55 9D     	call Genera_coordenadas
 381+ 9B9E
 382+ 9B9E              ; Inicia el puntero de Sprite.
 383+ 9B9E
 384+ 9B9E CD A9 8D     2 call Inicia_puntero_objeto_der
 385+ 9BA1 C9           3 ret
 386+ 9BA2
 387+ 9BA2              ; ******************************************************************************************************************************************************************************************
 388+ 9BA2              ;
 389+ 9BA2              ;	15/02/23
 390+ 9BA2              ;
 391+ 9BA2              ;	Mov_left.
 392+ 9BA2              ;
 393+ 9BA2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BA2              ;
 395+ 9BA2 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9BA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BA7              ; 																	; _ en el caso de que no lo haya.
 399+ 9BA7 3A E3 89     	ld a,(Ctrl_0)
 400+ 9BAA CB 77        	bit 6,a
 401+ 9BAC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BAE
 403+ 9BAE CD C4 9C     	call Stop_Amadeus_left
 404+ 9BB1 C8           	ret z
 405+ 9BB2 20 4A        	jr nz,8F
 406+ 9BB4
 407+ 9BB4 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9BB7 A7           	and a
 409+ 9BB8 20 44        	jr nz,8F
 410+ 9BBA
 411+ 9BBA 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BBD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BBE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BC0
 415+ 9BC0              ; ---------- ---------- ----------
 416+ 9BC0
 417+ 9BC0 3A CA 89     	ld a,(Vel_left)
 418+ 9BC3 FE 02        	cp 2
 419+ 9BC5 28 0F        	jr z,1F
 420+ 9BC7 38 04        	jr c,6F
 421+ 9BC9 FE 04        	cp 4
 422+ 9BCB 28 12        	jr z,7F
 423+ 9BCD
 424+ 9BCD              ; ---------- ---------- ----------
 425+ 9BCD
 426+ 9BCD 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BD0 FE F8        	cp $f8
 428+ 9BD2 20 2A        	jr nz,8F
 429+ 9BD4 18 10        	jr 4F
 430+ 9BD6 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BD9 FE F9        	cp $f9
 432+ 9BDB 20 21        	jr nz,8F
 433+ 9BDD 18 07        	jr 4F
 434+ 9BDF 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BE2 FE FB        	cp $fb
 436+ 9BE4 20 18        	jr nz,8F
 437+ 9BE6
 438+ 9BE6              ; ---------- ---------- ----------
 439+ 9BE6
 440+ 9BE6              4
 441+ 9BE6 CD EC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BE9              ;	call Reinicio
 443+ 9BE9
 444+ 9BE9              ; ---------- ---------- ----------
 445+ 9BE9
 446+ 9BE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BEC
 449+ 9BEC              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BEC              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BEC
 452+ 9BEC CD 05 9C     	call DESPLZ_IZQ
 453+ 9BEF C1           	pop bc
 454+ 9BF0 10 F9        	djnz 5B
 455+ 9BF2 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BF5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BF6 22 B7 89     	ld (Posicion_actual),hl
 458+ 9BF9 CD 55 9D     	call Genera_coordenadas
 459+ 9BFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BFE
 461+ 9BFE              ; ---------- ---------- ----------
 462+ 9BFE
 463+ 9BFE              ; Movemos, no hay recolocación.
 464+ 9BFE
 465+ 9BFE 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9C01 CD 05 9C     	call DESPLZ_IZQ
 467+ 9C04 C9           2 ret
 468+ 9C05
 469+ 9C05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C05              ;
 471+ 9C05              ;	22/9/22
 472+ 9C05
 473+ 9C05              DESPLZ_IZQ
 474+ 9C05
 475+ 9C05 CD 14 9C     	call Desplaza_izquierda
 476+ 9C08 CD 60 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C0B CD 88 9C     	call Ciclo_completo_2
 478+ 9C0E 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C11 CB BE        	res 7,(hl)
 480+ 9C13 C9           	ret
 481+ 9C14
 482+ 9C14              Desplaza_izquierda
 483+ 9C14
 484+ 9C14 3A CA 89     	ld a,(Vel_left)
 485+ 9C17 47           	ld b,a
 486+ 9C18 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C1B 23           1 inc hl
 488+ 9C1C 23           	inc hl
 489+ 9C1D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C1F 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C22 CD 92 8D     	call Extrae_address
 492+ 9C25 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9C28
 494+ 9C28              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C28
 496+ 9C28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C28              ; Cuántos movimientos hemos hecho ??
 498+ 9C28              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C28
 500+ 9C28 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C2B EB           	ex de,hl
 502+ 9C2C A7           	and a
 503+ 9C2D ED 52        	sbc hl,de
 504+ 9C2F CB 3D        	srl l
 505+ 9C31 3E 08        6 ld a,8
 506+ 9C33 95           	sub l
 507+ 9C34 30 1E        	jr nc,3F
 508+ 9C36
 509+ 9C36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C36              ; B="0".
 511+ 9C36
 512+ 9C36 04           4 inc b
 513+ 9C37 3C           	inc a
 514+ 9C38 20 FC        	jr nz,4B
 515+ 9C3A 78           	ld a,b
 516+ 9C3B 08           	ex af,af
 517+ 9C3C 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C3F 23           5 inc hl
 519+ 9C40 23           	inc hl
 520+ 9C41 10 FC        	djnz 5B
 521+ 9C43 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C46 CD 92 8D     	call Extrae_address
 523+ 9C49 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C4C
 525+ 9C4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C4C              ; _(Posicion_actual).
 527+ 9C4C
 528+ 9C4C 21 B7 89     	ld hl,Posicion_actual
 529+ 9C4F 35           	dec (hl)
 530+ 9C50 08           	ex af,af
 531+ 9C51 6F           	ld l,a
 532+ 9C52 18 DD        	jr 6B
 533+ 9C54
 534+ 9C54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C54
 536+ 9C54 47           3 ld b,a
 537+ 9C55 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C58 23           2 inc hl
 539+ 9C59 23           	inc hl
 540+ 9C5A 10 FC        	djnz 2B
 541+ 9C5C 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C5F C9           8 ret
 543+ 9C60
 544+ 9C60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C60              ;
 546+ 9C60              ;	modifica_parametros_1er_DESPLZ
 547+ 9C60              ;
 548+ 9C60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C60              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C60
 552+ 9C60 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C63 A7           	and a
 554+ 9C64 20 1E        	jr nz,1F
 555+ 9C66 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C67 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C6A 21 B6 89     	ld hl,Columns
 558+ 9C6D 34           	inc (hl)
 559+ 9C6E 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C71 E6 01        	and 1
 561+ 9C73 20 0F        	jr nz,1F
 562+ 9C75 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C78 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C79 22 B7 89     	ld (Posicion_actual),hl
 565+ 9C7C CD 55 9D     	call Genera_coordenadas
 566+ 9C7F CD DB 9C     	call Dec_CTRL_DESPLZ
 567+ 9C82 18 03        	jr 2F
 568+ 9C84 CD DB 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C87 C9           2 ret
 570+ 9C88
 571+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C88
 573+ 9C88 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C8B FE F7        	cp $f7
 575+ 9C8D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C8F 30 2C        	jr nc,3F
 577+ 9C91
 578+ 9C91              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C91
 580+ 9C91 06 00        	ld b,0
 581+ 9C93 04           4 inc b
 582+ 9C94 3C           	inc a
 583+ 9C95 FE F7        	cp $f7
 584+ 9C97 20 FA        	jr nz,4B
 585+ 9C99 3E FF        	ld a,$ff
 586+ 9C9B 90           	sub b
 587+ 9C9C 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9C9F 18 1C        	jr 3F
 589+ 9CA1
 590+ 9CA1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CA1
 592+ 9CA1 21 B6 89     1 ld hl,Columns
 593+ 9CA4 35           	dec (hl)
 594+ 9CA5 AF           	xor a
 595+ 9CA6 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9CA9 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9CAC E6 01        	and 1
 598+ 9CAE 28 0A        	jr z,2F
 599+ 9CB0 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CB3 2B           	dec hl
 601+ 9CB4 22 B7 89     	ld (Posicion_actual),hl
 602+ 9CB7 CD 55 9D     	call Genera_coordenadas
 603+ 9CBA
 604+ 9CBA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CBA
 606+ 9CBA CD BC 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CBD C9           3 ret
 608+ 9CBE
 609+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CBE              ;
 611+ 9CBE              ;	19/10/22
 612+ 9CBE              ;
 613+ 9CBE              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CBE              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CBE
 616+ 9CBE 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CC1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CC3 C9           	ret
 619+ 9CC4
 620+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CC4              ;
 622+ 9CC4              ;	19/10/22
 623+ 9CC4              ;
 624+ 9CC4              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CC4              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CC4
 627+ 9CC4 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CC7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CC9 C9           	ret
 630+ 9CCA
 631+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CCA              ;
 633+ 9CCA              ;	24/7/22
 634+ 9CCA              ;
 635+ 9CCA              ;	Inc_CTRL_DESPLZ
 636+ 9CCA              ;
 637+ 9CCA              ;
 638+ 9CCA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CCA
 640+ 9CCA 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CCD 3A CB 89     	ld a,(Vel_right)
 642+ 9CD0 A7           	and a
 643+ 9CD1 28 06        	jr z,1F
 644+ 9CD3 47           	ld b,a
 645+ 9CD4 34           3 inc (hl)
 646+ 9CD5 10 FD        	djnz 3B
 647+ 9CD7 18 01        	jr 2F
 648+ 9CD9 34           1 inc (hl)
 649+ 9CDA C9           2 ret
 650+ 9CDB
 651+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CDB              ;
 653+ 9CDB              ;	5/2/23
 654+ 9CDB              ;
 655+ 9CDB              ;	Dec_CTRL_DESPLZ
 656+ 9CDB              ;
 657+ 9CDB              ;
 658+ 9CDB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CDB
 660+ 9CDB 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CDE 3A CA 89     	ld a,(Vel_left)
 662+ 9CE1 A7           	and a
 663+ 9CE2 28 06        	jr z,1F
 664+ 9CE4 47           	ld b,a
 665+ 9CE5 35           3 dec (hl)
 666+ 9CE6 10 FD        	djnz 3B
 667+ 9CE8 18 01        	jr 2F
 668+ 9CEA 35           1 dec (hl)
 669+ 9CEB C9           2 ret
 670+ 9CEC
 671+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CEC
 673+ 9CEC 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CEF 01 1F 00     	ld bc,31
 675+ 9CF2 A7           	and a
 676+ 9CF3 ED 4A        	adc hl,bc
 677+ 9CF5 22 B7 89     	ld (Posicion_actual),hl
 678+ 9CF8 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CFB CB C6        	set 0,(hl)
 680+ 9CFD C9           	ret
 681+ 9CFE
 682+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CFE
 684+ 9CFE 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D01 01 1F 00     	ld bc,31
 686+ 9D04 A7           	and a
 687+ 9D05 ED 42        	sbc hl,bc
 688+ 9D07 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D0A 21 E3 89     	ld hl,Ctrl_0
 690+ 9D0D CB CE        	set 1,(hl)
 691+ 9D0F C9           	ret
 692+ 9D10
 693+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D10
 695+ 9D10 24           Reaparece_abajo inc h
 696+ 9D11 01 E0 17     	ld bc,$17e0
 697+ 9D14 A7           	and a
 698+ 9D15 ED 4A        	adc hl,bc
 699+ 9D17 22 B7 89     	ld (Posicion_actual),hl
 700+ 9D1A 21 E3 89     	ld hl,Ctrl_0
 701+ 9D1D CB D6        	set 2,(hl)
 702+ 9D1F C9           	ret
 703+ 9D20
 704+ 9D20              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D20
 706+ 9D20 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D23 A7           	and a
 708+ 9D24 ED 42        	sbc hl,bc
 709+ 9D26 22 B7 89     	ld (Posicion_actual),hl
 710+ 9D29 21 E3 89     	ld hl,Ctrl_0
 711+ 9D2C CB DE        	set 3,(hl)
 712+ 9D2E C9           	ret
 713+ 9D2F
 714+ 9D2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D2F              ;
 716+ 9D2F              ;	15/07/23
 717+ 9D2F
 718+ 9D2F              Reinicio
 719+ 9D2F
 720+ 9D2F              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D2F
 722+ 9D2F AF           	xor a
 723+ 9D30 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D33 CD 51 9D     	call Limpia_contenido_hl
 725+ 9D36
 726+ 9D36 21 B7 89     	ld hl,Posicion_actual
 727+ 9D39 CD 51 9D     	call Limpia_contenido_hl
 728+ 9D3C
 729+ 9D3C CD 72 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D3F CD FC 9F     	call Inicia_Puntero_mov
 731+ 9D42
 732+ 9D42 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D45 06 05        	ld b,5
 734+ 9D47 77           1 ld (hl),a
 735+ 9D48 23           	inc hl
 736+ 9D49 10 FC        	djnz 1B
 737+ 9D4B
 738+ 9D4B 21 F6 89     	ld hl,Ctrl_2
 739+ 9D4E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D50
 741+ 9D50 C9           	ret
 742+ 9D51
 743+ 9D51 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D52 23           	inc hl
 745+ 9D53 77           	ld (hl),a
 746+ 9D54 C9           	ret
 747+ 9D55
 748+ 9D55
# file closed: Direcciones.asm
1448  9D55              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D55              ; ------------------------------------------------------------------------
   2+ 9D55              ;
   3+ 9D55              ;	02/04/23
   4+ 9D55              ;
   5+ 9D55              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D55              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D55              ;
   8+ 9D55              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D55              ;
  10+ 9D55              ;	Modifica: A,BC y DE.
  11+ 9D55
  12+ 9D55 C5           Genera_coordenadas push bc
  13+ 9D56 E5           	push hl
  14+ 9D57 D5           	push de
  15+ 9D58
  16+ 9D58 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D5B
  18+ 9D5B 7D           	ld a,l
  19+ 9D5C E6 1F        	and $1f
  20+ 9D5E 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D61
  22+ 9D61 CD CA 99     	call calcula_tercio
  23+ 9D64 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D65
  25+ 9D65 1E 00        	ld e,0
  26+ 9D67 7D           	ld a,l
  27+ 9D68 E6 E0        	and $e0
  28+ 9D6A 28 01        	jr z,1F
  29+ 9D6C 04           	inc b
  30+ 9D6D
  31+ 9D6D 04           1 inc b
  32+ 9D6E 05           	dec b
  33+ 9D6F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D71              ;														; _ , salimos.
  35+ 9D71 1C           3 inc e
  36+ 9D72 D6 20        	sub 32
  37+ 9D74 20 FB        	jr nz,3B
  38+ 9D76 10 F5        	djnz 1B
  39+ 9D78
  40+ 9D78 7B           2 ld a,e
  41+ 9D79 32 BC 89     	ld (Coordenada_y),a
  42+ 9D7C
  43+ 9D7C D1           	pop de
  44+ 9D7D E1           	pop hl
  45+ 9D7E C1           	pop bc
  46+ 9D7F
  47+ 9D7F C9           	ret
  48+ 9D80
  49+ 9D80              ; ------------------------------------------------------------------------
  50+ 9D80              ;	28/05/23
  51+ 9D80              ;
  52+ 9D80              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D80              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D80              ;
  55+ 9D80              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D80              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D80              ;
  58+ 9D80              ;		DE="$120d"
  59+ 9D80              ;
  60+ 9D80              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D80              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D80              ;
  63+ 9D80              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D80
  65+ 9D80              ;	Modifica: A,BC y DE.
  66+ 9D80
  67+ 9D80
  68+ 9D80              Genera_coordenadas_disparo
  69+ 9D80
  70+ 9D80              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D80
  72+ 9D80 7D           	ld a,l
  73+ 9D81 E6 1F        	and $1f
  74+ 9D83 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D84 CD CA 99     	call calcula_tercio
  76+ 9D87 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D88 1E 00        	ld e,0
  78+ 9D8A 7D           	ld a,l
  79+ 9D8B E6 E0        	and $e0
  80+ 9D8D 28 01        	jr z,1F
  81+ 9D8F 04           	inc b
  82+ 9D90 1C           1 inc e
  83+ 9D91 D6 20        	sub 32
  84+ 9D93 20 FB        	jr nz,1B
  85+ 9D95 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D97 C9           	ret
  87+ 9D98
# file closed: Genera_coordenadas.asm
1449  9D98              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D98
   2+ 9D98
   3+ 9D98              ;   07/07/23
   4+ 9D98              ;
   5+ 9D98              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D98              ;
   7+ 9D98              ;   Codificación:
   8+ 9D98              ;
   9+ 9D98              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D98              ;
  11+ 9D98              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D98              ;
  13+ 9D98              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D98              ;
  15+ 9D98              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D98              ;
  17+ 9D98              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D98              ;                               ..... %01000010 Vel_up 4
  19+ 9D98              ;                                               Vel_down 2
  20+ 9D98              ;                               ..... $42
  21+ 9D98              ;
  22+ 9D98              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D98              ;
  24+ 9D98              ;                               ..... %01000010 Vel_left 4
  25+ 9D98              ;                                               Vel_right 2
  26+ 9D98              ;                               ..... $42
  27+ 9D98              ;
  28+ 9D98              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D98              ;
  30+ 9D98              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D98              ;
  32+ 9D98              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D98              ;
  34+ 9D98              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D98              ;                                     $53
  36+ 9D98              ;
  37+ 9D98              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D98              ;
  39+ 9D98              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D98              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D98              ;
  42+ 9D98              ;                       Arriba ..... $81
  43+ 9D98              ;                       Arriba - izquierda ..... $a1
  44+ 9D98              ;                       Arriba - derecha ..... $91
  45+ 9D98              ;
  46+ 9D98              ;                       Abajo ..... $41
  47+ 9D98              ;                       Abajo - izquierda ..... $61
  48+ 9D98              ;                       Abajo - derecha ..... $51
  49+ 9D98              ;
  50+ 9D98              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D98              ;
  52+ 9D98              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D98              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D98              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D98              ;
  56+ 9D98              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D98              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D98              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D98              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D98              ;
  61+ 9D98              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D98              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D98              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D98              ;
  65+ 9D98              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D98              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D98              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D98              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D98
  70+ 9D98              ; ----- ----- ----- ----- -----
  71+ 9D98
  72+ 9D98 C4 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D9A CC 9D            defw F_1
  74+ 9D9C D6 9D            defw F_2
  75+ 9D9E E0 9D            defw Codo_abajo_derecha
  76+ 9DA0 14 9E            defw Derecha_y_subiendo
  77+ 9DA2 1E 9E            defw Derecha_y_subiendo_1
  78+ 9DA4 28 9E            defw F_3
  79+ 9DA6 32 9E            defw F_4
  80+ 9DA8 3C 9E            defw Derecha_y_bajando
  81+ 9DAA 46 9E            defw Derecha_y_bajando_1
  82+ 9DAC 50 9E            defw Derecha_y_bajando_2
  83+ 9DAE 5A 9E            defw Codo_derecha_abajo
  84+ 9DB0 8A 9E            defw Codo_abajo_izq.
  85+ 9DB2 BE 9E            defw Izquierda_y_subiendo
  86+ 9DB4 C8 9E            defw Izquierda_y_subiendo_1
  87+ 9DB6 D2 9E            defw F_5
  88+ 9DB8 DC 9E            defw F_6
  89+ 9DBA E6 9E            defw Izquierda_y_bajando
  90+ 9DBC F0 9E            defw Izquierda_y_bajando_1
  91+ 9DBE FA 9E            defw Izquierda_y_bajando_2
  92+ 9DC0 04 9F            defw Codo_izquierda_abajo
  93+ 9DC2 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC4
  95+ 9DC4 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC8 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DCC
  98+ 9DCC 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DD0 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD4 08 00
 100+ 9DD6 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DDA 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDE 0F FE
 102+ 9DE0
 103+ 9DE0 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DEC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DF0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E04 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E08 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E0C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E10 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E14
 117+ 9E14 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E18 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E1C 06 00
 119+ 9E1E
 120+ 9E1E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E22 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E26 02 00
 122+ 9E28
 123+ 9E28 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E2C 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E30 04 00
 125+ 9E32 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E36 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E3A 08 00
 127+ 9E3C
 128+ 9E3C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E40 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E44 02 00
 130+ 9E46
 131+ 9E46 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E4A 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4E 06 00
 133+ 9E50
 134+ 9E50 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E54 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E58 06 00
 136+ 9E5A
 137+ 9E5A              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E5A
 139+ 9E5A 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E62 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E66 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E6A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E72 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E76 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E7A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E82 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E86 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E8A
 152+ 9E8A 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E92 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E96 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E9A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9E 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA6 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EAA 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB2 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EBA 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBE
 166+ 9EBE 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC2 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC6 06 00
 168+ 9EC8
 169+ 9EC8 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ECC 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ED0 02 00
 171+ 9ED2
 172+ 9ED2 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED6 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EDA 04 00
 174+ 9EDC 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EE0 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE4 08 00
 176+ 9EE6
 177+ 9EE6 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EEA 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EEE 02 00
 179+ 9EF0
 180+ 9EF0 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF4 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF8 06 00
 182+ 9EFA
 183+ 9EFA 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFE 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F02 06 00
 185+ 9F04
 186+ 9F04 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F08 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F0C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F10 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F14 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F18 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F1C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F20 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F24 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F28 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F2C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F30 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F34
 199+ 9F34              ; ----- ----- ----- ----- -----
 200+ 9F34              ;
 201+ 9F34              ;   27/06/23
 202+ 9F34
 203+ 9F34              Movimiento
 204+ 9F34
 205+ 9F34              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F34
 207+ 9F34              ;    ld hl,(Posicion_actual)
 208+ 9F34
 209+ 9F34 3A F6 89         ld a,(Ctrl_2)
 210+ 9F37 CB 57            bit 2,a
 211+ 9F39 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F3B
 213+ 9F3B 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F3E 7E               ld a,(hl)
 215+ 9F3F
 216+ 9F3F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F3F
 218+ 9F3F              Inicia_desplazamiento.
 219+ 9F3F
 220+ 9F3F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F3F
 222+ 9F3F CD 33 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F42
 224+ 9F42              ; Iniciamos (Repetimos_mov).
 225+ 9F42
 226+ 9F42 7E               ld a,(hl)
 227+ 9F43 E6 0F            and $0f
 228+ 9F45 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F48 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F4B
 231+ 9F4B              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F4B
 233+ 9F4B 23               inc hl
 234+ 9F4C 7E               ld a,(hl)
 235+ 9F4D 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F50 2B               dec hl
 237+ 9F51
 238+ 9F51 21 F6 89         ld hl,Ctrl_2
 239+ 9F54 CB D6            set 2,(hl)
 240+ 9F56
 241+ 9F56              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F56              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F56
 244+ 9F56              Desplazamiento_iniciado
 245+ 9F56
 246+ 9F56 CD 07 A0         call Aplica_desplazamiento
 247+ 9F59
 248+ 9F59 3A F6 89         ld a,(Ctrl_2)
 249+ 9F5C CB 67            bit 4,a
 250+ 9F5E C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F5F
 252+ 9F5F 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F62 35               dec (hl)
 254+ 9F63 C0               ret nz
 255+ 9F64
 256+ 9F64              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F64              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F64              ; Analiza (Cola_de_desplazamiento).
 259+ 9F64
 260+ 9F64 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F67 A7               and a
 262+ 9F68 CC 5C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F6B 28 30            jr z,Reinicia_el_movimiento
 264+ 9F6D
 265+ 9F6D FE FF            cp $ff
 266+ 9F6F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F71
 268+ 9F71 FE FE            cp $fe
 269+ 9F73 CC E0 9F         call z,Fijamos_bucle
 270+ 9F76 28 25            jr z,Reinicia_el_movimiento
 271+ 9F78
 272+ 9F78 FE FD            cp $fd
 273+ 9F7A 20 11            jr nz,1F
 274+ 9F7C
 275+ 9F7C              ; ---
 276+ 9F7C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F7C
 278+ 9F7C 3A F6 89         ld a,(Ctrl_2)
 279+ 9F7F CB 5F            bit 3,a
 280+ 9F81 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F83
 282+ 9F83              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F83
 284+ 9F83 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F86 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F88
 287+ 9F88 CD F1 9F         call Inicia_Repetimos_movimiento
 288+ 9F8B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F8D              ; ---
 290+ 9F8D
 291+ 9F8D FE 01        1 cp 1
 292+ 9F8F CA CA 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F92
 294+ 9F92 3D               dec a
 295+ 9F93 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9F96
 297+ 9F96 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F99 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F9C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F9C C9               ret
 301+ 9F9D
 302+ 9F9D              Reinicia_el_movimiento
 303+ 9F9D
 304+ 9F9D 3A F6 89         ld a,(Ctrl_2)
 305+ 9FA0 CB 5F            bit 3,a
 306+ 9FA2 28 1B            jr z,2F
 307+ 9FA4
 308+ 9FA4              ; (Cola_de_desplazamiento)="254".
 309+ 9FA4
 310+ 9FA4 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FA7 35               dec (hl)
 312+ 9FA8 20 15            jr nz,2F
 313+ 9FAA
 314+ 9FAA              ; Fin de las repeticiones del último movimiento.
 315+ 9FAA
 316+ 9FAA 21 F6 89         ld hl,Ctrl_2
 317+ 9FAD CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FAF
 319+ 9FAF 2A E8 89         ld hl,(Puntero_mov)
 320+ 9FB2 23               inc hl
 321+ 9FB3 23               inc hl
 322+ 9FB4 23               inc hl
 323+ 9FB5 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FB8              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FB8 7E               ld a,(hl)
 326+ 9FB9 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9FBC
 328+ 9FBC C3 64 9F         jp Cola
 329+ 9FBF
 330+ 9FBF
 331+ 9FBF CD FC 9F     2 call Inicia_Puntero_mov
 332+ 9FC2
 333+ 9FC2 21 F6 89         ld hl,Ctrl_2
 334+ 9FC5 CB 96            res 2,(hl)
 335+ 9FC7
 336+ 9FC7 C3 34 9F         jp Movimiento
 337+ 9FCA
 338+ 9FCA              Siguiente_desplazamiento
 339+ 9FCA
 340+ 9FCA              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FCA              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FCA
 343+ 9FCA 21 F6 89         ld hl,Ctrl_2
 344+ 9FCD CB 96            res 2,(hl)
 345+ 9FCF
 346+ 9FCF 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FD2 23               inc hl
 348+ 9FD3 23               inc hl
 349+ 9FD4 22 E8 89         ld (Puntero_mov),hl
 350+ 9FD7
 351+ 9FD7 7E               ld a,(hl)
 352+ 9FD8 A7               and a
 353+ 9FD9 CC 5C A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FDC CA 9D 9F         jp z,Reinicia_el_movimiento
 355+ 9FDF
 356+ 9FDF C9               ret
 357+ 9FE0              ; Subrutinas -----------------------------------------
 358+ 9FE0              ; ---------- --------- --------- ---------- ----------
 359+ 9FE0              ;
 360+ 9FE0              ;   24/07/23
 361+ 9FE0              ;
 362+ 9FE0              ;   Fijamos_bucle
 363+ 9FE0              ;
 364+ 9FE0              ;
 365+ 9FE0
 366+ 9FE0              Fijamos_bucle
 367+ 9FE0
 368+ 9FE0 3A EC 89         ld a,(Incrementa_puntero)
 369+ 9FE3 3C               inc a
 370+ 9FE4 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ 9FE7
 372+ 9FE7 CD 5C A0         call Incrementa_Puntero_indice_mov
 373+ 9FEA 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ 9FED 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FF0 C9               ret
 376+ 9FF1
 377+ 9FF1              ; ---------- --------- --------- ---------- ----------
 378+ 9FF1              ;
 379+ 9FF1              ;   07/7/23
 380+ 9FF1              ;
 381+ 9FF1              ;   Inicia_Repetimos_movimiento
 382+ 9FF1              ;
 383+ 9FF1              ;
 384+ 9FF1
 385+ 9FF1              Inicia_Repetimos_movimiento
 386+ 9FF1
 387+ 9FF1              ; Iniciamos (Repetimos_movimiento).
 388+ 9FF1
 389+ 9FF1 DD 2A E8 89      ld ix,(Puntero_mov)
 390+ 9FF5 DD 7E 02         ld a,(ix+2)
 391+ 9FF8 32 F0 89         ld (Repetimos_movimiento),a
 392+ 9FFB
 393+ 9FFB C9               ret
 394+ 9FFC
 395+ 9FFC              ; ---------- --------- --------- ---------- ----------
 396+ 9FFC              ;
 397+ 9FFC              ;   26/6/23
 398+ 9FFC              ;
 399+ 9FFC              ;   Inicia_Puntero_mov
 400+ 9FFC              ;
 401+ 9FFC              ;
 402+ 9FFC
 403+ 9FFC 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FFF 5E               ld e,(hl)
 405+ A000 23               inc hl
 406+ A001 56               ld d,(hl)
 407+ A002 EB               ex de,hl
 408+ A003 22 E8 89         ld (Puntero_mov),hl
 409+ A006 C9               ret
 410+ A007
 411+ A007              ; ---------- --------- --------- ---------- ----------
 412+ A007              ;
 413+ A007              ;   27/06/23
 414+ A007              ;
 415+ A007              ;   Aplica_movimiento.
 416+ A007
 417+ A007              Aplica_desplazamiento
 418+ A007
 419+ A007              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A007
 421+ A007 2A E8 89         ld hl, (Puntero_mov)
 422+ A00A
 423+ A00A 7E               ld a,(hl)
 424+ A00B E6 F0            and $f0
 425+ A00D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A00E
 427+ A00E CB 7E            bit 7,(hl)
 428+ A010 28 03            jr z,1F
 429+ A012 CD 41 9A         call Mov_up
 430+ A015 2A E8 89     1 ld hl, (Puntero_mov)
 431+ A018 CB 76            bit 6,(hl)
 432+ A01A 28 03            jr z,2F
 433+ A01C CD 10 9A         call Mov_down
 434+ A01F 2A E8 89     2 ld hl, (Puntero_mov)
 435+ A022 CB 6E            bit 5,(hl)
 436+ A024 28 03            jr z,3F
 437+ A026 CD A2 9B         call Mov_left
 438+ A029 2A E8 89     3 ld hl, (Puntero_mov)
 439+ A02C CB 66            bit 4,(hl)
 440+ A02E C8               ret z
 441+ A02F CD 84 9A         call Mov_right
 442+ A032 C9               ret
 443+ A033
 444+ A033              ; ---------- --------- --------- ---------- ----------
 445+ A033              ;
 446+ A033              ;   26/06/23
 447+ A033              ;
 448+ A033              ;   Ajusta_velocidad_desplazamiento.
 449+ A033
 450+ A033              Ajusta_velocidad_desplazamiento
 451+ A033
 452+ A033              ; 1er byte de la cadena de movimiento.
 453+ A033              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A033
 455+ A033 CD 51 A0         call Extrae_nibble_alto
 456+ A036
 457+ A036 32 CC 89         ld (Vel_up),a
 458+ A039 79               ld a,c
 459+ A03A E6 0F            and $0f
 460+ A03C 32 CD 89         ld (Vel_down),a
 461+ A03F
 462+ A03F              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A03F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A03F
 465+ A03F 23               inc hl
 466+ A040 CD 51 A0         call Extrae_nibble_alto
 467+ A043
 468+ A043 32 CA 89         ld (Vel_left),a
 469+ A046 79               ld a,c
 470+ A047 E6 0F            and $0f
 471+ A049 32 CB 89         ld (Vel_right),a
 472+ A04C
 473+ A04C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A04C
 475+ A04C 23               inc hl
 476+ A04D 22 E8 89         ld (Puntero_mov),hl
 477+ A050 C9               ret
 478+ A051
 479+ A051 06 04        Extrae_nibble_alto ld b,4
 480+ A053 7E               ld a,(hl)
 481+ A054 4F               ld c,a
 482+ A055 E6 F0            and $f0
 483+ A057 CB 3F        1 srl a
 484+ A059 10 FC            djnz 1B
 485+ A05B C9               ret
 486+ A05C
 487+ A05C              ; ---------- --------- --------- ---------- ----------
 488+ A05C              ;
 489+ A05C              ;   5/7/23
 490+ A05C              ;
 491+ A05C              ;   Incrementa_Puntero_indice_mov
 492+ A05C
 493+ A05C              Incrementa_Puntero_indice_mov
 494+ A05C
 495+ A05C 21 EC 89         ld hl,Incrementa_puntero
 496+ A05F 34               inc (hl)
 497+ A060
 498+ A060 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A063 01 02 00         ld bc,2
 500+ A066 A7               and a
 501+ A067 09               add hl,bc
 502+ A068 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A06B
 504+ A06B 7E               ld a,(hl)
 505+ A06C A7               and a
 506+ A06D
 507+ A06D              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A06D
 509+ A06D              ;    jr z,$
 510+ A06D
 511+ A06D              ;! Reinicia el Patrón de movimiento.
 512+ A06D
 513+ A06D CC 72 A0         call z,Inicializa_Puntero_indice_mov
 514+ A070
 515+ A070 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A071
 517+ A071 C9               ret
 518+ A072
 519+ A072
 520+ A072              ; ---------- --------- --------- ---------- ----------
 521+ A072              ;
 522+ A072              ;   24/07/23
 523+ A072              ;
 524+ A072              ;   Inicializa_Puntero_indice_mov
 525+ A072
 526+ A072              Inicializa_Puntero_indice_mov
 527+ A072
 528+ A072              ; Existe etiqueta de bucle principal???
 529+ A072
 530+ A072 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A075 24               inc h
 532+ A076 25               dec h
 533+ A077 28 05            jr z,2F
 534+ A079
 535+ A079 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A07C 18 14            jr 3F
 537+ A07E
 538+ A07E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A07E
 540+ A07E 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A081 47               ld b,a
 542+ A082
 543+ A082 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A085 2B           1 dec hl
 545+ A086 2B               dec hl
 546+ A087 10 FC            djnz 1B
 547+ A089 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A08C
 549+ A08C AF               xor a
 550+ A08D 32 EC 89         ld (Incrementa_puntero),a
 551+ A090 18 06            jr 4F
 552+ A092
 553+ A092 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A095 32 EC 89         ld (Incrementa_puntero),a
 555+ A098 C9           4 ret
 556+ A099
 557+ A099
 558+ A099
# file closed: Patrones_de_mov.asm
1450  A099              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A099              ; Relojes y temporizaciones.
   2+ A099
   3+ A099              ; ------------------------------------------------------
   4+ A099              ;
   5+ A099              ;	16/7/23
   6+ A099              ;
   7+ A099              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A099              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A099              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A099              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A099              ;
  12+ A099              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A099              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A099
  15+ A099              ; Disparo_entidad db 1
  16+ A099              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A099              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A099
  19+ A099              Habilita_disparos
  20+ A099
  21+ A099 7E           	ld a,(hl)
  22+ A09A A7           	and a
  23+ A09B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A09C
  25+ A09C EB           	ex de,hl
  26+ A09D
  27+ A09D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A09E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A09F
  30+ A09F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A09F
  32+ A09F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0A0 7E           	ld a,(hl)
  34+ A0A1 23           	inc hl
  35+ A0A2 77           	ld (hl),a
  36+ A0A3
  37+ A0A3 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0A4 3E 01        	ld a,1
  39+ A0A6 77           	ld (hl),a
  40+ A0A7 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1451  A0A8              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A8              ;
   3+ A0A8              ;	9/8/23
   4+ A0A8              ;
   5+ A0A8              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A8
   7+ A0A8              ;	ADC HL,SP	LD (addr),SP
   8+ A0A8              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A8              ;	ADD IX,SP	LD SP,nn
  10+ A0A8              ; 	ADD IY,SP	LD SP,HL
  11+ A0A8              ;				LD SP,IX
  12+ A0A8              ;	DEC SP		LD SP,IY
  13+ A0A8
  14+ A0A8              ;	EX (SP),HL
  15+ A0A8              ;	EX (SP),IX
  16+ A0A8              ;	EX (SP),IY
  17+ A0A8
  18+ A0A8              ;	INC SP
  19+ A0A8
  20+ A0A8                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;	ld a,(Contador_de_frames)
  32+ 7FA0              ;	cp $e7
  33+ 7FA0              ;	jr z,$
  34+ 7FA0
  35+ 7FA0
  36+ 7FA0 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  38+ 7FA7
  39+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  40+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  41+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  42+ 7FAC
  43+ 7FAC 3A F8 89         ld a,(Ctrl_1)
  44+ 7FAF CB 47            bit 0,a
  45+ 7FB1 28 05            jr z,2F
  46+ 7FB3
  47+ 7FB3 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
  48+ 7FB6 18 03            jr 4F
  49+ 7FB8
  50+ 7FB8 2A 0D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  51+ 7FBB
  52+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  53+ 7FBD
  54+ 7FBD D1           1 pop de
  55+ 7FBE 73               ld (hl),e
  56+ 7FBF 23               inc hl
  57+ 7FC0 72               ld (hl),d
  58+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  59+ 7FC2 10 F9            djnz 1B
  60+ 7FC4
  61+ 7FC4 CB 47            bit 0,a
  62+ 7FC6 28 05            jr z,5F
  63+ 7FC8
  64+ 7FC8 22 0F 8A         ld (Stack_snapshot_disparos),hl
  65+ 7FCB 18 03            jr 6F
  66+ 7FCD
  67+ 7FCD 22 0D 8A     5 ld (Stack_snapshot),hl
  68+ 7FD0 ED 7B 09 8A  6 ld sp,(Stack)
  69+ 7FD4
  70+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  71+ 7FD4
  72+ 7FD4 5D               ld e,l
  73+ 7FD5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  74+ 7FD6
  75+ 7FD6 2A 29 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  76+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  77+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  78+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  79+ 7FDC
  80+ 7FDC C9               ret
  81+ 7FDD
  82+ 7FDD              ; ------------------------------------------------
  83+ 7FDD              ;
  84+ 7FDD              ;   3/08/23
  85+ 7FDD              ;
  86+ 7FDD              ;   La rutina estará situada justo después de:
  87+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  88+ 7FDD              ;
  89+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  90+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  91+ 7FDD
  92+ 7FDD                  org $7419
  93+ 7419
  94+ 7419              Gestiona_albumes_de_fotos
  95+ 7419
  96+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  97+ 7419              ;   Vaciamos Album_de_fotos.
  98+ 7419
  99+ 7419              ;   Album_de_fotos. Contiene datos ???
 100+ 7419
 101+ 7419 21 01 70         ld hl,Album_de_fotos+1
 102+ 741C 7E               ld a,(hl)
 103+ 741D A7               and a
 104+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 105+ 7420
 106+ 7420 2A 11 8A         ld hl,(End_Snapshot)
 107+ 7423 01 00 70         ld bc,Album_de_fotos
 108+ 7426 11 01 70         ld de,Album_de_fotos+1
 109+ 7429 AF               xor a
 110+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 111+ 742B
 112+ 742B CD BB 74         call Limpia_album
 113+ 742E
 114+ 742E 21 00 00         ld hl,0
 115+ 7431 22 11 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 116+ 7434
 117+ 7434              ; ----- ----- ----- -----
 118+ 7434
 119+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 120+ 7434
 121+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 122+ 7437 7E               ld a,(hl)
 123+ 7438 A7               and a
 124+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 125+ 743B              ;                               ; _ información del album2 al album1.
 126+ 743B
 127+ 743B              ; ----- ----- ----- -----
 128+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 129+ 743B
 130+ 743B 2A 15 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 131+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 132+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 133+ 7444
 134+ 7444 CD BB 74         call Limpia_album
 135+ 7447
 136+ 7447              ;   Calculamos (End_Snapshot)
 137+ 7447
 138+ 7447 A7               and a
 139+ 7448 ED 4A            adc hl,bc
 140+ 744A 22 11 8A         ld (End_Snapshot),hl
 141+ 744D
 142+ 744D              ;   Limpiamos Album_de_fotos_1.
 143+ 744D
 144+ 744D 2A 15 8A         ld hl,(End_Snapshot_1)
 145+ 7450 01 84 70         ld bc,Album_de_fotos_1
 146+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 147+ 7456 AF               xor a
 148+ 7457 02               ld (bc),a
 149+ 7458
 150+ 7458 CD BB 74         call Limpia_album
 151+ 745B
 152+ 745B 21 00 00         ld hl,0
 153+ 745E 22 15 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 154+ 7461
 155+ 7461              ; ----- ----- ----- -----
 156+ 7461
 157+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 158+ 7461
 159+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 160+ 7464 7E               ld a,(hl)
 161+ 7465 A7               and a
 162+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 163+ 7468              ;                               ; _ información del album3 al album2.
 164+ 7468              ; ----- ----- ----- -----
 165+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 166+ 7468
 167+ 7468 2A 19 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 168+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 169+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 170+ 7471
 171+ 7471 CD BB 74         call Limpia_album
 172+ 7474
 173+ 7474              ;   Calculamos (End_Snapshot_1):
 174+ 7474
 175+ 7474 A7               and a
 176+ 7475 ED 4A            adc hl,bc
 177+ 7477 22 15 8A         ld (End_Snapshot_1),hl
 178+ 747A
 179+ 747A              ;   Limpiamos Album_de_fotos_2.
 180+ 747A
 181+ 747A 2A 19 8A         ld hl,(End_Snapshot_2)
 182+ 747D 01 07 71         ld bc,Album_de_fotos_2
 183+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 184+ 7483 AF               xor a
 185+ 7484 02               ld (bc),a
 186+ 7485
 187+ 7485 CD BB 74         call Limpia_album
 188+ 7488
 189+ 7488 21 00 00         ld hl,0
 190+ 748B 22 19 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 191+ 748E
 192+ 748E              ; ----- ----- ----- -----
 193+ 748E
 194+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 195+ 748E
 196+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 197+ 7491 7E               ld a,(hl)
 198+ 7492 A7               and a
 199+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 200+ 7494
 201+ 7494              ; ----- ----- ----- -----
 202+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 203+ 7494
 204+ 7494 2A 1D 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 205+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 206+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 207+ 749D
 208+ 749D CD BB 74         call Limpia_album
 209+ 74A0
 210+ 74A0              ;   Calculamos (End_Snapshot_2):
 211+ 74A0
 212+ 74A0 A7               and a
 213+ 74A1 ED 4A            adc hl,bc
 214+ 74A3 22 19 8A         ld (End_Snapshot_2),hl
 215+ 74A6
 216+ 74A6              ;   Limpiamos Album_de_fotos_3.
 217+ 74A6
 218+ 74A6 2A 1D 8A         ld hl,(End_Snapshot_3)
 219+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 220+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 221+ 74AF AF               xor a
 222+ 74B0 02               ld (bc),a
 223+ 74B1
 224+ 74B1 CD BB 74         call Limpia_album
 225+ 74B4
 226+ 74B4 21 00 00         ld hl,0
 227+ 74B7 22 1D 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 228+ 74BA C9               ret
 229+ 74BB
 230+ 74BB              ; ----------------------------------------------------
 231+ 74BB              ;
 232+ 74BB              ;   10/8/23
 233+ 74BB              ;
 234+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 235+ 74BB              ;
 236+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 237+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 238+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 239+ 74BB
 240+ 74BB              ;    ld hl,(End_Snapshot)
 241+ 74BB              ;    ld bc,Album_de_fotos
 242+ 74BB              ;    ld de,Album_de_fotos+1
 243+ 74BB
 244+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 245+ 74BB
 246+ 74BB              Limpia_album
 247+ 74BB D5               push de            ; Guardo DESTINO.
 248+ 74BC C5               push bc            ; Guardo ORIGEN.
 249+ 74BD ED 42            sbc hl,bc
 250+ 74BF 4D               ld c,l
 251+ 74C0 44               ld b,h
 252+ 74C1 E1               pop hl
 253+ 74C2 C5               push bc
 254+ 74C3 ED B0            ldir
 255+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 256+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 257+ 74C7 C9               ret                         ; _ a otro).
 258+ 74C8              ;
 259+ 74C8
 260+ 74C8              ; -----------------------------------------------
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
 265+ 74C8
# file closed: Guarda_foto_registros.asm
1452  74C8
1453  74C8              	SAVESNA "Pruebas.sna", START
1454  74C8
1455  74C8
1456  74C8
1457  74C8
# file closed: Banco_de_pruebas.asm
