# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 62 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 19 A5     	call Pinta_disparos_Amadeus
  74  82F6 CD E4 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 45 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 63 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 24								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8918
  20+ 8918              ;	db 0, defw 0, db 0
  21+ 8918              ;	.....
  22+ 8918
  23+ 8918 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  24+ 891A 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  25+ 891C              ;	defw ...
  26+ 891C              ; 	defw ...
  27+ 891C 00 00        	defw 0
  28+ 891E
  29+ 891E 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  30+ 8920              ;	defw ...
  31+ 8920              ; 	defw ...
  32+ 8920 00 00        	defw 0
  33+ 8922
  34+ 8922              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  35+ 8922
  36+ 8922 00 00        Disparo_Amad defw 0									; Puntero objeto.
  37+ 8924 00 00        	defw 0											; Puntero de impresión.
  38+ 8926
  39+ 8926 5D 89        Indice_de_disparos_entidades defw Disparo_1
  40+ 8928 57 89        	defw Disparo_2
  41+ 892A 51 89        	defw Disparo_3
  42+ 892C 4B 89        	defw Disparo_4
  43+ 892E 45 89        	defw Disparo_5
  44+ 8930 3F 89        	defw Disparo_6
  45+ 8932 39 89        	defw Disparo_7
  46+ 8934
  47+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  48+ 8937 00 00        	defw 0									; Puntero de impresión.
  49+ 8939 00           Disparo_7 db 0	     						; Control.
  50+ 893A
  51+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  52+ 893D 00 00        	defw 0									; Puntero de impresión.
  53+ 893F 00           Disparo_6 db 0		    					; Control.
  54+ 8940
  55+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  56+ 8943 00 00        	defw 0									; Puntero de impresión.
  57+ 8945 00           Disparo_5 db 0			    				; Control.
  58+ 8946
  59+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  60+ 8949 00 00        	defw 0									; Puntero de impresión.
  61+ 894B 00           Disparo_4 db 0				     			; Control.
  62+ 894C
  63+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  64+ 894F 00 00        	defw 0									; Puntero de impresión.
  65+ 8951 00           Disparo_3 db 0					    		; Control.
  66+ 8952
  67+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  68+ 8955 00 00        	defw 0									; Puntero de impresión.
  69+ 8957 00           Disparo_2 db 0						    	; Control.
  70+ 8958
  71+ 8958 00 00 00     	db 0,0,0								; Puntero objeto.
  72+ 895B 00 00        	defw 0									; Puntero de impresión.
  73+ 895D 00           Disparo_1 db 0							    ; Control.
  74+ 895E
  75+ 895E              ; -------------------------------------------------------------------------------------
  76+ 895E              ;
  77+ 895E              ;	Índice de cajas_Masters.
  78+ 895E              ;
  79+ 895E              ;	11/11/24
  80+ 895E              ;
  81+ 895E              ;	12 bytes.
  82+ 895E
  83+ 895E              Indice_de_cajas_master
  84+ 895E
  85+ 895E 68 89        	defw Caja_master_1
  86+ 8960 74 89        	defw Caja_master_2
  87+ 8962 80 89        	defw Caja_master_3
  88+ 8964 8C 89        	defw Caja_master_4
  89+ 8966 98 89        	defw Caja_master_5
  90+ 8968
  91+ 8968 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  92+ 896B 00           	db 0												; (Contador_de_vueltas).
  93+ 896C 00           	db 0												; (Impacto).
  94+ 896D 00 00        	defw 0												; (Puntero_de_impresion).
  95+ 896F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
  96+ 8971 00 00        	defw 0 												; (Contador_de_mov_masticados).
  97+ 8973 00           	db 0												; (Velocidad).
  98+ 8974
  99+ 8974              ; ---------- ---------- ---------- ---------- ----------
 100+ 8974
 101+ 8974 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 102+ 8977 00           	db 0 												; (Contador_de_vueltas).
 103+ 8978 00           	db 0												; (Impacto).
 104+ 8979 00 00        	defw 0												; (Puntero_de_impresion).
 105+ 897B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 106+ 897D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 107+ 897F 00           	db 0												; (Velocidad).
 108+ 8980
 109+ 8980              ; ---------- ---------- ---------- ---------- ----------
 110+ 8980
 111+ 8980 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 112+ 8983 00           	db 0 												; (Contador_de_vueltas).
 113+ 8984 00           	db 0												; (Impacto).
 114+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 115+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 116+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 117+ 898B 00           	db 0												; (Velocidad).
 118+ 898C
 119+ 898C              ; ---------- ---------- ---------- ---------- ----------
 120+ 898C
 121+ 898C 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 122+ 898F 00           	db 0 												; (Contador_de_vueltas).
 123+ 8990 00           	db 0												; (Impacto).
 124+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 125+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 126+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 127+ 8997 00           	db 0												; (Velocidad).
 128+ 8998
 129+ 8998              ; ---------- ---------- ---------- ---------- ----------
 130+ 8998
 131+ 8998 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 132+ 899B 00           	db 0 												; (Contador_de_vueltas).
 133+ 899C 00           	db 0												; (Impacto).
 134+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 135+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 136+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 137+ 89A3 00           	db 0												; (Velocidad).
 138+ 89A4
 139+ 89A4              ; -------------------------------------------------------------------------------------
 140+ 89A4              ;
 141+ 89A4              ;	Índice de cajas de entidades.
 142+ 89A4              ;
 143+ 89A4              ;	18/1/24
 144+ 89A4              ;
 145+ 89A4
 146+ 89A4              Indice_de_cajas_de_entidades
 147+ 89A4
 148+ 89A4 C0 89        	defw Caja_1
 149+ 89A6 CC 89        	defw Caja_2
 150+ 89A8 D8 89        	defw Caja_3
 151+ 89AA E4 89        	defw Caja_4
 152+ 89AC F0 89        	defw Caja_5
 153+ 89AE 00 8A        	defw Caja_6
 154+ 89B0              ;	defw Caja_7
 155+ 89B0
 156+ 89B0 00 00        	defw 0
 157+ 89B2 00 00        	defw 0
 158+ 89B4
 159+ 89B4              ; -------------------------
 160+ 89B4
 161+ 89B4              ; Relleno para que no se corrompa el movimiento. ?????
 162+ 89B4
 163+ 89B4              ;	db 0
 164+ 89B4
 165+ 89B4              ; ---------- ---------- ---------- ---------- ----------
 166+ 89B4              ;
 167+ 89B4              ;	28/05/24
 168+ 89B4              ;
 169+ 89B4              ; 	Cada caja tiene 14 bytes !!!
 170+ 89B4              ;
 171+ 89B4              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 172+ 89B4
 173+ 89B4 00           Amadeus_BOX db 0										; (Tipo).
 174+ 89B5 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 175+ 89B7 00           	db 0												; (Contador_de_vueltas).
 176+ 89B8 00           Impacto_Amadeus	db 0									; (Impacto).
 177+ 89B9 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 178+ 89BB 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 179+ 89BD 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 180+ 89BF 00           	db 0												; (Velocidad).
 181+ 89C0
 182+ 89C0              ; ---------- ---------- ---------- ---------- ----------
 183+ 89C0              ;
 184+ 89C0              ;	22/01/24
 185+ 89C0              ;
 186+ 89C0              ; 	Cada caja tiene 12 bytes !!!
 187+ 89C0              ;
 188+ 89C0              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 189+ 89C0
 190+ 89C0
 191+ 89C0 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 192+ 89C3 00           	db 0												; (Contador_de_vueltas).
 193+ 89C4 00           	db 0												; (Impacto).
 194+ 89C5 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 89C7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 89C9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 89CB 00           	db 0												; (Velocidad).
 198+ 89CC
 199+ 89CC              ; ---------- ---------- ---------- ---------- ----------
 200+ 89CC
 201+ 89CC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 202+ 89CF 00           	db 0 												; (Contador_de_vueltas).
 203+ 89D0 00           	db 0												; (Impacto).
 204+ 89D1 00 00        	defw 0												; (Puntero_de_impresion).
 205+ 89D3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 206+ 89D5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 207+ 89D7 00           	db 0												; (Velocidad).
 208+ 89D8
 209+ 89D8              ; ---------- ---------- ---------- ---------- ----------
 210+ 89D8
 211+ 89D8 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 212+ 89DB 00           	db 0 												; (Contador_de_vueltas).
 213+ 89DC 00           	db 0												; (Impacto).
 214+ 89DD 00 00        	defw 0												; (Puntero_de_impresion).
 215+ 89DF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 216+ 89E1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 217+ 89E3 00           	db 0												; (Velocidad).
 218+ 89E4
 219+ 89E4              ; ---------- ---------- ---------- ---------- ----------
 220+ 89E4
 221+ 89E4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 222+ 89E7 00           	db 0 												; (Contador_de_vueltas).
 223+ 89E8 00           	db 0												; (Impacto).
 224+ 89E9 00 00        	defw 0												; (Puntero_de_impresion).
 225+ 89EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 226+ 89ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 227+ 89EF 00           	db 0												; (Velocidad).
 228+ 89F0
 229+ 89F0              ; ---------- ---------- ---------- ---------- ----------
 230+ 89F0
 231+ 89F0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 232+ 89F3 00           	db 0 												; (Contador_de_vueltas).
 233+ 89F4 00           	db 0												; (Impacto).
 234+ 89F5 00 00        	defw 0												; (Puntero_de_impresion).
 235+ 89F7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 236+ 89F9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 237+ 89FB 00           	db 0												; (Velocidad).
 238+ 89FC
 239+ 89FC              	org $8a00
 240+ 8A00
 241+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 242+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 243+ 8A04 00           	db 0												; (Impacto).
 244+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 245+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 246+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 247+ 8A0B 00           	db 0												; (Velocidad).
 248+ 8A0C
 249+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 250+ 8A0C
 251+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 252+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 253+ 8A0C              ;	db 0												; (Impacto).
 254+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 255+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 256+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 257+ 8A0C              ;	db 0												; (Velocidad).
 258+ 8A0C
 259+ 8A0C              ; -------------------------------------------------------------------------------------
 260+ 8A0C              ;
 261+ 8A0C              ;	06/12/24
 262+ 8A0C              ;
 263+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 264+ 8A0C              ;
 265+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 266+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 267+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 268+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 269+ 8A0C
 270+ 8A0C              Indice_de_definiciones_de_entidades
 271+ 8A0C
 272+ 8A0C 10 8A        	defw Entidad_1
 273+ 8A0E 1D 8A        	defw Entidad_2
 274+ 8A10
 275+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 276+ 8A10
 277+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 278+ 8A10
 279+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 280+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 281+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A18
 284+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A18
 287+ 8A18 14 40        Pos_inicio_entidad1	defw $4014	                        ; (Posicion_inicio).
 288+ 8A1A 00           	db 0												; (Cuad_objeto).
 289+ 8A1B
 290+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 8A1D
 292+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 293+ 8A1D
 294+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 295+ 8A20 01           	db 1												; (Contador_de_vueltas).
 296+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 297+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 298+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 299+ 8A27 01           	db 1												; (Cuad_objeto).
 300+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 301+ 8A2A
 302+ 8A2A              ; -------------------------------------------------------------------------------------
 303+ 8A2A              ;
 304+ 8A2A              ;	28/05/24
 305+ 8A2A              ;
 306+ 8A2A              ;	Definición de Amadeus.
 307+ 8A2A              ;
 308+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 309+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 310+ 8A2A
 311+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 312+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 313+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 314+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 315+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 316+ 8A34 03           	db 3												; (Cuad_objeto).
 317+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  96+ 8A63
  97+ 8A63              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  98+ 8A63
  99+ 8A63              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
 100+ 8A63              ;                               Izquierda_y_subiendo+8 (11)
 101+ 8A63              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
 102+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 103+ 8A63              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
 104+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 105+ 8A63              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
 106+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 107+ 8A63              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
 108+ 8A63              ;                               Izquierda_y_subiendo+8 (8)
 109+ 8A63              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
 110+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 111+ 8A63              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
 112+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 113+ 8A63              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
 114+ 8A63              ;                               Izquierda_y_subiendo+8 (7)
 115+ 8A63
 116+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 117+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 118+ 8A6B
 119+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 120+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 120+ 8A73 08 00
 121+ 8A75
 122+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 123+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 123+ 8A7D 0F FE
 124+ 8A7F
 125+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 126+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 127+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 128+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 129+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 130+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 131+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 132+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 133+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 134+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 135+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 136+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 137+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 138+ 8AB3
 139+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 140+ 8AB7 11 11 91 FD      db $11,$11,$91,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 140+ 8ABB 0F 00
 141+ 8ABD
 142+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 143+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 143+ 8AC5 02 00
 144+ 8AC7
 145+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 146+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 146+ 8ACF 04 00
 147+ 8AD1
 148+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 149+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 149+ 8AD9 08 00
 150+ 8ADB
 151+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 152+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 152+ 8AE3 02 00
 153+ 8AE5
 154+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 155+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 155+ 8AED 06 00
 156+ 8AEF
 157+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 158+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 158+ 8AF7 06 00
 159+ 8AF9
 160+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 161+ 8AF9
 162+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 163+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 164+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 165+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 166+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 167+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 168+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 169+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 170+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 171+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 172+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 173+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 174+ 8B29
 175+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 176+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 177+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 178+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 179+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 180+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 181+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 182+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 183+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 184+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 185+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 186+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 187+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 188+ 8B5D
 189+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 190+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,15,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 190+ 8B65 0F 00
 191+ 8B67
 192+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 193+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 193+ 8B6F 02 00
 194+ 8B71
 195+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 196+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 196+ 8B79 04 00
 197+ 8B7B
 198+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 199+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 199+ 8B83 08 00
 200+ 8B85
 201+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 202+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 202+ 8B8D 02 00
 203+ 8B8F
 204+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 205+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 205+ 8B97 06 00
 206+ 8B99
 207+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 208+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 208+ 8BA1 06 00
 209+ 8BA3
 210+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 211+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 212+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 213+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 214+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 215+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 216+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 217+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 218+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 219+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 220+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 221+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 222+ 8BD3
 223+ 8BD3
 224+ 8BD3
 225+ 8BD3
 226+ 8BD3
 227+ 8BD3
 228+ 8BD3
 229+ 8BD3
 230+ 8BD3
 231+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B
 278  8C0B 00           Columnitas db 0
 279  8C0C
 280  8C0C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 281  8C0E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  8C0E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 283  8C0F
 284  8C0F              ; variables de control general.
 285  8C0F
 286  8C0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  8C10
 288  8C10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  8C10
 290  8C10              Perfiles_de_velocidad
 291  8C10
 292  8C10 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  8C11 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  8C12 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  8C13 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  8C14
 297  8C14              ; Contadores de 16 bits.
 298  8C14
 299  8C14 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  8C16 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  8C18 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  8C1C
 304  8C1C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  8C1C
 306  8C1C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 307  8C1E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 308  8C20 00 00        Puntero_indice_mov_bucle defw 0							;
 309  8C22              ;
 310  8C22              ;
 311  8C22 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 312  8C23              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 313  8C23              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 314  8C23 00           Incrementa_puntero_backup db 0
 315  8C24 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 316  8C25              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 317  8C25 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 318  8C26 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 319  8C27 00           Cola_de_desplazamiento db 0								; Este byte indica:
 320  8C28              ;
 321  8C28              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 322  8C28              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 323  8C28              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 324  8C28              ;
 325  8C28              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 326  8C28              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 327  8C28              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 328  8C28              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 329  8C28              ;
 330  8C28              ;														;	"$ff" ..... Bucle infinito de repetición.
 331  8C28              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 332  8C28              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 333  8C28
 334  8C28 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 335  8C29
 336  8C29              ;														DESCRIPCIÓN:
 337  8C29              ;
 338  8C29              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 339  8C29              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 340  8C29              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 341  8C29              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 342  8C29              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 343  8C29              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 344  8C29
 345  8C29              ;														BIT 3, Recarga de nueva oleada.
 346  8C29              ;														BIT 4, Recarga de nueva oleada.
 347  8C29              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 348  8C29              ;														BIT 6, **** Frame completo.
 349  8C29              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 350  8C29
 351  8C29 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 352  8C2B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 353  8C2B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 354  8C2B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 355  8C2B
 356  8C2B              ; Gestión de ENTIDADES y CAJAS.
 357  8C2B
 358  8C2B 00 00        Puntero_store_caja defw 0
 359  8C2D 00 00        Puntero_restore_caja defw 0
 360  8C2F 00 00        Indice_restore_caja defw 0
 361  8C31 00 00        Puntero_indice_master defw 0
 362  8C33
 363  8C33 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  8C34 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  8C35 00           Entidades_en_curso db 0									; Entidades en pantalla.
 366  8C36
 367  8C36 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 368  8C38 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 369  8C3A              ;														; _ puntero (Indice_entidades).
 370  8C3A
 371  8C3A              ;---------------------------------------------------------------------------------------------------------------
 372  8C3A              ;
 373  8C3A              ;	13/10/24
 374  8C3A              ;
 375  8C3A              ;	Álbumes.
 376  8C3A
 377  8C3A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 378  8C3C              ;														; _variable para almacenar lo posición del puntero_
 379  8C3C              ; 														; _de pila, SP.
 380  8C3C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 381  8C3E              ;														; La utiliza la rutina [Extrae_foto_registros].
 382  8C3E
 383  8C3E              ; Impresión. ----------------------------------------------------------------------------------------------------
 384  8C3E
 385  8C3E 00 00        Album_de_pintado defw 0
 386  8C40 00 00        Album_de_borrado defw 0
 387  8C42 00 00        Album_de_pintado_Amadeus defw 0
 388  8C44 00 00        Album_de_borrado_Amadeus defw 0
 389  8C46
 390  8C46 00 00        Album_de_pintado_disparos_Amadeus defw 0
 391  8C48 00 00        Album_de_borrado_disparos_Amadeus defw 0
 392  8C4A
 393  8C4A 00 00        Album_de_pintado_disparos_Entidades defw 0
 394  8C4C 00 00        Album_de_borrado_disparos_Entidades defw 0
 395  8C4E
 396  8C4E
 397  8C4E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 398  8C50
 399  8C50 00           Num_de_bytes_album_de_disparos db 0
 400  8C51 00           Num_de_bytes_album_de_disparos_borrado db 0
 401  8C52
 402  8C52 07           Numero_de_disparos_de_entidades db 7
 403  8C53
 404  8C53 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 405  8C54 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 406  8C55
 407  8C55 00 00        Techo_Scanlines_album defw 0
 408  8C57 00 00        Techo_Scanlines_album_2 defw 0
 409  8C59 00           Switch db 0
 410  8C5A 00 00        Techo defw 0
 411  8C5C 00 00        Scanlines_album_SP defw 0
 412  8C5E 00 89        India_SP defw Tabla_de_pintado
 413  8C60 03 89        India_2_SP defw Tabla_de_pintado+3
 414  8C62
 415  8C62 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 416  8C63              ;
 417  8C63              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 418  8C63              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 419  8C63              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 420  8C63              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 421  8C63              ;																Habilita el borrado/pintado de sprites.
 422  8C63              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 423  8C63              ;																_ a la baja.
 424  8C63              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 425  8C63              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 426  8C63              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 427  8C63              ; 																_ el último frame de la explosión de nuestra nave.
 428  8C63              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 429  8C63              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 430  8C63
 431  8C63 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 432  8C64              ;
 433  8C64              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 434  8C64              ;															BIT 1, "1" Indica que hemos aparecido por la parte IZQUIERDA de la pantalla.
 435  8C64
 436  8C64
 437  8C64
 438  8C64
 439  8C64
 440  8C64
 441  8C64 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 442  8C65              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 443  8C65              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 444  8C65
 445  8C65              ; Gestión de Disparos.
 446  8C65
 447  8C65 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C67 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C69 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C6A
 451  8C6A              ;
 452  8C6A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C6A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C6A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C6A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C6A
 457  8C6A
 458  8C6A
 459  8C6A
 460  8C6A
 461  8C6A
 462  8C6A
 463  8C6A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C6C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C6C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C6C
 467  8C6C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C6E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C6E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C71              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C71 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C74              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C74
 474  8C74              ;---------------------------------------------------------------------------------------------------------------
 475  8C74
 476  8C74              ; Relojes y temporizaciones.
 477  8C74
 478  8C74 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 479  8C75 05           Clock_explosion_Amadeus db 5
 480  8C76 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C77
 482  8C77 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C79 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C7B 00           Numero_rnd_disparos db 0
 485  8C7C
 486  8C7C 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 487  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 488  8C7F A0           CLOCK_disparos_de_entidades db $a0
 489  8C80
 490  8C80              ;---------------------------------------------------------------------------------------------------------------
 491  8C80
 492  8C80              ; Gestión de NIVELES.
 493  8C80
 494  8C80 00           Nivel db 0												; Nivel actual del juego.
 495  8C81 00 00        Puntero_indice_NIVELES defw 0
 496  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C85              ; 														; _ que definen el NIVEL.
 498  8C85
 499  8C85              ; ---------------------------------------------------------------------------------------------------------------
 500  8C85
 501  8C85              ; Temporizaciones Shield.
 502  8C85
 503  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C8D 00           Shield_3 db 0
 508  8C8E
 509  8C8E 07           Lives db 7
 510  8C8F
 511  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C8F              ;
 513  8C8F              ;	13/11/24
 514  8C8F
 515  8C8F              START
 516  8C8F
 517  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C98 F3           	DI
 522  8C99
 523  8C99              ; Limpiamos pantalla.
 524  8C99
 525  8C99              ;	ld a,%00000111
 526  8C99              ;	call Cls
 527  8C99 CD 3A 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C9C
 529  8C9C              INICIALIZACION
 530  8C9C
 531  8C9C 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C9E CD 06 94     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8CA1 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza
 534  8CA4 6F           	ld l,a
 535  8CA5 26 00        	ld h,0
 536  8CA7 22 7C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 537  8CAA
 538  8CAA              ;	Inicia los álbumes de líneas.
 539  8CAA
 540  8CAA CD 8C 91     	call Inicia_albumes_de_lineas
 541  8CAD CD 9C 91     	call Inicia_albumes_de_lineas_Amadeus
 542  8CB0 CD A9 91     	call Inicia_albumes_de_disparos
 543  8CB3
 544  8CB3              ;	Inicia 1er Nivel.
 545  8CB3
 546  8CB3 CD 68 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 547  8CB6 CD 36 94     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 548  8CB9              ;														   _reponiendo entidades eliminadas.
 549  8CB9 CD 9C 94     	call Prepara_Cajas_de_Entidades
 550  8CBC
 551  8CBC CD EC 94     	call Inicia_Amadeus
 552  8CBF
 553  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 554  8CBF              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 555  8CBF              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 556  8CBF 11 B4 89     	ld de,Amadeus_BOX
 557  8CC2 CD DB 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 558  8CC5 CD 2F 95     	call Limpiamos_bandeja_DRAW
 559  8CC8
 560  8CC8              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 561  8CC8
 562  8CC8 06 3C        	ld b,60
 563  8CCA CD 36 A0     2 call Amadeus_a_izquierda
 564  8CCD 10 FB        	djnz 2B
 565  8CCF
 566  8CCF CD 6A 91     	call Genera_datos_de_impresion_Amadeus
 567  8CD2
 568  8CD2              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 569  8CD2
 570  8CD2 CD C5 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 571  8CD5
 572  8CD5 CD 45 92     	call Inicia_Shield
 573  8CD8
 574  8CD8 2A 5C 8C     6 ld hl,(Scanlines_album_SP)
 575  8CDB 22 55 8C     	ld (Techo_Scanlines_album),hl
 576  8CDE
 577  8CDE 2A 40 8C     	ld hl,(Album_de_borrado)
 578  8CE1 22 5C 8C     	ld (Scanlines_album_SP),hl
 579  8CE4
 580  8CE4 21 00 89     	ld hl,Tabla_de_pintado
 581  8CE7 22 5E 8C     	ld (India_SP),hl
 582  8CEA
 583  8CEA 21 62 8C     	ld hl,Ctrl_3
 584  8CED CB C6        	set 0,(hl) 											; Indica Frame completo.
 585  8CEF CB D6        	set 2,(hl)
 586  8CF1 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 587  8CF3
 588  8CF3 FB           	ei 													; Ha de apuntar a $5c3a.
 589  8CF4
 590  8CF4 76           	halt
 591  8CF5
 592  8CF5              ; ------------------------------------
 593  8CF5
 594  8CF5              Main
 595  8CF5
 596  8CF5              ;
 597  8CF5              ; 07/11/24.
 598  8CF5
 599  8CF5              ; Gestión de disparos.
 600  8CF5
 601  8CF5 CD F8 8E     25 call Change_Disparos								; Intercambiamos los álbumes de disparos.
 602  8CF8 CD 2A A2     	call Motor_de_disparos_entidades
 603  8CFB CD C5 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 604  8CFE
 605  8CFE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 606  8CFE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 607  8CFE              ; Este hecho lo indica el bit2 de (Impacto2).
 608  8CFE
 609  8CFE CD 66 A6     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 610  8D01
 611  8D01              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 612  8D01
 613  8D01 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 614  8D04 35           	dec (hl)
 615  8D05 CC 39 8E     	call z,Autoriza_disparo_de_entidades
 616  8D08
 617  8D08 2A 7C 8C     	ld hl,(Clock_next_entity)
 618  8D0B ED 4B 78 5C  	ld bc,(FRAMES)
 619  8D0F A7           	and a
 620  8D10 ED 42        	sbc hl,bc
 621  8D12 20 21        	jr nz,1F
 622  8D14
 623  8D14              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 624  8D14
 625  8D14 CD 23 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 626  8D17 CD 3A 8F     	call Define_Clock_next_entity
 627  8D1A
 628  8D1A              ; GESTIÓN DE ENTIDADES.
 629  8D1A
 630  8D1A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 631  8D1A              ; _ (Clock_next_entity) para la siguiente entidad.
 632  8D1A
 633  8D1A              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 634  8D1A              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 635  8D1A              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 636  8D1A
 637  8D1A 21 34 8C     	ld hl,Numero_parcial_de_entidades
 638  8D1D 46           	ld b,(hl)
 639  8D1E
 640  8D1E 04           	inc b
 641  8D1F 05           	dec b
 642  8D20
 643  8D20 F3           	di
 644  8D21 28 FE        	jr z,$													;! Nivel superado !!!!!
 645  8D23 FB           	ei
 646  8D24
 647  8D24 3A 35 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 648  8D27 B8           	cp b
 649  8D28 28 0B        	jr z,1F
 650  8D2A 30 09        	jr nc,1F
 651  8D2C
 652  8D2C              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 653  8D2C
 654  8D2C 3C           	inc a
 655  8D2D 32 35 8C     	ld (Entidades_en_curso),a
 656  8D30
 657  8D30 21 63 8C     	ld hl,Ctrl_4
 658  8D33 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 659  8D35
 660  8D35              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 661  8D35
 662  8D35              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 663  8D35              ;	call Define_Clock_next_entity
 664  8D35
 665  8D35 3A 35 8C     1 ld a,(Entidades_en_curso)
 666  8D38 A7           	and a
 667  8D39 CA DF 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 668  8D3C 47           	ld b,a													; No hay entidades que gestionar.
 669  8D3D
 670  8D3D              ; ( Código que ejecutamos con cada entidad: ).
 671  8D3D
 672  8D3D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 673  8D3D              ;
 674  8D3D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 675  8D3D
 676  8D3D 21 00 89     	ld hl,Tabla_de_pintado
 677  8D40 22 5E 8C     	ld (India_SP),hl
 678  8D43
 679  8D43 21 62 8C     	ld hl,Ctrl_3
 680  8D46 CB D6        	set 2,(hl)
 681  8D48 CD CD 8E     	call Change
 682  8D4B
 683  8D4B C5           2 push bc 												; Nº de entidades en curso.
 684  8D4C
 685  8D4C DD 2A 2B 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 686  8D50 CD 16 92     	call Salta_caja_de_entidades_vacia
 687  8D53
 688  8D53              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 689  8D53
 690  8D53 DD 7E 00     	ld a,(ix+0)
 691  8D56 CB 7F        	bit 7,a
 692  8D58 28 11        	jr z,5F
 693  8D5A
 694  8D5A              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 695  8D5A
 696  8D5A 21 63 8C     	ld hl,Ctrl_4
 697  8D5D CB 46        	bit 0,(hl)
 698  8D5F CC 25 92     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 699  8D62 28 E8        	jr z,6B
 700  8D64
 701  8D64 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 702  8D66 CB BF        	res 7,a
 703  8D68 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 704  8D6B
 705  8D6B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 706  8D6B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 707  8D6B
 708  8D6B 3A 69 8C     5 ld a,(Impacto2)
 709  8D6E CB 5F        	bit 3,a
 710  8D70 C4 5C A4     	call nz,Compara_con_coordenadas_de_disparo
 711  8D73
 712  8D73              ; Existe colisión entre esta entidad y Amadeus ???
 713  8D73
 714  8D73 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 715  8D76 CB 4F        	bit 1,a
 716  8D78 C4 61 93     	call nz,Genera_explosion
 717  8D7B 20 45        	jr nz,Gestiona_siguiente_entidad
 718  8D7D
 719  8D7D DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 720  8D80 A7           	and a
 721  8D81 28 0C        	jr z,3F
 722  8D83
 723  8D83              ; IMPACTO en entidad por colisión con Amadeus.
 724  8D83
 725  8D83              ; 5/7/24
 726  8D83              ; Nota importante:
 727  8D83              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 728  8D83              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 729  8D83              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 730  8D83
 731  8D83 3A B8 89     	ld a,(Impacto_Amadeus)
 732  8D86 A7           	and a
 733  8D87 C4 61 93     	call nz,Genera_explosion
 734  8D8A 20 36        	jr nz,Gestiona_siguiente_entidad
 735  8D8C
 736  8D8C              ; Falsa colisión !!!
 737  8D8C
 738  8D8C 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 739  8D8F
 740  8D8F              ; -------------------------------------------
 741  8D8F
 742  8D8F CD E4 90     3 call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 743  8D92
 744  8D92 D5           	push de
 745  8D93 CD 7E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 746  8D96 CD A5 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 747  8D99 D1           	pop de
 748  8D9A
 749  8D9A DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 750  8D9C DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 751  8DA0 CD 4C 96     	call Genera_datos_de_impresion
 752  8DA3 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 753  8DA5
 754  8DA5 CD 52 95     	call Decrementa_Contador_de_mov_masticados
 755  8DA8
 756  8DA8              ; -------------------------------------------
 757  8DA8
 758  8DA8              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 759  8DA8
 760  8DA8 2A EF 8B     	ld hl,(Puntero_de_impresion)
 761  8DAB CD 20 96     	call Genera_coordenadas
 762  8DAE
 763  8DAE ED 4B EB 8B  	ld bc,(Coordenada_X)
 764  8DB2
 765  8DB2 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 766  8DB5 DD 70 02     	ld (ix+2),b
 767  8DB8
 768  8DB8              ; TODO: Generamos disparo ???
 769  8DB8
 770  8DB8 3A 54 8C     	ld a,(Permiso_de_disparo_Entidades)
 771  8DBB A7           	and a
 772  8DBC C4 4E 8E     	call nz,Entidad_genera_disparo_si_procede
 773  8DBF
 774  8DBF CD E0 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 775  8DC2
 776  8DC2              Gestiona_siguiente_entidad
 777  8DC2
 778  8DC2 CD 25 92     	call Incrementa_punteros_de_cajas
 779  8DC5
 780  8DC5 C1           	pop bc
 781  8DC6 10 83        	djnz 2B
 782  8DC8
 783  8DC8              ; Hemos gestionado todas las entidades.
 784  8DC8              ; ----- ----- -----
 785  8DC8
 786  8DC8 CD 97 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 787  8DCB CD AE 8F     	call Ordena_tabla_de_impresion
 788  8DCE CD C5 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 789  8DD1
 790  8DD1 CD 4F 8F     	call Borra_diferencia
 791  8DD4
 792  8DD4 3A 62 8C     	ld a,(Ctrl_3)
 793  8DD7 CB 5F        	bit 3,a
 794  8DD9 20 04        	jr nz,Gestion_de_Amadeus
 795  8DDB
 796  8DDB EB           	ex de,hl
 797  8DDC 71           	ld (hl),c
 798  8DDD 2C           	inc l
 799  8DDE 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 800  8DDF
 801  8DDF              ;! GESTIONA AMADEUS !!!!!!!!!!
 802  8DDF
 803  8DDF              Gestion_de_Amadeus
 804  8DDF
 805  8DDF 21 62 8C     	ld hl,Ctrl_3
 806  8DE2 CB 76        	bit 6,(hl)
 807  8DE4 28 13        	jr z,Amadeus_vivo
 808  8DE6
 809  8DE6              ; Amadeus ha sido destruido.
 810  8DE6              ; Decrementa (Temp_new_live).
 811  8DE6
 812  8DE6 21 76 8C     	ld hl,Temp_new_live
 813  8DE9 35           	dec (hl)
 814  8DEA 20 26        	jr nz,End_frame
 815  8DEC
 816  8DEC              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 817  8DEC
 818  8DEC 21 8E 8C     	ld hl,Lives
 819  8DEF 35           	dec (hl)
 820  8DF0
 821  8DF0              ;! Fin del juego
 822  8DF0
 823  8DF0 F3           	di
 824  8DF1 28 FE        	jr z,$														;! GAME OVER !!!!!
 825  8DF3 FB           	ei
 826  8DF4
 827  8DF4              ; Nueva nave.
 828  8DF4
 829  8DF4 CD 6B 8E     	call Reinicia_Amadeus
 830  8DF7 18 19        	jr End_frame
 831  8DF9
 832  8DF9              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 833  8DF9
 834  8DF9              Amadeus_vivo
 835  8DF9
 836  8DF9 3A B8 89     	ld a,(Impacto_Amadeus)
 837  8DFC A7           	and a
 838  8DFD C4 D1 93     	call nz, Genera_explosion_Amadeus
 839  8E00 20 10        	jr nz, End_frame
 840  8E02
 841  8E02 CD 3E 93     	call Teclado
 842  8E05 21 62 8C     	ld hl,Ctrl_3
 843  8E08
 844  8E08 CB 6E        	bit 5,(hl)
 845  8E0A 28 06        	jr z,End_frame
 846  8E0C
 847  8E0C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 848  8E0C
 849  8E0C CD E8 8E     	call Change_Amadeus
 850  8E0F CD 6A 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 851  8E12
 852  8E12              End_frame
 853  8E12
 854  8E12              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 855  8E12              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 856  8E12
 857  8E12 CD 87 A3     	call Genera_datos_de_impresion_disparos_Entidades
 858  8E15 CD 4B A5     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 859  8E18 CD A1 A4     	call Calcula_bytes_pintado_disparos
 860  8E1B CD AE A4     	call Limpia_album_de_pintado_disparos_entidades
 861  8E1E
 862  8E1E              ; ------------ ------------- --------------
 863  8E1E
 864  8E1E 2A 40 8C     	ld hl,(Album_de_borrado)
 865  8E21 22 5C 8C     	ld (Scanlines_album_SP),hl
 866  8E24
 867  8E24 21 62 8C     	ld hl,Ctrl_3
 868  8E27 CB C6        	set 0,(hl) 											; Indica Frame completo.
 869  8E29 CB 9E        	res 3,(hl)
 870  8E2B CB A6        	res 4,(hl)
 871  8E2D
 872  8E2D 21 63 8C     	ld hl,Ctrl_4
 873  8E30 CB 86        	res 0,(hl)
 874  8E32
 875  8E32 AF           	xor a
 876  8E33 D3 FE        	out ($fe),a
 877  8E35
 878  8E35 76           	halt
 879  8E36
 880  8E36 C3 F5 8C     	jp Main
 881  8E39
 882  8E39              ;------------------------------------------
 883  8E39              ;
 884  8E39              ;	07/11/24
 885  8E39
 886  8E39              Autoriza_disparo_de_entidades
 887  8E39
 888  8E39 3E 01        	ld a,1
 889  8E3B 32 54 8C     	ld (Permiso_de_disparo_Entidades),a
 890  8E3E
 891  8E3E 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 892  8E41 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 893  8E43 38 02        	jr c,1F
 894  8E45
 895  8E45              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 896  8E45              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 897  8E45              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 898  8E45
 899  8E45 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 900  8E47
 901  8E47 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 902  8E4A 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 903  8E4D
 904  8E4D C9           	ret
 905  8E4E
 906  8E4E              ;------------------------------------------
 907  8E4E              ;
 908  8E4E              ;	14/09/24
 909  8E4E              ;
 910  8E4E              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 911  8E4E
 912  8E4E              Entidad_genera_disparo_si_procede
 913  8E4E
 914  8E4E 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E51 CB 06        	rlc (hl)
 916  8E53
 917  8E53 DC D7 A3     	call c,Genera_disparo_de_entidad_maldosa
 918  8E56
 919  8E56 C9           	ret
 920  8E57
 921  8E57              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 922  8E57              ;
 923  8E57              ;	30/09/24
 924  8E57
 925  8E57              Actuaiza_sp_de_disparos_de_entidades
 926  8E57
 927  8E57 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 928  8E5A 23           	inc hl
 929  8E5B 22 79 8C     	ld (Puntero_num_aleatorios_disparos),hl
 930  8E5E
 931  8E5E 11 FD 88     	ld de,Numeros_aleatorios+7
 932  8E61 7B           	ld a,e
 933  8E62 95           	sub l
 934  8E63 C0           	ret nz
 935  8E64
 936  8E64 21 F6 88     1 ld hl,Numeros_aleatorios
 937  8E67 22 79 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 938  8E6A C9           	ret
 939  8E6B
 940  8E6B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 941  8E6B              ;
 942  8E6B              ;	24/07/24
 943  8E6B
 944  8E6B              Reinicia_Amadeus
 945  8E6B
 946  8E6B              ;	Reinicia posición y estado.
 947  8E6B
 948  8E6B 21 CF 50     	ld hl,$50cf
 949  8E6E 22 B9 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 950  8E71 21 CC DC     	ld hl,$dccc
 951  8E74 22 BB 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 952  8E77 21 3D 00     	ld hl,$003d
 953  8E7A 22 BD 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 954  8E7D
 955  8E7D              ;	limpiamos el álbum de borrado.
 956  8E7D
 957  8E7D 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
 958  8E80
 959  8E80 AF           	xor a
 960  8E81 77           	ld (hl),a
 961  8E82
 962  8E82 E5           	push hl
 963  8E83 D1           	pop de
 964  8E84 13           	inc de
 965  8E85
 966  8E85 01 23 00     	ld bc,35
 967  8E88 ED B0        	ldir
 968  8E8A
 969  8E8A CD 6A 91     	call Genera_datos_de_impresion_Amadeus
 970  8E8D
 971  8E8D              ;	Reinicia temporizaciones.
 972  8E8D
 973  8E8D CD 45 92     	call Inicia_Shield
 974  8E90
 975  8E90 3E 5A        	ld a,90
 976  8E92 32 8B 8C     	ld (Shield),a
 977  8E95
 978  8E95 3E 64        	ld a,100
 979  8E97 32 76 8C     	ld (Temp_new_live),a
 980  8E9A
 981  8E9A              ; 	Restauramos el FLAG: Amadeus vivo.
 982  8E9A
 983  8E9A 21 62 8C     	ld hl,Ctrl_3
 984  8E9D CB B6        	res 6,(hl)
 985  8E9F
 986  8E9F              ;	Fuerza la impresión de la nave en el siguiente frame.
 987  8E9F
 988  8E9F 21 62 8C      	ld hl,Ctrl_3
 989  8EA2 CB EE        	set 5,(hl)
 990  8EA4
 991  8EA4 C9           	ret
 992  8EA5
 993  8EA5              ; --------------------------------------------------------------------------------------------------------------
 994  8EA5              ;
 995  8EA5              ;	23/11/24
 996  8EA5
 997  8EA5              Ajusta_velocidad_entidad
 998  8EA5
 999  8EA5 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
1000  8EA8 A7           	and a
1001  8EA9 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
1002  8EAA              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
1003  8EAA              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
1004  8EAA
1005  8EAA
1006  8EAA              ; Incrementa (Contador_de_vueltas)x2.
1007  8EAA              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
1008  8EAA
1009  8EAA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1010  8EAA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1011  8EAA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1012  8EAA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1013  8EAA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1014  8EAA
1015  8EAA
1016  8EAA CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1017  8EAC DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1018  8EAF E6 10        	and $10
1019  8EB1 C8           	ret z
1020  8EB2
1021  8EB2              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1022  8EB2
1023  8EB2 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1024  8EB5 CB 2F        	sra a
1025  8EB7 CB 2F        	sra a
1026  8EB9 DD 77 0B     	ld (ix+11),a
1027  8EBC
1028  8EBC DD 6E 07     	ld l,(ix+7)
1029  8EBF DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1030  8EC2
1031  8EC2              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1032  8EC2 23           	inc hl
1033  8EC3 23           	inc hl
1034  8EC4 23           	inc hl
1035  8EC5 23           	inc hl
1036  8EC6              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1037  8EC6
1038  8EC6 DD 75 07     	ld (ix+7),l
1039  8EC9 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1040  8ECC
1041  8ECC C9           	ret
1042  8ECD
1043  8ECD              ; --------------------------------------------------------------------------------------------------------------
1044  8ECD              ;
1045  8ECD              ;	25/08/24
1046  8ECD
1047  8ECD              Change
1048  8ECD
1049  8ECD 3A 59 8C     	ld a,(Switch)
1050  8ED0 EE 01        	xor 1
1051  8ED2 32 59 8C     	ld (Switch),a
1052  8ED5 2A 3E 8C     	ld hl,(Album_de_pintado)
1053  8ED8 ED 5B 40 8C  	ld de,(Album_de_borrado)
1054  8EDC EB           	ex de,hl
1055  8EDD 22 3E 8C     	ld (Album_de_pintado),hl
1056  8EE0 22 5C 8C     	ld (Scanlines_album_SP),hl
1057  8EE3 ED 53 40 8C  	ld (Album_de_borrado),de
1058  8EE7 C9           	ret
1059  8EE8
1060  8EE8              Change_Amadeus
1061  8EE8
1062  8EE8 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1063  8EEB ED 5B 44 8C  	ld de,(Album_de_borrado_Amadeus)
1064  8EEF EB           	ex de,hl
1065  8EF0 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1066  8EF3 ED 53 44 8C  	ld (Album_de_borrado_Amadeus),de
1067  8EF7 C9           	ret
1068  8EF8
1069  8EF8              Change_Disparos
1070  8EF8
1071  8EF8              ; Álbumes de Amadeus.
1072  8EF8
1073  8EF8 2A 46 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1074  8EFB ED 5B 48 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1075  8EFF EB           	ex de,hl
1076  8F00 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1077  8F03 ED 53 48 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1078  8F07 CD 96 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1079  8F0A
1080  8F0A              ; Álbumes de entidades.
1081  8F0A
1082  8F0A 2A 4A 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1083  8F0D ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1084  8F11 EB           	ex de,hl
1085  8F12 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1086  8F15 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Entidades),de
1087  8F19 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1088  8F1C
1089  8F1C 3A 50 8C     	ld a,(Num_de_bytes_album_de_disparos)
1090  8F1F 32 51 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1091  8F22
1092  8F22 C9           	ret
1093  8F23
1094  8F23              ; ------------------------------------
1095  8F23              ;
1096  8F23              ; 1/05/24
1097  8F23
1098  8F23              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1099  8F23              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1100  8F23
1101  8F23              ;	DESTRUYE: HL,DE,A
1102  8F23              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1103  8F23
1104  8F23              ;	Variables implicadas: (RND_SP).
1105  8F23
1106  8F23              Extrae_numero_aleatorio_y_avanza
1107  8F23
1108  8F23 21 FD 88     	ld hl,Numeros_aleatorios+7
1109  8F26 EB           	ex de,hl
1110  8F27 2A 77 8C     	ld hl,(RND_SP)
1111  8F2A
1112  8F2A 7B           	ld a,e
1113  8F2B 95           	sub l
1114  8F2C 20 06        	jr nz,1F
1115  8F2E
1116  8F2E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1117  8F2E
1118  8F2E 21 F6 88     	ld hl,Numeros_aleatorios
1119  8F31 22 77 8C     	ld (RND_SP),HL
1120  8F34
1121  8F34              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1122  8F34
1123  8F34 7E           1 ld a,(hl)
1124  8F35 23           	inc hl
1125  8F36 22 77 8C     	ld (RND_SP),hl
1126  8F39 C9           	ret
1127  8F3A
1128  8F3A              ; ------------------------------------
1129  8F3A              ;
1130  8F3A              ; 1/05/24
1131  8F3A
1132  8F3A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1133  8F3A              ; (1 a 4 segundos).
1134  8F3A              ; Actualizamos (Clock_next_entity) con A.
1135  8F3A
1136  8F3A              ;	DESTRUYE: A y B.
1137  8F3A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1138  8F3A              ;			 Actualiza (Clock_next_entity) con A.
1139  8F3A
1140  8F3A              ;	Variables implicadas: (Clock_next_entity).
1141  8F3A
1142  8F3A              ; Notas:
1143  8F3A
1144  8F3A              ; 	$32 1 seg.
1145  8F3A              ; 	$64 2 seg.
1146  8F3A              ; 	$96 3 seg.
1147  8F3A              ; 	$c8 4 seg.
1148  8F3A              ; 	$fa 5 seg.
1149  8F3A
1150  8F3A              ; $ffff 1310,7 seg, 22 minutos.
1151  8F3A
1152  8F3A              ;	$0100  5 seg. aproximadamente.
1153  8F3A              ;	$0200 10 seg. aproximadamente.
1154  8F3A              ;	$0300 15 seg. aproximadamente.
1155  8F3A              ;	$0400 20 seg. aproximadamente.
1156  8F3A              ;	$0500 25 seg. aproximadamente.
1157  8F3A              ;	$0600 30 seg. aproximadamente.
1158  8F3A
1159  8F3A              Define_Clock_next_entity
1160  8F3A
1161  8F3A FE 34        	cp $34
1162  8F3C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1163  8F3E
1164  8F3E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1165  8F3E
1166  8F3E 4F           3 ld c,a
1167  8F3F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1168  8F41 2A 78 5C     	ld hl,(FRAMES)
1169  8F44 A7           	and a
1170  8F45 ED 4A        	adc hl,bc
1171  8F47 22 7C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1172  8F4A C9           	ret
1173  8F4B
1174  8F4B 3E 34        1 ld a,$34
1175  8F4D 18 EF        	jr 3B
1176  8F4F
1177  8F4F              ; ------------------------------------
1178  8F4F              ;
1179  8F4F              ; 18/03/24
1180  8F4F
1181  8F4F              Borra_diferencia
1182  8F4F
1183  8F4F ED 4B 5C 8C  	ld bc,(Scanlines_album_SP)
1184  8F53
1185  8F53 3A 59 8C     	ld a,(Switch)
1186  8F56 A7           	and a
1187  8F57 28 08        	jr z,2F
1188  8F59
1189  8F59 2A 57 8C     	ld hl,(Techo_Scanlines_album_2)
1190  8F5C 11 57 8C     	ld de,Techo_Scanlines_album_2
1191  8F5F 18 06        	jr 3F
1192  8F61
1193  8F61 2A 55 8C     2 ld hl,(Techo_Scanlines_album)
1194  8F64 11 55 8C     	ld de,Techo_Scanlines_album
1195  8F67
1196  8F67              ; Diferencia.
1197  8F67
1198  8F67 ED 42        3 sbc hl,bc
1199  8F69
1200  8F69 C8           	ret z
1201  8F6A D8           	ret c
1202  8F6B
1203  8F6B              ; Nuevo techo, (más bajo que el anterior).
1204  8F6B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1205  8F6B
1206  8F6B EB           	ex de,hl
1207  8F6C
1208  8F6C 71           	ld (hl),c
1209  8F6D 2C           	inc l
1210  8F6E 70           	ld (hl),b
1211  8F6F
1212  8F6F AF           	xor a
1213  8F70 43           	ld b,e
1214  8F71
1215  8F71 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1216  8F74
1217  8F74 77           1 ld (hl),a
1218  8F75 23           	inc hl
1219  8F76 10 FC        	djnz 1B
1220  8F78
1221  8F78              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1222  8F78
1223  8F78 21 62 8C     	ld hl,Ctrl_3
1224  8F7B CB DE        	set 3,(hl)
1225  8F7D
1226  8F7D C9           	ret
1227  8F7E
1228  8F7E              ; --------------------------------------------------------------------------------------------------------------
1229  8F7E              ;
1230  8F7E              ;	23/11/24
1231  8F7E              ;
1232  8F7E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1233  8F7E
1234  8F7E              Entidad_a_Tabla_de_pintado
1235  8F7E
1236  8F7E              ; Almacena la Coordenada Y de la entidad en curso.
1237  8F7E
1238  8F7E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1239  8F7E
1240  8F7E DD 7E 02     	ld a,(ix+2)
1241  8F81 2A 5E 8C     	ld hl,(India_SP)
1242  8F84 77           	ld (hl),a
1243  8F85 2C           	inc l
1244  8F86
1245  8F86              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1246  8F86
1247  8F86 ED 5B 5C 8C  	ld de,(Scanlines_album_SP)
1248  8F8A
1249  8F8A 73           	ld (hl),e
1250  8F8B 2C           	inc l
1251  8F8C 72           	ld (hl),d
1252  8F8D 2C           	inc l
1253  8F8E
1254  8F8E              ; El 4º .db de la tabla será (Columnas).
1255  8F8E
1256  8F8E 3A 0A 8C     	ld a,(Columnas)
1257  8F91 77           	ld (hl),a
1258  8F92 2C           	inc l
1259  8F93 22 5E 8C     	ld (India_SP),hl
1260  8F96
1261  8F96 C9           	ret
1262  8F97
1263  8F97              ; --------------------------------------------------------------------------------------------------------------
1264  8F97              ;
1265  8F97              ;	27/03/24
1266  8F97              ;
1267  8F97
1268  8F97              Inicializa_India_y_limpia_Tabla_de_impresion
1269  8F97
1270  8F97 2A 5E 8C     	ld hl,(India_SP)
1271  8F9A 01 17 89     	ld bc,Indice_de_almacenes_de_mov_masticados-1							; Bytes de (Tabla_de_pintado)-1.
1272  8F9D
1273  8F9D 79           	ld a,c
1274  8F9E 95           	sub l
1275  8F9F 28 06        	jr z,2F
1276  8FA1 47           	ld b,a																	; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1277  8FA2              ;																			; _ y pasamos a inicializar (India_SP).
1278  8FA2 AF           	xor a
1279  8FA3
1280  8FA3 77           1 ld (hl),a
1281  8FA4 2C           	inc l
1282  8FA5 10 FC        	djnz 1B																	; Limpia Tabla.
1283  8FA7
1284  8FA7 21 00 89     2 ld hl,Tabla_de_pintado													; Inicializa (India_SP).
1285  8FAA 22 5E 8C     	ld (India_SP),hl
1286  8FAD
1287  8FAD C9           	ret
1288  8FAE
1289  8FAE              ; --------------------------------------------------------------------------------------------------------------
1290  8FAE              ;
1291  8FAE              ;	31/3/24
1292  8FAE
1293  8FAE              Ordena_tabla_de_impresion
1294  8FAE
1295  8FAE              ; 5794 T/states.
1296  8FAE              ; 6278 T/states.
1297  8FAE              ; 5310 T/states.
1298  8FAE
1299  8FAE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1300  8FAE              ; Inicializamos contador de comparaciones, [C].
1301  8FAE              ; Cargamos los registros A y B para efectuar comparación.
1302  8FAE
1303  8FAE FD 2E 00     	ld iyl,0
1304  8FB1
1305  8FB1 3A 35 8C     	ld a,(Entidades_en_curso)
1306  8FB4 FE 04        	cp 4 	;	4
1307  8FB6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1308  8FB7
1309  8FB7 3D           	dec a
1310  8FB8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1311  8FB9 51           	ld d,c 										; Copia de respaldo.
1312  8FBA
1313  8FBA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1314  8FBB
1315  8FBB 21 04 89     	ld hl,Tabla_de_pintado+4
1316  8FBE 46           	ld b,(hl)
1317  8FBF 22 60 8C     	ld (India_2_SP),hl
1318  8FC2
1319  8FC2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1320  8FC3 DC EB 8F     	call c, Avanza_India_2_SP
1321  8FC6 CC EB 8F     	call z, Avanza_India_2_SP
1322  8FC9
1323  8FC9 FD 2D        	dec iyl
1324  8FCB 28 18        	jr z,2F
1325  8FCD
1326  8FCD
1327  8FCD              ; --------------------------------------------------------------------------------------------------------------
1328  8FCD              ;
1329  8FCD              ;	7/4/24
1330  8FCD
1331  8FCD              Trueque
1332  8FCD
1333  8FCD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1334  8FCD              ;  			A contiene en nº de fila de (India_SP).
1335  8FCD              ;			HL contiene (India_2_SP).
1336  8FCD
1337  8FCD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1338  8FCE E5           	push hl										; Preservo (India_2_SP).
1339  8FCF
1340  8FCF ED 5B 5E 8C  	ld de,(India_SP)
1341  8FD3 EB           	ex de,hl
1342  8FD4 70           	ld (hl),b
1343  8FD5 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1344  8FD6
1345  8FD6 CD 1A 90     	call Intercambia_1_byte
1346  8FD9 CD 1A 90     	call Intercambia_1_byte
1347  8FDC
1348  8FDC
1349  8FDC              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1350  8FDC              ; Recuperamos (India_2_SP) en HL.
1351  8FDC
1352  8FDC 2A 5E 8C     	ld hl,(India_SP)
1353  8FDF 7E           	ld a,(hl)
1354  8FE0
1355  8FE0 E1           	pop hl
1356  8FE1 D1           	pop de
1357  8FE2
1358  8FE2              ; --------------------------------------------------------------------------------------------------------------
1359  8FE2
1360  8FE2 CD EB 8F     	call Avanza_India_2_SP
1361  8FE5
1362  8FE5 14           2 inc d
1363  8FE6 15           	dec d
1364  8FE7 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1365  8FE8 18 D8        	jr 1B
1366  8FEA
1367  8FEA C9           	ret
1368  8FEB
1369  8FEB              ; ----- ----- ----- ----- -----
1370  8FEB
1371  8FEB              Avanza_India_2_SP
1372  8FEB
1373  8FEB 0D           	dec c
1374  8FEC 28 0B        	jr z,Avanza_punteros_indios
1375  8FEE
1376  8FEE FD 2C        	inc iyl
1377  8FF0
1378  8FF0 2C           	inc l
1379  8FF1 2C           	inc l
1380  8FF2 2C           	inc l
1381  8FF3 2C           	inc l
1382  8FF4
1383  8FF4 46           	ld b,(hl)
1384  8FF5 22 60 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1385  8FF8
1386  8FF8 C9           	ret
1387  8FF9
1388  8FF9              ; ----- ----- ----- ----- -----
1389  8FF9
1390  8FF9              Avanza_punteros_indios
1391  8FF9
1392  8FF9 15           	dec d
1393  8FFA 28 17        	jr z,Prepara_salida
1394  8FFC
1395  8FFC 4A           	ld c,d
1396  8FFD
1397  8FFD 2A 5E 8C     	ld hl,(India_SP)
1398  9000
1399  9000 2C           	inc l
1400  9001 2C           	inc l
1401  9002 2C           	inc l
1402  9003 2C           	inc l
1403  9004
1404  9004 7E           	ld a,(hl)
1405  9005 22 5E 8C     	ld (India_SP),hl
1406  9008
1407  9008 2C           	inc l
1408  9009 2C           	inc l
1409  900A 2C           	inc l
1410  900B 2C           	inc l
1411  900C
1412  900C 46           	ld b,(hl)
1413  900D 22 60 8C     	ld (India_2_SP),hl
1414  9010
1415  9010 FD 2C        	inc iyl
1416  9012
1417  9012 C9           	ret
1418  9013
1419  9013              Prepara_salida
1420  9013
1421  9013 21 00 89     	ld hl,Tabla_de_pintado
1422  9016 22 5E 8C     	ld (India_SP),hl
1423  9019 C9           	ret
1424  901A
1425  901A
1426  901A 2C           Intercambia_1_byte inc l
1427  901B 1C           	inc e
1428  901C 46           	ld b,(hl)
1429  901D 1A           	ld a,(de)
1430  901E EB           	ex de,hl
1431  901F 70           	ld (hl),b
1432  9020 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1433  9021 C9           	ret
1434  9022
1435  9022              ; -----------------------------------------------------------------------------------
1436  9022              ;
1437  9022              ;	20/01/24
1438  9022              ;
1439  9022              ;
1440  9022
1441  9022              Construye_movimientos_masticados_entidad
1442  9022
1443  9022 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1444  9025 E5           	push hl
1445  9026 CD D7 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1446  9029              ;															; _ el (Contador_de_mov_masticados).
1447  9029 CD E1 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1448  902C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1449  902C CD D2 9C     	call Recompone_posicion_inicio
1450  902F
1451  902F CD D2 99     1 call Draw
1452  9032
1453  9032              ;	IX contiene (Puntero_de_impresion)
1454  9032              ;	IY contiene (Puntero_objeto)
1455  9032
1456  9032 CD 9D 90     	call Codifica_Puntero_de_impresion
1457  9035
1458  9035              ; debug !!!!!!!!!!!!!!!!!!!
1459  9035
1460  9035 2A FA 8B     	ld hl,(Posicion_actual)
1461  9038 7D           	ld a,l
1462  9039 E6 1F        	and $1f
1463  903B FE 02        	cp 2
1464  903D 20 02        	jr nz,2F
1465  903F
1466  903F              ;	ld a,(CTRL_DESPLZ)
1467  903F              ;	cp $fe
1468  903F              ;	jr z,$
1469  903F
1470  903F 18 FE        	jr $
1471  9041
1472  9041              ;	Puntero_de_impresion $8bef ..... $4580 ..... $4580 ---
1473  9041              ;	Columns $8bf9 	  		   ..... 3     ..... 3	   ---
1474  9041              ;	Posicion_actual $8bfa	   ..... $44c1 ..... $44c2 ---
1475  9041              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $f8   ---
1476  9041              ;	Puntero_objeto $8bfc	   ..... $8691 ..... $8570 ---
1477  9041              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $8532 ---
1478  9041              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $839c ---
1479  9041              ;	Cuad_objeto $8c09		   ..... 1	   ..... 1	   ---
1480  9041              ;	Columnas $8c0a			   ..... 2     ..... 2     ---
1481  9041              ;	Columnitas $8c0b		   ..... 2     ..... 3     ---
1482  9041              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df88 ..... $df8c
1483  9041              ;	Ctrl_4 $8c63 --- 0
1484  9041
1485  9041 CD 5D 90     2 call Guarda_movimiento_masticado
1486  9044
1487  9044 CD 69 A0     	call Movimiento
1488  9047
1489  9047 3A 62 8C     	ld a,(Ctrl_3)																					; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1490  904A CB 4F        	bit 1,a 																						; _ que corresponde a esta entidad.
1491  904C 28 E1        	jr z,1B
1492  904E
1493  904E              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1494  904E              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1495  904E
1496  904E E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1497  904F 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1498  9052
1499  9052              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1500  9052
1501  9052 CD CD A1     	call Situa_en_contador_general_de_mov_masticados
1502  9055
1503  9055              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1504  9055              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1505  9055
1506  9055 ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1507  9059
1508  9059 71           	ld (hl),c
1509  905A 23           	inc hl
1510  905B 70           	ld (hl),b
1511  905C
1512  905C C9           	ret
1513  905D
1514  905D              ; -----------------------------------------------------------------------------------
1515  905D              ;
1516  905D              ;	28/12/23
1517  905D              ;
1518  905D              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1519  905D              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1520  905D
1521  905D              Guarda_movimiento_masticado
1522  905D
1523  905D ED 73 3A 8C  	ld (Stack),sp
1524  9061 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1525  9065
1526  9065 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1527  9067 FD E5            push iy 												; Pushea Puntero_objeto.
1528  9069
1529  9069 ED 7B 3A 8C      ld sp,(Stack)
1530  906D
1531  906D 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1532  9070 23           	inc hl
1533  9071 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1534  9074
1535  9074 CD D7 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1536  9077              ;															; _ el (Contador_de_mov_masticados).
1537  9077 C9               ret
1538  9078
1539  9078              ; --------------------------------------------------------------------------------------------------------------
1540  9078              ;
1541  9078              ;	27/01/2025
1542  9078              ;
1543  9078              ;	INPUTS: IX contiene (Puntero_de_impresion)
1544  9078              ;			IY contiene (Puntero_objeto)
1545  9078
1546  9078              Calcula_Columnitas
1547  9078
1548  9078 3E 03        	ld a,3
1549  907A 32 0B 8C     	ld (Columnitas),a
1550  907D
1551  907D 2A FA 8B     	ld hl,(Posicion_actual)
1552  9080 7D           	ld a,l
1553  9081 E6 1F        	and $1f
1554  9083 A7           	and a
1555  9084 28 11        	jr z,Una_columnita
1556  9086 3D           	dec a
1557  9087 28 0A        	jr z,Dos_columnitas
1558  9089 3C           	inc a
1559  908A
1560  908A FE 1D        	cp $1d
1561  908C D8           	ret c
1562  908D C8           	ret z
1563  908E
1564  908E 3C           	inc a
1565  908F E6 1F        	and $1f
1566  9091 28 04        	jr z,Una_columnita
1567  9093
1568  9093 3E 02        Dos_columnitas ld a,2
1569  9095 18 02        	jr 1F
1570  9097 3E 01        Una_columnita ld a,1
1571  9099 32 0B 8C     1 ld (Columnitas),a
1572  909C
1573  909C C9           	ret
1574  909D
1575  909D              ; --------------------------------------------------------------------------------------------------------------
1576  909D              ;
1577  909D              ;	26/01/25
1578  909D              ;
1579  909D              ;	INPUTS: IX contiene (Puntero_de_impresion)
1580  909D              ;			IY contiene (Puntero_objeto)
1581  909D
1582  909D              Codifica_Puntero_de_impresion
1583  909D
1584  909D              ; 	En 1er lugar verificamos si estamos en zona de video, RET si no es así.
1585  909D
1586  909D DD 7C        	ld a,ixh
1587  909F CB 77        	bit 6,a
1588  90A1 C8           	ret z
1589  90A2
1590  90A2              ;	Correcciones:
1591  90A2
1592  90A2              ; 	Posicion_actual $8bfa
1593  90A2              ;	CTRL_DESPLZ $8bfe
1594  90A2              ;	Puntero_DESPLZ_der $8c03
1595  90A2              ; 	Puntero_DESPLZ_izq $8c05
1596  90A2              ;	Puntero_de_almacen_de_mov_masticados $8bf1
1597  90A2              ;	Cuad_objeto $8c09
1598  90A2              ;	Columnitas $8c0b
1599  90A2              ;	Columns $8bf9
1600  90A2
1601  90A2              ;	Codificamos (Puntero_de_impresion) en función del nº de (Columnitas) a imprimir.
1602  90A2
1603  90A2 3A 0B 8C     	ld a,(Columnitas)
1604  90A5 3D           	dec a
1605  90A6 28 14        	jr z,Codificamos_una_Columnita
1606  90A8
1607  90A8 3D           	dec a
1608  90A9 28 01        	jr z,Codificamos_dos_Columnitas
1609  90AB
1610  90AB C9           	ret
1611  90AC
1612  90AC              Codificamos_dos_Columnitas
1613  90AC
1614  90AC DD 7C        	ld a,ixh
1615  90AE CB FF        	set 7,a
1616  90B0 DD 67        	ld ixh,a
1617  90B2
1618  90B2              ;	Si nos encontramos en el lado derecho de la pantalla no modificamos (Puntero_objeto).
1619  90B2
1620  90B2 3A 09 8C     1 ld a,(Cuad_objeto)
1621  90B5 E6 01        	and 1
1622  90B7 C8           	ret z
1623  90B8
1624  90B8 CD C4 90     	call Ajusta_Puntero_objeto
1625  90BB
1626  90BB C9           	ret
1627  90BC
1628  90BC              Codificamos_una_Columnita
1629  90BC
1630  90BC DD 7C        	ld a,ixh
1631  90BE CB EF        	set 5,a
1632  90C0 DD 67        	ld ixh,a
1633  90C2
1634  90C2 18 EE        	jr 1B
1635  90C4
1636  90C4              ; ----- ----- ----- ----- -----
1637  90C4
1638  90C4              Ajusta_Puntero_objeto
1639  90C4
1640  90C4 3A 0B 8C     	ld a,(Columnitas)
1641  90C7 47           	ld b,a
1642  90C8
1643  90C8 3A F9 8B     	ld a,(Columns)
1644  90CB 90           	sub b
1645  90CC C8           	ret z
1646  90CD
1647  90CD 47           	ld b,a
1648  90CE
1649  90CE FD 2C        1 inc iyl
1650  90D0 10 FC        	djnz 1B
1651  90D2
1652  90D2 FD 22 FC 8B  	ld (Puntero_objeto),iy
1653  90D6
1654  90D6 C9           	ret
1655  90D7
1656  90D7              ; --------------------------------------------------------------------------------------------------------------
1657  90D7              ;
1658  90D7              ;	12/1/24
1659  90D7              ;
1660  90D7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1661  90D7
1662  90D7              Actualiza_Puntero_de_almacen_de_mov_masticados
1663  90D7
1664  90D7 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1665  90DA 01 04 00     	ld bc,4
1666  90DD A7           	and a
1667  90DE ED 4A        	adc hl,bc
1668  90E0 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1669  90E3 C9           	ret
1670  90E4
1671  90E4              ; ------------------------------------------
1672  90E4              ;
1673  90E4              ;	23/11/24
1674  90E4              ;
1675  90E4              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1676  90E4
1677  90E4
1678  90E4              Obtenemos_puntero_de_impresion
1679  90E4
1680  90E4 DD 6E 07     	ld l,(ix+7)
1681  90E7 DD 66 08     	ld h,(ix+8)
1682  90EA
1683  90EA              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1684  90EA
1685  90EA ED 73 3A 8C  	ld (Stack),sp
1686  90EE F9           	ld sp,hl
1687  90EF
1688  90EF AF           	xor a
1689  90F0 67           	ld h,a
1690  90F1 6C           	ld l,h															; ld hl,"0"
1691  90F2
1692  90F2 D1           	pop de															; (Puntero_objeto) en DE.
1693  90F3 C1           	pop bc															; (Puntero_de_impresion) codificado en BC.
1694  90F4
1695  90F4              ; Decodificamos (Puntero_de_impresion) para almacenarlo correctamente.
1696  90F4
1697  90F4              ; ----- ----- ----- ----- -----
1698  90F4
1699  90F4              Decodifica_Puntero_de_impresion
1700  90F4
1701  90F4 3E 02        	ld a,2
1702  90F6 32 0A 8C     	ld (Columnas),a
1703  90F9
1704  90F9 CB 70        	bit 6,b
1705  90FB 28 1C        	jr z,1F 															; Entidad en ROM.
1706  90FD
1707  90FD 3C           	inc a
1708  90FE 32 0A 8C     	ld (Columnas),a
1709  9101
1710  9101              ;	(Puntero_de_impresión) codificado.
1711  9101
1712  9101 CB 78        	bit 7,b
1713  9103 28 09        	jr z,2F
1714  9105
1715  9105              ;	Decodifica 2 Columnas.
1716  9105
1717  9105 CB B8        	res 7,b
1718  9107 3E 02        	ld a,2
1719  9109 32 0A 8C     	ld (Columnas),a
1720  910C 18 0B        	jr 1F
1721  910E
1722  910E              ;	Decodifica 1 Columna.
1723  910E
1724  910E CB 68        2 bit 5,b
1725  9110 28 07        	jr z,1F
1726  9112
1727  9112 CB A8        	res 5,b
1728  9114 3E 01        	ld a,1
1729  9116 32 0A 8C     	ld (Columnas),a
1730  9119
1731  9119              ; 	Almacena (Puntero_de_impresion) en caja.
1732  9119
1733  9119 DD 71 05     1 ld (ix+5),c
1734  911C DD 70 06     	ld (ix+6),b
1735  911F
1736  911F ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1737  9123
1738  9123              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1739  9123
1740  9123 39           	add hl,sp
1741  9124 DD 75 07     	ld (ix+7),l
1742  9127 DD 74 08     	ld (ix+8),h
1743  912A
1744  912A C1           	pop bc
1745  912B
1746  912B 79           	ld a,c
1747  912C 80           	add b															; Comprueba si ya no hay datos en el almacén.
1748  912D
1749  912D ED 7B 3A 8C  	ld sp,(Stack)
1750  9131
1751  9131 CC 60 95     	call z,Reinicia_entidad_maliciosa
1752  9134
1753  9134 C9           	ret
1754  9135
1755  9135              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1756  9135              ;
1757  9135              ;	25/11/24
1758  9135
1759  9135              Cargamos_registros_con_explosion
1760  9135
1761  9135 DD 6E 07     	ld l,(ix+7)
1762  9138 DD 66 08     	ld h,(ix+8)
1763  913B CD DB 91     	call Extrae_address
1764  913E EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1765  913F
1766  913F DD 6E 05     	ld l,(ix+5)
1767  9142 DD 66 06     	ld h,(ix+6)
1768  9145
1769  9145 E5           	push hl
1770  9146 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1771  9148
1772  9148 C9           	ret
1773  9149
1774  9149
1775  9149              Cargamos_registros_con_explosion_Amadeus
1776  9149
1777  9149 2A BB 89     	ld hl,(Pamm_Amadeus)
1778  914C CD DB 91     	call Extrae_address
1779  914F
1780  914F 5D           	ld e,l
1781  9150 54           	ld d,h
1782  9151
1783  9151 DD 2A B9 89  	ld ix,(p.imp.amadeus)
1784  9155
1785  9155 C9           	ret
1786  9156
1787  9156              ; --------------------------------------------------------------------------------------------------------------
1788  9156              ;
1789  9156              ;	17/06/24
1790  9156              ;
1791  9156              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1792  9156              ;
1793  9156              ;	IX contiene el puntero de impresión.
1794  9156              ;	DE contiene (Puntero_objeto).
1795  9156
1796  9156
1797  9156              Cargamos_registros_con_mov_masticado_Amadeus
1798  9156
1799  9156 ED 73 3A 8C  	ld (Stack),sp
1800  915A ED 7B BB 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1801  915E D1           	pop de 															; DE contiene Puntero_objeto
1802  915F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1803  9161 DD 22 B9 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1804  9165 ED 7B 3A 8C  	ld sp,(Stack)
1805  9169 C9           	ret
1806  916A
1807  916A              ; ---------------------------------------------------------------------------------------------------------------------
1808  916A              ;
1809  916A              ;	18/6/24
1810  916A              ;
1811  916A              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1812  916A
1813  916A              Genera_datos_de_impresion_Amadeus
1814  916A
1815  916A 3A B8 89     	ld a,(Impacto_Amadeus)
1816  916D A7           	and a
1817  916E 20 03        	jr nz,1F
1818  9170
1819  9170              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1820  9170              ; _apuntando a la correspondiente explosión.
1821  9170
1822  9170 CD 56 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1823  9173
1824  9173 DD 7D        1 ld a,ixl
1825  9175 E6 1F        	and $1f
1826  9177 32 B5 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1827  917A
1828  917A 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1829  917D E5           	push hl
1830  917E
1831  917E 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1832  9181 22 5C 8C     	ld (Scanlines_album_SP),hl
1833  9184
1834  9184 CD 4C 96     	call Genera_datos_de_impresion
1835  9187
1836  9187 E1           	pop hl
1837  9188 22 5C 8C     	ld (Scanlines_album_SP),hl
1838  918B
1839  918B C9           	ret
1840  918C
1841  918C              ; ---------------------------------------------------------------------------------------------------------------------
1842  918C              ;
1843  918C              ;	13/03/24
1844  918C              ;
1845  918C              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1846  918C
1847  918C              Inicia_albumes_de_lineas
1848  918C
1849  918C 21 00 80     	ld hl,Scanlines_album
1850  918F 22 3E 8C     	ld (Album_de_pintado),hl
1851  9192 22 5C 8C     	ld (Scanlines_album_SP),hl
1852  9195
1853  9195 21 1A 81     	ld hl,Scanlines_album_2
1854  9198 22 40 8C     	ld (Album_de_borrado),hl
1855  919B
1856  919B C9           	ret
1857  919C
1858  919C              Inicia_albumes_de_lineas_Amadeus
1859  919C
1860  919C 21 34 82     	ld hl,Amadeus_scanlines_album
1861  919F 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1862  91A2 21 58 82     	ld hl,Amadeus_scanlines_album_2
1863  91A5 22 44 8C     	ld (Album_de_borrado_Amadeus),hl
1864  91A8
1865  91A8 C9           	ret
1866  91A9
1867  91A9              Inicia_albumes_de_disparos
1868  91A9
1869  91A9 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1870  91AC 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1871  91AF 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1872  91B2 22 48 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1873  91B5
1874  91B5 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1875  91B8 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1876  91BB 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1877  91BE
1878  91BE 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1879  91C1 22 4C 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1880  91C4
1881  91C4 C9           	ret
1882  91C5
1883  91C5              ; ---------------------------------------------------------------------------------------------------------------------
1884  91C5              ;
1885  91C5              ; 8/1/23
1886  91C5              ;
1887  91C5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1888  91C5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1889  91C5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1890  91C5
1891  91C5              ; Destruye HL y DE !!!!!
1892  91C5
1893  91C5              Inicia_punteros_de_cajas
1894  91C5
1895  91C5 21 A4 89     	ld hl,Indice_de_cajas_de_entidades
1896  91C8 CD DB 91         call Extrae_address
1897  91CB 22 2B 8C         ld (Puntero_store_caja),hl
1898  91CE 21 A6 89     	ld hl,Indice_de_cajas_de_entidades+2
1899  91D1 22 2F 8C     	ld (Indice_restore_caja),hl
1900  91D4 CD DB 91     	call Extrae_address
1901  91D7 22 2D 8C     	ld (Puntero_restore_caja),hl
1902  91DA C9               ret
1903  91DB
1904  91DB              ; *************************************************************************************************************************************************************
1905  91DB
1906  91DB              ;
1907  91DB              ; 20/10/22
1908  91DB              ;
1909  91DB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1910  91DB              ;
1911  91DB              ; Destruye el puntero y DE !!!!!
1912  91DB
1913  91DB 5E           Extrae_address ld e,(hl)
1914  91DC 23           	inc hl
1915  91DD 56           	ld d,(hl)
1916  91DE 2B           	dec hl
1917  91DF EB           	ex de,hl
1918  91E0 C9           	ret
1919  91E1
1920  91E1              ; *************************************************************************************************************************************************************
1921  91E1              ;
1922  91E1              ;	20/1/24
1923  91E1              ;
1924  91E1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1925  91E1              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1926  91E1              ;
1927  91E1              ;   Destruye HL y BC !!!!!,
1928  91E1              ;
1929  91E1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1930  91E1              ;					"0" ..... Izquierda.
1931  91E1
1932  91E1              Inicia_Puntero_objeto
1933  91E1
1934  91E1 3A 09 8C     	ld a,(Cuad_objeto)
1935  91E4 E6 01        	and 1
1936  91E6 F5           	push af
1937  91E7 CC 03 92     	call z,Inicia_puntero_objeto_izq
1938  91EA F1           	pop af
1939  91EB C8           	ret z
1940  91EC CD F0 91     	call Inicia_puntero_objeto_der
1941  91EF C9           	ret
1942  91F0
1943  91F0              ; Arrancamos desde la parte izquierda de la pantalla.
1944  91F0              ; Iniciamos (Indice_Sprite_der).
1945  91F0
1946  91F0 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1947  91F3 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1948  91F6 CD DB 91     	call Extrae_address
1949  91F9 22 FC 8B     	ld (Puntero_objeto),hl
1950  91FC
1951  91FC 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1952  91FF 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1953  9202 C9           	ret
1954  9203
1955  9203              ; Arrancamos desde la parte derecha de la pantalla.
1956  9203              ; Iniciamos (Indice_Sprite_izq).
1957  9203
1958  9203 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1959  9206 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1960  9209 CD DB 91     	call Extrae_address
1961  920C 22 FC 8B     	ld (Puntero_objeto),hl
1962  920F
1963  920F 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1964  9212 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1965  9215 C9           	ret
1966  9216
1967  9216              ; **************************************************************************************************
1968  9216              ;
1969  9216              ;	27/11/24
1970  9216              ;
1971  9216              ;	INPUT: IX contiene (Puntero_store_caja).
1972  9216              ;
1973  9216              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1974  9216
1975  9216              Salta_caja_de_entidades_vacia
1976  9216
1977  9216 DD 7E 00     	ld a,(ix+0)
1978  9219 A7           	and a
1979  921A C0           	ret nz
1980  921B
1981  921B CD 25 92     	call Incrementa_punteros_de_cajas
1982  921E DD 2A 2B 8C  	ld ix,(Puntero_store_caja)
1983  9222 18 F2        	jr Salta_caja_de_entidades_vacia
1984  9224
1985  9224 C9           	ret
1986  9225
1987  9225              ; **************************************************************************************************
1988  9225              ;
1989  9225              ;	08/05/23
1990  9225              ;
1991  9225              ;	Incrementamos los dos punteros de entidades. (+1).
1992  9225
1993  9225              Incrementa_punteros_de_cajas
1994  9225
1995  9225 2A 2D 8C     	ld hl,(Puntero_restore_caja)
1996  9228 22 2B 8C     	ld (Puntero_store_caja),hl
1997  922B 2A 2F 8C     	ld hl,(Indice_restore_caja)
1998  922E 23           	inc hl
1999  922F 23           	inc hl
2000  9230 22 2F 8C     	ld (Indice_restore_caja),hl
2001  9233 CD DB 91         call Extrae_address
2002  9236 22 2D 8C         ld (Puntero_restore_caja),hl
2003  9239 C9               ret
2004  923A
2005  923A              ; -----------------------------------------------------------
2006  923A
2007  923A              ; Teclado.
2008  923A
2009  923A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
2010  923C DB FE        	in a,($fe)
2011  923E E6 01        	and $01
2012  9240 28 02        	jr z,1f
2013  9242 18 F6        	jr Pulsa_ENTER
2014  9244 C9           1 ret
2015  9245
2016  9245              ; **************************************************************************************************
2017  9245              ;
2018  9245              ; Temporización.
2019  9245
2020  9245              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2021  9245              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2022  9245              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2023  9245              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2024  9245
2025  9245              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2026  9245              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2027  9245              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2028  9245
2029  9245              ; A partir de $4f61 no hace falta DELAY.
2030  9245
2031  9245              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2032  9245
2033  9245              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2034  9245              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2035  9245              ;	LD A,B
2036  9245              ;	AND A
2037  9245              ;	JR NZ,wait
2038  9245              ;	RET
2039  9245
2040  9245              ; ---------------------------------------------------------------------------------------------------------------
2041  9245              ;
2042  9245              ;	13/07/24
2043  9245              ;
2044  9245
2045  9245              Inicia_Shield
2046  9245
2047  9245 21 85 8C     	ld hl,Datos_Shield
2048  9248 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2049  924B
2050  924B 7E           	ld a,(hl)
2051  924C 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2052  924F
2053  924F 3E 01        	ld a,1
2054  9251 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2055  9254
2056  9254 C9           	ret
2057  9255
2058  9255              ; ---------- ---------- ---------- ---------- ----------
2059  9255              ;
2060  9255              ;	30/11/24
2061  9255              ;
2062  9255              ;	Limpia la caja de entidades de una entidad eliminada.
2063  9255              ;
2064  9255              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2065  9255              ;	MODIFY: A,BC,DE y HL.
2066  9255
2067  9255              Limpia_caja_de_entidades
2068  9255
2069  9255 DD E5        	push ix
2070  9257 E1           	pop hl
2071  9258 AF           	xor a
2072  9259 77           	ld (hl),a
2073  925A 5D           	ld e,l
2074  925B 54           	ld d,h
2075  925C 1C           	inc e
2076  925D 01 0B 00     	ld bc,11
2077  9260 ED B0        	ldir
2078  9262 C9           	ret
2079  9263
2080  9263              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2081  9263              ;
2082  9263              ;	26/01/25
2083  9263              ;
2084  9263              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2085  9263              ;
2086  9263              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2087  9263              ;
2088  9263
2089  9263              Actualiza_pantalla
2090  9263
2091  9263 3E 02        	ld a,2
2092  9265 D3 FE        	out ($fe),a
2093  9267
2094  9267 3A 62 8C     	ld a,(Ctrl_3)
2095  926A CB 57        	bit 2,a
2096  926C 28 54        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2097  926E
2098  926E              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2099  926E
2100  926E 01 00 8C     	ld bc,Indice_Sprite_der+1
2101  9271 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2102  9275
2103  9275              Borrando_entidades
2104  9275
2105  9275 2A 5C 8C     	ld hl,(Scanlines_album_SP)
2106  9278 CD DB 91     	call Extrae_address
2107  927B 24           	inc h
2108  927C 25           	dec h
2109  927D 28 14        	jr z,Pintando_entidades
2110  927F
2111  927F              ;	Borramos entidades, pero antes... indicamos (Columnas).
2112  927F
2113  927F ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2114  9283 0A           	ld a,(bc)
2115  9284 32 0B 8C     	ld (Columnitas),a
2116  9287
2117  9287 AF           	xor a
2118  9288 02           	ld (bc),a
2119  9289 0C           	inc c
2120  928A ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2121  928E
2122  928E CD 40 97     	call Pinta_Sprites
2123  9291 18 E2        	jr Borrando_entidades
2124  9293
2125  9293              Pintando_entidades
2126  9293
2127  9293              ;	Inicializamos el (Puntero_de_columnas) para el borrado, (Puntero_indice_mov).
2128  9293
2129  9293 01 00 8C     	ld bc,Indice_Sprite_der+1
2130  9296 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2131  929A
2132  929A 2A 5E 8C     	ld hl,(India_SP)
2133  929D 2C           	inc l
2134  929E CD DB 91     	call Extrae_address
2135  92A1 24           	inc h
2136  92A2 25           	dec h
2137  92A3 28 1D        	jr z,Ejecuta_escudo
2138  92A5
2139  92A5              ;	Adquiere (Columnas).
2140  92A5
2141  92A5 1C           	inc e
2142  92A6 1C           	inc e
2143  92A7
2144  92A7 1A           	ld a,(de)
2145  92A8 32 0B 8C     	ld (Columnitas),a
2146  92AB
2147  92AB ED 4B 1C 8C  	ld bc,(Puntero_indice_mov)
2148  92AF 02           	ld (bc),a
2149  92B0 0C           	inc c
2150  92B1 ED 43 1C 8C  	ld (Puntero_indice_mov),bc
2151  92B5
2152  92B5 1C           	inc e
2153  92B6 ED 53 5E 8C  	ld (India_SP),de
2154  92BA
2155  92BA CD DB 91     	call Extrae_address
2156  92BD CD 40 97     	call Pinta_Sprites
2157  92C0
2158  92C0 18 D1        	jr Pintando_entidades
2159  92C2
2160  92C2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2161  92C2
2162  92C2              Ejecuta_escudo
2163  92C2
2164  92C2 3A 8B 8C     	ld a,(Shield)
2165  92C5 A7           	and a
2166  92C6 20 34        	jr nz,Aplica_Shield
2167  92C8
2168  92C8              Borrando_Amadeus
2169  92C8
2170  92C8 21 62 8C     	ld hl,Ctrl_3
2171  92CB CB 6E        	bit 5,(hl)
2172  92CD 28 1F        	jr z,1F												; No borramos. No ha habido movimiento.
2173  92CF
2174  92CF 3E 03        	ld a,3
2175  92D1 32 0B 8C     	ld (Columnitas),a
2176  92D4
2177  92D4 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2178  92D7 CD DB 91     	call Extrae_address
2179  92DA 24           	inc h
2180  92DB 25           	dec h
2181  92DC 28 03        	jr z,Pintando_Amadeus
2182  92DE CD 40 97     	call Pinta_Sprites
2183  92E1
2184  92E1              Pintando_Amadeus
2185  92E1
2186  92E1 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2187  92E4 CD DB 91     	call Extrae_address
2188  92E7 24           	inc h
2189  92E8 25           	dec h
2190  92E9 28 03        	jr z,1F
2191  92EB CD 40 97     	call Pinta_Sprites
2192  92EE
2193  92EE              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2194  92EE
2195  92EE 21 62 8C     1 ld hl,Ctrl_3
2196  92F1 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2197  92F3 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2198  92F5 CB AE        	res 5,(hl)
2199  92F7
2200  92F7 3E 01        	ld a,1												; Borde azul.
2201  92F9 D3 FE        	out ($fe),a
2202  92FB
2203  92FB C9           	ret
2204  92FC
2205  92FC              Aplica_Shield
2206  92FC
2207  92FC              ;	Bit 1 "1" (Shield_3) Sólo borra.
2208  92FC              ;		  "0"     ""     Borra/Pinta.
2209  92FC              ;	Bit 2    ""  RET.	 No borra, no pinta.
2210  92FC
2211  92FC 21 8D 8C     	ld hl,Shield_3
2212  92FF
2213  92FF CB 5E        	bit 3,(hl)
2214  9301 20 DE        	jr nz,Pintando_Amadeus
2215  9303
2216  9303 CB 56        	bit 2,(hl)
2217  9305 20 E7        	jr nz,1B
2218  9307
2219  9307 CB 4E        	bit 1,(hl)
2220  9309 C4 10 93     	call nz,Borra_Amadeus_shield
2221  930C
2222  930C 28 BA        	jr z,Borrando_Amadeus
2223  930E 18 DE        	jr 1B
2224  9310
2225  9310              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2226  9310
2227  9310              Borra_Amadeus_shield
2228  9310
2229  9310 3A 62 8C     	ld a,(Ctrl_3)
2230  9313 CB 6F        	bit 5,a
2231  9315 28 08        	jr z,1F
2232  9317
2233  9317 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
2234  931A CD DB 91     	call Extrae_address
2235  931D 18 06        	jr 2F
2236  931F
2237  931F 2A 42 8C     1 ld hl,(Album_de_pintado_Amadeus)
2238  9322 CD DB 91     	call Extrae_address
2239  9325
2240  9325 CD 40 97     2 call Pinta_Sprites
2241  9328
2242  9328 AF           	xor a
2243  9329 3C           	inc a											; Asegura NZ en la salida de la rutina.
2244  932A
2245  932A C9           	ret
2246  932B
2247  932B              Pinta_Amadeus_shield
2248  932B
2249  932B 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2250  932E CD DB 91     	call Extrae_address
2251  9331 CD 40 97     	call Pinta_Sprites
2252  9334
2253  9334 AF           	xor a
2254  9335 3C           	inc a											; Asegura NZ en la salida de la rutina.
2255  9336
2256  9336 C9           	ret
2257  9337
2258  9337              Borra_Pinta_Amadeus_shield
2259  9337
2260  9337 CD 10 93     	call Borra_Amadeus_shield
2261  933A CD 2B 93     	call Pinta_Amadeus_shield
2262  933D C9           	ret
2263  933E
2264  933E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2265  933E              ;
2266  933E              ;	19/6/24
2267  933E              ;
2268  933E
2269  933E              Teclado
2270  933E
2271  933E              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2272  933E
2273  933E 3E F7        	ld a,$f7												; "5" para disparar.
2274  9340 DB FE        	in a,($fe)
2275  9342 E6 10        	and $10
2276  9344
2277  9344 CC 6A A5     	call z,Genera_disparo_Amadeus
2278  9347
2279  9347 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2280  9349 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2281  934B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2282  934D CC 36 A0         call z,Amadeus_a_izquierda
2283  9350
2284  9350 3E F7        	ld a,$f7
2285  9352 DB FE        	in a,($fe)
2286  9354 E6 01        	and $01
2287  9356 C8           	ret z
2288  9357
2289  9357 3E F7        	ld a,$f7
2290  9359 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2291  935B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2292  935D CC 4E A0     	call z,Amadeus_a_derecha
2293  9360
2294  9360 C9           	ret
2295  9361
2296  9361              ; ------------------------------------------------------------------------------------------------------------------------
2297  9361              ;
2298  9361              ;	06/07/24
2299  9361              ;
2300  9361
2301  9361              Genera_explosion
2302  9361
2303  9361 21 74 8C     	ld hl,Clock_explosion
2304  9364 35           	dec (hl)
2305  9365 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2306  9367
2307  9367              Borra_entidad_colisionada
2308  9367
2309  9367 CD 7E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2310  936A
2311  936A DD E5        	push ix
2312  936C CD 35 91     	call Cargamos_registros_con_explosion
2313  936F CD 4C 96     	call Genera_datos_de_impresion
2314  9372 DD E1        	pop ix
2315  9374
2316  9374 AF           	xor a
2317  9375 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2318  9376
2319  9376 C9           	ret
2320  9377
2321  9377              Siguiente_frame_explosion
2322  9377
2323  9377 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2324  9379
2325  9379              ; Avanza Frame de explosión.
2326  9379
2327  9379 DD 6E 07     	ld l,(ix+7)
2328  937C DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2329  937F
2330  937F 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2331  9382
2332  9382 79           	ld a,c
2333  9383 95           	sub l
2334  9384 20 41        	jr nz,1F
2335  9386
2336  9386
2337  9386              ; Fín de la entidad !!!!!!!!!!!!!
2338  9386              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2339  9386
2340  9386              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2341  9386              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2342  9386              ; Entidades_en_curso db 0								; Entidades en pantalla.
2343  9386
2344  9386              ; La entidad eliminada, es la última del nivel ?
2345  9386
2346  9386 3A 33 8C     	ld a,(Numero_de_entidades)
2347  9389 A7           	and a
2348  938A 28 30        	jr z,2F
2349  938C
2350  938C              ; Decrementa (Numero_de_entidades)
2351  938C
2352  938C 3D           	dec a
2353  938D 32 33 8C     	ld (Numero_de_entidades),a
2354  9390 21 35 8C     	ld hl,Entidades_en_curso
2355  9393 35           	dec (hl)
2356  9394
2357  9394              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2358  9394              ; IX apunta al 1er .db de la entidad eliminada.
2359  9394
2360  9394 2A 31 8C     	ld hl,(Puntero_indice_master)
2361  9397 CD DB 91     	call Extrae_address
2362  939A
2363  939A DD E5        	push ix
2364  939C D1           	pop de
2365  939D
2366  939D 01 0C 00     	ld bc,12
2367  93A0 ED B0        	ldir
2368  93A2
2369  93A2              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2370  93A2
2371  93A2 CD E4 90     	call Obtenemos_puntero_de_impresion
2372  93A5
2373  93A5 DD 6E 05     	ld l,(ix+5)
2374  93A8 2C           	inc l
2375  93A9 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2376  93AC
2377  93AC CD 20 96     	call Genera_coordenadas
2378  93AF
2379  93AF ED 4B EB 8B  	ld bc,(Coordenada_X)
2380  93B3
2381  93B3 DD 71 01     	ld (ix+1),c
2382  93B6 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2383  93B9
2384  93B9 AF           	xor a
2385  93BA 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2386  93BB
2387  93BB C9           	ret
2388  93BC
2389  93BC              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2390  93BC
2391  93BC 21 34 8C     2 ld hl,Numero_parcial_de_entidades
2392  93BF 35           	dec (hl)
2393  93C0 23           	inc hl
2394  93C1 35           	dec (hl)
2395  93C2
2396  93C2 CD 55 92     	call Limpia_caja_de_entidades
2397  93C5 18 A0        	jr Borra_entidad_colisionada
2398  93C7
2399  93C7 23           1 inc hl
2400  93C8 23           	inc hl
2401  93C9
2402  93C9 DD 75 07     	ld (ix+7),l
2403  93CC DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2404  93CF
2405  93CF 18 96        	jr Borra_entidad_colisionada
2406  93D1
2407  93D1              ; ----- ----- ----- ----- -----
2408  93D1
2409  93D1              Genera_explosion_Amadeus
2410  93D1
2411  93D1 21 75 8C     	ld hl,Clock_explosion_Amadeus
2412  93D4 35           	dec (hl)
2413  93D5 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2414  93D7
2415  93D7              Borra_Amadeus_impactado
2416  93D7
2417  93D7 CD E8 8E     	call Change_Amadeus
2418  93DA CD 49 91     	call Cargamos_registros_con_explosion_Amadeus
2419  93DD CD 6A 91     	call Genera_datos_de_impresion_Amadeus
2420  93E0
2421  93E0 21 62 8C     	ld hl,Ctrl_3
2422  93E3 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2423  93E5
2424  93E5 AF           	xor a
2425  93E6 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2426  93E7
2427  93E7 C9           	ret
2428  93E8
2429  93E8              Siguiente_frame_explosion_Amadeus
2430  93E8
2431  93E8 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2432  93EA
2433  93EA              ; Avanza Frame de explosión.
2434  93EA
2435  93EA 2A BB 89     	ld hl,(Pamm_Amadeus)
2436  93ED 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2437  93F0
2438  93F0 79           	ld a,c
2439  93F1 95           	sub l
2440  93F2 20 0B        	jr nz,1F
2441  93F4
2442  93F4              ; Fín de Amadeus !!!!!!!!!!!!!
2443  93F4              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2444  93F4
2445  93F4 AF           	xor a
2446  93F5 32 B8 89     	ld (Impacto_Amadeus),a
2447  93F8 21 62 8C     	ld hl,Ctrl_3
2448  93FB CB F6        	set 6,(hl)
2449  93FD
2450  93FD 18 D8        	jr Borra_Amadeus_impactado
2451  93FF
2452  93FF 23           1 inc hl
2453  9400 23           	inc hl
2454  9401 22 BB 89     	ld (Pamm_Amadeus),hl
2455  9404 18 D1        	jr Borra_Amadeus_impactado
2456  9406
2457  9406              ; ---------------------------------------------------------------
2458  9406
2459  9406              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9406              ; ******************************************************************************************************************************************************************************************
   2+ 9406              ;
   3+ 9406              ;   21/04/24
   4+ 9406              ;
   5+ 9406              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9406              ;   (XOR) bit a bit.
   7+ 9406              ;
   8+ 9406              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9406
  10+ 9406              Derivando_RND
  11+ 9406
  12+ 9406 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9409
  14+ 9409 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 940B C5               push bc
  16+ 940C              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 940C 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 940F              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 940F
  20+ 940F A7           6 and a                                 ; Carry a "0".
  21+ 9410 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9412 30 02            jr nc,1F
  23+ 9414
  24+ 9414 CB C1            set 0,c
  25+ 9416
  26+ 9416 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9417 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9419 5F               ld e,a
  29+ 941A
  30+ 941A 7A               ld a,d
  31+ 941B E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 941D 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 941F
  34+ 941F CB 3F            srl a
  35+ 9421
  36+ 9421 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9422
  38+ 9422 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9423 28 04            jr z,4F
  40+ 9425
  41+ 9425 CB FF            set 7,a
  42+ 9427 18 02            jr 5F
  43+ 9429
  44+ 9429 CB BF        4 res 7,a
  45+ 942B
  46+ 942B CB 21        5 sla c
  47+ 942D 10 E0            djnz 6B
  48+ 942F
  49+ 942F 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9430
  51+ 9430 77               ld (hl),a
  52+ 9431 23               inc hl
  53+ 9432 C1               pop bc
  54+ 9433 10 D4            djnz 3B
  55+ 9435
  56+ 9435 C9               ret
  57+ 9436
  58+ 9436
  59+ 9436
# file closed: RND_Derivando.asm
2460  9436              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9436              ;---------------------------------------------------------------------------------------------------------------
   2+ 9436              ;
   3+ 9436              ;   13/11/24
   4+ 9436
   5+ 9436              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9436
   7+ 9436              Genera_movimientos_masticados_del_nivel
   8+ 9436
   9+ 9436              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9436
  11+ 9436              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9436              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9436              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9436
  15+ 9436 2D           	dec l
  16+ 9437 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9438 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9439 4E           	ld c,(hl)
  19+ 943A
  20+ 943A E5           1 push hl														; Push (Datos_de_nivel).
  21+ 943B C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 943C
  23+ 943C              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 943C
  25+ 943C 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 943D
  27+ 943D CD 7B 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9440
  29+ 9440              ;	Caja Master inicializada ???
  30+ 9440
  31+ 9440 7E           	ld a,(hl)
  32+ 9441 A7           	and a
  33+ 9442 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9444
  35+ 9444              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9444
  37+ 9444 C1           	pop bc
  38+ 9445 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9446 C5           	push bc
  40+ 9447
  41+ 9447 CD 1A 95     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 944A CD AE 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 944D
  44+ 944D 3A EA 8B     	ld a,(Tipo)
  45+ 9450 CD 8B 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9453
  47+ 9453              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9453
  49+ 9453              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9453              ;	ld a,(hl)
  51+ 9453              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9453
  53+ 9453              ;	ld hl,Posicion_inicio
  54+ 9453              ;	ld (hl),a
  55+ 9453
  56+ 9453              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9453              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9453
  59+ 9453 CD 22 90     	call Construye_movimientos_masticados_entidad
  60+ 9456
  61+ 9456 2A 31 8C     	ld hl,(Puntero_indice_master)
  62+ 9459 CD DB 91     	call Extrae_address
  63+ 945C
  64+ 945C 5D           	ld e,l
  65+ 945D 54           	ld d,h
  66+ 945E
  67+ 945E CD DB 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9461
  69+ 9461              Movimientos_masticados_construidos
  70+ 9461
  71+ 9461 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9462
  73+ 9462 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9463 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9464
  76+ 9464 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9465 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9467
  79+ 9467 C9           	ret
  80+ 9468
  81+ 9468              ;---------------------------------------------------------------------------------------------------------------
  82+ 9468              ;
  83+ 9468              ;   9/11/24
  84+ 9468              ;
  85+ 9468              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9468              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9468              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9468              ;	_ de la 1ª entidad del Nivel.
  89+ 9468              ;
  90+ 9468              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9468
  92+ 9468              ;	MODIFICA: HL,DE y A.
  93+ 9468              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9468
  95+ 9468              Inicializa_1er_Nivel
  96+ 9468
  97+ 9468              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9468
  99+ 9468 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 946B CD DB 91     	call Extrae_address
 101+ 946E ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9472
 103+ 9472 7E           	ld a,(hl)
 104+ 9473 32 33 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9476
 106+ 9476 2C           	inc l
 107+ 9477 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 947A
 109+ 947A C9           	ret
 110+ 947B
 111+ 947B              ; ----------------------
 112+ 947B              ;
 113+ 947B              ;	13/11/24
 114+ 947B              ;
 115+ 947B
 116+ 947B              Situa_en_Caja_Master
 117+ 947B
 118+ 947B CD 99 95         call Calcula_salto_en_BC
 119+ 947E 21 5E 89         ld hl,Indice_de_cajas_master
 120+ 9481 A7               and a
 121+ 9482 ED 4A            adc hl,bc
 122+ 9484 22 31 8C       	ld (Puntero_indice_master),hl
 123+ 9487 CD DB 91     	call Extrae_address
 124+ 948A C9           	ret
 125+ 948B
 126+ 948B              ; ----------------------
 127+ 948B
 128+ 948B              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 948B              ; 	ld bc,4
 130+ 948B              ; 	ldir
 131+ 948B              ; 	ret
 132+ 948B
 133+ 948B 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 948C CD 99 95         call Calcula_salto_en_BC
 135+ 948F 21 1E 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9492 A7               and a
 137+ 9493 ED 4A            adc hl,bc
 138+ 9495 CD DB 91         call Extrae_address
 139+ 9498 22 1C 8C         ld (Puntero_indice_mov),hl
 140+ 949B C9               ret
 141+ 949C
 142+ 949C              ;---------------------------------------------------------------------------------------------------------------
 143+ 949C              ;
 144+ 949C              ;   13/11/24
 145+ 949C              ;
 146+ 949C              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 949C
 148+ 949C
 149+ 949C              Prepara_Cajas_de_Entidades
 150+ 949C
 151+ 949C              ; Preparamos los punteros de las cajas de entidades:
 152+ 949C
 153+ 949C CD C5 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 949F              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 949F CD E4 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 94A2
 157+ 94A2 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 94A5
 159+ 94A5              ; En este punto:
 160+ 94A5              ;
 161+ 94A5              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 94A5              ; B contiene (Numero_parcial_de_entidades).
 163+ 94A5
 164+ 94A5 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 94A6
 166+ 94A6 7E           	ld a,(hl)
 167+ 94A7
 168+ 94A7 CD 7B 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 94AA
 170+ 94AA ED 5B 2B 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 94AE
 172+ 94AE D5           	push de
 173+ 94AF DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 94B1
 175+ 94B1 01 0C 00     	ld bc,12
 176+ 94B4 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 94B6              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 94B6
 179+ 94B6              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 94B6              ;
 181+ 94B6              ;
 182+ 94B6              ; ------------------------------------------------------ IX
 183+ 94B6              ; ------------------------------------------------------ IX
 184+ 94B6              ; ------------------------------------------------------ IX
 185+ 94B6              ; ------------------------------------------------------ IX
 186+ 94B6
 187+ 94B6 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 94B8
 189+ 94B8 CD E4 90     	call Obtenemos_puntero_de_impresion
 190+ 94BB
 191+ 94BB DD 6E 05     	ld l,(ix+5)
 192+ 94BE DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 193+ 94C1
 194+ 94C1 D5           	push de														; Push (Puntero_objeto).
 195+ 94C2 E5           	push hl														; Push (Puntero_de_impresion).
 196+ 94C3
 197+ 94C3 CD 20 96     	call Genera_coordenadas
 198+ 94C6
 199+ 94C6 ED 4B EB 8B  	ld bc,(Coordenada_X)
 200+ 94CA
 201+ 94CA DD 71 01     	ld (ix+1),c
 202+ 94CD DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 203+ 94D0
 204+ 94D0 CD 7E 8F      	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 205+ 94D3
 206+ 94D3 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 207+ 94D5 D1           	pop de														; Pop (Puntero_objeto) en DE.
 208+ 94D6
 209+ 94D6 CD 4C 96     	call Genera_datos_de_impresion
 210+ 94D9
 211+ 94D9 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 212+ 94DB
 213+ 94DB              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 94DB
 215+ 94DB CD 52 95     	call Decrementa_Contador_de_mov_masticados
 216+ 94DE CD 2F 95     	call Limpiamos_bandeja_DRAW
 217+ 94E1 CD 25 92     	call Incrementa_punteros_de_cajas
 218+ 94E4
 219+ 94E4              ; Siguiente entidad del Nivel.
 220+ 94E4
 221+ 94E4 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 222+ 94E7 23           	inc hl 														; _ entidad del Nivel.
 223+ 94E8
 224+ 94E8 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 225+ 94E9
 226+ 94E9 10 BA        	djnz 1B
 227+ 94EB
 228+ 94EB C9           	ret
 229+ 94EC
 230+ 94EC              ; -------------------------------------------------------------------------------------------------------------------
 231+ 94EC              ;
 232+ 94EC              ;	27/5/24
 233+ 94EC              ;
 234+ 94EC              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 235+ 94EC              ;
 236+ 94EC
 237+ 94EC              ; 	Cargamos la definición de Amadeus en DRAW.
 238+ 94EC              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 239+ 94EC
 240+ 94EC 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 241+ 94EF CD AE 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 242+ 94F2
 243+ 94F2
 244+ 94F2              Construye_movimientos_masticados_Amadeus
 245+ 94F2
 246+ 94F2 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 247+ 94F5 CD D7 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 248+ 94F8              ;															; _ el (Contador_de_mov_masticados).
 249+ 94F8 CD E1 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 250+ 94FB              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 251+ 94FB
 252+ 94FB              ; Generamos movimientos masticados de Amadeus.
 253+ 94FB
 254+ 94FB 06 79        	ld b,121												; $0079, 121d.
 255+ 94FD
 256+ 94FD C5           1 push bc
 257+ 94FE CD D2 99     	call Draw
 258+ 9501 CD 5D 90     	call Guarda_movimiento_masticado
 259+ 9504
 260+ 9504 CD 6C 9D     	call Mov_right
 261+ 9507 CD 6C 9D     	call Mov_right											; Amadeus se mueve x2 pixel.
 262+ 950A
 263+ 950A C1           	pop bc
 264+ 950B 10 F0        	djnz 1B
 265+ 950D
 266+ 950D              ; Todos los movimientos masticados de Amadeus se han creado.
 267+ 950D
 268+ 950D              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 269+ 950D              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 270+ 950D
 271+ 950D 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 272+ 9510 01 08 00     	ld bc,8
 273+ 9513 A7           	and a
 274+ 9514 ED 42        	sbc hl,bc
 275+ 9516 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 276+ 9519
 277+ 9519 C9           	ret
 278+ 951A
 279+ 951A              ; ---------------------------------------------------------------------
 280+ 951A              ;
 281+ 951A              ;	10/02/24
 282+ 951A              ;
 283+ 951A              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 284+ 951A              ;
 285+ 951A              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 286+ 951A
 287+ 951A              Definicion_segun_tipo
 288+ 951A
 289+ 951A CD 99 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 290+ 951D 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 291+ 9520 CD A4 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 292+ 9523 C9           	ret
 293+ 9524
 294+ 9524              ; ---------------------------------------------------------------------
 295+ 9524              ;
 296+ 9524              ;	6/7/24
 297+ 9524
 298+ 9524
 299+ 9524              Store_Restore_cajas
 300+ 9524
 301+ 9524 ED 5B 2B 8C  	ld de,(Puntero_store_caja)
 302+ 9528 CD DB 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 303+ 952B CD 25 92     	call Incrementa_punteros_de_cajas
 304+ 952E C9           	ret
 305+ 952F
 306+ 952F              ; ---------------------------------------------------------------------
 307+ 952F              ;
 308+ 952F              ;	23/6/24
 309+ 952F              ;
 310+ 952F              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 311+ 952F              ;
 312+ 952F              ;	MODIFY: HL
 313+ 952F
 314+ 952F              Limpiamos_bandeja_DRAW
 315+ 952F
 316+ 952F ED 73 3A 8C  	ld (Stack),sp
 317+ 9533 31 10 8C     	ld sp,Vel_left
 318+ 9536
 319+ 9536 AF           	xor a
 320+ 9537 67           	ld h,a
 321+ 9538 6F           	ld l,a
 322+ 9539
 323+ 9539 E5           	push hl
 324+ 953A E5           	push hl
 325+ 953B E5           	push hl
 326+ 953C E5           	push hl
 327+ 953D E5           	push hl
 328+ 953E E5           	push hl
 329+ 953F E5           	push hl
 330+ 9540 E5           	push hl
 331+ 9541 E5           	push hl
 332+ 9542 E5           	push hl
 333+ 9543 E5           	push hl
 334+ 9544 E5           	push hl
 335+ 9545 E5           	push hl
 336+ 9546 E5           	push hl
 337+ 9547 E5           	push hl
 338+ 9548 E5           	push hl
 339+ 9549 E5           	push hl
 340+ 954A E5           	push hl
 341+ 954B
 342+ 954B 33           	inc sp
 343+ 954C
 344+ 954C E5           	push hl
 345+ 954D ED 7B 3A 8C  	ld sp,(Stack)
 346+ 9551
 347+ 9551 C9           	ret
 348+ 9552
 349+ 9552              ; ---------------------------------------------------------------------
 350+ 9552              ;
 351+ 9552              ;	23/11/24
 352+ 9552              ;
 353+ 9552              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 354+ 9552
 355+ 9552              Decrementa_Contador_de_mov_masticados
 356+ 9552
 357+ 9552 DD 6E 09     	ld l,(ix+9)
 358+ 9555 DD 66 0A     	ld h,(ix+10)
 359+ 9558
 360+ 9558 2B           	dec hl
 361+ 9559
 362+ 9559 DD 75 09     	ld (ix+9),l
 363+ 955C DD 74 0A     	ld (ix+10),h
 364+ 955F
 365+ 955F C9           	ret
 366+ 9560
 367+ 9560              ; ---------------------------------------------------------------------
 368+ 9560              ;
 369+ 9560              ;	24/11/24
 370+ 9560
 371+ 9560              Reinicia_entidad_maliciosa
 372+ 9560
 373+ 9560              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 374+ 9560
 375+ 9560 CD CD A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 376+ 9563 CD DA A1     	call Transfiere_datos_de_contadores
 377+ 9566
 378+ 9566              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 379+ 9566
 380+ 9566 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 381+ 9569 CD 1A 95     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 382+ 956C
 383+ 956C 7D           	ld a,l
 384+ 956D C6 0B        	add 11
 385+ 956F 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 386+ 9570
 387+ 9570 CD DB 91     	call Extrae_address
 388+ 9573
 389+ 9573 DD 75 07     	ld (ix+7),l
 390+ 9576 DD 74 08     	ld (ix+8),h
 391+ 9579
 392+ 9579 CD E4 90     	call Obtenemos_puntero_de_impresion
 393+ 957C
 394+ 957C              ; Incrementa (Contador_de_vueltas)x2.
 395+ 957C              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 396+ 957C
 397+ 957C              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 398+ 957C              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 399+ 957C              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 400+ 957C              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 401+ 957C              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 402+ 957C
 403+ 957C DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 404+ 9580
 405+ 9580 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 406+ 9583 CB 2F        	sra a
 407+ 9585 CB 2F        	sra a
 408+ 9587
 409+ 9587 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 410+ 958A
 411+ 958A 3E 40        	ld a,$40
 412+ 958C DD BE 03     	cp (ix+3)
 413+ 958F C0           	ret nz
 414+ 9590
 415+ 9590              ; Límitador.
 416+ 9590
 417+ 9590              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 418+ 9590
 419+ 9590 DD CB 03 2E  	sra (ix+3)
 420+ 9594 DD CB 0B 2E  	sra (ix+11)
 421+ 9598
 422+ 9598 C9           	ret
 423+ 9599
 424+ 9599              ;	------------------------------------------------------------------------------------
 425+ 9599              ;
 426+ 9599              ;	09/11/24
 427+ 9599              ;
 428+ 9599              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 9599              ;
 430+ 9599              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 9599              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 9599
 433+ 9599 A7           Calcula_salto_en_BC and a
 434+ 959A 28 04        	jr z,1F
 435+ 959C CB 27        	sla a
 436+ 959E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 95A0 4F           1 ld c,a
 438+ 95A1 06 00        	ld b,0
 439+ 95A3 C9           	ret
 440+ 95A4
 441+ 95A4              ; ------------------------------------------------------------------
 442+ 95A4              ;
 443+ 95A4              ;	19/1/24
 444+ 95A4              ;
 445+ 95A4              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 95A4              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 95A4
 448+ 95A4 A7           Situa_en_datos_de_definicion and a
 449+ 95A5 ED 4A        	adc hl,bc
 450+ 95A7 CD DB 91     	call Extrae_address
 451+ 95AA 22 38 8C         ld (Datos_de_entidad),hl
 452+ 95AD C9           	ret
 453+ 95AE
 454+ 95AE              ; ----------------------------------------------------------------------------------------------------------
 455+ 95AE              ;
 456+ 95AE              ;	24/6/24
 457+ 95AE              ;
 458+ 95AE              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 459+ 95AE              ;	_ de entidad.
 460+ 95AE              ;
 461+ 95AE              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 462+ 95AE              ;
 463+ 95AE              ;
 464+ 95AE              ;	MODIFICA: HL,DE y BC
 465+ 95AE
 466+ 95AE
 467+ 95AE              Definicion_de_entidad_a_bandeja_DRAW
 468+ 95AE
 469+ 95AE 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 470+ 95B1 7E           	ld a,(hl) 									; Volcamos Tipo.
 471+ 95B2 12           	ld (de),a
 472+ 95B3 23           	inc hl
 473+ 95B4              ;
 474+ 95B4 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 475+ 95B7 01 02 00     	ld bc,2
 476+ 95BA ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 477+ 95BC              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 478+ 95BC 11 ED 8B     	ld de,Contador_de_vueltas
 479+ 95BF 7E           	ld a,(hl)
 480+ 95C0 12           	ld (de),a
 481+ 95C1 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 482+ 95C2
 483+ 95C2 11 FF 8B     	ld de,Indice_Sprite_der
 484+ 95C5 01 04 00     	ld bc,4
 485+ 95C8 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 486+ 95CA
 487+ 95CA 11 07 8C     	ld de,Posicion_inicio
 488+ 95CD 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 489+ 95D0 ED B0        	ldir 									; Vuelco (Frames_explosion).
 490+ 95D2
 491+ 95D2 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 492+ 95D5 01 02 00     	ld bc,2
 493+ 95D8 ED B0        	ldir
 494+ 95DA
 495+ 95DA C9           	ret
 496+ 95DB
 497+ 95DB              ; ----------------------------------------------------------------------------------------------------------
 498+ 95DB              ;
 499+ 95DB              ;	1/8/24
 500+ 95DB              ;
 501+ 95DB
 502+ 95DB              Parametros_de_bandeja_DRAW_a_caja
 503+ 95DB
 504+ 95DB 21 EA 8B     	ld hl,Bandeja_DRAW
 505+ 95DE 01 0C 00     	ld bc,12
 506+ 95E1 ED B0        	ldir
 507+ 95E3 C9           	ret
 508+ 95E4
 509+ 95E4              ;---------------------------------------------------------------------------------------------------------------
 510+ 95E4              ;
 511+ 95E4              ;	13/11/24
 512+ 95E4              ;
 513+ 95E4              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ 95E4              ;
 515+ 95E4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 516+ 95E4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 517+ 95E4
 518+ 95E4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 519+ 95E4              ;			- Actualiza (Numero_de_entidades).
 520+ 95E4
 521+ 95E4              ;	MODIFICA: A y B.
 522+ 95E4
 523+ 95E4
 524+ 95E4              Inicializa_Numero_parcial_de_entidades
 525+ 95E4
 526+ 95E4 3A 33 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 527+ 95E7 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 528+ 95E9 38 0E        	jr c,1F
 529+ 95EB 28 0C        	jr z,1F
 530+ 95ED
 531+ 95ED              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 532+ 95ED              ; Actualizamos variables.
 533+ 95ED
 534+ 95ED D6 06        	sub 6
 535+ 95EF 32 33 8C     	ld (Numero_de_entidades),a
 536+ 95F2 3E 06        	ld a,6
 537+ 95F4 32 34 8C     	ld (Numero_parcial_de_entidades),a
 538+ 95F7 47           	ld b,a
 539+ 95F8 C9           	ret
 540+ 95F9
 541+ 95F9              ; El nº total de entidades no supera el nº de cajas de entidades.
 542+ 95F9              ; (Numero_de_entidades)="0".
 543+ 95F9
 544+ 95F9 32 34 8C     1 ld (Numero_parcial_de_entidades),a
 545+ 95FC 47           	ld b,a
 546+ 95FD AF           	xor a
 547+ 95FE 32 33 8C     	ld (Numero_de_entidades),a
 548+ 9601 C9           	ret
 549+ 9602
# file closed: Rutinas_de_inicio_y_niveles.asm
2461  9602              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9602              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9602              ;
   3+ 9602              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9602              ;
   5+ 9602              ; *****************************************************************************************************************************************************************************************
   6+ 9602              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9602
   8+ 9602 7C           calcula_tercio ld a,h
   9+ 9603 E6 18        	and $18
  10+ 9605 CB 2F        	sra a
  11+ 9607 CB 2F        	sra a
  12+ 9609 CB 2F        	sra a
  13+ 960B C9           	ret
  14+ 960C
# file closed: calcula_tercio.asm
2462  960C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 960C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 960C              ;
   3+ 960C              ;
   4+ 960C              ;	CLS.
   5+ 960C              ;
   6+ 960C              ;	Limpia la pantalla y define sus atributos.
   7+ 960C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 960C              ;
   9+ 960C              ;	COLORES: 0 ..... NEGRO
  10+ 960C              ;    		 1 ..... AZUL
  11+ 960C              ; 			 2 ..... ROJO
  12+ 960C              ;			 3 ..... MAGENTA
  13+ 960C              ; 			 4 ..... VERDE
  14+ 960C              ; 			 5 ..... CIAN
  15+ 960C              ;			 6 ..... AMARILLO
  16+ 960C              ; 			 7 ..... BLANCO
  17+ 960C              ;
  18+ 960C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 960C              ;
  20+ 960C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 960C
  22+ 960C
  23+ 960C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 960F 11 01 40     	LD DE,$4001
  25+ 9612 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9615 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9617 ED B0        	LDIR
  28+ 9619 01 FF 02     	LD BC,767
  29+ 961C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 961D ED B0        	LDIR
  31+ 961F C9           	ret
  32+ 9620
# file closed: Cls.asm
2463  9620              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9620              ; ------------------------------------------------------------------------
   2+ 9620              ;
   3+ 9620              ;	30/1/24
   4+ 9620              ;
   5+ 9620              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9620              ;	Fila superior "0", Columna izquierda "0".
   7+ 9620              ;
   8+ 9620              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9620              ;
  10+ 9620              ;	Modifica: A,BC y DE.
  11+ 9620
  12+ 9620              Genera_coordenadas
  13+ 9620
  14+ 9620 7D           	ld a,l
  15+ 9621 E6 1F        	and $1f
  16+ 9623
  17+ 9623 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9626
  19+ 9626 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9627 FE 40        	cp $40
  21+ 9629 38 1C        	jr c,4F
  22+ 962B
  23+ 962B CD 02 96     	call calcula_tercio
  24+ 962E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 962F
  26+ 962F 1E 00        	ld e,0
  27+ 9631 7D           	ld a,l
  28+ 9632 E6 E0        	and $e0
  29+ 9634 28 01        	jr z,1F
  30+ 9636 04           	inc b
  31+ 9637
  32+ 9637 04           1 inc b
  33+ 9638 05           	dec b
  34+ 9639 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 963B              ;														; _ , salimos.
  36+ 963B 1C           3 inc e
  37+ 963C D6 20        	sub 32
  38+ 963E 20 FB        	jr nz,3B
  39+ 9640 10 F5        	djnz 1B
  40+ 9642
  41+ 9642 7B           2 ld a,e
  42+ 9643 32 EC 8B     	ld (Coordenada_y),a
  43+ 9646 C9           	ret
  44+ 9647
  45+ 9647 AF           4 xor a
  46+ 9648 32 EC 8B     	ld (Coordenada_y),a
  47+ 964B C9           	ret
  48+ 964C
# file closed: Genera_coordenadas.asm
2464  964C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 964C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 964C              ;
   3+ 964C              ;	20/09/24
   4+ 964C              ;
   5+ 964C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 964C              ;   DE contiene Puntero_objeto.
   7+ 964C              ;   IX contiene el Puntero de impresión.
   8+ 964C
   9+ 964C              Genera_datos_de_impresion
  10+ 964C
  11+ 964C ED 73 3A 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9650
  13+ 9650 2A 5C 8C         ld hl,(Scanlines_album_SP)
  14+ 9653
  15+ 9653 3E 05            ld a,5
  16+ 9655 85               add l
  17+ 9656 6F               ld l,a
  18+ 9657
  19+ 9657 F9               ld sp,hl
  20+ 9658 22 5C 8C         ld (Scanlines_album_SP),hl
  21+ 965B
  22+ 965B 21 00 00         ld hl,0
  23+ 965E
  24+ 965E DD E5            push ix
  25+ 9660 3B               dec sp
  26+ 9661 ED 7A            adc hl,sp
  27+ 9663 D5               push de
  28+ 9664
  29+ 9664              ; Recuperamos SP.
  30+ 9664
  31+ 9664 ED 7B 3A 8C      ld sp,(Stack)
  32+ 9668
  33+ 9668 E5               push hl
  34+ 9669 F1               pop af
  35+ 966A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 966B
  37+ 966B              ; Tenemos el encabezado listo.
  38+ 966B              ; Preparamos registros para generar los scanlines.
  39+ 966B
  40+ 966B DD E5            push ix
  41+ 966D E1               pop hl                                          ; 1er scanline en HL.
  42+ 966E
  43+ 966E ED 5B 5C 8C      ld de,(Scanlines_album_SP)
  44+ 9672
  45+ 9672              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9672              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9672
  48+ 9672 7C               ld a,h
  49+ 9673 FE 50            cp $50
  50+ 9675 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9677
  52+ 9677 20 05            jr nz,2F
  53+ 9679
  54+ 9679 7D               ld a,l
  55+ 967A FE E0            cp $e0
  56+ 967C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 967E
  58+ 967E 7D           2 ld a,l
  59+ 967F FE C0            cp $c0
  60+ 9681 D2 17 97         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9684
  62+ 9684              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9684
  64+ 9684 CD B4 9C         call NextScan
  65+ 9687 EB               ex de,hl
  66+ 9688
  67+ 9688 73               ld (hl),e
  68+ 9689 23               inc hl
  69+ 968A 72               ld (hl),d
  70+ 968B 23               inc hl
  71+ 968C
  72+ 968C EB               ex de,hl
  73+ 968D
  74+ 968D CD B4 9C         call NextScan
  75+ 9690 EB               ex de,hl
  76+ 9691
  77+ 9691 73               ld (hl),e
  78+ 9692 23               inc hl
  79+ 9693 72               ld (hl),d
  80+ 9694 23               inc hl
  81+ 9695
  82+ 9695 EB               ex de,hl
  83+ 9696
  84+ 9696 CD B4 9C         call NextScan
  85+ 9699 EB               ex de,hl
  86+ 969A
  87+ 969A 73               ld (hl),e
  88+ 969B 23               inc hl
  89+ 969C 72               ld (hl),d
  90+ 969D 23               inc hl
  91+ 969E
  92+ 969E EB               ex de,hl
  93+ 969F
  94+ 969F CD B4 9C         call NextScan
  95+ 96A2 EB               ex de,hl
  96+ 96A3
  97+ 96A3 73               ld (hl),e
  98+ 96A4 23               inc hl
  99+ 96A5 72               ld (hl),d
 100+ 96A6 23               inc hl
 101+ 96A7
 102+ 96A7 EB               ex de,hl
 103+ 96A8
 104+ 96A8 CD B4 9C         call NextScan
 105+ 96AB EB               ex de,hl
 106+ 96AC
 107+ 96AC 73               ld (hl),e
 108+ 96AD 23               inc hl
 109+ 96AE 72               ld (hl),d
 110+ 96AF 23               inc hl
 111+ 96B0
 112+ 96B0 EB               ex de,hl
 113+ 96B1
 114+ 96B1 CD B4 9C         call NextScan
 115+ 96B4 EB               ex de,hl
 116+ 96B5
 117+ 96B5 73               ld (hl),e
 118+ 96B6 23               inc hl
 119+ 96B7 72               ld (hl),d
 120+ 96B8 23               inc hl
 121+ 96B9
 122+ 96B9 EB               ex de,hl
 123+ 96BA
 124+ 96BA CD B4 9C         call NextScan
 125+ 96BD EB               ex de,hl
 126+ 96BE
 127+ 96BE 73               ld (hl),e
 128+ 96BF 23               inc hl
 129+ 96C0 72               ld (hl),d
 130+ 96C1 23               inc hl
 131+ 96C2
 132+ 96C2 EB               ex de,hl
 133+ 96C3
 134+ 96C3 CD B4 9C         call NextScan
 135+ 96C6 EB               ex de,hl
 136+ 96C7
 137+ 96C7 73               ld (hl),e
 138+ 96C8 23               inc hl
 139+ 96C9 72               ld (hl),d
 140+ 96CA 23               inc hl
 141+ 96CB
 142+ 96CB EB               ex de,hl
 143+ 96CC
 144+ 96CC CD B4 9C         call NextScan
 145+ 96CF EB               ex de,hl
 146+ 96D0
 147+ 96D0 73               ld (hl),e
 148+ 96D1 23               inc hl
 149+ 96D2 72               ld (hl),d
 150+ 96D3 23               inc hl
 151+ 96D4
 152+ 96D4 EB               ex de,hl
 153+ 96D5
 154+ 96D5 CD B4 9C         call NextScan
 155+ 96D8 EB               ex de,hl
 156+ 96D9
 157+ 96D9 73               ld (hl),e
 158+ 96DA 23               inc hl
 159+ 96DB 72               ld (hl),d
 160+ 96DC 23               inc hl
 161+ 96DD
 162+ 96DD EB               ex de,hl
 163+ 96DE
 164+ 96DE CD B4 9C         call NextScan
 165+ 96E1 EB               ex de,hl
 166+ 96E2
 167+ 96E2 73               ld (hl),e
 168+ 96E3 23               inc hl
 169+ 96E4 72               ld (hl),d
 170+ 96E5 23               inc hl
 171+ 96E6
 172+ 96E6 EB               ex de,hl
 173+ 96E7
 174+ 96E7 CD B4 9C         call NextScan
 175+ 96EA EB               ex de,hl
 176+ 96EB
 177+ 96EB 73               ld (hl),e
 178+ 96EC 23               inc hl
 179+ 96ED 72               ld (hl),d
 180+ 96EE 23               inc hl
 181+ 96EF
 182+ 96EF EB               ex de,hl
 183+ 96F0
 184+ 96F0 CD B4 9C         call NextScan
 185+ 96F3 EB               ex de,hl
 186+ 96F4
 187+ 96F4 73               ld (hl),e
 188+ 96F5 23               inc hl
 189+ 96F6 72               ld (hl),d
 190+ 96F7 23               inc hl
 191+ 96F8
 192+ 96F8 EB               ex de,hl
 193+ 96F9
 194+ 96F9 CD B4 9C         call NextScan
 195+ 96FC EB               ex de,hl
 196+ 96FD
 197+ 96FD 73               ld (hl),e
 198+ 96FE 23               inc hl
 199+ 96FF 72               ld (hl),d
 200+ 9700 23               inc hl
 201+ 9701
 202+ 9701 EB               ex de,hl
 203+ 9702
 204+ 9702 CD B4 9C         call NextScan
 205+ 9705 EB               ex de,hl
 206+ 9706
 207+ 9706              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9706              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9706              ;   _ generar sus scanlines.
 210+ 9706
 211+ 9706              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9706
 213+ 9706 73               ld (hl),e
 214+ 9707 23               inc hl
 215+ 9708 72               ld (hl),d
 216+ 9709 23               inc hl
 217+ 970A
 218+ 970A              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 970A
 220+ 970A 22 5C 8C         ld (Scanlines_album_SP),hl
 221+ 970D
 222+ 970D EB               ex de,hl
 223+ 970E
 224+ 970E              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 970E
 226+ 970E              ;    call NextScan
 227+ 970E              ;    call NextScan
 228+ 970E
 229+ 970E 22 67 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9711
 231+ 9711              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9711
 233+ 9711 08               ex af,af
 234+ 9712
 235+ 9712 F5               push af
 236+ 9713 E1               pop hl
 237+ 9714
 238+ 9714 36 10            ld (hl),16
 239+ 9716
 240+ 9716 C9               ret
 241+ 9717
 242+ 9717              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9717
 244+ 9717              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9717
 246+ 9717 3E 57            ld a,$57
 247+ 9719 94               sub h
 248+ 971A 47               ld b,a
 249+ 971B
 250+ 971B 3E DF            ld a,$df
 251+ 971D BD               cp l
 252+ 971E 38 04            jr c,1F
 253+ 9720
 254+ 9720 3E 08            ld a,8
 255+ 9722 80               add b
 256+ 9723 47               ld b,a
 257+ 9724
 258+ 9724              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9724              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9724
 261+ 9724 48           1 ld c,b
 262+ 9725 0C               inc c
 263+ 9726
 264+ 9726 04               inc b
 265+ 9727 05               dec b
 266+ 9728 20 02            jr nz,3F
 267+ 972A
 268+ 972A 18 0B            jr 6F
 269+ 972C
 270+ 972C CD B4 9C     3 call NextScan
 271+ 972F EB               ex de,hl
 272+ 9730
 273+ 9730 73               ld (hl),e
 274+ 9731 23               inc hl
 275+ 9732 72               ld (hl),d
 276+ 9733 23               inc hl
 277+ 9734
 278+ 9734 EB               ex de,hl
 279+ 9735 10 F5            djnz 3B
 280+ 9737
 281+ 9737 ED 53 5C 8C  6 ld (Scanlines_album_SP),de
 282+ 973B
 283+ 973B 08           5 ex af,af
 284+ 973C F5               push af
 285+ 973D E1               pop hl
 286+ 973E
 287+ 973E 71               ld (hl),c
 288+ 973F
 289+ 973F C9               ret
 290+ 9740
# file closed: Genera_datos_de_impresion.asm
2465  9740              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9740              ; -----------------------------------------------------------------------------
   2+ 9740              ;
   3+ 9740              ;   15/1/25
   4+ 9740              ;
   5+ 9740
   6+ 9740              Pinta_Sprites
   7+ 9740
   8+ 9740 ED 73 3A 8C      ld (Stack),sp
   9+ 9744
  10+ 9744 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  11+ 9745              ;                                       ; DE se encuentra en los datos del sprite.
  12+ 9745 2C               inc l
  13+ 9746 2C               inc l
  14+ 9747
  15+ 9747 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  16+ 9748
  17+ 9748 2C               inc l
  18+ 9749 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  19+ 974A
  20+ 974A              ;   Seleccionamos rutina de impresión:
  21+ 974A
  22+ 974A 08               ex af,af                            ; (Columnas) en AF´.
  23+ 974B
  24+ 974B 3E 10            ld a,16
  25+ 974D B8               cp b
  26+ 974E C2 87 99         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  27+ 9751
  28+ 9751              ;   Rutinas:
  29+ 9751
  30+ 9751              Pinta_rapido                            ;   1520 t/states.
  31+ 9751
  32+ 9751 3A 0B 8C         ld a,(Columnitas)
  33+ 9754 3D               dec a
  34+ 9755 CA 0E 99         jp z,Pinta_rapido_1_Columna
  35+ 9758 3D               dec a
  36+ 9759 CA 55 98         jp z,Pinta_rapido_2_Columnas
  37+ 975C
  38+ 975C              Pinta_rapido_3_Columnas
  39+ 975C
  40+ 975C E1               pop hl
  41+ 975D
  42+ 975D 1A               ld a,(de)
  43+ 975E AE               xor (hl)
  44+ 975F 77               ld (hl),a
  45+ 9760 2C               inc l
  46+ 9761 1C               inc e
  47+ 9762 1A               ld a,(de)
  48+ 9763 AE               xor (hl)
  49+ 9764 77               ld (hl),a
  50+ 9765 2C               inc l
  51+ 9766 1C               inc e
  52+ 9767 1A               ld a,(de)
  53+ 9768 AE               xor (hl)
  54+ 9769 77               ld (hl),a
  55+ 976A 1C               inc e
  56+ 976B
  57+ 976B E1               pop hl
  58+ 976C
  59+ 976C 1A               ld a,(de)
  60+ 976D AE               xor (hl)
  61+ 976E 77               ld (hl),a
  62+ 976F 2C               inc l
  63+ 9770 1C               inc e
  64+ 9771 1A               ld a,(de)
  65+ 9772 AE               xor (hl)
  66+ 9773 77               ld (hl),a
  67+ 9774 2C               inc l
  68+ 9775 1C               inc e
  69+ 9776 1A               ld a,(de)
  70+ 9777 AE               xor (hl)
  71+ 9778 77               ld (hl),a
  72+ 9779 1C               inc e
  73+ 977A
  74+ 977A E1               pop hl
  75+ 977B
  76+ 977B 1A               ld a,(de)
  77+ 977C AE               xor (hl)
  78+ 977D 77               ld (hl),a
  79+ 977E 2C               inc l
  80+ 977F 1C               inc e
  81+ 9780 1A               ld a,(de)
  82+ 9781 AE               xor (hl)
  83+ 9782 77               ld (hl),a
  84+ 9783 2C               inc l
  85+ 9784 1C               inc e
  86+ 9785 1A               ld a,(de)
  87+ 9786 AE               xor (hl)
  88+ 9787 77               ld (hl),a
  89+ 9788 1C               inc e
  90+ 9789
  91+ 9789 E1               pop hl
  92+ 978A
  93+ 978A 1A               ld a,(de)
  94+ 978B AE               xor (hl)
  95+ 978C 77               ld (hl),a
  96+ 978D 2C               inc l
  97+ 978E 1C               inc e
  98+ 978F 1A               ld a,(de)
  99+ 9790 AE               xor (hl)
 100+ 9791 77               ld (hl),a
 101+ 9792 2C               inc l
 102+ 9793 1C               inc e
 103+ 9794 1A               ld a,(de)
 104+ 9795 AE               xor (hl)
 105+ 9796 77               ld (hl),a
 106+ 9797 1C               inc e
 107+ 9798
 108+ 9798 E1               pop hl
 109+ 9799
 110+ 9799 1A               ld a,(de)
 111+ 979A AE               xor (hl)
 112+ 979B 77               ld (hl),a
 113+ 979C 2C               inc l
 114+ 979D 1C               inc e
 115+ 979E 1A               ld a,(de)
 116+ 979F AE               xor (hl)
 117+ 97A0 77               ld (hl),a
 118+ 97A1 2C               inc l
 119+ 97A2 1C               inc e
 120+ 97A3 1A               ld a,(de)
 121+ 97A4 AE               xor (hl)
 122+ 97A5 77               ld (hl),a
 123+ 97A6 1C               inc e
 124+ 97A7
 125+ 97A7 E1               pop hl
 126+ 97A8
 127+ 97A8 1A               ld a,(de)
 128+ 97A9 AE               xor (hl)
 129+ 97AA 77               ld (hl),a
 130+ 97AB 2C               inc l
 131+ 97AC 1C               inc e
 132+ 97AD 1A               ld a,(de)
 133+ 97AE AE               xor (hl)
 134+ 97AF 77               ld (hl),a
 135+ 97B0 2C               inc l
 136+ 97B1 1C               inc e
 137+ 97B2 1A               ld a,(de)
 138+ 97B3 AE               xor (hl)
 139+ 97B4 77               ld (hl),a
 140+ 97B5 1C               inc e
 141+ 97B6
 142+ 97B6 E1               pop hl
 143+ 97B7
 144+ 97B7 1A               ld a,(de)
 145+ 97B8 AE               xor (hl)
 146+ 97B9 77               ld (hl),a
 147+ 97BA 2C               inc l
 148+ 97BB 1C               inc e
 149+ 97BC 1A               ld a,(de)
 150+ 97BD AE               xor (hl)
 151+ 97BE 77               ld (hl),a
 152+ 97BF 2C               inc l
 153+ 97C0 1C               inc e
 154+ 97C1 1A               ld a,(de)
 155+ 97C2 AE               xor (hl)
 156+ 97C3 77               ld (hl),a
 157+ 97C4 1C               inc e
 158+ 97C5
 159+ 97C5 E1               pop hl
 160+ 97C6
 161+ 97C6 1A               ld a,(de)
 162+ 97C7 AE               xor (hl)
 163+ 97C8 77               ld (hl),a
 164+ 97C9 2C               inc l
 165+ 97CA 1C               inc e
 166+ 97CB 1A               ld a,(de)
 167+ 97CC AE               xor (hl)
 168+ 97CD 77               ld (hl),a
 169+ 97CE 2C               inc l
 170+ 97CF 1C               inc e
 171+ 97D0 1A               ld a,(de)
 172+ 97D1 AE               xor (hl)
 173+ 97D2 77               ld (hl),a
 174+ 97D3 1C               inc e
 175+ 97D4
 176+ 97D4 E1               pop hl
 177+ 97D5
 178+ 97D5 1A               ld a,(de)
 179+ 97D6 AE               xor (hl)
 180+ 97D7 77               ld (hl),a
 181+ 97D8 2C               inc l
 182+ 97D9 1C               inc e
 183+ 97DA 1A               ld a,(de)
 184+ 97DB AE               xor (hl)
 185+ 97DC 77               ld (hl),a
 186+ 97DD 2C               inc l
 187+ 97DE 1C               inc e
 188+ 97DF 1A               ld a,(de)
 189+ 97E0 AE               xor (hl)
 190+ 97E1 77               ld (hl),a
 191+ 97E2 1C               inc e
 192+ 97E3
 193+ 97E3 E1               pop hl
 194+ 97E4
 195+ 97E4 1A               ld a,(de)
 196+ 97E5 AE               xor (hl)
 197+ 97E6 77               ld (hl),a
 198+ 97E7 2C               inc l
 199+ 97E8 1C               inc e
 200+ 97E9 1A               ld a,(de)
 201+ 97EA AE               xor (hl)
 202+ 97EB 77               ld (hl),a
 203+ 97EC 2C               inc l
 204+ 97ED 1C               inc e
 205+ 97EE 1A               ld a,(de)
 206+ 97EF AE               xor (hl)
 207+ 97F0 77               ld (hl),a
 208+ 97F1 1C               inc e
 209+ 97F2
 210+ 97F2 E1               pop hl
 211+ 97F3
 212+ 97F3 1A               ld a,(de)
 213+ 97F4 AE               xor (hl)
 214+ 97F5 77               ld (hl),a
 215+ 97F6 2C               inc l
 216+ 97F7 1C               inc e
 217+ 97F8 1A               ld a,(de)
 218+ 97F9 AE               xor (hl)
 219+ 97FA 77               ld (hl),a
 220+ 97FB 2C               inc l
 221+ 97FC 1C               inc e
 222+ 97FD 1A               ld a,(de)
 223+ 97FE AE               xor (hl)
 224+ 97FF 77               ld (hl),a
 225+ 9800 1C               inc e
 226+ 9801
 227+ 9801 E1               pop hl
 228+ 9802
 229+ 9802 1A               ld a,(de)
 230+ 9803 AE               xor (hl)
 231+ 9804 77               ld (hl),a
 232+ 9805 2C               inc l
 233+ 9806 1C               inc e
 234+ 9807 1A               ld a,(de)
 235+ 9808 AE               xor (hl)
 236+ 9809 77               ld (hl),a
 237+ 980A 2C               inc l
 238+ 980B 1C               inc e
 239+ 980C 1A               ld a,(de)
 240+ 980D AE               xor (hl)
 241+ 980E 77               ld (hl),a
 242+ 980F 1C               inc e
 243+ 9810
 244+ 9810 E1               pop hl
 245+ 9811
 246+ 9811 1A               ld a,(de)
 247+ 9812 AE               xor (hl)
 248+ 9813 77               ld (hl),a
 249+ 9814 2C               inc l
 250+ 9815 1C               inc e
 251+ 9816 1A               ld a,(de)
 252+ 9817 AE               xor (hl)
 253+ 9818 77               ld (hl),a
 254+ 9819 2C               inc l
 255+ 981A 1C               inc e
 256+ 981B 1A               ld a,(de)
 257+ 981C AE               xor (hl)
 258+ 981D 77               ld (hl),a
 259+ 981E 1C               inc e
 260+ 981F
 261+ 981F E1               pop hl
 262+ 9820
 263+ 9820 1A               ld a,(de)
 264+ 9821 AE               xor (hl)
 265+ 9822 77               ld (hl),a
 266+ 9823 2C               inc l
 267+ 9824 1C               inc e
 268+ 9825 1A               ld a,(de)
 269+ 9826 AE               xor (hl)
 270+ 9827 77               ld (hl),a
 271+ 9828 2C               inc l
 272+ 9829 1C               inc e
 273+ 982A 1A               ld a,(de)
 274+ 982B AE               xor (hl)
 275+ 982C 77               ld (hl),a
 276+ 982D 1C               inc e
 277+ 982E
 278+ 982E E1               pop hl
 279+ 982F
 280+ 982F 1A               ld a,(de)
 281+ 9830 AE               xor (hl)
 282+ 9831 77               ld (hl),a
 283+ 9832 2C               inc l
 284+ 9833 1C               inc e
 285+ 9834 1A               ld a,(de)
 286+ 9835 AE               xor (hl)
 287+ 9836 77               ld (hl),a
 288+ 9837 2C               inc l
 289+ 9838 1C               inc e
 290+ 9839 1A               ld a,(de)
 291+ 983A AE               xor (hl)
 292+ 983B 77               ld (hl),a
 293+ 983C 1C               inc e
 294+ 983D
 295+ 983D E1               pop hl
 296+ 983E
 297+ 983E 1A               ld a,(de)
 298+ 983F AE               xor (hl)
 299+ 9840 77               ld (hl),a
 300+ 9841 2C               inc l
 301+ 9842 1C               inc e
 302+ 9843 1A               ld a,(de)
 303+ 9844 AE               xor (hl)
 304+ 9845 77               ld (hl),a
 305+ 9846 2C               inc l
 306+ 9847 1C               inc e
 307+ 9848 1A               ld a,(de)
 308+ 9849 AE               xor (hl)
 309+ 984A 77               ld (hl),a
 310+ 984B 1C               inc e
 311+ 984C
 312+ 984C ED 73 5C 8C      ld (Scanlines_album_SP),sp
 313+ 9850 ED 7B 3A 8C      ld sp,(Stack)
 314+ 9854
 315+ 9854 C9               ret
 316+ 9855
 317+ 9855              Pinta_rapido_2_Columnas
 318+ 9855
 319+ 9855 E1               pop hl
 320+ 9856
 321+ 9856 1A               ld a,(de)
 322+ 9857 AE               xor (hl)
 323+ 9858 77               ld (hl),a
 324+ 9859 2C               inc l
 325+ 985A 1C               inc e
 326+ 985B 1A               ld a,(de)
 327+ 985C AE               xor (hl)
 328+ 985D 77               ld (hl),a
 329+ 985E 1C               inc e
 330+ 985F 1C               inc e
 331+ 9860
 332+ 9860 E1               pop hl
 333+ 9861
 334+ 9861 1A               ld a,(de)
 335+ 9862 AE               xor (hl)
 336+ 9863 77               ld (hl),a
 337+ 9864 2C               inc l
 338+ 9865 1C               inc e
 339+ 9866 1A               ld a,(de)
 340+ 9867 AE               xor (hl)
 341+ 9868 77               ld (hl),a
 342+ 9869 1C               inc e
 343+ 986A 1C               inc e
 344+ 986B
 345+ 986B E1               pop hl
 346+ 986C
 347+ 986C 1A               ld a,(de)
 348+ 986D AE               xor (hl)
 349+ 986E 77               ld (hl),a
 350+ 986F 2C               inc l
 351+ 9870 1C               inc e
 352+ 9871 1A               ld a,(de)
 353+ 9872 AE               xor (hl)
 354+ 9873 77               ld (hl),a
 355+ 9874 1C               inc e
 356+ 9875 1C               inc e
 357+ 9876
 358+ 9876 E1               pop hl
 359+ 9877
 360+ 9877 1A               ld a,(de)
 361+ 9878 AE               xor (hl)
 362+ 9879 77               ld (hl),a
 363+ 987A 2C               inc l
 364+ 987B 1C               inc e
 365+ 987C 1A               ld a,(de)
 366+ 987D AE               xor (hl)
 367+ 987E 77               ld (hl),a
 368+ 987F 1C               inc e
 369+ 9880 1C               inc e
 370+ 9881
 371+ 9881 E1               pop hl
 372+ 9882
 373+ 9882 1A               ld a,(de)
 374+ 9883 AE               xor (hl)
 375+ 9884 77               ld (hl),a
 376+ 9885 2C               inc l
 377+ 9886 1C               inc e
 378+ 9887 1A               ld a,(de)
 379+ 9888 AE               xor (hl)
 380+ 9889 77               ld (hl),a
 381+ 988A 1C               inc e
 382+ 988B 1C               inc e
 383+ 988C
 384+ 988C E1               pop hl
 385+ 988D
 386+ 988D 1A               ld a,(de)
 387+ 988E AE               xor (hl)
 388+ 988F 77               ld (hl),a
 389+ 9890 2C               inc l
 390+ 9891 1C               inc e
 391+ 9892 1A               ld a,(de)
 392+ 9893 AE               xor (hl)
 393+ 9894 77               ld (hl),a
 394+ 9895 1C               inc e
 395+ 9896 1C               inc e
 396+ 9897
 397+ 9897 E1               pop hl
 398+ 9898
 399+ 9898 1A               ld a,(de)
 400+ 9899 AE               xor (hl)
 401+ 989A 77               ld (hl),a
 402+ 989B 2C               inc l
 403+ 989C 1C               inc e
 404+ 989D 1A               ld a,(de)
 405+ 989E AE               xor (hl)
 406+ 989F 77               ld (hl),a
 407+ 98A0 1C               inc e
 408+ 98A1 1C               inc e
 409+ 98A2
 410+ 98A2 E1               pop hl
 411+ 98A3
 412+ 98A3 1A               ld a,(de)
 413+ 98A4 AE               xor (hl)
 414+ 98A5 77               ld (hl),a
 415+ 98A6 2C               inc l
 416+ 98A7 1C               inc e
 417+ 98A8 1A               ld a,(de)
 418+ 98A9 AE               xor (hl)
 419+ 98AA 77               ld (hl),a
 420+ 98AB 1C               inc e
 421+ 98AC 1C               inc e
 422+ 98AD
 423+ 98AD E1               pop hl
 424+ 98AE
 425+ 98AE 1A               ld a,(de)
 426+ 98AF AE               xor (hl)
 427+ 98B0 77               ld (hl),a
 428+ 98B1 2C               inc l
 429+ 98B2 1C               inc e
 430+ 98B3 1A               ld a,(de)
 431+ 98B4 AE               xor (hl)
 432+ 98B5 77               ld (hl),a
 433+ 98B6 1C               inc e
 434+ 98B7 1C               inc e
 435+ 98B8
 436+ 98B8 E1               pop hl
 437+ 98B9
 438+ 98B9 1A               ld a,(de)
 439+ 98BA AE               xor (hl)
 440+ 98BB 77               ld (hl),a
 441+ 98BC 2C               inc l
 442+ 98BD 1C               inc e
 443+ 98BE 1A               ld a,(de)
 444+ 98BF AE               xor (hl)
 445+ 98C0 77               ld (hl),a
 446+ 98C1 1C               inc e
 447+ 98C2 1C               inc e
 448+ 98C3
 449+ 98C3 E1               pop hl
 450+ 98C4
 451+ 98C4 1A               ld a,(de)
 452+ 98C5 AE               xor (hl)
 453+ 98C6 77               ld (hl),a
 454+ 98C7 2C               inc l
 455+ 98C8 1C               inc e
 456+ 98C9 1A               ld a,(de)
 457+ 98CA AE               xor (hl)
 458+ 98CB 77               ld (hl),a
 459+ 98CC 1C               inc e
 460+ 98CD 1C               inc e
 461+ 98CE
 462+ 98CE E1               pop hl
 463+ 98CF
 464+ 98CF 1A               ld a,(de)
 465+ 98D0 AE               xor (hl)
 466+ 98D1 77               ld (hl),a
 467+ 98D2 2C               inc l
 468+ 98D3 1C               inc e
 469+ 98D4 1A               ld a,(de)
 470+ 98D5 AE               xor (hl)
 471+ 98D6 77               ld (hl),a
 472+ 98D7 1C               inc e
 473+ 98D8 1C               inc e
 474+ 98D9
 475+ 98D9 E1               pop hl
 476+ 98DA
 477+ 98DA 1A               ld a,(de)
 478+ 98DB AE               xor (hl)
 479+ 98DC 77               ld (hl),a
 480+ 98DD 2C               inc l
 481+ 98DE 1C               inc e
 482+ 98DF 1A               ld a,(de)
 483+ 98E0 AE               xor (hl)
 484+ 98E1 77               ld (hl),a
 485+ 98E2 1C               inc e
 486+ 98E3 1C               inc e
 487+ 98E4
 488+ 98E4 E1               pop hl
 489+ 98E5
 490+ 98E5 1A               ld a,(de)
 491+ 98E6 AE               xor (hl)
 492+ 98E7 77               ld (hl),a
 493+ 98E8 2C               inc l
 494+ 98E9 1C               inc e
 495+ 98EA 1A               ld a,(de)
 496+ 98EB AE               xor (hl)
 497+ 98EC 77               ld (hl),a
 498+ 98ED 1C               inc e
 499+ 98EE 1C               inc e
 500+ 98EF
 501+ 98EF E1               pop hl
 502+ 98F0
 503+ 98F0 1A               ld a,(de)
 504+ 98F1 AE               xor (hl)
 505+ 98F2 77               ld (hl),a
 506+ 98F3 2C               inc l
 507+ 98F4 1C               inc e
 508+ 98F5 1A               ld a,(de)
 509+ 98F6 AE               xor (hl)
 510+ 98F7 77               ld (hl),a
 511+ 98F8 1C               inc e
 512+ 98F9 1C               inc e
 513+ 98FA
 514+ 98FA E1               pop hl
 515+ 98FB
 516+ 98FB 1A               ld a,(de)
 517+ 98FC AE               xor (hl)
 518+ 98FD 77               ld (hl),a
 519+ 98FE 2C               inc l
 520+ 98FF 1C               inc e
 521+ 9900 1A               ld a,(de)
 522+ 9901 AE               xor (hl)
 523+ 9902 77               ld (hl),a
 524+ 9903 1C               inc e
 525+ 9904 1C               inc e
 526+ 9905
 527+ 9905 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 528+ 9909 ED 7B 3A 8C      ld sp,(Stack)
 529+ 990D
 530+ 990D C9               ret
 531+ 990E
 532+ 990E              Pinta_rapido_1_Columna
 533+ 990E
 534+ 990E E1               pop hl
 535+ 990F
 536+ 990F 1A               ld a,(de)
 537+ 9910 AE               xor (hl)
 538+ 9911 77               ld (hl),a
 539+ 9912 1C               inc e
 540+ 9913 1C               inc e
 541+ 9914 1C               inc e
 542+ 9915
 543+ 9915 E1               pop hl
 544+ 9916
 545+ 9916 1A               ld a,(de)
 546+ 9917 AE               xor (hl)
 547+ 9918 77               ld (hl),a
 548+ 9919 1C               inc e
 549+ 991A 1C               inc e
 550+ 991B 1C               inc e
 551+ 991C
 552+ 991C E1               pop hl
 553+ 991D
 554+ 991D 1A               ld a,(de)
 555+ 991E AE               xor (hl)
 556+ 991F 77               ld (hl),a
 557+ 9920 1C               inc e
 558+ 9921 1C               inc e
 559+ 9922 1C               inc e
 560+ 9923
 561+ 9923 E1               pop hl
 562+ 9924
 563+ 9924 1A               ld a,(de)
 564+ 9925 AE               xor (hl)
 565+ 9926 77               ld (hl),a
 566+ 9927 1C               inc e
 567+ 9928 1C               inc e
 568+ 9929 1C               inc e
 569+ 992A
 570+ 992A E1               pop hl
 571+ 992B
 572+ 992B 1A               ld a,(de)
 573+ 992C AE               xor (hl)
 574+ 992D 77               ld (hl),a
 575+ 992E 1C               inc e
 576+ 992F 1C               inc e
 577+ 9930 1C               inc e
 578+ 9931
 579+ 9931 E1               pop hl
 580+ 9932
 581+ 9932 1A               ld a,(de)
 582+ 9933 AE               xor (hl)
 583+ 9934 77               ld (hl),a
 584+ 9935 1C               inc e
 585+ 9936 1C               inc e
 586+ 9937 1C               inc e
 587+ 9938
 588+ 9938 E1               pop hl
 589+ 9939
 590+ 9939 1A               ld a,(de)
 591+ 993A AE               xor (hl)
 592+ 993B 77               ld (hl),a
 593+ 993C 1C               inc e
 594+ 993D 1C               inc e
 595+ 993E 1C               inc e
 596+ 993F
 597+ 993F E1               pop hl
 598+ 9940
 599+ 9940 1A               ld a,(de)
 600+ 9941 AE               xor (hl)
 601+ 9942 77               ld (hl),a
 602+ 9943 1C               inc e
 603+ 9944 1C               inc e
 604+ 9945 1C               inc e
 605+ 9946
 606+ 9946 E1               pop hl
 607+ 9947
 608+ 9947 1A               ld a,(de)
 609+ 9948 AE               xor (hl)
 610+ 9949 77               ld (hl),a
 611+ 994A 1C               inc e
 612+ 994B 1C               inc e
 613+ 994C 1C               inc e
 614+ 994D
 615+ 994D E1               pop hl
 616+ 994E
 617+ 994E 1A               ld a,(de)
 618+ 994F AE               xor (hl)
 619+ 9950 77               ld (hl),a
 620+ 9951 1C               inc e
 621+ 9952 1C               inc e
 622+ 9953 1C               inc e
 623+ 9954
 624+ 9954 E1               pop hl
 625+ 9955
 626+ 9955 1A               ld a,(de)
 627+ 9956 AE               xor (hl)
 628+ 9957 77               ld (hl),a
 629+ 9958 1C               inc e
 630+ 9959 1C               inc e
 631+ 995A 1C               inc e
 632+ 995B
 633+ 995B E1               pop hl
 634+ 995C
 635+ 995C 1A               ld a,(de)
 636+ 995D AE               xor (hl)
 637+ 995E 77               ld (hl),a
 638+ 995F 1C               inc e
 639+ 9960 1C               inc e
 640+ 9961 1C               inc e
 641+ 9962
 642+ 9962 E1               pop hl
 643+ 9963
 644+ 9963 1A               ld a,(de)
 645+ 9964 AE               xor (hl)
 646+ 9965 77               ld (hl),a
 647+ 9966 1C               inc e
 648+ 9967 1C               inc e
 649+ 9968 1C               inc e
 650+ 9969 E1               pop hl
 651+ 996A
 652+ 996A 1A               ld a,(de)
 653+ 996B AE               xor (hl)
 654+ 996C 77               ld (hl),a
 655+ 996D 1C               inc e
 656+ 996E 1C               inc e
 657+ 996F 1C               inc e
 658+ 9970
 659+ 9970 E1               pop hl
 660+ 9971
 661+ 9971 1A               ld a,(de)
 662+ 9972 AE               xor (hl)
 663+ 9973 77               ld (hl),a
 664+ 9974 1C               inc e
 665+ 9975 1C               inc e
 666+ 9976 1C               inc e
 667+ 9977
 668+ 9977 E1               pop hl
 669+ 9978
 670+ 9978 1A               ld a,(de)
 671+ 9979 AE               xor (hl)
 672+ 997A 77               ld (hl),a
 673+ 997B 1C               inc e
 674+ 997C 1C               inc e
 675+ 997D 1C               inc e
 676+ 997E
 677+ 997E ED 73 5C 8C      ld (Scanlines_album_SP),sp
 678+ 9982 ED 7B 3A 8C      ld sp,(Stack)
 679+ 9986
 680+ 9986 C9               ret
 681+ 9987
 682+ 9987              Pinta_lento
 683+ 9987
 684+ 9987 3A 0B 8C         ld a,(Columnitas)
 685+ 998A 3D               dec a
 686+ 998B 28 33            jr z,Pinta_lento_1_Columna
 687+ 998D 3D               dec a
 688+ 998E 28 1A            jr z,Pinta_lento_2_Columnas
 689+ 9990
 690+ 9990              Pinta_lento_3_Columnas
 691+ 9990
 692+ 9990 E1           1 pop hl
 693+ 9991
 694+ 9991 1A               ld a,(de)
 695+ 9992 AE               xor (hl)
 696+ 9993 77               ld (hl),a
 697+ 9994 2C               inc l
 698+ 9995 1C               inc e
 699+ 9996 1A               ld a,(de)
 700+ 9997 AE               xor (hl)
 701+ 9998 77               ld (hl),a
 702+ 9999 2C               inc l
 703+ 999A 1C               inc e
 704+ 999B 1A               ld a,(de)
 705+ 999C AE               xor (hl)
 706+ 999D 77               ld (hl),a
 707+ 999E 13               inc de
 708+ 999F
 709+ 999F 10 EF            djnz 1B
 710+ 99A1
 711+ 99A1 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 712+ 99A5 ED 7B 3A 8C      ld sp,(Stack)
 713+ 99A9 C9               ret
 714+ 99AA
 715+ 99AA              Pinta_lento_2_Columnas
 716+ 99AA
 717+ 99AA E1           2 pop hl
 718+ 99AB
 719+ 99AB 1A               ld a,(de)
 720+ 99AC AE               xor (hl)
 721+ 99AD 77               ld (hl),a
 722+ 99AE 2C               inc l
 723+ 99AF 1C               inc e
 724+ 99B0 1A               ld a,(de)
 725+ 99B1 AE               xor (hl)
 726+ 99B2 77               ld (hl),a
 727+ 99B3 1C               inc e
 728+ 99B4 1C               inc e
 729+ 99B5
 730+ 99B5 10 F3            djnz 2B
 731+ 99B7
 732+ 99B7 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 733+ 99BB ED 7B 3A 8C      ld sp,(Stack)
 734+ 99BF C9               ret
 735+ 99C0
 736+ 99C0              Pinta_lento_1_Columna
 737+ 99C0
 738+ 99C0 E1           3 pop hl
 739+ 99C1
 740+ 99C1 1A               ld a,(de)
 741+ 99C2 AE               xor (hl)
 742+ 99C3 77               ld (hl),a
 743+ 99C4 1C               inc e
 744+ 99C5 1C               inc e
 745+ 99C6 1C               inc e
 746+ 99C7
 747+ 99C7 10 F7            djnz 3B
 748+ 99C9
 749+ 99C9 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 750+ 99CD ED 7B 3A 8C      ld sp,(Stack)
 751+ 99D1 C9               ret
# file closed: Pinta_Sprites.asm
2466  99D2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 99D2              ; ******************************************************************************************************************************************************************************************
   2+ 99D2              ;
   3+ 99D2              ; 26/06/23
   4+ 99D2              ;
   5+ 99D2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 99D2
   7+ 99D2              Draw
   8+ 99D2
   9+ 99D2 CD A8 9C     	call Prepara_draw
  10+ 99D5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 99D6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 99D7 28 05        	jr z,2F
  13+ 99D9
  14+ 99D9 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 99DC 18 0C        	jr 1F
  16+ 99DE
  17+ 99DE 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 99E1 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 99E4 CD 73 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 99E7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 99E7
  22+ 99E7 CD 31 A1     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 99EA
  24+ 99EA 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 99ED CB 6F        	bit 5,a
  26+ 99EF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 99F1
  28+ 99F1 CD 09 9A     	call Comprueba_limite_horizontal
  29+ 99F4 CD 99 9A     	call Comprueba_limite_vertical
  30+ 99F7
  31+ 99F7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 99F7              ; -----------------------
  33+ 99F7              ; -----------------------
  34+ 99F7              ; -----------------------
  35+ 99F7
  36+ 99F7 CD EF 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 99FA CD 78 90     	call Calcula_Columnitas
  38+ 99FD CD 26 9C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  39+ 9A00
  40+ 9A00 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9A03 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9A05 32 F7 8B     	ld (Ctrl_0),a
  43+ 9A08
  44+ 9A08 C9           	ret
  45+ 9A09
  46+ 9A09              ; *******************************************************************************************************************************************************************************************
  47+ 9A09              ;	21/01/23
  48+ 9A09              ;
  49+ 9A09              ; 	Comprueba_limite_horizontal.
  50+ 9A09              ;
  51+ 9A09              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9A09              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9A09              ;
  54+ 9A09              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9A09              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9A09              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9A09              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9A09
  59+ 9A09
  60+ 9A09
  61+ 9A09 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9A0C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9A0E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9A10 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9A12 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9A15 18 09            jr 6F
  67+ 9A17 CB 5F        1 bit 3,a
  68+ 9A19 28 0A            jr z,2F
  69+ 9A1B E6 F7            and $f7
  70+ 9A1D 32 F7 8B         ld (Ctrl_0),a
  71+ 9A20 CD 73 9B     6 call Inicializacion
  72+ 9A23 18 5B            jr 5F
  73+ 9A25 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9A26
  75+ 9A26              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9A26              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9A26
  78+ 9A26 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9A27 2A 0C 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9A2A CD 02 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9A2D 67           	ld h,a
  82+ 9A2E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9A2F CD 02 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9A32 67           	ld h,a
  85+ 9A33 A7           	and a
  86+ 9A34 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9A36 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9A37 3A 09 8C     	ld a,(Cuad_objeto)
  89+ 9A3A FE 02        	cp 2
  90+ 9A3C 38 1E        	jr c,3F
  91+ 9A3E 28 1C        	jr z,3F
  92+ 9A40 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9A41 28 23            jr z,7F
  94+ 9A43 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9A45 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9A47 E1           	pop hl
  97+ 9A48
  98+ 9A48              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9A48              ; _para indicar con E="2" en caso necesario.
 100+ 9A48
 101+ 9A48 E5               push hl
 102+ 9A49 C5               push bc
 103+ 9A4A CD 02 96     	call calcula_tercio
 104+ 9A4D FE 01        	cp 1
 105+ 9A4F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9A51 CD 81 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9A54 28 26            jr z,9F
 108+ 9A56 38 24            jr c,9F
 109+ 9A58 1E 00        11 ld e,0
 110+ 9A5A 18 22            jr 8F
 111+ 9A5C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9A5D 28 07        	jr z, 7F
 113+ 9A5F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9A61 1E 00         	ld e,0
 115+ 9A63 E1           	pop hl
 116+ 9A64 18 04        	jr 4F
 117+ 9A66 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9A68 18 15            jr 10F
 119+ 9A6A
 120+ 9A6A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9A6A              ; _para indicar con E="2" en caso necesario.
 122+ 9A6A
 123+ 9A6A E5           4 push hl
 124+ 9A6B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9A6C CD 02 96     	call calcula_tercio
 126+ 9A6F FE 01        	cp 1
 127+ 9A71 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9A73 CD 81 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9A76 28 04            jr z,9F
 130+ 9A78 30 02            jr nc,9F
 131+ 9A7A 18 02        	jr 8F
 132+ 9A7C 1E 02        9 ld e,2
 133+ 9A7E C1           8 pop bc
 134+ 9A7F E1           10 pop hl
 135+ 9A80 C9           5 ret
 136+ 9A81
 137+ 9A81              ; --------------------
 138+ 9A81              ;
 139+ 9A81              ; 25/08/22
 140+ 9A81
 141+ 9A81 CD 02 96     Comprueba_centro call calcula_tercio
 142+ 9A84 67               ld h,a
 143+ 9A85 08           	ex af,af
 144+ 9A86 FE 02        	cp 2
 145+ 9A88 38 07        	jr c,1F
 146+ 9A8A 28 05        	jr z,1F
 147+ 9A8C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9A8F 18 03        	jr 2F
 149+ 9A91 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9A94 08           2 ex af,af
 151+ 9A95 A7               and a
 152+ 9A96 ED 42            sbc hl,bc
 153+ 9A98 C9               ret
 154+ 9A99
 155+ 9A99              ; *********************************************************************************************************************************************************************************************
 156+ 9A99              ;
 157+ 9A99              ;   16/8/22
 158+ 9A99              ;
 159+ 9A99              ;	Comprueba_limite_vertical
 160+ 9A99              ;
 161+ 9A99              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9A99              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9A99              ;
 164+ 9A99
 165+ 9A99 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9A9C 7D           	ld a,l
 167+ 9A9D E6 1F        	and $1F
 168+ 9A9F 57           	ld d,a
 169+ 9AA0 3A 0E 8C     	ld a,(Limite_vertical)
 170+ 9AA3 BA           	cp d 											; Límite - Posición.
 171+ 9AA4 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9AA5 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9AA8 CB 47        	bit 0,a
 174+ 9AAA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9AAC
 176+ 9AAC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9AAC
 178+ 9AAC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9AAD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9AAF
 181+ 9AAF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9AAF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9AAF
 184+ 9AAF 3A EB 8B         ld a,(Coordenada_X)
 185+ 9AB2 16 0F            ld d,Centro_izquierda
 186+ 9AB4 A7               and a
 187+ 9AB5 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9AB6 28 1E            jr z,3F
 189+ 9AB8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 9ABA              ;                                                    ; _salimos sin modificar nada.
 191+ 9ABA 18 0E            jr 2F
 192+ 9ABC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9ABD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9ABF
 195+ 9ABF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9ABF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9ABF
 198+ 9ABF 3A EB 8B         ld a,(Coordenada_X)
 199+ 9AC2 16 10            ld d,Centro_derecha
 200+ 9AC4 A7               and a
 201+ 9AC5 92               sub d
 202+ 9AC6 28 0E            jr z,3F
 203+ 9AC8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9ACA              ;                                                    ; _salimos sin modificar nada.
 205+ 9ACA CB 43        2 bit 0,e
 206+ 9ACC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9ACE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9ACF CD 63 9B         call Modificaccionne
 209+ 9AD2 C1           	pop bc
 210+ 9AD3 CD 73 9B         call Inicializacion
 211+ 9AD6 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9AD7
 213+ 9AD7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9AD7
 215+ 9AD7 C5           4 push bc
 216+ 9AD8 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9ADB 0A           	ld a,(bc)
 218+ 9ADC 3D           	dec a
 219+ 9ADD 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9ADE 7D           	ld a,l
 221+ 9ADF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9AE0 CB 47        	bit 0,a
 223+ 9AE2 28 03        	jr z,5F
 224+ 9AE4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9AE5 18 2E        	jr 7F
 226+ 9AE7
 227+ 9AE7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9AE7
 229+ 9AE7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9AE8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9AE9 3A F7 8B     	ld a,(Ctrl_0)
 232+ 9AEC CB 4F        	bit 1,a
 233+ 9AEE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9AF0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9AF1
 236+ 9AF1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9AF1
 238+ 9AF1 1C               inc e
 239+ 9AF2 1D               dec e
 240+ 9AF3 20 07            jr nz,12F
 241+ 9AF5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9AF6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9AF7 22 FA 8B     	ld (Posicion_actual),hl
 244+ 9AFA 18 44        13 jr 9F
 245+ 9AFC CB 43        12 bit 0,e
 246+ 9AFE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9B00              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9B00 C1           	pop bc
 249+ 9B01 18 D3        	jr 3B
 250+ 9B03 80           14 add b
 251+ 9B04 6F               ld l,a
 252+ 9B05 22 FA 8B     	ld (Posicion_actual),hl
 253+ 9B08 CD 63 9B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9B0B 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9B0D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9B0F 32 F7 8B         ld (Ctrl_0),a
 257+ 9B12 F1           	pop af
 258+ 9B13 18 2B        	jr 9F
 259+ 9B15
 260+ 9B15              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9B15
 262+ 9B15 F5           7 push af
 263+ 9B16 3A F7 8B     	ld a,(Ctrl_0)
 264+ 9B19 CB 47        	bit 0,a
 265+ 9B1B 20 1D        	jr nz,8F
 266+ 9B1D F1           	pop af
 267+ 9B1E
 268+ 9B1E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9B1E
 270+ 9B1E 1C           	inc e
 271+ 9B1F 1D               dec e
 272+ 9B20 20 07            jr nz,10F
 273+ 9B22 90           	sub b
 274+ 9B23 6F               ld l,a
 275+ 9B24 22 FA 8B     	ld (Posicion_actual),hl
 276+ 9B27 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9B29              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9B29 CB 43        10 bit 0,e
 279+ 9B2B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9B2D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9B2D C1           	pop bc
 282+ 9B2E 18 A6        	jr 3B
 283+ 9B30 90           16 sub b
 284+ 9B31 6F               ld l,a
 285+ 9B32 22 FA 8B     	ld (Posicion_actual),hl
 286+ 9B35 CD 63 9B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9B38 18 06            jr 9F
 288+ 9B3A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9B3C 32 F7 8B         ld (Ctrl_0),a
 290+ 9B3F F1           	pop af
 291+ 9B40 C1           9 pop bc
 292+ 9B41 1E 00        	ld e,0
 293+ 9B43 CD 73 9B         call Inicializacion
 294+ 9B46 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9B47 08           	ex af,af
 296+ 9B48 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9B49 18 8B            jr 3B
 298+ 9B4B
 299+ 9B4B              ; --------------------
 300+ 9B4B
 301+ 9B4B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9B4D CD C3 9C     1 call PreviousScan
 303+ 9B50 10 FB            djnz 1B
 304+ 9B52 22 FA 8B     	ld (Posicion_actual),hl
 305+ 9B55 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9B56 C9           	ret
 307+ 9B57
 308+ 9B57              ; --------------------
 309+ 9B57
 310+ 9B57 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9B59 CD B4 9C     1 call NextScan
 312+ 9B5C 10 FB            djnz 1B
 313+ 9B5E 22 FA 8B     	ld (Posicion_actual),hl
 314+ 9B61 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9B62 C9           	ret
 316+ 9B63
 317+ 9B63              ; --------------------
 318+ 9B63              ;
 319+ 9B63              ;	22/01/23
 320+ 9B63              ;
 321+ 9B63              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9B63              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9B63              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9B63
 325+ 9B63
 326+ 9B63              Modificaccionne
 327+ 9B63
 328+ 9B63 3A 09 8C     	ld a,(Cuad_objeto)
 329+ 9B66 FE 02        	cp 2
 330+ 9B68 CC 4B 9B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9B6B DC 4B 9B         call c,Modifica_Pos_actual
 332+ 9B6E C8           	ret z
 333+ 9B6F CD 57 9B         call Modifica_Pos_actual2
 334+ 9B72 C9               ret
 335+ 9B73
 336+ 9B73              ; *************************************************************************************************************************************************************************************************
 337+ 9B73              ;
 338+ 9B73              ;	13/8/22
 339+ 9B73              ;
 340+ 9B73              ;	Inicializacion
 341+ 9B73              ;
 342+ 9B73              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9B73              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9B73              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9B73              ;
 346+ 9B73              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9B73              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9B73              ;	_ desaparece/aparece.
 349+ 9B73
 350+ 9B73              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9B73              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9B73              ;
 353+ 9B73              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9B73              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9B73              ; 		   [E] ="0"
 356+ 9B73
 357+ 9B73              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9B73
 359+ 9B73 CD 02 96     Inicializacion call calcula_tercio
 360+ 9B76 28 36        	jr z,primit
 361+ 9B78 E6 02        	and 2
 362+ 9B7A 20 07        	jr nz,segmit
 363+ 9B7C 7D           	ld a,l
 364+ 9B7D FE 7F        	cp $7f
 365+ 9B7F 38 2D        	jr c,primit
 366+ 9B81 28 2B        	jr z,primit
 367+ 9B83 CD E9 9B     segmit call column
 368+ 9B86 38 13        	jr c,tercuad
 369+ 9B88 3E 04        cuarcuad ld a,4
 370+ 9B8A 32 09 8C     	ld (Cuad_objeto),a
 371+ 9B8D 21 20 48     	ld hl,$4820
 372+ 9B90 22 0C 8C     	ld (Limite_horizontal),hl
 373+ 9B93 21 0E 8C     	ld hl,Limite_vertical
 374+ 9B96 36 0D        	ld (hl),$0d
 375+ 9B98 08           	ex af,af
 376+ 9B99 18 3C        	jr 1F
 377+ 9B9B              tercuad
 378+ 9B9B 3E 03        	ld a,3
 379+ 9B9D 32 09 8C     	ld (Cuad_objeto),a
 380+ 9BA0 21 20 48     	ld hl,$4820
 381+ 9BA3 22 0C 8C     	ld (Limite_horizontal),hl
 382+ 9BA6 21 0E 8C     	ld hl,Limite_vertical
 383+ 9BA9 36 12        	ld (hl),$12
 384+ 9BAB 08           	ex af,af
 385+ 9BAC 18 29        	jr 1F
 386+ 9BAE CD E9 9B     primit call column
 387+ 9BB1 38 13        	jr c, primcuad
 388+ 9BB3              segcuad
 389+ 9BB3 3E 02        	ld a,2
 390+ 9BB5 32 09 8C     	ld (Cuad_objeto),a
 391+ 9BB8 21 C0 4F     	ld hl,$4fc0
 392+ 9BBB 22 0C 8C     	ld (Limite_horizontal),hl
 393+ 9BBE 21 0E 8C     	ld hl,Limite_vertical
 394+ 9BC1 36 0D        	ld (hl),$0d
 395+ 9BC3 08           	ex af,af
 396+ 9BC4 18 11        	jr 1F
 397+ 9BC6              primcuad
 398+ 9BC6 3E 01        	ld a,1
 399+ 9BC8 32 09 8C     	ld (Cuad_objeto),a
 400+ 9BCB 21 C0 4F     	ld hl,$4fc0
 401+ 9BCE 22 0C 8C     	ld (Limite_horizontal),hl
 402+ 9BD1 21 0E 8C     	ld hl,Limite_vertical
 403+ 9BD4 36 12        	ld (hl),$12
 404+ 9BD6 08           	ex af,af
 405+ 9BD7
 406+ 9BD7 C5           1 push bc
 407+ 9BD8 E5           	push hl
 408+ 9BD9 D5           	push de
 409+ 9BDA
 410+ 9BDA 2A FA 8B     	ld hl,(Posicion_actual)
 411+ 9BDD CD 20 96     	call Genera_coordenadas
 412+ 9BE0
 413+ 9BE0 D1           	pop de
 414+ 9BE1 E1           	pop hl
 415+ 9BE2 C1           	pop bc
 416+ 9BE3
 417+ 9BE3 21 F7 8B     	ld hl,Ctrl_0
 418+ 9BE6 CB EE        	set 5,(hl)
 419+ 9BE8 C9           	ret
 420+ 9BE9
 421+ 9BE9              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9BE9
 423+ 9BE9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9BE9              ;
 425+ 9BE9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9BE9
 427+ 9BE9 7D           column ld a,l
 428+ 9BEA E6 1F        	and $1f
 429+ 9BEC FE 10         	cp $10
 430+ 9BEE C9            	ret
 431+ 9BEF
 432+ 9BEF              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9BEF              ;
 434+ 9BEF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9BEF              ;
 436+ 9BEF              ; 14/12/22
 437+ 9BEF              ;
 438+ 9BEF              ;	Modifica: A y BC.
 439+ 9BEF
 440+ 9BEF 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9BF2 E6 01        	and 1
 442+ 9BF4 28 17        	jr z,1F
 443+ 9BF6
 444+ 9BF6              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9BF6
 446+ 9BF6 3A EB 8B     	ld a,(Coordenada_X)
 447+ 9BF9 47           	ld b,a
 448+ 9BFA 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9BFB 79           	ld a,c
 450+ 9BFC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9BFD 38 08        	jr c,2F
 452+ 9BFF 47           	ld b,a
 453+ 9C00 79           	ld a,c
 454+ 9C01 90           	sub b
 455+ 9C02 32 0A 8C     	ld (Columnas),a
 456+ 9C05 18 1B        	jr 4F
 457+ 9C07 79           2 ld a,c
 458+ 9C08 32 0A 8C     	ld (Columnas),a
 459+ 9C0B 18 15        	jr 4F
 460+ 9C0D
 461+ 9C0D              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9C0D
 463+ 9C0D 3A EB 8B     1 ld a,(Coordenada_X)
 464+ 9C10 81           	add c
 465+ 9C11 3D           	dec a
 466+ 9C12 D6 1F        	sub $1f
 467+ 9C14 38 08        	jr c,3F
 468+ 9C16 47           	ld b,a
 469+ 9C17 79           	ld a,c
 470+ 9C18 90           	sub b
 471+ 9C19 32 0A 8C     	ld (Columnas),a
 472+ 9C1C 18 04        	jr 4F
 473+ 9C1E 79           3 ld a,c
 474+ 9C1F 32 0A 8C     	ld (Columnas),a
 475+ 9C22 D9           4 exx
 476+ 9C23 4F           	ld c,a
 477+ 9C24 D9           	exx
 478+ 9C25 C9            ret
 479+ 9C26
 480+ 9C26              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9C26              ;
 482+ 9C26              ;   19/7/23
 483+ 9C26              ;
 484+ 9C26              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9C26              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9C26              ;
 487+ 9C26              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9C26              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9C26              ;
 490+ 9C26              ;	DESTRUYE: HL,B Y A.
 491+ 9C26
 492+ 9C26              Calcula_puntero_de_impresion
 493+ 9C26
 494+ 9C26 3A 09 8C     	ld a,(Cuad_objeto)
 495+ 9C29 FE 02        	cp 2
 496+ 9C2B 38 2D        	jr c,1F
 497+ 9C2D 28 2B        	jr z,1F
 498+ 9C2F E6 01        	and 1
 499+ 9C31 28 22        	jr z,3F
 500+ 9C33
 501+ 9C33              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 502+ 9C33
 503+ 9C33 CD 9C 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 504+ 9C36
 505+ 9C36 7D           9 ld a,l
 506+ 9C37 E6 1F        	and $1f
 507+ 9C39 28 54        	jr z,7F
 508+ 9C3B
 509+ 9C3B FE 02        	cp 2
 510+ 9C3D 20 11        	jr nz,10F
 511+ 9C3F
 512+ 9C3F              ; Nos encontramos en la Columna 2 de pantalla, hemos reaparecido por la parte izquierda ???
 513+ 9C3F              ; Corrige el fallo de la reentrada de la entidad por la parte izquierda de la pantalla.
 514+ 9C3F
 515+ 9C3F 3A 63 8C     	ld a,(Ctrl_4)
 516+ 9C42 CB 4F        	bit 1,a
 517+ 9C44 28 0A        	jr z,10F
 518+ 9C46
 519+ 9C46              ; Bit 1 de (Ctrl_4) a "1" indica que hemos reaparecido por la parte izquierda de la pantalla.
 520+ 9C46
 521+ 9C46 CB 8F        	res 1,a
 522+ 9C48 32 63 8C     	ld (Ctrl_4),a
 523+ 9C4B 2A EF 8B     	ld hl,(Puntero_de_impresion)
 524+ 9C4E 18 42        	jr 12F
 525+ 9C50
 526+ 9C50 2B           10 dec hl
 527+ 9C51 10 E3        	djnz 9B
 528+ 9C53 18 3A        	jr 7F
 529+ 9C55
 530+ 9C55              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 531+ 9C55
 532+ 9C55 2A FA 8B     3 ld hl,(Posicion_actual)
 533+ 9C58 18 35        	jr 7F
 534+ 9C5A
 535+ 9C5A 28 29        1 jr z,2F
 536+ 9C5C
 537+ 9C5C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 538+ 9C5C
 539+ 9C5C CD 9C 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 540+ 9C5F
 541+ 9C5F 7D           4 ld a,l
 542+ 9C60 E6 1F        	and $1f
 543+ 9C62 28 18        	jr z,6F
 544+ 9C64
 545+ 9C64 FE 02        	cp 2
 546+ 9C66 20 11        	jr nz,11F
 547+ 9C68
 548+ 9C68              ; Nos encontramos en la Columna 2 de pantalla, hemos reaparecido por la parte izquierda ???
 549+ 9C68              ; Corrige el fallo de la reentrada de la entidad por la parte izquierda de la pantalla.
 550+ 9C68
 551+ 9C68 3A 63 8C     	ld a,(Ctrl_4)
 552+ 9C6B CB 4F        	bit 1,a
 553+ 9C6D 28 0A        	jr z,11F
 554+ 9C6F
 555+ 9C6F              ; Bit 1 de (Ctrl_4) a "1" indica que hemos reaparecido por la parte izquierda de la pantalla.
 556+ 9C6F
 557+ 9C6F CB 8F        	res 1,a
 558+ 9C71 32 63 8C     	ld (Ctrl_4),a
 559+ 9C74 2A EF 8B     	ld hl,(Puntero_de_impresion)
 560+ 9C77 18 19        	jr 12F
 561+ 9C79
 562+ 9C79 2B           11 dec hl
 563+ 9C7A 10 E3        	djnz 4B
 564+ 9C7C 06 0F        6 ld b,15
 565+ 9C7E CD C3 9C     5 call PreviousScan
 566+ 9C81 10 FB        	djnz 5B
 567+ 9C83 18 0A        	jr 7F
 568+ 9C85
 569+ 9C85              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 570+ 9C85
 571+ 9C85 CD 9C 9C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 572+ 9C88 06 0F        	ld b,15
 573+ 9C8A CD C3 9C     8 call PreviousScan
 574+ 9C8D 10 FB        	djnz 8B
 575+ 9C8F
 576+ 9C8F 22 EF 8B     7 ld (Puntero_de_impresion),hl
 577+ 9C92
 578+ 9C92 E5           12 push hl
 579+ 9C93 DD E1        	pop ix
 580+ 9C95
 581+ 9C95 2A FC 8B     	ld hl,(Puntero_objeto)
 582+ 9C98 E5           	push hl
 583+ 9C99 FD E1        	pop iy
 584+ 9C9B
 585+ 9C9B C9           	ret
 586+ 9C9C
 587+ 9C9C              ; --------------------------------------------------------------------------------------------------------------------
 588+ 9C9C              ;
 589+ 9C9C              ;	2/1/23
 590+ 9C9C              ;
 591+ 9C9C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 592+ 9C9C              ;
 593+ 9C9C              ;	Tras esta rutina tenemos:
 594+ 9C9C              ;
 595+ 9C9C              ;	OUTPUT: HL contiene (Posicion_actual).
 596+ 9C9C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 597+ 9C9C              ;
 598+ 9C9C              ;	DESTRUYE!!!!! HL,B y A.
 599+ 9C9C
 600+ 9C9C 2A FA 8B     Operandos ld hl,(Posicion_actual)
 601+ 9C9F 3A 0A 8C     	ld a,(Columnas)
 602+ 9CA2 3D           	dec a
 603+ 9CA3 20 01        	jr nz,1F
 604+ 9CA5 3C           	inc a
 605+ 9CA6 47           1 ld b,a
 606+ 9CA7 C9           	ret
 607+ 9CA8
 608+ 9CA8              ; --------------------------------------------------------------------------------------------------------------------
 609+ 9CA8              ;
 610+ 9CA8              ;	Prepara_draw
 611+ 9CA8              ;
 612+ 9CA8              ;	Es una rutina de carga.
 613+ 9CA8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 614+ 9CA8              ;
 615+ 9CA8              ;	FUNCIONAMIENTO:
 616+ 9CA8              ;
 617+ 9CA8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 618+ 9CA8              ;	- LD (Posicion_actual) del objeto en [HL].
 619+ 9CA8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 620+ 9CA8              ;
 621+ 9CA8              ;	DESTRUYE:
 622+ 9CA8              ;
 623+ 9CA8              ;	Logicamente, BC,HL y E quedan destruidos.
 624+ 9CA8
 625+ 9CA8 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 626+ 9CAB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 627+ 9CAC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 628+ 9CAD 4E           	ld c,(hl)
 629+ 9CAE 2A FA 8B     	ld hl,(Posicion_actual)
 630+ 9CB1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 631+ 9CB3 C9           	ret
 632+ 9CB4
 633+ 9CB4              ;----------------------------------------------------------------------------------------------------------------
 634+ 9CB4              ;
 635+ 9CB4              ;	5/08/22
 636+ 9CB4              ;
 637+ 9CB4              ;   NextScan.
 638+ 9CB4              ;
 639+ 9CB4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 640+ 9CB4              ;
 641+ 9CB4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 642+ 9CB4              ;
 643+ 9CB4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 644+ 9CB4              ;
 645+ 9CB4              ;       DESTRUIDOS: AF y HL !!!
 646+ 9CB4              ;
 647+ 9CB4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 648+ 9CB4              ;
 649+ 9CB4
 650+ 9CB4 24           NextScan inc h          ; Incrementamos el scanline.
 651+ 9CB5 7C               ld a,h
 652+ 9CB6 E6 07            and 7
 653+ 9CB8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 654+ 9CB9
 655+ 9CB9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 656+ 9CBA C6 20            add a,$20           ; Vamos a comprobarlo...
 657+ 9CBC 6F               ld l,a
 658+ 9CBD D8               ret c               ; Salimos si se produce el cambio de tercio.
 659+ 9CBE
 660+ 9CBE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 661+ 9CBF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 662+ 9CC1 67               ld h,a
 663+ 9CC2 C9               ret
 664+ 9CC3
 665+ 9CC3              ;----------------------------------------------------------------------------------------------------------------
 666+ 9CC3              ;
 667+ 9CC3              ;	5/08/22
 668+ 9CC3              ;
 669+ 9CC3              ;   PreviousScan.
 670+ 9CC3              ;
 671+ 9CC3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 672+ 9CC3              ;
 673+ 9CC3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 674+ 9CC3              ;
 675+ 9CC3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 676+ 9CC3              ;
 677+ 9CC3              ;       DESTRUIDOS: AF y HL !!!
 678+ 9CC3              ;
 679+ 9CC3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 680+ 9CC3              ;
 681+ 9CC3
 682+ 9CC3 7C           PreviousScan ld a,h
 683+ 9CC4 25               dec h               ; Dec H.
 684+ 9CC5 E6 07            and 7
 685+ 9CC7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 686+ 9CC8
 687+ 9CC8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 688+ 9CC9 D6 20            sub $20             ; Vamos a comprobarlo...
 689+ 9CCB 6F               ld l,a
 690+ 9CCC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 691+ 9CCD
 692+ 9CCD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 693+ 9CCE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 694+ 9CD0 67               ld h,a
 695+ 9CD1 C9               ret
 696+ 9CD2
 697+ 9CD2
 698+ 9CD2
 699+ 9CD2
 700+ 9CD2
 701+ 9CD2
 702+ 9CD2
 703+ 9CD2
 704+ 9CD2
 705+ 9CD2
 706+ 9CD2
 707+ 9CD2
# file closed: Draw_XOR.asm
2467  9CD2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9CD2
   2+ 9CD2              ; ******************************************************************************************************************************************************************************************
   3+ 9CD2              ;
   4+ 9CD2              ;   20/05/23
   5+ 9CD2              ;
   6+ 9CD2              ;	Recompone_posicion_inicio
   7+ 9CD2              ;
   8+ 9CD2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9CD2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9CD2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9CD2              ;	_ a una u otra rutina.
  12+ 9CD2
  13+ 9CD2              Recompone_posicion_inicio
  14+ 9CD2
  15+ 9CD2 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9CD5 7D           	ld a,l
  17+ 9CD6 E6 1F        	and $1f
  18+ 9CD8 28 16        	jr z,1F
  19+ 9CDA
  20+ 9CDA FE 1F        	cp $1f
  21+ 9CDC 28 0D        	jr z,3F
  22+ 9CDE
  23+ 9CDE 21 F6 8B     	ld hl,Ctrl_2
  24+ 9CE1 CB C6        	set 0,(hl)
  25+ 9CE3 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9CE6 22 29 8C     	ld (Repone_puntero_objeto),hl
  27+ 9CE9 18 08        	jr 2F
  28+ 9CEB
  29+ 9CEB CD 85 9E     3 call Mov_left
  30+ 9CEE 18 03        	jr 2F
  31+ 9CF0
  32+ 9CF0 CD 6C 9D     1 call Mov_right
  33+ 9CF3 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9CF6 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9CF9 C9           	ret
  36+ 9CFA
  37+ 9CFA              ; ******************************************************************************************************************************************************************************************
  38+ 9CFA              ;
  39+ 9CFA              ;   27/05/23
  40+ 9CFA              ;
  41+ 9CFA              ;	Mov_down
  42+ 9CFA              ;
  43+ 9CFA              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9CFA              ;
  45+ 9CFA              ;
  46+ 9CFA              Mov_down
  47+ 9CFA
  48+ 9CFA CD 5A 9D     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9CFD              ;																	; _ repone (Puntero_objeto).
  50+ 9CFD              ;	ld hl,Ctrl_0
  51+ 9CFD              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9CFD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9CFD              ; 																	; _ en el caso de que no lo haya.
  54+ 9CFD 3A 13 8C     	ld a,(Vel_down)
  55+ 9D00 47           	ld b,a
  56+ 9D01 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9D04 CD 02 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9D07 E6 02        	and 2
  59+ 9D09 28 17        	jr z,1F
  60+ 9D0B
  61+ 9D0B              ; Nos encontramos en el último tercio de pantalla.
  62+ 9D0B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9D0B
  64+ 9D0B 7C           	ld a,h
  65+ 9D0C FE 57        	cp $57
  66+ 9D0E 20 12        	jr nz,1F
  67+ 9D10
  68+ 9D10 7D           	ld a,l
  69+ 9D11 C6 20        	add $20
  70+ 9D13 30 0D        	jr nc,1F
  71+ 9D15
  72+ 9D15              ; ------------------------------
  73+ 9D15              ;
  74+ 9D15              ;	12/01/24
  75+ 9D15
  76+ 9D15              ;	call Reaparece_arriba
  77+ 9D15 CD 10 A0     	call Reinicio
  78+ 9D18
  79+ 9D18              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9D18
  81+ 9D18 3A 62 8C     	ld a,(Ctrl_3)
  82+ 9D1B CB CF        	set 1,a
  83+ 9D1D 32 62 8C     	ld (Ctrl_3),a
  84+ 9D20
  85+ 9D20 18 08        	jr 3F
  86+ 9D22              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9D22              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9D22              ; ------------------------------
  89+ 9D22
  90+ 9D22 CD B4 9C     1 call NextScan
  91+ 9D25 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9D28 10 DA            djnz 2B
  93+ 9D2A CD 20 96     3 call Genera_coordenadas
  94+ 9D2D C9           	ret
  95+ 9D2E
  96+ 9D2E              ; ******************************************************************************************************************************************************************************************
  97+ 9D2E              ;
  98+ 9D2E              ;   27/05/23
  99+ 9D2E              ;
 100+ 9D2E              ;	Mov_up
 101+ 9D2E              ;
 102+ 9D2E              ; 	Mueve el Sprite hacia arriba.
 103+ 9D2E              ;
 104+ 9D2E              ;
 105+ 9D2E              Mov_up
 106+ 9D2E
 107+ 9D2E CD 5A 9D     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9D31              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9D31              ;	ld hl,Ctrl_0
 110+ 9D31              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9D31              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9D31              ; 																		; _ en el caso de que no lo haya.
 113+ 9D31 3A 12 8C     	ld a,(Vel_up)
 114+ 9D34 47           	ld b,a
 115+ 9D35 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9D38 CD 02 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9D3B A7           	and a
 118+ 9D3C 20 10        	jr nz,1F
 119+ 9D3E
 120+ 9D3E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9D3E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9D3E
 123+ 9D3E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9D3F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9D41 20 0B            jr nz,1F
 126+ 9D43 7D               ld a,l
 127+ 9D44 D6 20            sub $20
 128+ 9D46 30 06            jr nc,1F
 129+ 9D48 25               dec h
 130+ 9D49
 131+ 9D49              ; -----------------------------
 132+ 9D49 CD F1 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9D4C              ;	call Reinicio
 134+ 9D4C              ; -----------------------------
 135+ 9D4C
 136+ 9D4C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9D4E CD C3 9C     1 call PreviousScan
 138+ 9D51 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9D54 10 E2            djnz 3B
 140+ 9D56 CD 20 96     2 call Genera_coordenadas
 141+ 9D59 C9           	ret
 142+ 9D5A
 143+ 9D5A              ; -----------------------------
 144+ 9D5A              ;
 145+ 9D5A              ;	27/5/23
 146+ 9D5A              ;
 147+ 9D5A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9D5A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9D5A              ;
 150+ 9D5A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9D5A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9D5A              ;
 153+ 9D5A              ;	Modifica: A y (Puntero_objeto).
 154+ 9D5A
 155+ 9D5A 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9D5D CB 47        	bit 0,a
 157+ 9D5F C8           	ret z
 158+ 9D60 CB 87        	res 0,a
 159+ 9D62 32 F6 8B     	ld (Ctrl_2),a
 160+ 9D65 2A 29 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9D68 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9D6B C9           	ret
 163+ 9D6C
 164+ 9D6C              ; ******************************************************************************************************************************************************************************************
 165+ 9D6C              ;
 166+ 9D6C              ;	19/10/22
 167+ 9D6C              ;
 168+ 9D6C              ;	Mov_right.
 169+ 9D6C              ;
 170+ 9D6C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9D6C              ;
 172+ 9D6C
 173+ 9D6C 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9D6F CB 77        	bit 6,a
 175+ 9D71 28 06        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9D73
 177+ 9D73 CD 9C 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9D76 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9D77 18 4F        	jr 8F
 180+ 9D79
 181+ 9D79 3A EB 8B     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 182+ 9D7C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 183+ 9D7E 20 48        	jr nz,8F
 184+ 9D80
 185+ 9D80 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 186+ 9D83 A7           	and a 															; _[3] para continuar con el DESPLZ.
 187+ 9D84 28 42        	jr z,8F
 188+ 9D86
 189+ 9D86              ; ---------- ---------- ----------
 190+ 9D86              ;
 191+ 9D86              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 192+ 9D86
 193+ 9D86 3A 11 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 194+ 9D89 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 195+ 9D8B 28 11        	jr z,1F
 196+ 9D8D 38 06        	jr c,6F
 197+ 9D8F FE 04        	cp 4
 198+ 9D91 28 14        	jr z,7F
 199+ 9D93 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 200+ 9D95
 201+ 9D95              ; ---------- ---------- ----------
 202+ 9D95              ;
 203+ 9D95              ; Perfiles de velocidad
 204+ 9D95              ;
 205+ 9D95
 206+ 9D95 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 207+ 9D98 FE FE        	cp $fe
 208+ 9D9A 38 2C        	jr c,8F
 209+ 9D9C 18 10        	jr 3F
 210+ 9D9E
 211+ 9D9E 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 212+ 9DA1 FE FD        	cp $fd
 213+ 9DA3 38 23        	jr c,8F
 214+ 9DA5 18 07        	jr 3F
 215+ 9DA7
 216+ 9DA7 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 217+ 9DAA FE FB        	cp $fb
 218+ 9DAC 38 1A        	jr c,8F
 219+ 9DAE
 220+ 9DAE              ; ---------- ---------- ----------
 221+ 9DAE
 222+ 9DAE              3
 223+ 9DAE CD DA 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 224+ 9DB1 CD D2 99     	call Draw
 225+ 9DB4
 226+ 9DB4              ; 	debug !!!!!!!!!!!!!!!!!!!
 227+ 9DB4
 228+ 9DB4              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780
 229+ 9DB4              ;	Columns $8bf9 	  		   ..... 3	   ..... 3
 230+ 9DB4              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0
 231+ 9DB4              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe
 232+ 9DB4              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690
 233+ 9DB4              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e
 234+ 9DB4              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390
 235+ 9DB4              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1								; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 236+ 9DB4              ;	Columnas $8c0a			   ..... 1     ..... 1
 237+ 9DB4              ;	Columnitas $8c0b		   ..... 1	   ..... 1
 238+ 9DB4              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74
 239+ 9DB4
 240+ 9DB4              ;	jr $
 241+ 9DB4
 242+ 9DB4              ;	call Reinicio
 243+ 9DB4
 244+ 9DB4              ; ---------- ---------- ----------
 245+ 9DB4              ;
 246+ 9DB4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 247+ 9DB4
 248+ 9DB4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 249+ 9DB6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 250+ 9DB7 CD CF 9D     	call DESPLZ_DER
 251+ 9DBA C1           	pop bc
 252+ 9DBB 10 F9        	djnz 5B
 253+ 9DBD 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 254+ 9DC0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 255+ 9DC1 22 FA 8B     	ld (Posicion_actual),hl
 256+ 9DC4 CD 20 96     	call Genera_coordenadas
 257+ 9DC7
 258+ 9DC7              ; 	debug !!!!!!!!!!!!!!!!!!!
 259+ 9DC7
 260+ 9DC7              ;	Puntero_de_impresion $8bef ..... $0000 ..... $4780 ..... $4780
 261+ 9DC7              ;	Columns $8bf9 	  		   ..... 3	   ..... 3	   ..... 3
 262+ 9DC7              ;	Posicion_actual $8bfa	   ..... $46c0 ..... $46c0 ..... $46c0
 263+ 9DC7              ;	CTRL_DESPLZ $8bfe		   ..... $fe   ..... $fe   ..... $fa
 264+ 9DC7              ;	Puntero_objeto $8bfc	   ..... $8690 ..... $8690 ..... $85d0
 265+ 9DC7              ;	Puntero_DESPLZ_der $8c03   ..... $853e ..... $853e ..... $8536
 266+ 9DC7              ;	Puntero_DESPLZ_izq $8c05   ..... $8390 ..... $8390 ..... $8398
 267+ 9DC7              ;	Cuad_objeto $8c09		   ..... 2	   ..... 1	   ..... 1						; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 268+ 9DC7              ;	Columnas $8c0a			   ..... 1     ..... 1     ..... 1
 269+ 9DC7              ;	Columnitas $8c0b		   ..... 1	   ..... 1     ..... 1
 270+ 9DC7              ;	Puntero_de_almacen_de_mov_masticados $8bf1 ..... $df74 ..... $df74
 271+ 9DC7
 272+ 9DC7 C9           	ret
 273+ 9DC8
 274+ 9DC8              ; ---------- ---------- ---------
 275+ 9DC8
 276+ 9DC8 2A FA 8B     8 ld hl,(Posicion_actual)
 277+ 9DCB CD CF 9D     	call DESPLZ_DER
 278+ 9DCE C9           2 ret
 279+ 9DCF
 280+ 9DCF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 281+ 9DCF              ;
 282+ 9DCF              ;	22/9/22
 283+ 9DCF              ;
 284+ 9DCF
 285+ 9DCF CD DE 9D     DESPLZ_DER call Desplaza_derecha
 286+ 9DD2 CD 2A 9E         call modifica_parametros_1er_DESPLZ_2
 287+ 9DD5 CD 53 9E         call Ciclo_completo
 288+ 9DD8 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 289+ 9DDB CB FE        	set 7,(hl)
 290+ 9DDD C9           	ret
 291+ 9DDE
 292+ 9DDE              ; ******************************************************************************************************************************************************************************************
 293+ 9DDE              ;
 294+ 9DDE              ;	30/01/25
 295+ 9DDE              ;
 296+ 9DDE              ;	Sitúa (Puntero_objeto) y los punteros de desplazamiento correspondientes: (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq) en función de la velocidad del desplazamiento, (Vel_right).
 297+ 9DDE              ;
 298+ 9DDE              ;	OUTPUT: (Puntero_objeto).
 299+ 9DDE              ;			(Puntero_DESPLZ_der).
 300+ 9DDE              ;			(Puntero_DESPLZ_izq).
 301+ 9DDE
 302+ 9DDE 3A 11 8C     Desplaza_derecha ld a,(Vel_right)
 303+ 9DE1 47           	ld b,a
 304+ 9DE2 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 305+ 9DE5 23           1 inc hl
 306+ 9DE6 23           	inc hl
 307+ 9DE7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 308+ 9DE9 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 309+ 9DEC CD DB 91     	call Extrae_address
 310+ 9DEF 22 FC 8B     	ld (Puntero_objeto),hl
 311+ 9DF2
 312+ 9DF2              ; Modifica (Puntero_DESPLZ_izq).
 313+ 9DF2
 314+ 9DF2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 315+ 9DF2              ; Cuántos movimientos hemos hecho ??
 316+ 9DF2              ; DE contiene (Puntero_DESPLZ_der).
 317+ 9DF2
 318+ 9DF2 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 319+ 9DF5 EB           	ex de,hl
 320+ 9DF6 A7           	and a
 321+ 9DF7 ED 52        	sbc hl,de
 322+ 9DF9 CB 3D        	srl l
 323+ 9DFB 3E 08        6 ld a,8
 324+ 9DFD 95           	sub l
 325+ 9DFE 30 1E        	jr nc,3F
 326+ 9E00
 327+ 9E00              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 328+ 9E00              ; B="0".
 329+ 9E00
 330+ 9E00 04           4 inc b
 331+ 9E01 3C           	inc a
 332+ 9E02 20 FC        	jr nz,4B
 333+ 9E04 78           	ld a,b
 334+ 9E05 08           	ex af,af
 335+ 9E06 2A FF 8B     	ld hl,(Indice_Sprite_der)
 336+ 9E09 23           5 inc hl
 337+ 9E0A 23           	inc hl
 338+ 9E0B 10 FC        	djnz 5B
 339+ 9E0D 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 340+ 9E10 CD DB 91     	call Extrae_address
 341+ 9E13 22 FC 8B     	ld (Puntero_objeto),hl
 342+ 9E16
 343+ 9E16              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 344+ 9E16              ; _(Posicion_actual).
 345+ 9E16
 346+ 9E16 21 FA 8B     	ld hl,Posicion_actual
 347+ 9E19 34           	inc (hl)
 348+ 9E1A 08               ex af,af
 349+ 9E1B 6F           	ld l,a
 350+ 9E1C 18 DD        	jr 6B
 351+ 9E1E
 352+ 9E1E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 353+ 9E1E
 354+ 9E1E 47           3 ld b,a
 355+ 9E1F 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 356+ 9E22 23           2 inc hl
 357+ 9E23 23           	inc hl
 358+ 9E24 10 FC        	djnz 2B
 359+ 9E26 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 360+ 9E29 C9           8 ret
 361+ 9E2A
 362+ 9E2A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 363+ 9E2A              ;
 364+ 9E2A              ;	24/7/22
 365+ 9E2A              ;
 366+ 9E2A              ;	modifica_parametros_1er_DESPLZ_2
 367+ 9E2A              ;
 368+ 9E2A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 369+ 9E2A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 370+ 9E2A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 371+ 9E2A
 372+ 9E2A 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 373+ 9E2D A7           	and a
 374+ 9E2E 20 1F        	jr nz,1F
 375+ 9E30 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 376+ 9E32 32 FE 8B         ld (CTRL_DESPLZ),a
 377+ 9E35
 378+ 9E35 21 F9 8B     	ld hl,Columns
 379+ 9E38 34           	inc (hl)
 380+ 9E39
 381+ 9E39 3A 09 8C     	ld a,(Cuad_objeto)
 382+ 9E3C E6 01        	and 1
 383+ 9E3E 28 0F        	jr z,1F
 384+ 9E40
 385+ 9E40 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 386+ 9E43 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 387+ 9E44 22 FA 8B     	ld (Posicion_actual),hl
 388+ 9E47
 389+ 9E47 CD 20 96     	call Genera_coordenadas
 390+ 9E4A
 391+ 9E4A CD A8 9F     	call Inc_CTRL_DESPLZ
 392+ 9E4D 18 03        	jr 2F
 393+ 9E4F CD A8 9F     1 call Inc_CTRL_DESPLZ
 394+ 9E52 C9           2 ret
 395+ 9E53
 396+ 9E53              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 397+ 9E53              ;
 398+ 9E53              ;	30/01/25
 399+ 9E53              ;
 400+ 9E53              ;	Ciclo_completo.
 401+ 9E53              ;
 402+ 9E53              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 403+ 9E53              ;
 404+ 9E53              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 405+ 9E53              ; 	Decrementamos (Columns).
 406+ 9E53              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 407+ 9E53              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 408+ 9E53
 409+ 9E53
 410+ 9E53 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 411+ 9E56 FE FF        	cp $ff
 412+ 9E58 28 0E        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 413+ 9E5A E6 F0        	and $f0
 414+ 9E5C C0           	ret nz
 415+ 9E5D
 416+ 9E5D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 417+ 9E5D
 418+ 9E5D 3A FE 8B     	ld a,(CTRL_DESPLZ)
 419+ 9E60 47           	ld b,a
 420+ 9E61 3E F8        	ld a,$f8
 421+ 9E63 80           	add b
 422+ 9E64 32 FE 8B     	ld (CTRL_DESPLZ),a
 423+ 9E67 C9           	ret
 424+ 9E68
 425+ 9E68 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 426+ 9E6B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 427+ 9E6C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 428+ 9E6D 32 FE 8B     	ld (CTRL_DESPLZ),a
 429+ 9E70
 430+ 9E70 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 431+ 9E73 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 432+ 9E75 20 0A        	jr nz,2F
 433+ 9E77
 434+ 9E77 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 435+ 9E7A 23           	inc hl
 436+ 9E7B 22 FA 8B     	ld (Posicion_actual),hl
 437+ 9E7E CD 20 96     	call Genera_coordenadas
 438+ 9E81
 439+ 9E81              ; Inicia el puntero de Sprite.
 440+ 9E81
 441+ 9E81 CD F0 91     2 call Inicia_puntero_objeto_der
 442+ 9E84 C9           	ret
 443+ 9E85
 444+ 9E85              ; ******************************************************************************************************************************************************************************************
 445+ 9E85              ;
 446+ 9E85              ;	15/02/23
 447+ 9E85              ;
 448+ 9E85              ;	Mov_left.
 449+ 9E85              ;
 450+ 9E85              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 451+ 9E85              ;
 452+ 9E85              Mov_left
 453+ 9E85
 454+ 9E85              ;	ld hl,Ctrl_0
 455+ 9E85              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 456+ 9E85              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 457+ 9E85              ; 																	; _ en el caso de que no lo haya.
 458+ 9E85 3A F7 8B     	ld a,(Ctrl_0)
 459+ 9E88 CB 77        	bit 6,a
 460+ 9E8A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 461+ 9E8C
 462+ 9E8C CD A2 9F     	call Stop_Amadeus_left
 463+ 9E8F C8           	ret z
 464+ 9E90 20 4A        	jr nz,8F
 465+ 9E92
 466+ 9E92 3A EB 8B     11 ld a,(Coordenada_X)
 467+ 9E95 A7           	and a
 468+ 9E96 20 44        	jr nz,8F
 469+ 9E98
 470+ 9E98 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 471+ 9E9B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 472+ 9E9C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 473+ 9E9E
 474+ 9E9E              ; ---------- ---------- ----------
 475+ 9E9E
 476+ 9E9E 3A 10 8C     	ld a,(Vel_left)
 477+ 9EA1 FE 02        	cp 2
 478+ 9EA3 28 0F        	jr z,1F
 479+ 9EA5 38 04        	jr c,6F
 480+ 9EA7 FE 04        	cp 4
 481+ 9EA9 28 12        	jr z,7F
 482+ 9EAB
 483+ 9EAB              ; ---------- ---------- ----------
 484+ 9EAB
 485+ 9EAB 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 486+ 9EAE FE F8        	cp $f8
 487+ 9EB0 20 2A        	jr nz,8F
 488+ 9EB2 18 10        	jr 4F
 489+ 9EB4 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 490+ 9EB7 FE F9        	cp $f9
 491+ 9EB9 20 21        	jr nz,8F
 492+ 9EBB 18 07        	jr 4F
 493+ 9EBD 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 494+ 9EC0 FE FB        	cp $fb
 495+ 9EC2 20 18        	jr nz,8F
 496+ 9EC4
 497+ 9EC4              ; ---------- ---------- ----------
 498+ 9EC4
 499+ 9EC4              4
 500+ 9EC4 CD C8 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 501+ 9EC7              ;	call Reinicio
 502+ 9EC7
 503+ 9EC7              ; ---------- ---------- ----------
 504+ 9EC7
 505+ 9EC7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 506+ 9EC9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 507+ 9ECA
 508+ 9ECA              ;	ld hl,(Indice_Sprite_izq)
 509+ 9ECA              ;	ld (Puntero_DESPLZ_izq),hl
 510+ 9ECA
 511+ 9ECA CD E3 9E     	call DESPLZ_IZQ
 512+ 9ECD C1           	pop bc
 513+ 9ECE 10 F9        	djnz 5B
 514+ 9ED0 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 515+ 9ED3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 516+ 9ED4 22 FA 8B     	ld (Posicion_actual),hl
 517+ 9ED7 CD 20 96     	call Genera_coordenadas
 518+ 9EDA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 519+ 9EDC
 520+ 9EDC              ; ---------- ---------- ----------
 521+ 9EDC
 522+ 9EDC              ; Movemos, no hay recolocación.
 523+ 9EDC
 524+ 9EDC 2A FA 8B     8 ld hl,(Posicion_actual)
 525+ 9EDF CD E3 9E     	call DESPLZ_IZQ
 526+ 9EE2 C9           2 ret
 527+ 9EE3
 528+ 9EE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 529+ 9EE3              ;
 530+ 9EE3              ;	22/9/22
 531+ 9EE3
 532+ 9EE3              DESPLZ_IZQ
 533+ 9EE3
 534+ 9EE3 CD F2 9E     	call Desplaza_izquierda
 535+ 9EE6 CD 3E 9F         call modifica_parametros_1er_DESPLZ
 536+ 9EE9 CD 66 9F     	call Ciclo_completo_2
 537+ 9EEC 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 538+ 9EEF CB BE        	res 7,(hl)
 539+ 9EF1 C9           	ret
 540+ 9EF2
 541+ 9EF2              Desplaza_izquierda
 542+ 9EF2
 543+ 9EF2 3A 10 8C     	ld a,(Vel_left)
 544+ 9EF5 47           	ld b,a
 545+ 9EF6 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 546+ 9EF9 23           1 inc hl
 547+ 9EFA 23           	inc hl
 548+ 9EFB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 549+ 9EFD 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 550+ 9F00 CD DB 91     	call Extrae_address
 551+ 9F03 22 FC 8B     	ld (Puntero_objeto),hl
 552+ 9F06
 553+ 9F06              ; Modifica (Puntero_DESPLZ_der).
 554+ 9F06
 555+ 9F06              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 556+ 9F06              ; Cuántos movimientos hemos hecho ??
 557+ 9F06              ; DE contiene (Puntero_DESPLZ_izq).
 558+ 9F06
 559+ 9F06 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 560+ 9F09 EB           	ex de,hl
 561+ 9F0A A7           	and a
 562+ 9F0B ED 52        	sbc hl,de
 563+ 9F0D CB 3D        	srl l
 564+ 9F0F 3E 08        6 ld a,8
 565+ 9F11 95           	sub l
 566+ 9F12 30 1E        	jr nc,3F
 567+ 9F14
 568+ 9F14              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 569+ 9F14              ; B="0".
 570+ 9F14
 571+ 9F14 04           4 inc b
 572+ 9F15 3C           	inc a
 573+ 9F16 20 FC        	jr nz,4B
 574+ 9F18 78           	ld a,b
 575+ 9F19 08           	ex af,af
 576+ 9F1A 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 577+ 9F1D 23           5 inc hl
 578+ 9F1E 23           	inc hl
 579+ 9F1F 10 FC        	djnz 5B
 580+ 9F21 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 581+ 9F24 CD DB 91     	call Extrae_address
 582+ 9F27 22 FC 8B     	ld (Puntero_objeto),hl
 583+ 9F2A
 584+ 9F2A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 585+ 9F2A              ; _(Posicion_actual).
 586+ 9F2A
 587+ 9F2A 21 FA 8B     	ld hl,Posicion_actual
 588+ 9F2D 35           	dec (hl)
 589+ 9F2E 08           	ex af,af
 590+ 9F2F 6F           	ld l,a
 591+ 9F30 18 DD        	jr 6B
 592+ 9F32
 593+ 9F32              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 594+ 9F32
 595+ 9F32 47           3 ld b,a
 596+ 9F33 2A FF 8B     	ld hl,(Indice_Sprite_der)
 597+ 9F36 23           2 inc hl
 598+ 9F37 23           	inc hl
 599+ 9F38 10 FC        	djnz 2B
 600+ 9F3A 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 601+ 9F3D C9           8 ret
 602+ 9F3E
 603+ 9F3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 604+ 9F3E              ;
 605+ 9F3E              ;	modifica_parametros_1er_DESPLZ
 606+ 9F3E              ;
 607+ 9F3E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 608+ 9F3E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 609+ 9F3E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 610+ 9F3E
 611+ 9F3E 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 612+ 9F41 A7           	and a
 613+ 9F42 20 1E        	jr nz,1F
 614+ 9F44 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 615+ 9F45 32 FE 8B         ld (CTRL_DESPLZ),a
 616+ 9F48 21 F9 8B     	ld hl,Columns
 617+ 9F4B 34           	inc (hl)
 618+ 9F4C 3A 09 8C     	ld a,(Cuad_objeto)
 619+ 9F4F E6 01        	and 1
 620+ 9F51 20 0F        	jr nz,1F
 621+ 9F53 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 622+ 9F56 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 623+ 9F57 22 FA 8B     	ld (Posicion_actual),hl
 624+ 9F5A CD 20 96     	call Genera_coordenadas
 625+ 9F5D CD B8 9F     	call Dec_CTRL_DESPLZ
 626+ 9F60 18 03        	jr 2F
 627+ 9F62 CD B8 9F     1 call Dec_CTRL_DESPLZ
 628+ 9F65 C9           2 ret
 629+ 9F66
 630+ 9F66              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 631+ 9F66
 632+ 9F66 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 633+ 9F69 FE F7        	cp $f7
 634+ 9F6B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 635+ 9F6D 30 2C        	jr nc,3F
 636+ 9F6F
 637+ 9F6F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 638+ 9F6F
 639+ 9F6F 06 00        	ld b,0
 640+ 9F71 04           4 inc b
 641+ 9F72 3C           	inc a
 642+ 9F73 FE F7        	cp $f7
 643+ 9F75 20 FA        	jr nz,4B
 644+ 9F77 3E FF        	ld a,$ff
 645+ 9F79 90           	sub b
 646+ 9F7A 32 FE 8B     	ld (CTRL_DESPLZ),a
 647+ 9F7D 18 1C        	jr 3F
 648+ 9F7F
 649+ 9F7F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 650+ 9F7F
 651+ 9F7F 21 F9 8B     1 ld hl,Columns
 652+ 9F82 35           	dec (hl)
 653+ 9F83 AF           	xor a
 654+ 9F84 32 FE 8B     	ld (CTRL_DESPLZ),a
 655+ 9F87 3A 09 8C     	ld a,(Cuad_objeto)
 656+ 9F8A E6 01        	and 1
 657+ 9F8C 28 0A        	jr z,2F
 658+ 9F8E 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 659+ 9F91 2B           	dec hl
 660+ 9F92 22 FA 8B     	ld (Posicion_actual),hl
 661+ 9F95 CD 20 96     	call Genera_coordenadas
 662+ 9F98
 663+ 9F98              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 664+ 9F98
 665+ 9F98 CD 03 92     2 call Inicia_puntero_objeto_izq
 666+ 9F9B C9           3 ret
 667+ 9F9C
 668+ 9F9C              ; ---------- ---------- ---------- ---------- ---------- ----------
 669+ 9F9C              ;
 670+ 9F9C              ;	19/10/22
 671+ 9F9C              ;
 672+ 9F9C              ;	(cp 29) para un Amadeus de 3 Columns.
 673+ 9F9C              ;	(cp 30)   ""  ""    ""     2 Columns.
 674+ 9F9C
 675+ 9F9C 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 676+ 9F9F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 677+ 9FA1 C9           	ret
 678+ 9FA2
 679+ 9FA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 680+ 9FA2              ;
 681+ 9FA2              ;	19/10/22
 682+ 9FA2              ;
 683+ 9FA2              ;	(cp 2) para un Amadeus de 3 Columns.
 684+ 9FA2              ;	(cp 1)   ""  ""    ""     2 Columns.
 685+ 9FA2
 686+ 9FA2 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 687+ 9FA5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 688+ 9FA7 C9           	ret
 689+ 9FA8
 690+ 9FA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 691+ 9FA8              ;
 692+ 9FA8              ;	30/1/25
 693+ 9FA8              ;
 694+ 9FA8              ;	Inc_CTRL_DESPLZ
 695+ 9FA8              ;
 696+ 9FA8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 697+ 9FA8
 698+ 9FA8 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 699+ 9FAB 3A 11 8C     	ld a,(Vel_right)
 700+ 9FAE A7           	and a
 701+ 9FAF 28 05        	jr z,1F
 702+ 9FB1 47           	ld b,a
 703+ 9FB2
 704+ 9FB2 34           3 inc (hl)
 705+ 9FB3 10 FD        	djnz 3B
 706+ 9FB5 C9           	ret
 707+ 9FB6
 708+ 9FB6 34           1 inc (hl)
 709+ 9FB7 C9           	ret
 710+ 9FB8
 711+ 9FB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9FB8              ;
 713+ 9FB8              ;	30/1/25
 714+ 9FB8              ;
 715+ 9FB8              ;	Dec_CTRL_DESPLZ
 716+ 9FB8              ;
 717+ 9FB8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 718+ 9FB8
 719+ 9FB8 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 720+ 9FBB 3A 10 8C     	ld a,(Vel_left)
 721+ 9FBE A7           	and a
 722+ 9FBF 28 05        	jr z,1F
 723+ 9FC1 47           	ld b,a
 724+ 9FC2
 725+ 9FC2 35           3 dec (hl)
 726+ 9FC3 10 FD        	djnz 3B
 727+ 9FC5 C9           	ret
 728+ 9FC6
 729+ 9FC6 35           1 dec (hl)
 730+ 9FC7 C9           	ret
 731+ 9FC8
 732+ 9FC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 733+ 9FC8
 734+ 9FC8 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 735+ 9FCB 01 1F 00     	ld bc,31
 736+ 9FCE A7           	and a
 737+ 9FCF ED 4A        	adc hl,bc
 738+ 9FD1 22 FA 8B     	ld (Posicion_actual),hl
 739+ 9FD4 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 740+ 9FD7 CB C6        	set 0,(hl)
 741+ 9FD9 C9           	ret
 742+ 9FDA
 743+ 9FDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 744+ 9FDA
 745+ 9FDA              Reaparece_izquierda
 746+ 9FDA
 747+ 9FDA 2A FA 8B     	ld hl,(Posicion_actual)
 748+ 9FDD 01 1F 00     	ld bc,31
 749+ 9FE0 A7           	and a
 750+ 9FE1 ED 42        	sbc hl,bc
 751+ 9FE3 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 752+ 9FE6
 753+ 9FE6 21 F7 8B     	ld hl,Ctrl_0
 754+ 9FE9 CB CE        	set 1,(hl)
 755+ 9FEB
 756+ 9FEB 21 63 8C     	ld hl,Ctrl_4
 757+ 9FEE CB CE        	set 1,(hl)
 758+ 9FF0
 759+ 9FF0 C9           	ret
 760+ 9FF1
 761+ 9FF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 762+ 9FF1
 763+ 9FF1 24           Reaparece_abajo inc h
 764+ 9FF2 01 E0 17     	ld bc,$17e0
 765+ 9FF5 A7           	and a
 766+ 9FF6 ED 4A        	adc hl,bc
 767+ 9FF8 22 FA 8B     	ld (Posicion_actual),hl
 768+ 9FFB
 769+ 9FFB 21 F7 8B     	ld hl,Ctrl_0
 770+ 9FFE CB D6        	set 2,(hl)
 771+ A000
 772+ A000 C9           	ret
 773+ A001
 774+ A001              ; ---------- ---------- ---------- ---------- ---------- ----------
 775+ A001
 776+ A001 01 E0 17     Reaparece_arriba ld bc,$17e0
 777+ A004 A7           	and a
 778+ A005 ED 42        	sbc hl,bc
 779+ A007 22 FA 8B     	ld (Posicion_actual),hl
 780+ A00A 21 F7 8B     	ld hl,Ctrl_0
 781+ A00D CB DE        	set 3,(hl)
 782+ A00F C9           	ret
 783+ A010
 784+ A010              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 785+ A010              ;
 786+ A010              ;	15/07/23
 787+ A010
 788+ A010              Reinicio
 789+ A010
 790+ A010              ; Vamos a reiniciar los punteros y variables de movimiento.
 791+ A010
 792+ A010 AF           	xor a
 793+ A011 21 20 8C     	ld hl,Puntero_indice_mov_bucle
 794+ A014 CD 32 A0     	call Limpia_contenido_hl
 795+ A017
 796+ A017 21 FA 8B     	ld hl,Posicion_actual
 797+ A01A CD 32 A0     	call Limpia_contenido_hl
 798+ A01D
 799+ A01D CD 8B 94     	call Situa_Puntero_indice_mov
 800+ A020 CD 31 A1     	call Inicia_Puntero_mov
 801+ A023
 802+ A023 21 22 8C     	ld hl,Incrementa_puntero
 803+ A026 06 05        	ld b,5
 804+ A028 77           1 ld (hl),a
 805+ A029 23           	inc hl
 806+ A02A 10 FC        	djnz 1B
 807+ A02C
 808+ A02C 21 F6 8B     	ld hl,Ctrl_2
 809+ A02F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 810+ A031
 811+ A031 C9           	ret
 812+ A032
 813+ A032 77           Limpia_contenido_hl	ld (hl),a
 814+ A033 23           	inc hl
 815+ A034 77           	ld (hl),a
 816+ A035 C9           	ret
 817+ A036
 818+ A036              ; ----------------------------------------------------------------------------------------------------------------
 819+ A036              ;
 820+ A036              ;	18/6/24
 821+ A036              ;
 822+ A036
 823+ A036              Amadeus_a_izquierda
 824+ A036
 825+ A036              ;	Actualiza contador de movimientos.
 826+ A036
 827+ A036 21 BD 89     	ld hl,Comm_Amadeus
 828+ A039 35           	dec (hl)
 829+ A03A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 830+ A03C
 831+ A03C 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 832+ A03F 2B           	dec hl
 833+ A040 2B           	dec hl
 834+ A041 2B           	dec hl
 835+ A042 2B           	dec hl
 836+ A043 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 837+ A046
 838+ A046 21 62 8C     	ld hl,Ctrl_3
 839+ A049 CB EE        	set 5,(hl)
 840+ A04B
 841+ A04B C9           	ret
 842+ A04C
 843+ A04C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 844+ A04D C9           	ret
 845+ A04E
 846+ A04E
 847+ A04E              Amadeus_a_derecha
 848+ A04E
 849+ A04E              ;	Actualiza contador de movimientos.
 850+ A04E
 851+ A04E 21 BD 89     	ld hl,Comm_Amadeus
 852+ A051 34           	inc (hl)
 853+ A052 3E 7A        	ld a,$7a
 854+ A054 BE           	cp (hl)
 855+ A055 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 856+ A057
 857+ A057 2A BB 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 858+ A05A 23           	inc hl
 859+ A05B 23           	inc hl
 860+ A05C 23           	inc hl
 861+ A05D 23           	inc hl
 862+ A05E 22 BB 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 863+ A061
 864+ A061 21 62 8C     	ld hl,Ctrl_3
 865+ A064 CB EE        	set 5,(hl)
 866+ A066 C9           	ret
 867+ A067
 868+ A067 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 869+ A068 C9           	ret
# file closed: Direcciones.asm
2468  A069              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ A069              ; ----- ----- ----- ----- -----
   2+ A069              ;
   3+ A069              ;   28/12/23
   4+ A069
   5+ A069              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
   6+ A069
   7+ A069              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
   8+ A069
   9+ A069              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  10+ A069              ;                               Izquierda_y_subiendo+8 (11)
  11+ A069              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  12+ A069              ;                               Izquierda_y_subiendo+8 (8)
  13+ A069              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  14+ A069              ;                               Izquierda_y_subiendo+8 (8)
  15+ A069              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  16+ A069              ;                               Izquierda_y_subiendo+8 (8)
  17+ A069              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  18+ A069              ;                               Izquierda_y_subiendo+8 (8)
  19+ A069              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  20+ A069              ;                               Izquierda_y_subiendo+8 (7)
  21+ A069              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  22+ A069              ;                               Izquierda_y_subiendo+8 (7)
  23+ A069              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  24+ A069              ;                               Izquierda_y_subiendo+8 (7)
  25+ A069              Movimiento
  26+ A069
  27+ A069              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
  28+ A069
  29+ A069 3A F6 8B         ld a,(Ctrl_2)
  30+ A06C CB 57            bit 2,a
  31+ A06E 20 1B            jr nz, Desplazamiento_iniciado
  32+ A070
  33+ A070 2A 1E 8C         ld hl,(Puntero_mov)
  34+ A073 7E               ld a,(hl)
  35+ A074
  36+ A074              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  37+ A074
  38+ A074              Inicia_desplazamiento.
  39+ A074
  40+ A074              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  41+ A074
  42+ A074 CD 67 A1         call Ajusta_velocidad_desplazamiento
  43+ A077
  44+ A077              ; Iniciamos (Repetimos_mov).
  45+ A077
  46+ A077 7E               ld a,(hl)
  47+ A078 E6 0F            and $0f
  48+ A07A 32 24 8C         ld (Repetimos_desplazamiento),a
  49+ A07D 32 25 8C         ld (Repetimos_desplazamiento_backup),a
  50+ A080
  51+ A080              ; Iniciamos (Cola_de_desplazamiento).
  52+ A080
  53+ A080 23               inc hl
  54+ A081 7E               ld a,(hl)
  55+ A082 32 27 8C         ld (Cola_de_desplazamiento),a
  56+ A085 2B               dec hl
  57+ A086
  58+ A086 21 F6 8B         ld hl,Ctrl_2
  59+ A089 CB D6            set 2,(hl)
  60+ A08B
  61+ A08B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  62+ A08B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  63+ A08B
  64+ A08B              Desplazamiento_iniciado
  65+ A08B
  66+ A08B CD 3B A1         call Aplica_desplazamiento
  67+ A08E
  68+ A08E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  69+ A08E
  70+ A08E 3A 62 8C         ld a,(Ctrl_3)
  71+ A091 CB 4F            bit 1,a
  72+ A093 C0               ret nz
  73+ A094
  74+ A094 21 24 8C     3 ld hl,Repetimos_desplazamiento
  75+ A097 35               dec (hl)
  76+ A098 C0               ret nz
  77+ A099
  78+ A099              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  79+ A099              ; Hay que volver a ejecutar este desplazamiento ???.
  80+ A099              ; Analiza (Cola_de_desplazamiento).
  81+ A099
  82+ A099 3A 27 8C     Cola ld a,(Cola_de_desplazamiento)
  83+ A09C A7               and a
  84+ A09D CC 90 A1         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  85+ A0A0 28 30            jr z,Reinicia_el_movimiento
  86+ A0A2
  87+ A0A2 FE FF            cp $ff
  88+ A0A4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  89+ A0A6
  90+ A0A6 FE FE            cp $fe
  91+ A0A8 CC 15 A1         call z,Fijamos_bucle
  92+ A0AB 28 25            jr z,Reinicia_el_movimiento
  93+ A0AD
  94+ A0AD FE FD            cp $fd
  95+ A0AF 20 11            jr nz,1F
  96+ A0B1
  97+ A0B1              ; ---
  98+ A0B1              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  99+ A0B1
 100+ A0B1 3A F6 8B         ld a,(Ctrl_2)
 101+ A0B4 CB 5F            bit 3,a
 102+ A0B6 20 1A            jr nz,Reinicia_el_movimiento
 103+ A0B8
 104+ A0B8              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 105+ A0B8
 106+ A0B8 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 107+ A0BB CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 108+ A0BD
 109+ A0BD CD 26 A1         call Inicia_Repetimos_movimiento
 110+ A0C0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 111+ A0C2              ; ---
 112+ A0C2
 113+ A0C2 FE 01        1 cp 1
 114+ A0C4 CA FF A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 115+ A0C7
 116+ A0C7 3D               dec a
 117+ A0C8 32 27 8C         ld (Cola_de_desplazamiento),a
 118+ A0CB
 119+ A0CB 3A 25 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 120+ A0CE 32 24 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 121+ A0D1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 122+ A0D1 C9               ret
 123+ A0D2
 124+ A0D2              Reinicia_el_movimiento
 125+ A0D2
 126+ A0D2 3A F6 8B         ld a,(Ctrl_2)
 127+ A0D5 CB 5F            bit 3,a
 128+ A0D7 28 1B            jr z,2F
 129+ A0D9
 130+ A0D9              ; (Cola_de_desplazamiento)="254".
 131+ A0D9
 132+ A0D9 21 26 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 133+ A0DC 35               dec (hl)
 134+ A0DD 20 15            jr nz,2F
 135+ A0DF
 136+ A0DF              ; Fin de las repeticiones del último movimiento.
 137+ A0DF
 138+ A0DF 21 F6 8B         ld hl,Ctrl_2
 139+ A0E2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 140+ A0E4
 141+ A0E4 2A 1E 8C         ld hl,(Puntero_mov)
 142+ A0E7 23               inc hl
 143+ A0E8 23               inc hl
 144+ A0E9 23               inc hl
 145+ A0EA 22 1E 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 146+ A0ED              ;                                                               ; _ para ejecutar su mandato. :)
 147+ A0ED 7E               ld a,(hl)
 148+ A0EE 32 27 8C         ld (Cola_de_desplazamiento),a
 149+ A0F1
 150+ A0F1 C3 99 A0         jp Cola
 151+ A0F4
 152+ A0F4 CD 31 A1     2 call Inicia_Puntero_mov
 153+ A0F7
 154+ A0F7 21 F6 8B         ld hl,Ctrl_2
 155+ A0FA CB 96            res 2,(hl)
 156+ A0FC
 157+ A0FC C3 69 A0         jp Movimiento
 158+ A0FF
 159+ A0FF              Siguiente_desplazamiento
 160+ A0FF
 161+ A0FF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 162+ A0FF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 163+ A0FF
 164+ A0FF 21 F6 8B         ld hl,Ctrl_2
 165+ A102 CB 96            res 2,(hl)
 166+ A104
 167+ A104 2A 1E 8C         ld hl,(Puntero_mov)
 168+ A107 23               inc hl
 169+ A108 23               inc hl
 170+ A109 22 1E 8C         ld (Puntero_mov),hl
 171+ A10C
 172+ A10C 7E               ld a,(hl)
 173+ A10D A7               and a
 174+ A10E CC 90 A1         call z,Incrementa_Puntero_indice_mov
 175+ A111 CA D2 A0         jp z,Reinicia_el_movimiento
 176+ A114
 177+ A114 C9               ret
 178+ A115
 179+ A115              ; Subrutinas -----------------------------------------
 180+ A115              ; ---------- --------- --------- ---------- ----------
 181+ A115              ;
 182+ A115              ;   24/07/23
 183+ A115              ;
 184+ A115              ;   Fijamos_bucle
 185+ A115              ;
 186+ A115              ;
 187+ A115
 188+ A115              Fijamos_bucle
 189+ A115
 190+ A115 3A 22 8C         ld a,(Incrementa_puntero)
 191+ A118 3C               inc a
 192+ A119 32 23 8C         ld (Incrementa_puntero_backup),a
 193+ A11C
 194+ A11C CD 90 A1         call Incrementa_Puntero_indice_mov
 195+ A11F 2A 1C 8C         ld hl,(Puntero_indice_mov)
 196+ A122 22 20 8C         ld (Puntero_indice_mov_bucle),hl
 197+ A125 C9               ret
 198+ A126
 199+ A126              ; ---------- --------- --------- ---------- ----------
 200+ A126              ;
 201+ A126              ;   07/7/23
 202+ A126              ;
 203+ A126              ;   Inicia_Repetimos_movimiento
 204+ A126              ;
 205+ A126              ;
 206+ A126
 207+ A126              Inicia_Repetimos_movimiento
 208+ A126
 209+ A126              ; Iniciamos (Repetimos_movimiento).
 210+ A126
 211+ A126 DD 2A 1E 8C      ld ix,(Puntero_mov)
 212+ A12A DD 7E 02         ld a,(ix+2)
 213+ A12D 32 26 8C         ld (Repetimos_movimiento),a
 214+ A130
 215+ A130 C9               ret
 216+ A131
 217+ A131              ; ---------- --------- --------- ---------- ----------
 218+ A131              ;
 219+ A131              ;   26/6/23
 220+ A131              ;
 221+ A131              ;   Inicia_Puntero_mov
 222+ A131              ;
 223+ A131              ;
 224+ A131
 225+ A131 2A 1C 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 226+ A134 CD DB 91         call Extrae_address
 227+ A137 22 1E 8C         ld (Puntero_mov),hl
 228+ A13A C9               ret
 229+ A13B
 230+ A13B              ; ---------- --------- --------- ---------- ----------
 231+ A13B              ;
 232+ A13B              ;   27/06/23
 233+ A13B              ;
 234+ A13B              ;   Aplica_movimiento.
 235+ A13B
 236+ A13B              Aplica_desplazamiento
 237+ A13B
 238+ A13B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 239+ A13B
 240+ A13B 2A 1E 8C         ld hl, (Puntero_mov)
 241+ A13E
 242+ A13E 7E               ld a,(hl)
 243+ A13F E6 F0            and $f0
 244+ A141 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 245+ A142
 246+ A142 CB 7E            bit 7,(hl)
 247+ A144 28 03            jr z,1F
 248+ A146 CD 2E 9D         call Mov_up
 249+ A149 2A 1E 8C     1 ld hl, (Puntero_mov)
 250+ A14C CB 76            bit 6,(hl)
 251+ A14E 28 03            jr z,2F
 252+ A150 CD FA 9C         call Mov_down
 253+ A153
 254+ A153              ; Se ha aplicado reinicio ???
 255+ A153              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 256+ A153
 257+ A153              ;    ld a,(Ctrl_3)
 258+ A153              ;    bit 1,a
 259+ A153              ;    ret nz
 260+ A153
 261+ A153 2A 1E 8C     2 ld hl, (Puntero_mov)
 262+ A156 CB 6E            bit 5,(hl)
 263+ A158 28 03            jr z,3F
 264+ A15A CD 85 9E         call Mov_left
 265+ A15D 2A 1E 8C     3 ld hl, (Puntero_mov)
 266+ A160 CB 66            bit 4,(hl)
 267+ A162 C8               ret z
 268+ A163 CD 6C 9D         call Mov_right
 269+ A166 C9               ret
 270+ A167
 271+ A167              ; ---------- --------- --------- ---------- ----------
 272+ A167              ;
 273+ A167              ;   26/06/23
 274+ A167              ;
 275+ A167              ;   Ajusta_velocidad_desplazamiento.
 276+ A167
 277+ A167              Ajusta_velocidad_desplazamiento
 278+ A167
 279+ A167              ; 1er byte de la cadena de movimiento.
 280+ A167              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 281+ A167
 282+ A167 CD 85 A1         call Extrae_nibble_alto
 283+ A16A
 284+ A16A 32 12 8C         ld (Vel_up),a
 285+ A16D 79               ld a,c
 286+ A16E E6 0F            and $0f
 287+ A170 32 13 8C         ld (Vel_down),a
 288+ A173
 289+ A173              ; Saltamos al 2º byte de la cadena de movimiento.
 290+ A173              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 291+ A173
 292+ A173 23               inc hl
 293+ A174 CD 85 A1         call Extrae_nibble_alto
 294+ A177
 295+ A177 32 10 8C         ld (Vel_left),a
 296+ A17A 79               ld a,c
 297+ A17B E6 0F            and $0f
 298+ A17D 32 11 8C         ld (Vel_right),a
 299+ A180
 300+ A180              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 301+ A180
 302+ A180 23               inc hl
 303+ A181 22 1E 8C         ld (Puntero_mov),hl
 304+ A184 C9               ret
 305+ A185
 306+ A185 06 04        Extrae_nibble_alto ld b,4
 307+ A187 7E               ld a,(hl)
 308+ A188 4F               ld c,a
 309+ A189 E6 F0            and $f0
 310+ A18B CB 3F        1 srl a
 311+ A18D 10 FC            djnz 1B
 312+ A18F C9               ret
 313+ A190
 314+ A190              ; ---------- --------- --------- ---------- ----------
 315+ A190              ;
 316+ A190              ;   5/7/23
 317+ A190              ;
 318+ A190              ;   Incrementa_Puntero_indice_mov
 319+ A190
 320+ A190              Incrementa_Puntero_indice_mov
 321+ A190
 322+ A190 21 22 8C         ld hl,Incrementa_puntero
 323+ A193 34               inc (hl)
 324+ A194
 325+ A194 2A 1C 8C         ld hl,(Puntero_indice_mov)
 326+ A197 01 02 00         ld bc,2
 327+ A19A A7               and a
 328+ A19B 09               add hl,bc
 329+ A19C 22 1C 8C         ld (Puntero_indice_mov),hl
 330+ A19F
 331+ A19F 7E               ld a,(hl)
 332+ A1A0 A7               and a
 333+ A1A1
 334+ A1A1              ;! STOP. Fin del patrón de movimiento de la entidad.
 335+ A1A1
 336+ A1A1              ;    jr z,$
 337+ A1A1
 338+ A1A1              ;! Reinicia el Patrón de movimiento.
 339+ A1A1
 340+ A1A1 CC A6 A1         call z,Inicializa_Puntero_indice_mov_2
 341+ A1A4
 342+ A1A4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 343+ A1A5
 344+ A1A5 C9               ret
 345+ A1A6
 346+ A1A6              ; ---------- --------- --------- ---------- ----------
 347+ A1A6              ;
 348+ A1A6              ;   15/01/24
 349+ A1A6              ;
 350+ A1A6              ;   Inicializa_Puntero_indice_mov
 351+ A1A6
 352+ A1A6              Inicializa_Puntero_indice_mov_2
 353+ A1A6
 354+ A1A6              ; Existe etiqueta de bucle principal???
 355+ A1A6
 356+ A1A6 2A 20 8C         ld hl,(Puntero_indice_mov_bucle)
 357+ A1A9 24               inc h
 358+ A1AA 25               dec h
 359+ A1AB 28 05            jr z,2F
 360+ A1AD
 361+ A1AD 22 1C 8C         ld (Puntero_indice_mov),hl
 362+ A1B0 18 14            jr 3F
 363+ A1B2
 364+ A1B2              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 365+ A1B2
 366+ A1B2 3A 22 8C     2 ld a,(Incrementa_puntero)
 367+ A1B5 47               ld b,a
 368+ A1B6
 369+ A1B6 2A 1C 8C         ld hl,(Puntero_indice_mov)
 370+ A1B9 2B           1 dec hl
 371+ A1BA 2B               dec hl
 372+ A1BB 10 FC            djnz 1B
 373+ A1BD 22 1C 8C         ld (Puntero_indice_mov),hl
 374+ A1C0
 375+ A1C0 AF               xor a
 376+ A1C1 32 22 8C         ld (Incrementa_puntero),a
 377+ A1C4 18 06            jr 4F
 378+ A1C6
 379+ A1C6 3A 23 8C     3 ld a,(Incrementa_puntero_backup)
 380+ A1C9 32 22 8C         ld (Incrementa_puntero),a
 381+ A1CC C9           4 ret
 382+ A1CD
 383+ A1CD              ; ----------------------------------------------------------------------
 384+ A1CD              ;
 385+ A1CD              ;   24/11/24
 386+ A1CD              ;
 387+ A1CD              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 388+ A1CD
 389+ A1CD DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 390+ A1D0 CD 99 95         call Calcula_salto_en_BC
 391+ A1D3 21 14 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 392+ A1D6 A7               and a
 393+ A1D7 ED 4A            adc hl,bc
 394+ A1D9 C9               ret
 395+ A1DA
 396+ A1DA              ; ----------------------------------------------------------------------
 397+ A1DA              ;
 398+ A1DA              ;   24/11/24
 399+ A1DA              ;
 400+ A1DA              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 401+ A1DA              ;
 402+ A1DA              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 403+ A1DA
 404+ A1DA 4E           Transfiere_datos_de_contadores ld c,(hl)
 405+ A1DB 23               inc hl
 406+ A1DC 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 407+ A1DD DD 71 09         ld (ix+9),c
 408+ A1E0 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 409+ A1E3 C9               ret
 410+ A1E4
# file closed: Movimiento.asm
2469  A1E4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A1E4              ; --------------------------------------------------------------------------------------
   2+ A1E4              ;
   3+ A1E4              ;   25/10/24
   4+ A1E4              ;
   5+ A1E4
   6+ A1E4              Pinta_disparos_Entidades
   7+ A1E4
   8+ A1E4 ED 73 3A 8C      ld (Stack),sp
   9+ A1E8 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A1EC
  11+ A1EC 3E 02            ld a,2
  12+ A1EE 08               ex af,af
  13+ A1EF
  14+ A1EF 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A1F1              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A1F1              ;                                     _ No encontraría "0".
  17+ A1F1 FD E1        4 pop iy
  18+ A1F3 D1               pop de                          ; 1er .db IYL
  19+ A1F4              ;                                   ; 2º  .db IYH
  20+ A1F4              ;                                   ; 3er .db E.
  21+ A1F4              ;   Album vacío ???
  22+ A1F4
  23+ A1F4 FD 7D            ld a,iyl
  24+ A1F6 FD 84            add iyh
  25+ A1F8 83               add e
  26+ A1F9 28 1F            jr z,1F
  27+ A1FB
  28+ A1FB              ;   Imprime album, (contiene datos).
  29+ A1FB
  30+ A1FB 3B               dec sp
  31+ A1FC
  32+ A1FC E1               pop hl                          ; Puntero de impresión en HL.
  33+ A1FD
  34+ A1FD              ; Imprime el 1er scanline del disparo.
  35+ A1FD
  36+ A1FD FD 7D            ld a,iyl
  37+ A1FF AE               xor (hl)
  38+ A200 77               ld (hl),a
  39+ A201
  40+ A201 2C               inc l
  41+ A202
  42+ A202 FD 7C            ld a,iyh
  43+ A204 AE               xor (hl)
  44+ A205 77               ld (hl),a
  45+ A206
  46+ A206 2C               inc l
  47+ A207
  48+ A207 7B               ld a,e
  49+ A208 AE               xor (hl)
  50+ A209 77               ld (hl),a
  51+ A20A
  52+ A20A              ; Imprime el 2º scanline del disparo.
  53+ A20A
  54+ A20A E1               pop hl
  55+ A20B
  56+ A20B FD 7D            ld a,iyl
  57+ A20D AE               xor (hl)
  58+ A20E 77               ld (hl),a
  59+ A20F
  60+ A20F 2C               inc l
  61+ A210
  62+ A210 FD 7C            ld a,iyh
  63+ A212 AE               xor (hl)
  64+ A213 77               ld (hl),a
  65+ A214
  66+ A214 2C               inc l
  67+ A215
  68+ A215 7B               ld a,e
  69+ A216 AE               xor (hl)
  70+ A217 77               ld (hl),a
  71+ A218
  72+ A218 10 D7            djnz 4B
  73+ A21A
  74+ A21A 08           1 ex af,af
  75+ A21B 3D               dec a
  76+ A21C 20 05            jr nz,2F
  77+ A21E
  78+ A21E ED 7B 3A 8C      ld sp,(Stack)
  79+ A222 C9               ret
  80+ A223
  81+ A223 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A227 08               ex af,af
  83+ A228 18 C5            jr 3B
  84+ A22A
  85+ A22A              ; --------------------------------------------------------------------------------------
  86+ A22A              ;
  87+ A22A              ;   2/12/24
  88+ A22A              ;
  89+ A22A
  90+ A22A              Motor_de_disparos_entidades
  91+ A22A
  92+ A22A 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A22D FE 07            cp 7
  94+ A22F C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A230
  96+ A230 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A232 21 26 89         ld hl,Indice_de_disparos_entidades
  98+ A235
  99+ A235 CD DB 91     1 call Extrae_address
 100+ A238 1C               inc e
 101+ A239 1C               inc e
 102+ A23A ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A23E
 104+ A23E               ; Caja vacía ???
 105+ A23E
 106+ A23E 2D               dec l
 107+ A23F 7E               ld a,(hl)
 108+ A240 A7               and a
 109+ A241 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A243
 111+ A243              ; --- Trabajamos con caja:
 112+ A243
 113+ A243 2C               inc l
 114+ A244
 115+ A244              ; --- Existe posibilidad de impacto ???
 116+ A244
 117+ A244 3A 8B 8C         ld a,(Shield)
 118+ A247 A7               and a
 119+ A248 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A24A
 121+ A24A CB 46            bit 0,(hl)
 122+ A24C C4 8C A2         call nz, Comprueba_impacto_con_Amadeus
 123+ A24F 20 37            jr nz,3F
 124+ A251
 125+ A251 CD 13 A3     6 call Rota_disparo_si_procede
 126+ A254
 127+ A254              ; ------------------------------------------------------------
 128+ A254
 129+ A254 2D               dec l
 130+ A255 2D               dec l
 131+ A256
 132+ A256 CD DB 91         call Extrae_address
 133+ A259
 134+ A259              ;   (Puntero_de_impresion) del disparo en HL
 135+ A259              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A259
 137+ A259 3A 64 8C         ld a,(Ctrl_5)
 138+ A25C CB 57            bit 2,a
 139+ A25E 28 09            jr z,4F
 140+ A260
 141+ A260 CB 97            res 2,a
 142+ A262 32 64 8C         ld (Ctrl_5),a
 143+ A265 2C               inc l
 144+ A266 2C               inc l
 145+ A267 18 0C            jr 5F
 146+ A269
 147+ A269 CB 5F        4 bit 3,a
 148+ A26B 28 08            jr z,5F
 149+ A26D
 150+ A26D CB 9F            res 3,a
 151+ A26F 32 64 8C         ld (Ctrl_5),a
 152+ A272 2D               dec l
 153+ A273 2D               dec l
 154+ A274 2D               dec l
 155+ A275
 156+ A275              ; ---------------------------------------------------------------------
 157+ A275
 158+ A275              ;! Velocidad del disparo de entidades.
 159+ A275
 160+ A275 CD B4 9C     5 call NextScan
 161+ A278 CD B4 9C         call NextScan
 162+ A27B
 163+ A27B              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A27B
 165+ A27B CD F0 A2         call Fin_de_disparo_de_entidad
 166+ A27E
 167+ A27E EB               ex de,hl
 168+ A27F
 169+ A27F 73               ld (hl),e
 170+ A280 23               inc hl
 171+ A281 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A282
 173+ A282 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A285 18 02            jr 2F
 175+ A287
 176+ A287 C9               ret
 177+ A288
 178+ A288 EB           3 ex de,hl
 179+ A289 10 AA        2 djnz 1B
 180+ A28B
 181+ A28B C9               ret
 182+ A28C
 183+ A28C              ; ------------- ------------- ------------
 184+ A28C              ;
 185+ A28C              ;   1/11/24
 186+ A28C
 187+ A28C              Comprueba_impacto_con_Amadeus
 188+ A28C
 189+ A28C              ;   El disparo se encuentra en zona de Amadeus.
 190+ A28C              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A28C
 192+ A28C              ;   Modificamos registros, así que guardamos ...
 193+ A28C
 194+ A28C C5               push bc
 195+ A28D E5               push hl
 196+ A28E D5               push de
 197+ A28F
 198+ A28F 2D               dec l
 199+ A290 2D               dec l
 200+ A291
 201+ A291 CD DB 91         call Extrae_address
 202+ A294
 203+ A294 3A B5 89         ld a,(CX_Amadeus)
 204+ A297 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A298
 206+ A298 7D               ld a,l
 207+ A299 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A29B
 209+ A29B 06 03            ld b,3
 210+ A29D
 211+ A29D B9           1 cp c
 212+ A29E 28 15            jr z,Coincidencia
 213+ A2A0 0C               inc c
 214+ A2A1 10 FA            djnz 1B
 215+ A2A3
 216+ A2A3 0D               dec c
 217+ A2A4 0D               dec c
 218+ A2A5 0D               dec c
 219+ A2A6
 220+ A2A6 3C               inc a
 221+ A2A7 B9               cp c
 222+ A2A8 28 0B            jr z,Coincidencia
 223+ A2AA
 224+ A2AA 3C               inc a
 225+ A2AB B9               cp c
 226+ A2AC 28 07            jr z,Coincidencia
 227+ A2AE
 228+ A2AE D1           2 pop de
 229+ A2AF E1               pop hl
 230+ A2B0 C1               pop bc
 231+ A2B1
 232+ A2B1              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A2B1
 234+ A2B1 CB 86            res 0,(hl)
 235+ A2B3 AF               xor a                       ; Z before RET.
 236+ A2B4 C9               ret
 237+ A2B5
 238+ A2B5              Coincidencia
 239+ A2B5
 240+ A2B5              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A2B5              ;   Existe posibilidad de impacto.
 242+ A2B5              ;   Vamos a averiguarlo ...
 243+ A2B5
 244+ A2B5 1D               dec e
 245+ A2B6 1D               dec e
 246+ A2B7 1D               dec e
 247+ A2B8
 248+ A2B8              ; DE en Puntero_objeto del disparo.
 249+ A2B8              ; HL en Puntero_de_impresión del disparo.
 250+ A2B8
 251+ A2B8              ; Comparador:
 252+ A2B8
 253+ A2B8 06 03            ld b,3
 254+ A2BA
 255+ A2BA 1A           3 ld a,(de)
 256+ A2BB 4F               ld c,a
 257+ A2BC A6               and (hl)
 258+ A2BD B9               cp c
 259+ A2BE 20 06            jr nz,Amadeus_impactado
 260+ A2C0
 261+ A2C0 2C               inc l
 262+ A2C1 1C               inc e
 263+ A2C2
 264+ A2C2 10 F6            djnz 3B
 265+ A2C4
 266+ A2C4 18 E8            jr 2B
 267+ A2C6
 268+ A2C6              Amadeus_impactado
 269+ A2C6
 270+ A2C6              ; Borramos disparo.
 271+ A2C6
 272+ A2C6              ;   Exclusion.
 273+ A2C6
 274+ A2C6 D1               pop de
 275+ A2C7 E1               pop hl
 276+ A2C8
 277+ A2C8 E5               push hl
 278+ A2C9 D5               push de
 279+ A2CA
 280+ A2CA CD 7E A3         call Borra_6_bytes
 281+ A2CD
 282+ A2CD 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A2D0 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A2D1
 285+ A2D1              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A2D1
 287+ A2D1 21 B8 89         ld hl,Impacto_Amadeus
 288+ A2D4 36 01            ld (hl),1
 289+ A2D6
 290+ A2D6              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A2D6              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A2D6
 293+ A2D6 3A B9 89         ld a,(p.imp.amadeus)
 294+ A2D9 FE DE            cp $de
 295+ A2DB 20 04            jr nz,1F
 296+ A2DD
 297+ A2DD 3D               dec a
 298+ A2DE 32 B9 89         ld (p.imp.amadeus),a
 299+ A2E1
 300+ A2E1              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A2E1
 302+ A2E1 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A2E4 21 BB 89         ld hl,Pamm_Amadeus
 304+ A2E7
 305+ A2E7 73               ld (hl),e
 306+ A2E8 23               inc hl
 307+ A2E9 72               ld (hl),d
 308+ A2EA
 309+ A2EA D1               pop de
 310+ A2EB E1               pop hl
 311+ A2EC C1               pop bc
 312+ A2ED
 313+ A2ED AF               xor a
 314+ A2EE 3C               inc a               ; NZ before RET.
 315+ A2EF C9               ret
 316+ A2F0
 317+ A2F0              ; ------------- ------------- ------------
 318+ A2F0              ;
 319+ A2F0              ;   31/10/24
 320+ A2F0
 321+ A2F0              Fin_de_disparo_de_entidad
 322+ A2F0
 323+ A2F0              ; Estamos en zona de Amadeus ??
 324+ A2F0
 325+ A2F0 7C               ld a,h
 326+ A2F1 FE 54            cp $54
 327+ A2F3 38 0D            jr c,1F
 328+ A2F5
 329+ A2F5 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A2F6
 331+ A2F6 5D               ld e,l
 332+ A2F7 54               ld d,h
 333+ A2F8
 334+ A2F8 21 E0 57         ld hl,$57e0
 335+ A2FB ED 52            sbc hl,de
 336+ A2FD
 337+ A2FD 38 6F            jr c,Elimina_disparo_entidad
 338+ A2FF
 339+ A2FF 6B               ld l,e
 340+ A300 62               ld h,d
 341+ A301
 342+ A301 D1               pop de
 343+ A302
 344+ A302 7C           1 ld a,h
 345+ A303 FE 50            cp $50
 346+ A305 D8               ret c
 347+ A306
 348+ A306 7D               ld a,l
 349+ A307 FE C0            cp $c0
 350+ A309 D8               ret c
 351+ A30A
 352+ A30A              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A30A              ; Así podremos comprobar si hay colisión más adelante.
 354+ A30A
 355+ A30A 1C               inc e
 356+ A30B 1C               inc e
 357+ A30C
 358+ A30C EB               ex de,hl
 359+ A30D CB C6            set 0,(hl)
 360+ A30F EB               ex de,hl
 361+ A310
 362+ A310 1D               dec e
 363+ A311 1D               dec e
 364+ A312
 365+ A312 C9               ret
 366+ A313
 367+ A313              ; ----------------------------------------------------------
 368+ A313              ;
 369+ A313              ;   08/10/24
 370+ A313
 371+ A313              ;   Estructura de un disparo de entidades.
 372+ A313
 373+ A313              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A313              ; 	defw 0											; Puntero de impresión.
 375+ A313              ;	defw 0											; Control.
 376+ A313
 377+ A313              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A313              ;   _de la entidad en el momento de disparar.
 379+ A313
 380+ A313              ;   El byte alto muestra la siguiente información:
 381+ A313              ;
 382+ A313              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A313              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A313              ;
 385+ A313              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A313              ;
 387+ A313              ;                        10xx ..... Izquierda.
 388+ A313              ;                        01xx ..... Derecha.
 389+ A313              ;                        00xx ..... Recto.
 390+ A313
 391+ A313              Rota_disparo_si_procede
 392+ A313
 393+ A313              ;   Nos situamos en el byte alto de (Control).
 394+ A313
 395+ A313 CB 76            bit 6,(hl)
 396+ A315 20 2D            jr nz,Rota_a_derecha
 397+ A317 CB 7E            bit 7,(hl)
 398+ A319 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A31A
 400+ A31A              Rota_a_izq
 401+ A31A
 402+ A31A E5               push hl
 403+ A31B
 404+ A31B 7D               ld a,l
 405+ A31C D6 05            sub 5
 406+ A31E 6F               ld l,a
 407+ A31F
 408+ A31F E5               push hl
 409+ A320 FD E1            pop iy
 410+ A322
 411+ A322 A7               and a
 412+ A323
 413+ A323 FD CB 02 16      rl (iy+02)
 414+ A327 FD CB 01 16      rl (iy+01)
 415+ A32B FD CB 00 16      rl (iy+00)
 416+ A32F
 417+ A32F 30 3B            jr nc,Exit
 418+ A331
 419+ A331              ; Desplazamiento completo hasta Carry.
 420+ A331              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A331
 422+ A331 FD 36 02 03      ld (iy+02),$03
 423+ A335 FD 36 01 00      ld (iy+01),$00
 424+ A339 FD 36 00 00      ld (iy+00),$00
 425+ A33D
 426+ A33D 21 64 8C         ld hl,Ctrl_5
 427+ A340 CB DE            set 3,(hl)
 428+ A342
 429+ A342 18 28            jr Exit
 430+ A344
 431+ A344              Rota_a_derecha
 432+ A344
 433+ A344 E5               push hl
 434+ A345
 435+ A345 7D               ld a,l
 436+ A346 D6 05            sub 5
 437+ A348 6F               ld l,a
 438+ A349
 439+ A349 E5               push hl
 440+ A34A FD E1            pop iy
 441+ A34C
 442+ A34C A7               and a
 443+ A34D
 444+ A34D FD CB 00 1E      rr (iy+00)
 445+ A351 FD CB 01 1E      rr (iy+01)
 446+ A355 FD CB 02 1E      rr (iy+02)
 447+ A359
 448+ A359 30 11            jr nc,Exit
 449+ A35B
 450+ A35B              ; Desplazamiento completo hasta Carry.
 451+ A35B              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A35B
 453+ A35B FD 36 00 01      ld (iy+00),$01
 454+ A35F FD 36 01 80      ld (iy+01),$80
 455+ A363 FD 36 02 00      ld (iy+02),$00
 456+ A367
 457+ A367 21 64 8C         ld hl,Ctrl_5
 458+ A36A CB D6            set 2,(hl)
 459+ A36C
 460+ A36C E1           Exit pop hl
 461+ A36D C9               ret
 462+ A36E
 463+ A36E              ; ------------ ----------- ------------
 464+ A36E              ;
 465+ A36E              ;   25/9/24
 466+ A36E
 467+ A36E              Elimina_disparo_entidad
 468+ A36E
 469+ A36E 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A371 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A372
 472+ A372 E1               pop hl
 473+ A373 E5               push hl
 474+ A374
 475+ A374 2C               inc l
 476+ A375 2C               inc l
 477+ A376
 478+ A376 CD 7E A3         call Borra_6_bytes
 479+ A379
 480+ A379 D1               pop de
 481+ A37A
 482+ A37A 21 00 00         ld hl,0
 483+ A37D
 484+ A37D C9               ret
 485+ A37E
 486+ A37E              ; ----- ----- ----- ----- -----
 487+ A37E
 488+ A37E              Borra_6_bytes
 489+ A37E
 490+ A37E 16 06            ld d,6                                                    ; Contador
 491+ A380 AF               xor a                                                     ; Borrador
 492+ A381 77           1 ld (hl),a
 493+ A382 2D               dec l
 494+ A383 15               dec d
 495+ A384 20 FB            jr nz,1B
 496+ A386
 497+ A386 C9               ret
 498+ A387
 499+ A387              ; --------------------------------------------------------------------------------------
 500+ A387              ;
 501+ A387              ;   12/10/24
 502+ A387              ;
 503+ A387
 504+ A387              Genera_datos_de_impresion_disparos_Entidades
 505+ A387
 506+ A387 3E 07            ld a,7
 507+ A389 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A38A
 509+ A38A              ; ---------------
 510+ A38A
 511+ A38A              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A38A
 513+ A38A 21 26 89          ld hl,Indice_de_disparos_entidades
 514+ A38D
 515+ A38D CD DB 91     1 call Extrae_address
 516+ A390
 517+ A390 13               inc de
 518+ A391 13               inc de
 519+ A392
 520+ A392 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A396
 522+ A396 2D               dec l
 523+ A397 7E               ld a,(hl)
 524+ A398 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A399 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A39B
 527+ A39B              ; ----- ----- ----- -----
 528+ A39B
 529+ A39B 2D               dec l
 530+ A39C CD DB 91         call Extrae_address
 531+ A39F E5               push hl
 532+ A3A0
 533+ A3A0 1D               dec e
 534+ A3A1
 535+ A3A1 EB               ex de,hl
 536+ A3A2
 537+ A3A2 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A3A3 2D               dec l
 539+ A3A4 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A3A5 2D               dec l
 541+ A3A6 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A3A7
 543+ A3A7 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A3A8
 545+ A3A8              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A3A8
 547+ A3A8 FD 2A 4E 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A3AC FD 73 00         ld (iy+0),e
 549+ A3AF FD 70 01         ld (iy+1),b
 550+ A3B2 FD 71 02         ld (iy+2),c
 551+ A3B5
 552+ A3B5 FD 75 03         ld (iy+3),l
 553+ A3B8 FD 74 04         ld (iy+4),h
 554+ A3BB
 555+ A3BB CD B4 9C         call NextScan
 556+ A3BE
 557+ A3BE FD 75 05         ld (iy+5),l
 558+ A3C1 FD 74 06         ld (iy+6),h
 559+ A3C4
 560+ A3C4 FD E5            push iy
 561+ A3C6 E1               pop hl
 562+ A3C7
 563+ A3C7 3E 07            ld a,7
 564+ A3C9 85               add l
 565+ A3CA 6F               ld l,a
 566+ A3CB
 567+ A3CB 22 4E 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A3CE
 569+ A3CE              ; ----- ----- ----- -----
 570+ A3CE
 571+ A3CE              Situa_en_siguiente_caja
 572+ A3CE
 573+ A3CE 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A3CF 3D               dec a
 575+ A3D0 C8               ret z
 576+ A3D1
 577+ A3D1 08               ex af,af
 578+ A3D2 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A3D5 18 B6            jr 1B
 580+ A3D7
 581+ A3D7              ; --------------------------------------------------------------------------------------
 582+ A3D7              ;
 583+ A3D7              ;   12/10/24
 584+ A3D7              ;
 585+ A3D7
 586+ A3D7              Genera_disparo_de_entidad_maldosa
 587+ A3D7
 588+ A3D7              ;   Estructura de un disparo de entidades.
 589+ A3D7
 590+ A3D7              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A3D7              ; 	defw 0											; Puntero de impresión.
 592+ A3D7              ;	defw 0											; Control.
 593+ A3D7
 594+ A3D7              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A3D7              ;   _de la entidad en el momento de disparar.
 596+ A3D7
 597+ A3D7              ;   El byte de control muestra la siguiente información:
 598+ A3D7
 599+ A3D7              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A3D7              ;
 601+ A3D7              ;                        10xx ..... Izquierda.
 602+ A3D7              ;                        01xx ..... Derecha.
 603+ A3D7              ;                        00xx ..... Recto.
 604+ A3D7
 605+ A3D7              ;*  Exclusiones.
 606+ A3D7
 607+ A3D7              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A3D7              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A3D7
 610+ A3D7 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A3DA A7               and a
 612+ A3DB C8               ret z
 613+ A3DC
 614+ A3DC 3A EC 8B         ld a,(Coordenada_y)
 615+ A3DF A7               and a
 616+ A3E0 C8               ret z
 617+ A3E1
 618+ A3E1 3D               dec a
 619+ A3E2 C8               ret z
 620+ A3E3
 621+ A3E3 FE 10            cp 16
 622+ A3E5 D0               ret nc
 623+ A3E6
 624+ A3E6              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A3E6              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A3E6              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A3E6
 628+ A3E6 21 54 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A3E9 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A3EA
 631+ A3EA              ;   Decrementa el numero de disparos de entidades.
 632+ A3EA
 633+ A3EA 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A3ED 35               dec (hl)
 635+ A3EE
 636+ A3EE 21 26 89         ld hl,Indice_de_disparos_entidades
 637+ A3F1
 638+ A3F1 CD DB 91     1 call Extrae_address
 639+ A3F4
 640+ A3F4 13               inc de
 641+ A3F5 13               inc de
 642+ A3F6
 643+ A3F6 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A3FA
 645+ A3FA              ;   Comprobamos si la caja está vacía.
 646+ A3FA
 647+ A3FA 2D               dec l
 648+ A3FB 7E               ld a,(hl)
 649+ A3FC A7               and a
 650+ A3FD 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A3FF 2C               inc l
 652+ A400
 653+ A400              ;   Caja vacía, vamos a generar un disparo.
 654+ A400              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A400
 656+ A400 CD 21 A4         call Genera_byte_inclinacion
 657+ A403
 658+ A403 7E               ld a,(hl)
 659+ A404 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A405
 661+ A405 2D               dec l
 662+ A406
 663+ A406 CD 3D A4         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A409
 665+ A409 70               ld (hl),b
 666+ A40A 2D               dec l
 667+ A40B 71               ld (hl),c
 668+ A40C
 669+ A40C 2D               dec l
 670+ A40D
 671+ A40D              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A40D
 673+ A40D FD 7E 02         ld a,(iy+02)
 674+ A410 77               ld (hl),a
 675+ A411 2D               dec l
 676+ A412
 677+ A412 FD 7E 01         ld a,(iy+01)
 678+ A415 77               ld (hl),a
 679+ A416 2D               dec l
 680+ A417
 681+ A417 FD 7E 00         ld a,(iy+00)
 682+ A41A 77               ld (hl),a
 683+ A41B
 684+ A41B C9               ret
 685+ A41C
 686+ A41C              ;   --- --- ---
 687+ A41C
 688+ A41C              Situa_en_siguiente_disparo
 689+ A41C
 690+ A41C 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A41F 18 D0            jr 1B
 692+ A421
 693+ A421              ; --------------------------------------------------------------------------------------
 694+ A421              ;
 695+ A421              ;   09/10/24
 696+ A421              ;
 697+ A421
 698+ A421              Genera_byte_inclinacion
 699+ A421
 700+ A421              ; Determina tendencia del disparo.
 701+ A421
 702+ A421 3A B5 89         ld a,(CX_Amadeus)
 703+ A424 47               ld b,a
 704+ A425 3A EB 8B         ld a,(Coordenada_X)
 705+ A428 90               sub b
 706+ A429 38 07            jr c,Disparo_a_derecha
 707+ A42B
 708+ A42B FE 06        Disparo_a_izquierda cp 6
 709+ A42D
 710+ A42D D8               ret c
 711+ A42E C8               ret z
 712+ A42F
 713+ A42F CB FE            set 7,(hl)
 714+ A431 C9               ret
 715+ A432
 716+ A432 47           Disparo_a_derecha ld b,a
 717+ A433 3E FF            ld a,$ff
 718+ A435 90               sub b
 719+ A436
 720+ A436 FE 05            cp 5
 721+ A438
 722+ A438 D8               ret c
 723+ A439 C8               ret z
 724+ A43A
 725+ A43A CB F6            set 6,(hl)
 726+ A43C C9               ret
 727+ A43D
 728+ A43D              ; --------------------------------------------------------------------------------------
 729+ A43D              ;
 730+ A43D              ;   09/10/24
 731+ A43D              ;
 732+ A43D
 733+ A43D              Modifica_puntero_de_impresion
 734+ A43D
 735+ A43D              ;   Puntero de impresión del disparo en BC.
 736+ A43D
 737+ A43D E5               push hl
 738+ A43E
 739+ A43E 2A 67 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A441 CD B4 9C         call NextScan
 741+ A444
 742+ A444 4D               ld c,l
 743+ A445 44               ld b,h
 744+ A446
 745+ A446 E1               pop hl
 746+ A447
 747+ A447 08               ex af,af
 748+ A448 CB 77            bit 6,a
 749+ A44A 28 06            jr z,1F
 750+ A44C
 751+ A44C FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A450 0C               inc c
 753+ A451 C9               ret
 754+ A452
 755+ A452 CB 7F        1 bit 7,a
 756+ A454 28 F6            jr z,2B
 757+ A456
 758+ A456 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A45A 0D               dec c
 760+ A45B
 761+ A45B C9               ret
 762+ A45C
 763+ A45C              ; --------------------------------------------------------------------------------------
 764+ A45C              ;
 765+ A45C              ;   28/11/24
 766+ A45C              ;
 767+ A45C
 768+ A45C              Compara_con_coordenadas_de_disparo
 769+ A45C
 770+ A45C DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A45F 47               ld b,a
 772+ A460 3A 6C 8C         ld a,(Coordenadas_disparo_certero)
 773+ A463 90               sub b
 774+ A464
 775+ A464              ; A = "0" ok
 776+ A464              ; A = "1" ok
 777+ A464
 778+ A464 28 08            jr z,Comprueba_coordenada_X
 779+ A466 3D               dec a
 780+ A467 28 05            jr z,Comprueba_coordenada_X
 781+ A469
 782+ A469              ; A = "$ff" ok
 783+ A469
 784+ A469 FE FE            cp $fe
 785+ A46B 28 01            jr z,Comprueba_coordenada_X
 786+ A46D
 787+ A46D C9               ret
 788+ A46E
 789+ A46E              Comprueba_coordenada_X
 790+ A46E
 791+ A46E DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A471 47               ld b,a
 793+ A472 21 6D 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A475 7E               ld a,(hl)
 795+ A476 90               sub b
 796+ A477
 797+ A477              ; A = "0" ok
 798+ A477              ; A = "1" ok
 799+ A477
 800+ A477 28 09            jr z,Activa_Impacto_en_entidad
 801+ A479 3D               dec a
 802+ A47A 28 06            jr z,Activa_Impacto_en_entidad
 803+ A47C
 804+ A47C              ; A = "2" ok
 805+ A47C
 806+ A47C 3D               dec a
 807+ A47D 28 03            jr z,Activa_Impacto_en_entidad
 808+ A47F
 809+ A47F              ; A = "$ff"
 810+ A47F
 811+ A47F FE FD            cp $fd
 812+ A481 C0               ret nz
 813+ A482
 814+ A482              Activa_Impacto_en_entidad
 815+ A482
 816+ A482              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A482
 818+ A482 3E 02            ld a,2
 819+ A484 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A487
 821+ A487              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A487
 823+ A487 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A48A
 825+ A48A DD 73 07         ld (ix+7),e
 826+ A48D DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A490
 828+ A490              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A490
 830+ A490 21 69 8C         ld hl,Impacto2
 831+ A493 CB 9E            res 3,(hl)
 832+ A495
 833+ A495 C9               ret
 834+ A496
 835+ A496              ; --------------------------------------------------------------------------------------
 836+ A496              ;
 837+ A496              ;   13/10/24
 838+ A496              ;
 839+ A496
 840+ A496              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A496
 842+ A496              Limpia_album_de_pintado_disparos_Amadeus
 843+ A496
 844+ A496 2A 46 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A499 06 06            ld b,6
 846+ A49B AF               xor a
 847+ A49C 77           1 ld (hl),a
 848+ A49D 2C               inc l
 849+ A49E 10 FC            djnz 1B
 850+ A4A0
 851+ A4A0 C9               ret
 852+ A4A1
 853+ A4A1              ; --------------------------------------------------------------------------------------
 854+ A4A1              ;
 855+ A4A1              ;   29/09/24
 856+ A4A1              ;
 857+ A4A1
 858+ A4A1              Calcula_bytes_pintado_disparos
 859+ A4A1
 860+ A4A1 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A4A4 45               ld b,l
 862+ A4A5 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A4A8 7D               ld a,l
 864+ A4A9
 865+ A4A9 90               sub b
 866+ A4AA 32 50 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A4AD
 868+ A4AD C9               ret
 869+ A4AE
 870+ A4AE              ; --------------------------------------------------------------------------------------
 871+ A4AE              ;
 872+ A4AE              ;   26/10/24
 873+ A4AE              ;
 874+ A4AE              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A4AE              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A4AE              ;   _disparos que el álbum del FRAME actual).
 877+ A4AE
 878+ A4AE              Limpia_album_de_pintado_disparos_entidades
 879+ A4AE
 880+ A4AE 21 51 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A4B1 7E               ld a,(hl)
 882+ A4B2 2D               dec l
 883+ A4B3 46               ld b,(hl)
 884+ A4B4 90               sub b
 885+ A4B5
 886+ A4B5 D8               ret c
 887+ A4B6 C8               ret z
 888+ A4B7
 889+ A4B7 F5               push af
 890+ A4B8 80               add b
 891+ A4B9 77               ld (hl),a
 892+ A4BA F1               pop af
 893+ A4BB
 894+ A4BB              ; Clean.
 895+ A4BB
 896+ A4BB 47           2 ld b,a
 897+ A4BC AF               xor a
 898+ A4BD 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A4C0 77           1 ld (hl),a
 900+ A4C1 23               inc hl
 901+ A4C2 10 FC            djnz 1B
 902+ A4C4
 903+ A4C4 C9               ret
 904+ A4C5
 905+ A4C5              ; --------------------------------------------------------------------------------------
 906+ A4C5              ;
 907+ A4C5              ;   29/09/24
 908+ A4C5              ;
 909+ A4C5
 910+ A4C5              Motor_Disparos_Amadeus
 911+ A4C5
 912+ A4C5 21 23 89         ld hl,Disparo_Amad+1
 913+ A4C8
 914+ A4C8 34               inc (hl)
 915+ A4C9 35               dec (hl)
 916+ A4CA
 917+ A4CA C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A4CB
 919+ A4CB              ;   Esta caja contiene un disparo.
 920+ A4CB
 921+ A4CB CD D2 A4         call Consulta_Impacto
 922+ A4CE CC EB A4         call z,Mueve_disparo_Amadeus
 923+ A4D1
 924+ A4D1 C9               ret
 925+ A4D2
 926+ A4D2              ; ----------------------
 927+ A4D2              ;
 928+ A4D2              ;
 929+ A4D2              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A4D2              ;
 931+ A4D2              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A4D2
 933+ A4D2
 934+ A4D2              Consulta_Impacto
 935+ A4D2
 936+ A4D2              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A4D2              ;   _sea lo más coherente posible.
 938+ A4D2
 939+ A4D2 E5               push hl
 940+ A4D3 2B               dec hl
 941+ A4D4 CD C7 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A4D7 E1               pop hl
 943+ A4D8 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A4D9
 945+ A4D9 C8               ret z
 946+ A4DA
 947+ A4DA 3A 69 8C         ld a,(Impacto2)
 948+ A4DD CB DF            set 3,a
 949+ A4DF 32 69 8C         ld (Impacto2),a
 950+ A4E2
 951+ A4E2 E5               push hl
 952+ A4E3 CD B4 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A4E6 E1               pop hl
 954+ A4E7 CD 04 A5         call Elimina_disparo_Amadeus
 955+ A4EA
 956+ A4EA C9               ret
 957+ A4EB
 958+ A4EB              ; ----------------------
 959+ A4EB              ;
 960+ A4EB              ;
 961+ A4EB              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A4EB
 963+ A4EB              Mueve_disparo_Amadeus
 964+ A4EB
 965+ A4EB CD DB 91         call Extrae_address
 966+ A4EE
 967+ A4EE CD C3 9C         call PreviousScan
 968+ A4F1 CD C3 9C         call PreviousScan
 969+ A4F4 CD C3 9C         call PreviousScan
 970+ A4F7 CD C3 9C         call PreviousScan
 971+ A4FA
 972+ A4FA              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A4FA
 974+ A4FA 7C               ld a,h
 975+ A4FB D6 40            sub $40
 976+ A4FD EB               ex de,hl
 977+ A4FE 38 04            jr c,Elimina_disparo_Amadeus
 978+ A500
 979+ A500               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A500
 981+ A500 73               ld (hl),e
 982+ A501 23               inc hl
 983+ A502 72               ld (hl),d
 984+ A503
 985+ A503 C9               ret
 986+ A504
 987+ A504              ; ----------------------
 988+ A504              ;
 989+ A504              ;   29/9/24
 990+ A504
 991+ A504              Elimina_disparo_Amadeus
 992+ A504
 993+ A504              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A504              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A504
 996+ A504              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A504              ;   	defw 0											; Puntero de impresión.
 998+ A504
 999+ A504 2B               dec hl
1000+ A505 2B               dec hl
1001+ A506
1002+ A506 AF               xor a
1003+ A507 77               ld (hl),a
1004+ A508 23               inc hl
1005+ A509 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A50A
1007+ A50A 23               inc hl
1008+ A50B 77               ld (hl),a
1009+ A50C 23               inc hl
1010+ A50D 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A50E
1012+ A50E 3E 01            ld a,1
1013+ A510 32 53 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A513
1015+ A513 CD 96 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A516
1017+ A516 AF               xor a
1018+ A517 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A518
1020+ A518 C9               ret
1021+ A519
1022+ A519              ; --------------------------------------------------------------------------------------
1023+ A519              ;
1024+ A519              ;   13/10/24
1025+ A519              ;
1026+ A519
1027+ A519              Pinta_disparos_Amadeus
1028+ A519
1029+ A519 06 02            ld b,2
1030+ A51B ED 73 3A 8C      ld (Stack),sp
1031+ A51F ED 7B 48 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A523 D1           3 pop de
1033+ A524 14               inc d
1034+ A525 15               dec d
1035+ A526 28 1C            jr z,1F
1036+ A528 E1               pop hl
1037+ A529
1038+ A529              Imprime_scanlines_en_pantalla
1039+ A529
1040+ A529              ; 1er scanline
1041+ A529
1042+ A529 1A               ld a,(de)
1043+ A52A AE               xor (hl)
1044+ A52B 77               ld (hl),a
1045+ A52C
1046+ A52C 1C               inc e
1047+ A52D 2C               inc l
1048+ A52E
1049+ A52E 1A               ld a,(de)
1050+ A52F AE               xor (hl)
1051+ A530 77               ld (hl),a
1052+ A531
1053+ A531 1D               dec e
1054+ A532 E1               pop hl
1055+ A533
1056+ A533              ; 2º scanline
1057+ A533
1058+ A533 1A               ld a,(de)
1059+ A534 AE               xor (hl)
1060+ A535 77               ld (hl),a
1061+ A536
1062+ A536 1C               inc e
1063+ A537 2C               inc l
1064+ A538
1065+ A538 1A               ld a,(de)
1066+ A539 AE               xor (hl)
1067+ A53A 77               ld (hl),a
1068+ A53B
1069+ A53B 1D               dec e
1070+ A53C
1071+ A53C 18 06            jr 1F
1072+ A53E
1073+ A53E ED 7B 46 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A542 18 DF            jr 3B
1075+ A544 10 F8        1 djnz 2B
1076+ A546 ED 7B 3A 8C      ld sp,(Stack)
1077+ A54A C9               ret
1078+ A54B
1079+ A54B              ; --------------------------------------------------------------------------------------
1080+ A54B              ;
1081+ A54B              ;   13/10/24
1082+ A54B              ;
1083+ A54B              ;   Modifica: HL,BC y DE.
1084+ A54B
1085+ A54B
1086+ A54B              Genera_datos_de_impresion_disparos_Amadeus
1087+ A54B
1088+ A54B ED 73 3A 8C      ld (Stack),sp
1089+ A54F 31 22 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A552 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A553
1092+ A553 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A554 15               dec d
1094+ A555
1095+ A555 28 0E            jr z,Salida
1096+ A557
1097+ A557              Genera_scanlines_de_disparo_Amadeus
1098+ A557
1099+ A557 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A558              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A558 ED 7B 46 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A55C
1103+ A55C C1               pop bc
1104+ A55D C1               pop bc
1105+ A55E C1               pop bc
1106+ A55F
1107+ A55F E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A560 CD C3 9C         call PreviousScan
1109+ A563 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A564 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A565
1112+ A565              Salida
1113+ A565
1114+ A565 ED 7B 3A 8C      ld sp,(Stack)
1115+ A569
1116+ A569 C9               ret
1117+ A56A
1118+ A56A              ; --------------------------------------------------------------------------------------
1119+ A56A              ;
1120+ A56A              ;   12/09/24
1121+ A56A              ;
1122+ A56A
1123+ A56A              Genera_disparo_Amadeus
1124+ A56A
1125+ A56A              ;*  Exclusiones.
1126+ A56A
1127+ A56A 3A 53 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A56D A7               and a
1129+ A56E C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A56F
1131+ A56F 3D               dec a
1132+ A570 32 53 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A573
1134+ A573              Define_puntero_objeto_disparo
1135+ A573
1136+ A573              ;   Inicializamos contador.
1137+ A573
1138+ A573 06 00            ld b,0
1139+ A575
1140+ A575 2A B9 89         ld hl,(p.imp.amadeus)
1141+ A578 2C               inc l
1142+ A579
1143+ A579 3E 80            ld a,$80
1144+ A57B BE               cp (hl)
1145+ A57C 28 0D            jr z,1F
1146+ A57E
1147+ A57E 04               inc b
1148+ A57F
1149+ A57F 3E 60            ld a,$60
1150+ A581 BE               cp (hl)
1151+ A582 28 07            jr z,1F
1152+ A584
1153+ A584
1154+ A584 04               inc b
1155+ A585
1156+ A585 3E 18            ld a,$18
1157+ A587 BE               cp (hl)
1158+ A588 28 01            jr z,1F
1159+ A58A
1160+ A58A 04               inc b
1161+ A58B
1162+ A58B              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A58B
1164+ A58B              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A58B
1166+ A58B CD C3 9C     1 call PreviousScan
1167+ A58E
1168+ A58E 78               ld a,b
1169+ A58F CB 3F            srl a
1170+ A591 28 03            jr z,4F
1171+ A593
1172+ A593              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A593 E5               push hl
1174+ A594 18 02            jr 5F
1175+ A596 2D           4 dec l
1176+ A597 E5               push hl
1177+ A598              ; ---
1178+ A598
1179+ A598              ;   Calcula el Puntero_objeto del disparo.
1180+ A598
1181+ A598 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A59B 04               inc b
1183+ A59C 05               dec b
1184+ A59D 28 04            jr z,2F
1185+ A59F
1186+ A59F              ;   Nos desplazamos por el índice de disparos.
1187+ A59F
1188+ A59F 2C           3 inc l
1189+ A5A0 2C               inc l
1190+ A5A1 10 FC            djnz 3B
1191+ A5A3
1192+ A5A3              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A5A3 CD DB 91     2 call Extrae_address
1194+ A5A6 E5               push hl
1195+ A5A7              ; ---
1196+ A5A7
1197+ A5A7              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A5A7              ; HL en el 1er .db de la caja.
1199+ A5A7
1200+ A5A7 21 22 89         ld hl,Disparo_Amad
1201+ A5AA
1202+ A5AA 06 02            ld b,2
1203+ A5AC
1204+ A5AC D1           6 pop de
1205+ A5AD 73               ld (hl),e
1206+ A5AE 23               inc hl
1207+ A5AF 72               ld (hl),d
1208+ A5B0 23               inc hl
1209+ A5B1
1210+ A5B1 10 F9            djnz 6B
1211+ A5B3
1212+ A5B3 C9               ret
1213+ A5B4
1214+ A5B4              Genera_coordenadas_de_disparo_Amadeus
1215+ A5B4
1216+ A5B4              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A5B4              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A5B4              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A5B4
1220+ A5B4 CD DB 91         call Extrae_address
1221+ A5B7 CD 20 96         call Genera_coordenadas
1222+ A5BA
1223+ A5BA 3D               dec a
1224+ A5BB
1225+ A5BB 21 6C 8C         ld hl,Coordenadas_disparo_certero
1226+ A5BE 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A5BF 23               inc hl
1228+ A5C0 3A EB 8B         ld a,(Coordenada_X)
1229+ A5C3 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A5C4
1231+ A5C4 AF               xor a
1232+ A5C5 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A5C6
1234+ A5C6 C9               ret
1235+ A5C7
1236+ A5C7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A5C7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A5C7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A5C7
1240+ A5C7              ; ----------------------------------------------
1241+ A5C7              ;
1242+ A5C7              ;   27/08/24
1243+ A5C7              ;
1244+ A5C7              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A5C7              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A5C7
1247+ A5C7              Detecta_impacto_en_disparo_de_Amadeus
1248+ A5C7
1249+ A5C7              Extraccion_de_datos
1250+ A5C7
1251+ A5C7 13               inc de
1252+ A5C8 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A5C9
1254+ A5C9 5E               ld e,(hl)
1255+ A5CA 23               inc hl
1256+ A5CB 56               ld d,(hl)
1257+ A5CC
1258+ A5CC 23               inc hl
1259+ A5CD
1260+ A5CD 4E               ld c,(hl)
1261+ A5CE 23               inc hl
1262+ A5CF 46               ld b,(hl)
1263+ A5D0
1264+ A5D0 C5               push bc
1265+ A5D1 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A5D2
1267+ A5D2              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A5D2
1269+ A5D2 CD C3 9C         call PreviousScan
1270+ A5D5 CD C3 9C         call PreviousScan
1271+ A5D8
1272+ A5D8              Detecta_impacto_
1273+ A5D8
1274+ A5D8 1A               ld a,(de)
1275+ A5D9 A6               and (hl)
1276+ A5DA C0               ret nz
1277+ A5DB
1278+ A5DB 13               inc de
1279+ A5DC 23               inc hl
1280+ A5DD
1281+ A5DD 1A               ld a,(de)
1282+ A5DE A6               and (hl)
1283+ A5DF C9               ret
1284+ A5E0
1285+ A5E0              ; -------------------------------------------------------------------------------------------------------------
1286+ A5E0              ;
1287+ A5E0              ;   25/11//24
1288+ A5E0              ;
1289+ A5E0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A5E0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A5E0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A5E0              ;
1293+ A5E0              ;   MODIFICA: HL,DE,BC y A.
1294+ A5E0              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A5E0              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A5E0
1297+ A5E0              Colision_Entidad_Amadeus
1298+ A5E0
1299+ A5E0              ; Posible contacto de entidad con Amadeus. ?????
1300+ A5E0
1301+ A5E0              ; Exclusiones:
1302+ A5E0
1303+ A5E0 3A 8B 8C         ld a,(Shield)
1304+ A5E3 A7               and a
1305+ A5E4 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A5E5
1307+ A5E5 21 62 8C         ld hl,Ctrl_3
1308+ A5E8 CB 76            bit 6,(hl)
1309+ A5EA C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A5EB
1311+ A5EB 21 69 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A5EE CB 56            bit 2,(hl)
1313+ A5F0 C0               ret nz
1314+ A5F1
1315+ A5F1 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A5F4 FE 14        	cp $14
1317+ A5F6 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A5F7
1319+ A5F7 3A B8 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A5FA A7               and a
1321+ A5FB C0               ret nz
1322+ A5FC
1323+ A5FC              Genera_coordenadas_X
1324+ A5FC
1325+ A5FC              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A5FC              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A5FC
1328+ A5FC              ;   Limpiamos almacenes.
1329+ A5FC
1330+ A5FC              ;    call Limpia_Coordenadas_X
1331+ A5FC
1332+ A5FC              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A5FC
1334+ A5FC 21 6E 8C         ld hl,Coordenadas_X_Entidad
1335+ A5FF DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A602 CD 28 A6         call Guarda_coordenadas_X
1337+ A605
1338+ A605              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A605
1340+ A605 3A B5 89         ld a,(CX_Amadeus)
1341+ A608 CD 28 A6         call Guarda_coordenadas_X
1342+ A60B
1343+ A60B DD E5            push ix
1344+ A60D CD 3C A6         call Compara_coordenadas_X
1345+ A610 DD E1            pop ix
1346+ A612
1347+ A612 C0               ret nz
1348+ A613
1349+ A613 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A615 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A618
1352+ A618 DD 7D            ld a,ixl
1353+ A61A C6 04            add 4
1354+ A61C DD 6F            ld ixl,a
1355+ A61E
1356+ A61E DD 22 6A 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A622
1358+ A622 21 69 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A625 CB D6            set 2,(hl)
1360+ A627
1361+ A627 C9               ret
1362+ A628
1363+ A628               ; ----- ----- ----- ----- -----
1364+ A628
1365+ A628 77           Guarda_coordenadas_X ld (hl),a
1366+ A629 3C               inc a
1367+ A62A 2C               inc l
1368+ A62B 77               ld (hl),a
1369+ A62C 3C               inc a
1370+ A62D 2C               inc l
1371+ A62E 77               ld (hl),a
1372+ A62F 2C               inc l
1373+ A630 C9               ret
1374+ A631
1375+ A631 AF           Limpia_Coordenadas_X xor a
1376+ A632 06 06            ld b,6
1377+ A634 21 71 8C         ld hl,Coordenadas_X_Amadeus
1378+ A637 77           1 ld (hl),a
1379+ A638 23               inc hl
1380+ A639 10 FC            djnz 1B
1381+ A63B C9               ret
1382+ A63C
1383+ A63C              ; ----- ----- ----- ----- -----
1384+ A63C
1385+ A63C              Compara_coordenadas_X
1386+ A63C
1387+ A63C DD 21 6E 8C      ld ix,Coordenadas_X_Entidad
1388+ A640 DD 7E 00         ld a,(ix+0)
1389+ A643 CD 51 A6         call Comparando
1390+ A646 C8               ret z
1391+ A647
1392+ A647 3C               inc a
1393+ A648 CD 60 A6         call Comparando_1
1394+ A64B C8               ret z
1395+ A64C
1396+ A64C 3C               inc a
1397+ A64D CD 60 A6         call Comparando_1
1398+ A650 C9               ret
1399+ A651
1400+ A651              ; ----- ----- ----- ----- -----
1401+ A651              ;
1402+ A651              ;   4/12/23
1403+ A651              ;
1404+ A651              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A651
1406+ A651              Comparando
1407+ A651
1408+ A651 DD 2C            inc ixl
1409+ A653 DD 2C            inc ixl
1410+ A655 DD 2C            inc ixl
1411+ A657
1412+ A657 DD 46 00         ld b,(ix+0)
1413+ A65A DD 4E 01         ld c,(ix+1)
1414+ A65D DD 56 02         ld d,(ix+2)
1415+ A660
1416+ A660 B8           Comparando_1 cp b
1417+ A661 C8               ret z
1418+ A662 B9               cp c
1419+ A663 C8               ret z
1420+ A664 BA               cp d
1421+ A665 C9               ret
1422+ A666
1423+ A666              ; -----------------------------------------------------------------------
1424+ A666              ;
1425+ A666              ;   04/7/24
1426+ A666              ;
1427+ A666
1428+ A666              Detecta_colision_nave_entidad
1429+ A666
1430+ A666              ; Exclusiones:
1431+ A666
1432+ A666              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A666
1434+ A666 21 69 8C     	ld hl,Impacto2
1435+ A669 CB 56        	bit 2,(hl)
1436+ A66B C8           	ret z
1437+ A66C
1438+ A66C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A66C
1440+ A66C 2A BB 89         ld hl,(Pamm_Amadeus)
1441+ A66F CD DB 91         call Extrae_address
1442+ A672 54               ld d,h
1443+ A673 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A674
1445+ A674 2A B9 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A677 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A679 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A67C
1449+ A67C C5           1 push bc
1450+ A67D 06 03            ld b,3
1451+ A67F E5               push hl
1452+ A680
1453+ A680              ; .db
1454+ A680
1455+ A680 1A           3 ld a,(de)
1456+ A681 A7               and a
1457+ A682 20 03            jr nz,4F
1458+ A684
1459+ A684 2C               inc l
1460+ A685 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A687
1462+ A687 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A689 28 04            jr z,2F
1464+ A68B
1465+ A68B              ; Impacto.
1466+ A68B FD 2D            dec iyl
1467+ A68D 28 22            jr z,5F
1468+ A68F
1469+ A68F 1C           2 inc e
1470+ A690 10 EE            djnz 3B
1471+ A692
1472+ A692 E1               pop hl
1473+ A693
1474+ A693              ; Hay salto de línea en el puntero de impresión ???
1475+ A693
1476+ A693 7C               ld a,h
1477+ A694 D6 57            sub $57
1478+ A696 20 0A            jr nz,6F
1479+ A698
1480+ A698              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A698
1482+ A698 2A B9 89         ld hl,(p.imp.amadeus)
1483+ A69B 3E 20            ld a,$20
1484+ A69D A7               and a
1485+ A69E 85               add l
1486+ A69F 6F               ld l,a
1487+ A6A0 18 01            jr 7F
1488+ A6A2
1489+ A6A2 24           6 inc h
1490+ A6A3
1491+ A6A3 C1           7 pop bc
1492+ A6A4 10 D6            djnz 1B
1493+ A6A6
1494+ A6A6              ;   Fin de la comparativa.
1495+ A6A6
1496+ A6A6              ;   NO HAY COLISIÓN !!!!!.
1497+ A6A6              ;
1498+ A6A6              ;   .db (Impacto) de Amadeus a "0".
1499+ A6A6              ;   RES el bit2 de (Impacto2).
1500+ A6A6              ;
1501+ A6A6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A6A6              ;   Lo colocamos a "0".
1503+ A6A6
1504+ A6A6 21 69 8C         ld hl,Impacto2
1505+ A6A9 CB 96            res 2,(hl)
1506+ A6AB 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A6AE 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A6B0 C9               ret
1509+ A6B1
1510+ A6B1              ;   COLISIÓN !!!!!.
1511+ A6B1              ;
1512+ A6B1              ;   .db (Impacto) de Amadeus a "1".
1513+ A6B1              ;   SET el bit3 de (Impacto2).
1514+ A6B1              ;
1515+ A6B1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A6B1
1517+ A6B1 E1           5 pop hl
1518+ A6B2 C1               pop bc
1519+ A6B3
1520+ A6B3 21 B8 89         ld hl,Impacto_Amadeus
1521+ A6B6 36 01            ld (hl),1
1522+ A6B8 21 69 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A6BB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A6BD
1525+ A6BD 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A6C0 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A6C3
1528+ A6C3 23               inc hl
1529+ A6C4 23               inc hl
1530+ A6C5 23               inc hl
1531+ A6C6
1532+ A6C6 73               ld (hl),e
1533+ A6C7 23               inc hl
1534+ A6C8 72               ld (hl),d
1535+ A6C9
1536+ A6C9              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A6C9
1538+ A6C9 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A6CC 21 BB 89         ld hl,Pamm_Amadeus
1540+ A6CF
1541+ A6CF 73               ld (hl),e
1542+ A6D0 23               inc hl
1543+ A6D1 72               ld (hl),d
1544+ A6D2
1545+ A6D2 C9               ret
1546+ A6D3
1547+ A6D3
1548+ A6D3
# file closed: Disparo.asm
2470  A6D3
2471  A6D3              	SAVESNA "Pruebas.sna", START
2472  A6D3
2473  A6D3
2474  A6D3
2475  A6D3
# file closed: Banco_de_pruebas.asm
