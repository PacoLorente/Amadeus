# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 5B 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 6C A4     	call Pinta_disparos_Amadeus
  74  82F6 CD 37 A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 84 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD FA 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 82 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 82 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 85 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 18 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 31 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 167+ 89AE              ;
 168+ 89AE              ;	28/05/24
 169+ 89AE              ;
 170+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 171+ 89AE              ;
 172+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 173+ 89AE
 174+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 175+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 176+ 89B1 00           	db 0												; (Contador_de_vueltas).
 177+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 178+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 179+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 180+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 181+ 89B9 00           	db 0												; (Velocidad).
 182+ 89BA
 183+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 184+ 89BA              ;
 185+ 89BA              ;	22/01/24
 186+ 89BA              ;
 187+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 188+ 89BA              ;
 189+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 190+ 89BA
 191+ 89BA
 192+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 193+ 89BD 00           	db 0												; (Contador_de_vueltas).
 194+ 89BE 00           	db 0												; (Impacto).
 195+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 89C5 00           	db 0												; (Velocidad).
 199+ 89C6
 200+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 201+ 89C6
 202+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 203+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 204+ 89CA 00           	db 0												; (Impacto).
 205+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 89D1 00           	db 0												; (Velocidad).
 209+ 89D2
 210+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 211+ 89D2
 212+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 213+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 214+ 89D6 00           	db 0												; (Impacto).
 215+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 89DD 00           	db 0												; (Velocidad).
 219+ 89DE
 220+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 221+ 89DE
 222+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 223+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 224+ 89E2 00           	db 0												; (Impacto).
 225+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 226+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 227+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 228+ 89E9 00           	db 0												; (Velocidad).
 229+ 89EA
 230+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 231+ 89EA
 232+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 233+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 234+ 89EE 00           	db 0												; (Impacto).
 235+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 236+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 237+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 238+ 89F5 00           	db 0												; (Velocidad).
 239+ 89F6
 240+ 89F6              	org $8a00
 241+ 8A00
 242+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 243+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 244+ 8A04 00           	db 0												; (Impacto).
 245+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 246+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 247+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 248+ 8A0B 00           	db 0												; (Velocidad).
 249+ 8A0C
 250+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 251+ 8A0C
 252+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 253+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 254+ 8A0C              ;	db 0												; (Impacto).
 255+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 256+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 257+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 258+ 8A0C              ;	db 0												; (Velocidad).
 259+ 8A0C
 260+ 8A0C              ; -------------------------------------------------------------------------------------
 261+ 8A0C              ;
 262+ 8A0C              ;	06/12/24
 263+ 8A0C              ;
 264+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 265+ 8A0C              ;
 266+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 267+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 268+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 269+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 270+ 8A0C
 271+ 8A0C              Indice_de_definiciones_de_entidades
 272+ 8A0C
 273+ 8A0C 10 8A        	defw Entidad_1
 274+ 8A0E 1B 8A        	defw Entidad_2
 275+ 8A10
 276+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 277+ 8A10
 278+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 279+ 8A10
 280+ 8A10 81           Entidad_1 db $81			                     		; (Tipo).
 281+ 8A11 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 282+ 8A12 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 283+ 8A14 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 284+ 8A16
 285+ 8A16              ; Aleatoriedad en la posición de inicio de la entidad.
 286+ 8A16              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 287+ 8A16
 288+ 8A16 08 40        	defw $4008											; (Posicion_inicio).
 289+ 8A18 00           	db 0												; (Cuad_objeto).
 290+ 8A19
 291+ 8A19 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 292+ 8A1B
 293+ 8A1B              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 294+ 8A1B
 295+ 8A1B 81           Entidad_2 db $81			                   			; (Tipo).
 296+ 8A1C 01           	db 1												; (Contador_de_vueltas).
 297+ 8A1D 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 298+ 8A1F 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 299+ 8A21 40 50        	defw $5040                                      	; (Posicion_inicio).
 300+ 8A23 01           	db 1												; (Cuad_objeto).
 301+ 8A24 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 302+ 8A26
 303+ 8A26              ; -------------------------------------------------------------------------------------
 304+ 8A26              ;
 305+ 8A26              ;	28/05/24
 306+ 8A26              ;
 307+ 8A26              ;	Definición de Amadeus.
 308+ 8A26              ;
 309+ 8A26              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 310+ 8A26              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 311+ 8A26
 312+ 8A26 00           Definicion_Amadeus db 0			                     	; (Tipo).
 313+ 8A27 00           	db 0												; (Contador_de_vueltas).
 314+ 8A28 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 315+ 8A2A D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 316+ 8A2C C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 317+ 8A2E 03           	db 3												; (Cuad_objeto).
 318+ 8A2F DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A31              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A31
   2+ 8A31
   3+ 8A31              ;   07/07/23
   4+ 8A31              ;
   5+ 8A31              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A31              ;
   7+ 8A31              ;   Codificación:
   8+ 8A31              ;
   9+ 8A31              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A31              ;
  11+ 8A31              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A31              ;
  13+ 8A31              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A31              ;
  15+ 8A31              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A31              ;
  17+ 8A31              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A31              ;                               ..... %01000010 Vel_up 4
  19+ 8A31              ;                                               Vel_down 2
  20+ 8A31              ;                               ..... $42
  21+ 8A31              ;
  22+ 8A31              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A31              ;
  24+ 8A31              ;                               ..... %01000010 Vel_left 4
  25+ 8A31              ;                                               Vel_right 2
  26+ 8A31              ;                               ..... $42
  27+ 8A31              ;
  28+ 8A31              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A31              ;
  30+ 8A31              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A31              ;
  32+ 8A31              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A31              ;
  34+ 8A31              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A31              ;                                     $53
  36+ 8A31              ;
  37+ 8A31              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A31              ;
  39+ 8A31              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A31              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A31              ;
  42+ 8A31              ;                       Arriba ..... $81
  43+ 8A31              ;                       Arriba - izquierda ..... $a1
  44+ 8A31              ;                       Arriba - derecha ..... $91
  45+ 8A31              ;
  46+ 8A31              ;                       Abajo ..... $41
  47+ 8A31              ;                       Abajo - izquierda ..... $61
  48+ 8A31              ;                       Abajo - derecha ..... $51
  49+ 8A31              ;
  50+ 8A31              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A31              ;
  52+ 8A31              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A31              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A31              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A31              ;
  56+ 8A31              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A31              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A31              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A31              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A31              ;
  61+ 8A31              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A31              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A31              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A31              ;
  65+ 8A31              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A31              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A31              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A31              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A31
  70+ 8A31              ; ----- ----- ----- ----- -----
  71+ 8A31
  72+ 8A31 5D 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A33 65 8A            defw F_1
  74+ 8A35 6F 8A            defw F_2
  75+ 8A37 79 8A            defw Codo_abajo_derecha
  76+ 8A39 AD 8A            defw Derecha_y_subiendo
  77+ 8A3B B7 8A            defw Derecha_y_subiendo_1
  78+ 8A3D C1 8A            defw F_3
  79+ 8A3F CB 8A            defw F_4
  80+ 8A41 D5 8A            defw Derecha_y_bajando
  81+ 8A43 DF 8A            defw Derecha_y_bajando_1
  82+ 8A45 E9 8A            defw Derecha_y_bajando_2
  83+ 8A47 F3 8A            defw Codo_derecha_abajo
  84+ 8A49 23 8B            defw Codo_abajo_izq.
  85+ 8A4B 57 8B            defw Izquierda_y_subiendo
  86+ 8A4D 61 8B            defw Izquierda_y_subiendo_1
  87+ 8A4F 6B 8B            defw F_5
  88+ 8A51 75 8B            defw F_6
  89+ 8A53 7F 8B            defw Izquierda_y_bajando
  90+ 8A55 89 8B            defw Izquierda_y_bajando_1
  91+ 8A57 93 8B            defw Izquierda_y_bajando_2
  92+ 8A59 9D 8B            defw Codo_izquierda_abajo
  93+ 8A5B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A5D
  95+ 8A5D
  96+ 8A5D              ; Notas de aleatoriedad.
  97+ 8A5D
  98+ 8A5D              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A5D              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A5D              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A5D
 102+ 8A5D
 103+ 8A5D
 104+ 8A5D
 105+ 8A5D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A61 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A65
 108+ 8A65 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A69 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A6D 08 00
 110+ 8A6F
 111+ 8A6F 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A73 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A77 0F FE
 113+ 8A79
 114+ 8A79 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A7D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A81 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A85 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A89 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A8D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A91 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A95 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A99 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8A9D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8AA1 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8AA5 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AA9 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AAD
 128+ 8AAD 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AB1 11 11 91 FD      db $11,$11,$91,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8AB5 0B 00
 130+ 8AB7
 131+ 8AB7 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8ABB 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8ABF 02 00
 133+ 8AC1
 134+ 8AC1 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8AC5 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8AC9 04 00
 136+ 8ACB 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8ACF 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8AD3 08 00
 138+ 8AD5
 139+ 8AD5 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8AD9 11 11 51 FD      db $11,$11,$51,253,2,0
 140+ 8ADD 02 00
 141+ 8ADF
 142+ 8ADF 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8AE3 11 11 51 FD      db $11,$11,$51,253,6,0
 143+ 8AE7 06 00
 144+ 8AE9
 145+ 8AE9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AED 11 11 51 FD      db $11,$11,$51,253,6,0
 146+ 8AF1 06 00
 147+ 8AF3
 148+ 8AF3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AF3
 150+ 8AF3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AF7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8AFB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8AFF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8B03 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B07 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B0B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B0F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B13 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B17 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B1B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B1F 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B23
 163+ 8B23 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B27 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B2B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B2F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B33 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B37 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B3B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B3F 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B43 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B47 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B4B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B4F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B53 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B57
 177+ 8B57 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B5B 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B5F 07 00
 179+ 8B61
 180+ 8B61 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B65 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B69 02 00
 182+ 8B6B
 183+ 8B6B 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B6F 11 11 01 FD      db $11,$11,$01,253,4,0
 184+ 8B73 04 00
 185+ 8B75
 186+ 8B75 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B79 11 11 02 FD      db $11,$11,$02,253,8,0
 187+ 8B7D 08 00
 188+ 8B7F
 189+ 8B7F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B83 11 11 61 FD      db $11,$11,$61,253,2,0
 190+ 8B87 02 00
 191+ 8B89
 192+ 8B89 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B8D 11 11 61 FD      db $11,$11,$61,253,6,0
 193+ 8B91 06 00
 194+ 8B93
 195+ 8B93 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B97 11 11 61 FD      db $11,$11,$61,253,6,0
 196+ 8B9B 06 00
 197+ 8B9D
 198+ 8B9D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8BA1 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8BA5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BA9 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BAD 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BB1 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BB5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BB9 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BBD 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BC1 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BC5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BC9 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BCD
 211+ 8BCD
 212+ 8BCD
 213+ 8BCD
 214+ 8BCD
 215+ 8BCD
 216+ 8BCD
 217+ 8BCD
 218+ 8BCD
 219+ 8BCD
# file closed: Patrones_de_mov.asm
 149  8BCD              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BCD              ; 19/1/24
   2+ 8BCD
   3+ 8BCD              Indice_de_niveles
   4+ 8BCD
   5+ 8BCD D5 8B        	defw Nivel_1
   6+ 8BCF D7 8B        	defw Nivel_2
   7+ 8BD1
   8+ 8BD1              ;	...
   9+ 8BD1              ;	...
  10+ 8BD1              ;	+ Niveles ...
  11+ 8BD1
  12+ 8BD1 00 00        	defw 0
  13+ 8BD3 00 00        	defw 0
  14+ 8BD5
  15+ 8BD5 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BD6 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BD7
  18+ 8BD7 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BD8 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BDC 01 02
  20+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE2 01 02
  21+ 8BE4
# file closed: Niveles.asm
 150  8BE4
 151  8BE4              ; --------------------------------------------------------------------------------
 152  8BE4              ;
 153  8BE4              ; 12/05/24
 154  8BE4              ;
 155  8BE4              ; Parámetros DRAW.
 156  8BE4              ;
 157  8BE4
 158  8BE4              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BE4
 160  8BE4 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BE5              ;															- Patrón de movimiento.
 162  8BE5 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BE6 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BE7
 165  8BE7 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BE8              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BE8
 168  8BE8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BE8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BE8              ; Ejemplos.
 171  8BE8
 172  8BE8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BE8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BE8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BE8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BE8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BE8
 178  8BE8 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BE9              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BE9              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BE9
 182  8BE9 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BEB              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BEB
 185  8BEB 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BED
 187  8BED              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BED
 189  8BED 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BEF              ;														; _palabras que componen el "movimiento_masticado".
 191  8BEF
 192  8BEF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BEF
 194  8BEF 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF0              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF0              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF0              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF0              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF0
 200  8BF0 00           Ctrl_2 db 0
 201  8BF1              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF1              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF1              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF1              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF1              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF1              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF1              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF1              ;
 209  8BF1              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF1              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF1              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF1              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF1              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF1              ;														BIT 4, ???
 215  8BF1              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF1
 217  8BF1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF2              ;
 223  8BF2              ; 														DESCRIPCIÖN:
 224  8BF2              ;
 225  8BF2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  8BF2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  8BF2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  8BF2              ;
 237  8BF2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  8BF2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  8BF2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  8BF2
 241  8BF2              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 242  8BF2
 243  8BF2 00           Filas db 0												; Filas. [DRAW]
 244  8BF3 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 245  8BF4 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 246  8BF6 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 247  8BF8
 248  8BF8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 249  8BF8
 250  8BF8 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 251  8BF9              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 252  8BF9              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 253  8BF9
 254  8BF9              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 255  8BF9
 256  8BF9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 257  8BF9              ;
 258  8BF9              ;	COLORES: 0 ..... NEGRO
 259  8BF9              ;    		 1 ..... AZUL
 260  8BF9              ; 			 2 ..... ROJO
 261  8BF9              ;			 3 ..... MAGENTA
 262  8BF9              ; 			 4 ..... VERDE
 263  8BF9              ; 			 5 ..... CIAN
 264  8BF9              ;			 6 ..... AMARILLO
 265  8BF9              ; 			 7 ..... BLANCO
 266  8BF9
 267  8BF9 00 00        Indice_Sprite_der defw 0
 268  8BFB 00 00        Indice_Sprite_izq defw 0
 269  8BFD 00 00        Puntero_DESPLZ_der defw 0
 270  8BFF 00 00        Puntero_DESPLZ_izq defw 0
 271  8C01
 272  8C01 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 273  8C03 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 274  8C04 00           Columnas db 0
 275  8C05 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8C07              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8C07 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8C08
 279  8C08              ; variables de control general.
 280  8C08
 281  8C08 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 282  8C09
 283  8C09              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  8C09
 285  8C09              Perfiles_de_velocidad
 286  8C09
 287  8C09 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  8C0A 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  8C0B 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  8C0C 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  8C0D
 292  8C0D              ; Contadores de 16 bits.
 293  8C0D
 294  8C0D 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  8C0F 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  8C11 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  8C13 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  8C15
 299  8C15              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  8C15
 301  8C15 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 302  8C17 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 303  8C19 00 00        Puntero_indice_mov_bucle defw 0							;
 304  8C1B              ;
 305  8C1B              ;
 306  8C1B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 307  8C1C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 308  8C1C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 309  8C1C 00           Incrementa_puntero_backup db 0
 310  8C1D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 311  8C1E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 312  8C1E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 313  8C1F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 314  8C20 00           Cola_de_desplazamiento db 0								; Este byte indica:
 315  8C21              ;
 316  8C21              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 317  8C21              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 318  8C21              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 319  8C21              ;
 320  8C21              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 321  8C21              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 322  8C21              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 323  8C21              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 324  8C21              ;
 325  8C21              ;														;	"$ff" ..... Bucle infinito de repetición.
 326  8C21              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 327  8C21              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 328  8C21
 329  8C21 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 330  8C22
 331  8C22              ;														DESCRIPCIÓN:
 332  8C22              ;
 333  8C22              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 334  8C22              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 335  8C22              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 336  8C22              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 337  8C22              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 338  8C22              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 339  8C22
 340  8C22              ;														BIT 3, Recarga de nueva oleada.
 341  8C22              ;														BIT 4, Recarga de nueva oleada.
 342  8C22              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 343  8C22              ;														BIT 6, **** Frame completo.
 344  8C22              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 345  8C22
 346  8C22 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 347  8C24              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 348  8C24              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 349  8C24              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 350  8C24
 351  8C24              ; Gestión de ENTIDADES y CAJAS.
 352  8C24
 353  8C24 00 00        Puntero_store_caja defw 0
 354  8C26 00 00        Puntero_restore_caja defw 0
 355  8C28 00 00        Indice_restore_caja defw 0
 356  8C2A 00 00        Puntero_indice_master defw 0
 357  8C2C
 358  8C2C 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 359  8C2D 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 360  8C2E 00           Entidades_en_curso db 0									; Entidades en pantalla.
 361  8C2F
 362  8C2F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 363  8C31 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 364  8C33              ;														; _ puntero (Indice_entidades).
 365  8C33
 366  8C33              ;---------------------------------------------------------------------------------------------------------------
 367  8C33              ;
 368  8C33              ;	13/10/24
 369  8C33              ;
 370  8C33              ;	Álbumes.
 371  8C33
 372  8C33 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 373  8C35              ;														; _variable para almacenar lo posición del puntero_
 374  8C35              ; 														; _de pila, SP.
 375  8C35 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 376  8C37              ;														; La utiliza la rutina [Extrae_foto_registros].
 377  8C37
 378  8C37              ; Impresión. ----------------------------------------------------------------------------------------------------
 379  8C37
 380  8C37 00 00        Album_de_pintado defw 0
 381  8C39 00 00        Album_de_borrado defw 0
 382  8C3B 00 00        Album_de_pintado_Amadeus defw 0
 383  8C3D 00 00        Album_de_borrado_Amadeus defw 0
 384  8C3F
 385  8C3F 00 00        Album_de_pintado_disparos_Amadeus defw 0
 386  8C41 00 00        Album_de_borrado_disparos_Amadeus defw 0
 387  8C43
 388  8C43 00 00        Album_de_pintado_disparos_Entidades defw 0
 389  8C45 00 00        Album_de_borrado_disparos_Entidades defw 0
 390  8C47
 391  8C47
 392  8C47 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 393  8C49
 394  8C49 00           Num_de_bytes_album_de_disparos db 0
 395  8C4A 00           Num_de_bytes_album_de_disparos_borrado db 0
 396  8C4B
 397  8C4B 07           Numero_de_disparos_de_entidades db 7
 398  8C4C
 399  8C4C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 400  8C4D 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 401  8C4E
 402  8C4E 00 00        Techo_Scanlines_album defw 0
 403  8C50 00 00        Techo_Scanlines_album_2 defw 0
 404  8C52 00           Switch db 0
 405  8C53 00 00        Techo defw 0
 406  8C55 00 00        Scanlines_album_SP defw 0
 407  8C57 00 89        India_SP defw Tabla_de_pintado
 408  8C59 03 89        India_2_SP defw Tabla_de_pintado+3
 409  8C5B
 410  8C5B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 411  8C5C              ;
 412  8C5C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 413  8C5C              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 414  8C5C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 415  8C5C              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 416  8C5C              ;																Habilita el borrado/pintado de sprites.
 417  8C5C              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 418  8C5C              ;																_ a la baja.
 419  8C5C              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 420  8C5C              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 421  8C5C              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 422  8C5C              ; 																_ el último frame de la explosión de nuestra nave.
 423  8C5C              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 424  8C5C              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 425  8C5C
 426  8C5C 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 427  8C5D              ;
 428  8C5D              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 429  8C5D
 430  8C5D 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 431  8C5E              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 432  8C5E              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 433  8C5E
 434  8C5E              ; Gestión de Disparos.
 435  8C5E
 436  8C5E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 437  8C60 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 438  8C62 00           Impacto2 db 0											; Byte de control de impactos.
 439  8C63
 440  8C63              ;
 441  8C63              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 442  8C63              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 443  8C63              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 444  8C63              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 445  8C63
 446  8C63
 447  8C63
 448  8C63
 449  8C63
 450  8C63
 451  8C63
 452  8C63 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 453  8C65              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 454  8C65              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 455  8C65
 456  8C65 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 457  8C67              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 458  8C67 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 459  8C6A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 460  8C6A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C6D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 462  8C6D
 463  8C6D              ;---------------------------------------------------------------------------------------------------------------
 464  8C6D
 465  8C6D              ; Relojes y temporizaciones.
 466  8C6D
 467  8C6D 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 468  8C6E 05           Clock_explosion_Amadeus db 5
 469  8C6F 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 470  8C70
 471  8C70 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 472  8C72 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 473  8C74 00           Numero_rnd_disparos db 0
 474  8C75
 475  8C75 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 476  8C77 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 477  8C78 A0           CLOCK_disparos_de_entidades db $a0
 478  8C79
 479  8C79              ;---------------------------------------------------------------------------------------------------------------
 480  8C79
 481  8C79              ; Gestión de NIVELES.
 482  8C79
 483  8C79 00           Nivel db 0												; Nivel actual del juego.
 484  8C7A 00 00        Puntero_indice_NIVELES defw 0
 485  8C7C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 486  8C7E              ; 														; _ que definen el NIVEL.
 487  8C7E
 488  8C7E              ; ---------------------------------------------------------------------------------------------------------------
 489  8C7E
 490  8C7E              ; Temporizaciones Shield.
 491  8C7E
 492  8C7E 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 493  8C82 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 494  8C84 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 495  8C85 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 496  8C86 00           Shield_3 db 0
 497  8C87
 498  8C87 07           Lives db 7
 499  8C88
 500  8C88              ; 	INICIO  *************************************************************************************************************************************************************************
 501  8C88              ;
 502  8C88              ;	13/11/24
 503  8C88
 504  8C88              START
 505  8C88
 506  8C88 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 507  8C8B 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 508  8C8D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 509  8C8F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 510  8C91 F3           	DI
 511  8C92
 512  8C92              ; Limpiamos pantalla.
 513  8C92
 514  8C92              ;	ld a,%00000111
 515  8C92              ;	call Cls
 516  8C92 CD EF 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 517  8C95
 518  8C95              INICIALIZACION
 519  8C95
 520  8C95 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 521  8C97 CD 8A 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 522  8C9A CD 1A 8F     	call Extrae_numero_aleatorio_y_avanza
 523  8C9D 6F           	ld l,a
 524  8C9E 26 00        	ld h,0
 525  8CA0 22 75 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 526  8CA3
 527  8CA3              ;	Inicia los álbumes de líneas.
 528  8CA3
 529  8CA3 CD 44 91     	call Inicia_albumes_de_lineas
 530  8CA6 CD 54 91     	call Inicia_albumes_de_lineas_Amadeus
 531  8CA9 CD 61 91     	call Inicia_albumes_de_disparos
 532  8CAC
 533  8CAC              ;	Inicia 1er Nivel.
 534  8CAC
 535  8CAC CD EC 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 536  8CAF CD BA 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 537  8CB2              ;														   _reponiendo entidades eliminadas.
 538  8CB2 CD 20 94     	call Prepara_Cajas_de_Entidades
 539  8CB5
 540  8CB5 CD 71 94     	call Inicia_Amadeus
 541  8CB8
 542  8CB8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 543  8CB8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 544  8CB8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 545  8CB8 11 AE 89     	ld de,Amadeus_BOX
 546  8CBB CD 5A 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 547  8CBE CD B4 94     	call Limpiamos_bandeja_DRAW
 548  8CC1
 549  8CC1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 550  8CC1
 551  8CC1 06 3C        	ld b,60
 552  8CC3 CD 8F 9F     2 call Amadeus_a_izquierda
 553  8CC6 10 FB        	djnz 2B
 554  8CC8
 555  8CC8 CD 22 91     	call Genera_datos_de_impresion_Amadeus
 556  8CCB
 557  8CCB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 558  8CCB
 559  8CCB CD 7D 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 560  8CCE
 561  8CCE CD FA 91     	call Inicia_Shield
 562  8CD1
 563  8CD1 2A 55 8C     6 ld hl,(Scanlines_album_SP)
 564  8CD4 22 4E 8C     	ld (Techo_Scanlines_album),hl
 565  8CD7
 566  8CD7 2A 39 8C     	ld hl,(Album_de_borrado)
 567  8CDA 22 55 8C     	ld (Scanlines_album_SP),hl
 568  8CDD
 569  8CDD 21 00 89     	ld hl,Tabla_de_pintado
 570  8CE0 22 57 8C     	ld (India_SP),hl
 571  8CE3
 572  8CE3 21 5B 8C     	ld hl,Ctrl_3
 573  8CE6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 574  8CE8 CB D6        	set 2,(hl)
 575  8CEA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 576  8CEC
 577  8CEC FB           	ei 													; Ha de apuntar a $5c3a.
 578  8CED
 579  8CED 76           	halt
 580  8CEE
 581  8CEE              ; ------------------------------------
 582  8CEE
 583  8CEE              Main
 584  8CEE              ;
 585  8CEE              ; 07/11/24.
 586  8CEE
 587  8CEE              ; Gestión de disparos.
 588  8CEE
 589  8CEE CD EF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 590  8CF1 CD 7D A1     	call Motor_de_disparos_entidades
 591  8CF4 CD 18 A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 592  8CF7
 593  8CF7              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 594  8CF7              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 595  8CF7              ; Este hecho lo indica el bit2 de (Impacto2).
 596  8CF7
 597  8CF7 CD B9 A5     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 598  8CFA
 599  8CFA              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 600  8CFA
 601  8CFA 21 78 8C     	ld hl,CLOCK_disparos_de_entidades
 602  8CFD 35           	dec (hl)
 603  8CFE CC 30 8E     	call z,Autoriza_disparo_de_entidades
 604  8D01
 605  8D01 2A 75 8C     	ld hl,(Clock_next_entity)
 606  8D04 ED 4B 78 5C  	ld bc,(FRAMES)
 607  8D08 A7           	and a
 608  8D09 ED 42        	sbc hl,bc
 609  8D0B 20 21        	jr nz,1F
 610  8D0D
 611  8D0D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 612  8D0D
 613  8D0D CD 1A 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 614  8D10 CD 31 8F     	call Define_Clock_next_entity
 615  8D13
 616  8D13              ; GESTIÓN DE ENTIDADES.
 617  8D13
 618  8D13              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D13              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D13
 621  8D13              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D13              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D13              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D13
 625  8D13 21 2D 8C     	ld hl,Numero_parcial_de_entidades
 626  8D16 46           	ld b,(hl)
 627  8D17
 628  8D17 04           	inc b
 629  8D18 05           	dec b
 630  8D19
 631  8D19 F3           	di
 632  8D1A 28 FE        	jr z,$													;! Nivel superado !!!!!
 633  8D1C FB           	ei
 634  8D1D
 635  8D1D 3A 2E 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 636  8D20 B8           	cp b
 637  8D21 28 0B        	jr z,1F
 638  8D23 30 09        	jr nc,1F
 639  8D25
 640  8D25              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 641  8D25
 642  8D25 3C           	inc a
 643  8D26 32 2E 8C     	ld (Entidades_en_curso),a
 644  8D29
 645  8D29 21 5C 8C     	ld hl,Ctrl_4
 646  8D2C CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 647  8D2E
 648  8D2E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 649  8D2E
 650  8D2E              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 651  8D2E              ;	call Define_Clock_next_entity
 652  8D2E
 653  8D2E 3A 2E 8C     1 ld a,(Entidades_en_curso)
 654  8D31 A7           	and a
 655  8D32 CA D6 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 656  8D35 47           	ld b,a													; No hay entidades que gestionar.
 657  8D36
 658  8D36              ; ( Código que ejecutamos con cada entidad: ).
 659  8D36
 660  8D36              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 661  8D36              ;
 662  8D36              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 663  8D36
 664  8D36 21 00 89     	ld hl,Tabla_de_pintado
 665  8D39 22 57 8C     	ld (India_SP),hl
 666  8D3C
 667  8D3C 21 5B 8C     	ld hl,Ctrl_3
 668  8D3F CB D6        	set 2,(hl)
 669  8D41 CD C4 8E     	call Change
 670  8D44
 671  8D44 C5           2 push bc 												; Nº de entidades en curso.
 672  8D45
 673  8D45 DD 2A 24 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 674  8D49 CD CB 91     	call Salta_caja_de_entidades_vacia
 675  8D4C
 676  8D4C              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 677  8D4C
 678  8D4C DD 7E 00     	ld a,(ix+0)
 679  8D4F CB 7F        	bit 7,a
 680  8D51 28 11        	jr z,5F
 681  8D53
 682  8D53              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 683  8D53
 684  8D53 21 5C 8C     	ld hl,Ctrl_4
 685  8D56 CB 46        	bit 0,(hl)
 686  8D58 CC DA 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 687  8D5B 28 E8        	jr z,6B
 688  8D5D
 689  8D5D CB 86        	res 0,(hl)											; Restaura bit "despertador".
 690  8D5F CB BF        	res 7,a
 691  8D61 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 692  8D64
 693  8D64              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 694  8D64              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 695  8D64
 696  8D64 3A 62 8C     5 ld a,(Impacto2)
 697  8D67 CB 5F        	bit 3,a
 698  8D69 C4 AF A3     	call nz,Compara_con_coordenadas_de_disparo
 699  8D6C
 700  8D6C              ; Existe colisión entre esta entidad y Amadeus ???
 701  8D6C
 702  8D6C DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 703  8D6F CB 4F        	bit 1,a
 704  8D71 C4 E5 92     	call nz,Genera_explosion
 705  8D74 20 43        	jr nz,Gestiona_siguiente_entidad
 706  8D76
 707  8D76 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 708  8D79 A7           	and a
 709  8D7A 28 0C        	jr z,3F
 710  8D7C
 711  8D7C              ; IMPACTO en entidad por colisión con Amadeus.
 712  8D7C
 713  8D7C              ; 5/7/24
 714  8D7C              ; Nota importante:
 715  8D7C              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 716  8D7C              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 717  8D7C              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 718  8D7C
 719  8D7C 3A B2 89     	ld a,(Impacto_Amadeus)
 720  8D7F A7           	and a
 721  8D80 C4 E5 92     	call nz,Genera_explosion
 722  8D83 20 34        	jr nz,Gestiona_siguiente_entidad
 723  8D85
 724  8D85              ; Falsa colisión !!!
 725  8D85
 726  8D85 32 E8 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 727  8D88
 728  8D88              ; -------------------------------------------
 729  8D88
 730  8D88 CD 75 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 731  8D8B CD 9C 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 732  8D8E CD C1 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 733  8D91
 734  8D91 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 735  8D93 DD 2A E9 8B  	ld ix,(Puntero_de_impresion)
 736  8D97 CD CB 95     	call Genera_datos_de_impresion
 737  8D9A DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 738  8D9C
 739  8D9C CD D7 94     	call Decrementa_Contador_de_mov_masticados
 740  8D9F
 741  8D9F              ; -------------------------------------------
 742  8D9F
 743  8D9F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 744  8D9F
 745  8D9F 2A E9 8B     	ld hl,(Puntero_de_impresion)
 746  8DA2 CD 9F 95     	call Genera_coordenadas
 747  8DA5
 748  8DA5 ED 4B E5 8B  	ld bc,(Coordenada_X)
 749  8DA9
 750  8DA9 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 751  8DAC DD 70 02     	ld (ix+2),b
 752  8DAF
 753  8DAF              ; TODO: Generamos disparo ???
 754  8DAF
 755  8DAF 3A 4D 8C     	ld a,(Permiso_de_disparo_Entidades)
 756  8DB2 A7           	and a
 757  8DB3 C4 45 8E     	call nz,Entidad_genera_disparo_si_procede
 758  8DB6
 759  8DB6 CD 33 A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 760  8DB9
 761  8DB9              Gestiona_siguiente_entidad
 762  8DB9
 763  8DB9 CD DA 91     	call Incrementa_punteros_de_cajas
 764  8DBC
 765  8DBC C1           	pop bc
 766  8DBD 10 85        	djnz 2B
 767  8DBF
 768  8DBF              ; Hemos gestionado todas las entidades.
 769  8DBF              ; ----- ----- -----
 770  8DBF
 771  8DBF CD 89 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 772  8DC2 CD A0 8F     	call Ordena_tabla_de_impresion
 773  8DC5 CD 7D 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 774  8DC8
 775  8DC8 CD 46 8F     	call Borra_diferencia
 776  8DCB
 777  8DCB 3A 5B 8C     	ld a,(Ctrl_3)
 778  8DCE CB 5F        	bit 3,a
 779  8DD0 20 04        	jr nz,Gestion_de_Amadeus
 780  8DD2
 781  8DD2 EB           	ex de,hl
 782  8DD3 71           	ld (hl),c
 783  8DD4 2C           	inc l
 784  8DD5 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 785  8DD6
 786  8DD6              ;! GESTIONA AMADEUS !!!!!!!!!!
 787  8DD6
 788  8DD6              Gestion_de_Amadeus
 789  8DD6
 790  8DD6 21 5B 8C     	ld hl,Ctrl_3
 791  8DD9 CB 76        	bit 6,(hl)
 792  8DDB 28 13        	jr z,Amadeus_vivo
 793  8DDD
 794  8DDD              ; Amadeus ha sido destruido.
 795  8DDD              ; Decrementa (Temp_new_live).
 796  8DDD
 797  8DDD 21 6F 8C     	ld hl,Temp_new_live
 798  8DE0 35           	dec (hl)
 799  8DE1 20 26        	jr nz,End_frame
 800  8DE3
 801  8DE3              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 802  8DE3
 803  8DE3 21 87 8C     	ld hl,Lives
 804  8DE6 35           	dec (hl)
 805  8DE7
 806  8DE7              ;! Fin del juego
 807  8DE7
 808  8DE7 F3           	di
 809  8DE8 28 FE        	jr z,$														;! GAME OVER !!!!!
 810  8DEA FB           	ei
 811  8DEB
 812  8DEB              ; Nueva nave.
 813  8DEB
 814  8DEB CD 62 8E     	call Reinicia_Amadeus
 815  8DEE 18 19        	jr End_frame
 816  8DF0
 817  8DF0              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 818  8DF0
 819  8DF0              Amadeus_vivo
 820  8DF0
 821  8DF0 3A B2 89     	ld a,(Impacto_Amadeus)
 822  8DF3 A7           	and a
 823  8DF4 C4 55 93     	call nz, Genera_explosion_Amadeus
 824  8DF7 20 10        	jr nz, End_frame
 825  8DF9
 826  8DF9 CD C2 92     	call Teclado
 827  8DFC 21 5B 8C     	ld hl,Ctrl_3
 828  8DFF
 829  8DFF CB 6E        	bit 5,(hl)
 830  8E01 28 06        	jr z,End_frame
 831  8E03
 832  8E03              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 833  8E03
 834  8E03 CD DF 8E     	call Change_Amadeus
 835  8E06 CD 22 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 836  8E09
 837  8E09              End_frame
 838  8E09
 839  8E09              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 840  8E09              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 841  8E09
 842  8E09 CD DA A2     	call Genera_datos_de_impresion_disparos_Entidades
 843  8E0C CD 9E A4     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 844  8E0F CD F4 A3     	call Calcula_bytes_pintado_disparos
 845  8E12 CD 01 A4     	call Limpia_album_de_pintado_disparos_entidades
 846  8E15
 847  8E15              ; ------------ ------------- --------------
 848  8E15
 849  8E15 2A 39 8C     	ld hl,(Album_de_borrado)
 850  8E18 22 55 8C     	ld (Scanlines_album_SP),hl
 851  8E1B
 852  8E1B 21 5B 8C     	ld hl,Ctrl_3
 853  8E1E CB C6        	set 0,(hl) 											; Indica Frame completo.
 854  8E20 CB 9E        	res 3,(hl)
 855  8E22 CB A6        	res 4,(hl)
 856  8E24
 857  8E24 21 5C 8C     	ld hl,Ctrl_4
 858  8E27 CB 86        	res 0,(hl)
 859  8E29
 860  8E29 AF           	xor a
 861  8E2A D3 FE        	out ($fe),a
 862  8E2C
 863  8E2C 76           	halt
 864  8E2D
 865  8E2D C3 EE 8C     	jp Main
 866  8E30
 867  8E30              ;------------------------------------------
 868  8E30              ;
 869  8E30              ;	07/11/24
 870  8E30
 871  8E30              Autoriza_disparo_de_entidades
 872  8E30
 873  8E30 3E 01        	ld a,1
 874  8E32 32 4D 8C     	ld (Permiso_de_disparo_Entidades),a
 875  8E35
 876  8E35 3A 77 8C     	ld a,(Repone_CLOCK_disparos)
 877  8E38 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 878  8E3A 38 02        	jr c,1F
 879  8E3C
 880  8E3C              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 881  8E3C              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 882  8E3C              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 883  8E3C
 884  8E3C D6 04        	sub 4								; Aumenta la cadencia del disparo.
 885  8E3E
 886  8E3E 32 77 8C     1 ld (Repone_CLOCK_disparos),a
 887  8E41 32 78 8C     	ld (CLOCK_disparos_de_entidades),a
 888  8E44
 889  8E44 C9           	ret
 890  8E45
 891  8E45              ;------------------------------------------
 892  8E45              ;
 893  8E45              ;	14/09/24
 894  8E45              ;
 895  8E45              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 896  8E45
 897  8E45              Entidad_genera_disparo_si_procede
 898  8E45
 899  8E45 2A 72 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 900  8E48 CB 06        	rlc (hl)
 901  8E4A
 902  8E4A DC 2A A3     	call c,Genera_disparo_de_entidad_maldosa
 903  8E4D
 904  8E4D C9           	ret
 905  8E4E
 906  8E4E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 907  8E4E              ;
 908  8E4E              ;	30/09/24
 909  8E4E
 910  8E4E              Actuaiza_sp_de_disparos_de_entidades
 911  8E4E
 912  8E4E 2A 72 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 913  8E51 23           	inc hl
 914  8E52 22 72 8C     	ld (Puntero_num_aleatorios_disparos),hl
 915  8E55
 916  8E55 11 FD 88     	ld de,Numeros_aleatorios+7
 917  8E58 7B           	ld a,e
 918  8E59 95           	sub l
 919  8E5A C0           	ret nz
 920  8E5B
 921  8E5B 21 F6 88     1 ld hl,Numeros_aleatorios
 922  8E5E 22 72 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 923  8E61 C9           	ret
 924  8E62
 925  8E62              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 926  8E62              ;
 927  8E62              ;	24/07/24
 928  8E62
 929  8E62              Reinicia_Amadeus
 930  8E62
 931  8E62              ;	Reinicia posición y estado.
 932  8E62
 933  8E62 21 CF 50     	ld hl,$50cf
 934  8E65 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 935  8E68 21 CC DC     	ld hl,$dccc
 936  8E6B 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 937  8E6E 21 3D 00     	ld hl,$003d
 938  8E71 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 939  8E74
 940  8E74              ;	limpiamos el álbum de borrado.
 941  8E74
 942  8E74 2A 3D 8C     	ld hl,(Album_de_borrado_Amadeus)
 943  8E77
 944  8E77 AF           	xor a
 945  8E78 77           	ld (hl),a
 946  8E79
 947  8E79 E5           	push hl
 948  8E7A D1           	pop de
 949  8E7B 13           	inc de
 950  8E7C
 951  8E7C 01 23 00     	ld bc,35
 952  8E7F ED B0        	ldir
 953  8E81
 954  8E81 CD 22 91     	call Genera_datos_de_impresion_Amadeus
 955  8E84
 956  8E84              ;	Reinicia temporizaciones.
 957  8E84
 958  8E84 CD FA 91     	call Inicia_Shield
 959  8E87
 960  8E87 3E 5A        	ld a,90
 961  8E89 32 84 8C     	ld (Shield),a
 962  8E8C
 963  8E8C 3E 64        	ld a,100
 964  8E8E 32 6F 8C     	ld (Temp_new_live),a
 965  8E91
 966  8E91              ; 	Restauramos el FLAG: Amadeus vivo.
 967  8E91
 968  8E91 21 5B 8C     	ld hl,Ctrl_3
 969  8E94 CB B6        	res 6,(hl)
 970  8E96
 971  8E96              ;	Fuerza la impresión de la nave en el siguiente frame.
 972  8E96
 973  8E96 21 5B 8C      	ld hl,Ctrl_3
 974  8E99 CB EE        	set 5,(hl)
 975  8E9B
 976  8E9B C9           	ret
 977  8E9C
 978  8E9C              ; --------------------------------------------------------------------------------------------------------------
 979  8E9C              ;
 980  8E9C              ;	23/11/24
 981  8E9C
 982  8E9C              Ajusta_velocidad_entidad
 983  8E9C
 984  8E9C DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 985  8E9F A7           	and a
 986  8EA0 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 987  8EA1              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 988  8EA1              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 989  8EA1
 990  8EA1
 991  8EA1              ; Incrementa (Contador_de_vueltas)x2.
 992  8EA1              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 993  8EA1
 994  8EA1              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 995  8EA1              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 996  8EA1              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 997  8EA1              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 998  8EA1              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 999  8EA1
1000  8EA1
1001  8EA1 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1002  8EA3 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1003  8EA6 E6 10        	and $10
1004  8EA8 C8           	ret z
1005  8EA9
1006  8EA9              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1007  8EA9
1008  8EA9 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1009  8EAC CB 2F        	sra a
1010  8EAE CB 2F        	sra a
1011  8EB0 DD 77 0B     	ld (ix+11),a
1012  8EB3
1013  8EB3 DD 6E 07     	ld l,(ix+7)
1014  8EB6 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1015  8EB9
1016  8EB9              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1017  8EB9 23           	inc hl
1018  8EBA 23           	inc hl
1019  8EBB 23           	inc hl
1020  8EBC 23           	inc hl
1021  8EBD              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1022  8EBD
1023  8EBD DD 75 07     	ld (ix+7),l
1024  8EC0 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1025  8EC3
1026  8EC3 C9           	ret
1027  8EC4
1028  8EC4              ; --------------------------------------------------------------------------------------------------------------
1029  8EC4              ;
1030  8EC4              ;	25/08/24
1031  8EC4
1032  8EC4              Change
1033  8EC4
1034  8EC4 3A 52 8C     	ld a,(Switch)
1035  8EC7 EE 01        	xor 1
1036  8EC9 32 52 8C     	ld (Switch),a
1037  8ECC 2A 37 8C     	ld hl,(Album_de_pintado)
1038  8ECF ED 5B 39 8C  	ld de,(Album_de_borrado)
1039  8ED3 EB           	ex de,hl
1040  8ED4 22 37 8C     	ld (Album_de_pintado),hl
1041  8ED7 22 55 8C     	ld (Scanlines_album_SP),hl
1042  8EDA ED 53 39 8C  	ld (Album_de_borrado),de
1043  8EDE C9           	ret
1044  8EDF
1045  8EDF              Change_Amadeus
1046  8EDF
1047  8EDF 2A 3B 8C     	ld hl,(Album_de_pintado_Amadeus)
1048  8EE2 ED 5B 3D 8C  	ld de,(Album_de_borrado_Amadeus)
1049  8EE6 EB           	ex de,hl
1050  8EE7 22 3B 8C     	ld (Album_de_pintado_Amadeus),hl
1051  8EEA ED 53 3D 8C  	ld (Album_de_borrado_Amadeus),de
1052  8EEE C9           	ret
1053  8EEF
1054  8EEF              Change_Disparos
1055  8EEF
1056  8EEF              ; Álbumes de Amadeus.
1057  8EEF
1058  8EEF 2A 3F 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1059  8EF2 ED 5B 41 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1060  8EF6 EB           	ex de,hl
1061  8EF7 22 3F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1062  8EFA ED 53 41 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1063  8EFE CD E9 A3     	call Limpia_album_de_pintado_disparos_Amadeus
1064  8F01
1065  8F01              ; Álbumes de entidades.
1066  8F01
1067  8F01 2A 43 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1068  8F04 ED 5B 45 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1069  8F08 EB           	ex de,hl
1070  8F09 22 43 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1071  8F0C ED 53 45 8C  	ld (Album_de_borrado_disparos_Entidades),de
1072  8F10 22 47 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1073  8F13
1074  8F13 3A 49 8C     	ld a,(Num_de_bytes_album_de_disparos)
1075  8F16 32 4A 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1076  8F19
1077  8F19 C9           	ret
1078  8F1A
1079  8F1A              ; ------------------------------------
1080  8F1A              ;
1081  8F1A              ; 1/05/24
1082  8F1A
1083  8F1A              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1084  8F1A              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1085  8F1A
1086  8F1A              ;	DESTRUYE: HL,DE,A
1087  8F1A              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1088  8F1A
1089  8F1A              ;	Variables implicadas: (RND_SP).
1090  8F1A
1091  8F1A              Extrae_numero_aleatorio_y_avanza
1092  8F1A
1093  8F1A 21 FD 88     	ld hl,Numeros_aleatorios+7
1094  8F1D EB           	ex de,hl
1095  8F1E 2A 70 8C     	ld hl,(RND_SP)
1096  8F21
1097  8F21 7B           	ld a,e
1098  8F22 95           	sub l
1099  8F23 20 06        	jr nz,1F
1100  8F25
1101  8F25              ; Sitúa HL al principio de la tabla de nº aleatorios.
1102  8F25
1103  8F25 21 F6 88     	ld hl,Numeros_aleatorios
1104  8F28 22 70 8C     	ld (RND_SP),HL
1105  8F2B
1106  8F2B              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1107  8F2B
1108  8F2B 7E           1 ld a,(hl)
1109  8F2C 23           	inc hl
1110  8F2D 22 70 8C     	ld (RND_SP),hl
1111  8F30 C9           	ret
1112  8F31
1113  8F31              ; ------------------------------------
1114  8F31              ;
1115  8F31              ; 1/05/24
1116  8F31
1117  8F31              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1118  8F31              ; (1 a 4 segundos).
1119  8F31              ; Actualizamos (Clock_next_entity) con A.
1120  8F31
1121  8F31              ;	DESTRUYE: A y B.
1122  8F31              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1123  8F31              ;			 Actualiza (Clock_next_entity) con A.
1124  8F31
1125  8F31              ;	Variables implicadas: (Clock_next_entity).
1126  8F31
1127  8F31              ; Notas:
1128  8F31
1129  8F31              ; 	$32 1 seg.
1130  8F31              ; 	$64 2 seg.
1131  8F31              ; 	$96 3 seg.
1132  8F31              ; 	$c8 4 seg.
1133  8F31              ; 	$fa 5 seg.
1134  8F31
1135  8F31              ; $ffff 1310,7 seg, 22 minutos.
1136  8F31
1137  8F31              ;	$0100  5 seg. aproximadamente.
1138  8F31              ;	$0200 10 seg. aproximadamente.
1139  8F31              ;	$0300 15 seg. aproximadamente.
1140  8F31              ;	$0400 20 seg. aproximadamente.
1141  8F31              ;	$0500 25 seg. aproximadamente.
1142  8F31              ;	$0600 30 seg. aproximadamente.
1143  8F31
1144  8F31              Define_Clock_next_entity
1145  8F31
1146  8F31 FE 34        	cp $34
1147  8F33 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1148  8F35
1149  8F35              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1150  8F35
1151  8F35 4F           3 ld c,a
1152  8F36 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1153  8F38 2A 78 5C     	ld hl,(FRAMES)
1154  8F3B A7           	and a
1155  8F3C ED 4A        	adc hl,bc
1156  8F3E 22 75 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1157  8F41 C9           	ret
1158  8F42
1159  8F42 3E 34        1 ld a,$34
1160  8F44 18 EF        	jr 3B
1161  8F46
1162  8F46              ; ------------------------------------
1163  8F46              ;
1164  8F46              ; 18/03/24
1165  8F46
1166  8F46              Borra_diferencia
1167  8F46
1168  8F46 ED 4B 55 8C  	ld bc,(Scanlines_album_SP)
1169  8F4A
1170  8F4A 3A 52 8C     	ld a,(Switch)
1171  8F4D A7           	and a
1172  8F4E 28 08        	jr z,2F
1173  8F50
1174  8F50 2A 50 8C     	ld hl,(Techo_Scanlines_album_2)
1175  8F53 11 50 8C     	ld de,Techo_Scanlines_album_2
1176  8F56 18 06        	jr 3F
1177  8F58
1178  8F58 2A 4E 8C     2 ld hl,(Techo_Scanlines_album)
1179  8F5B 11 4E 8C     	ld de,Techo_Scanlines_album
1180  8F5E
1181  8F5E              ; Diferencia.
1182  8F5E
1183  8F5E ED 42        3 sbc hl,bc
1184  8F60
1185  8F60 C8           	ret z
1186  8F61 D8           	ret c
1187  8F62
1188  8F62              ; Nuevo techo, (más bajo que el anterior).
1189  8F62              ; Fijamos nuevo techo y borramos bytes sobrantes.
1190  8F62
1191  8F62 EB           	ex de,hl
1192  8F63
1193  8F63 71           	ld (hl),c
1194  8F64 2C           	inc l
1195  8F65 70           	ld (hl),b
1196  8F66
1197  8F66 AF           	xor a
1198  8F67 43           	ld b,e
1199  8F68
1200  8F68 2A 55 8C     	ld hl,(Scanlines_album_SP)
1201  8F6B
1202  8F6B 77           1 ld (hl),a
1203  8F6C 23           	inc hl
1204  8F6D 10 FC        	djnz 1B
1205  8F6F
1206  8F6F              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1207  8F6F
1208  8F6F 21 5B 8C     	ld hl,Ctrl_3
1209  8F72 CB DE        	set 3,(hl)
1210  8F74
1211  8F74 C9           	ret
1212  8F75
1213  8F75              ; --------------------------------------------------------------------------------------------------------------
1214  8F75              ;
1215  8F75              ;	23/11/24
1216  8F75              ;
1217  8F75              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1218  8F75
1219  8F75              Entidad_a_Tabla_de_pintado
1220  8F75
1221  8F75              ; Almacena la Coordenada Y de la entidad en curso.
1222  8F75
1223  8F75              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1224  8F75
1225  8F75 DD 7E 02     	ld a,(ix+2)
1226  8F78 2A 57 8C     	ld hl,(India_SP)
1227  8F7B 77           	ld (hl),a
1228  8F7C 2C           	inc l
1229  8F7D
1230  8F7D              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1231  8F7D
1232  8F7D ED 5B 55 8C  	ld de,(Scanlines_album_SP)
1233  8F81
1234  8F81 73           	ld (hl),e
1235  8F82 2C           	inc l
1236  8F83 72           	ld (hl),d
1237  8F84 2C           	inc l
1238  8F85
1239  8F85 22 57 8C     	ld (India_SP),hl
1240  8F88
1241  8F88 C9           	ret
1242  8F89
1243  8F89              ; --------------------------------------------------------------------------------------------------------------
1244  8F89              ;
1245  8F89              ;	27/03/24
1246  8F89              ;
1247  8F89
1248  8F89              Inicializa_India_y_limpia_Tabla_de_impresion
1249  8F89
1250  8F89 2A 57 8C     	ld hl,(India_SP)
1251  8F8C 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1252  8F8F
1253  8F8F 79           	ld a,c
1254  8F90 95           	sub l
1255  8F91 28 06        	jr z,2F
1256  8F93 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1257  8F94              ;														; _ y pasamos a inicializar (India_SP).
1258  8F94 AF           	xor a
1259  8F95
1260  8F95 77           1 ld (hl),a
1261  8F96 2C           	inc l
1262  8F97 10 FC        	djnz 1B												; Limpia Tabla.
1263  8F99
1264  8F99 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1265  8F9C 22 57 8C     	ld (India_SP),hl
1266  8F9F
1267  8F9F C9           	ret
1268  8FA0
1269  8FA0              ; --------------------------------------------------------------------------------------------------------------
1270  8FA0              ;
1271  8FA0              ;	31/3/24
1272  8FA0
1273  8FA0              Ordena_tabla_de_impresion
1274  8FA0
1275  8FA0              ; 5794 T/states.
1276  8FA0              ; 6278 T/states.
1277  8FA0              ; 5310 T/states.
1278  8FA0
1279  8FA0              ; Inicializamos punteros (India_SP) e (India_2_SP).
1280  8FA0              ; Inicializamos contador de comparaciones, [C].
1281  8FA0              ; Cargamos los registros A y B para efectuar comparación.
1282  8FA0
1283  8FA0 FD 2E 00     	ld iyl,0
1284  8FA3
1285  8FA3 3A 2E 8C     	ld a,(Entidades_en_curso)
1286  8FA6 FE 04        	cp 4 	;	4
1287  8FA8 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1288  8FA9
1289  8FA9 3D           	dec a
1290  8FAA 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1291  8FAB 51           	ld d,c 										; Copia de respaldo.
1292  8FAC
1293  8FAC 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1294  8FAD
1295  8FAD 21 03 89     	ld hl,Tabla_de_pintado+3
1296  8FB0 46           	ld b,(hl)
1297  8FB1 22 59 8C     	ld (India_2_SP),hl
1298  8FB4
1299  8FB4 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1300  8FB5 DC DD 8F     	call c, Avanza_India_2_SP
1301  8FB8 CC DD 8F     	call z, Avanza_India_2_SP
1302  8FBB
1303  8FBB FD 2D        	dec iyl
1304  8FBD 28 18        	jr z,2F
1305  8FBF
1306  8FBF
1307  8FBF              ; --------------------------------------------------------------------------------------------------------------
1308  8FBF              ;
1309  8FBF              ;	7/4/24
1310  8FBF
1311  8FBF              Trueque
1312  8FBF
1313  8FBF              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1314  8FBF              ;  			A contiene en nº de fila de (India_SP).
1315  8FBF              ;			HL contiene (India_2_SP).
1316  8FBF
1317  8FBF D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1318  8FC0 E5           	push hl										; Preservo (India_2_SP).
1319  8FC1
1320  8FC1 ED 5B 57 8C  	ld de,(India_SP)
1321  8FC5 EB           	ex de,hl
1322  8FC6 70           	ld (hl),b
1323  8FC7 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1324  8FC8
1325  8FC8 CD 09 90     	call Intercambia_1_byte
1326  8FCB CD 09 90     	call Intercambia_1_byte
1327  8FCE
1328  8FCE
1329  8FCE              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1330  8FCE              ; Recuperamos (India_2_SP) en HL.
1331  8FCE
1332  8FCE 2A 57 8C     	ld hl,(India_SP)
1333  8FD1 7E           	ld a,(hl)
1334  8FD2
1335  8FD2 E1           	pop hl
1336  8FD3 D1           	pop de
1337  8FD4
1338  8FD4              ; --------------------------------------------------------------------------------------------------------------
1339  8FD4
1340  8FD4 CD DD 8F     	call Avanza_India_2_SP
1341  8FD7
1342  8FD7 14           2 inc d
1343  8FD8 15           	dec d
1344  8FD9 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1345  8FDA 18 D8        	jr 1B
1346  8FDC
1347  8FDC C9           	ret
1348  8FDD
1349  8FDD              ; ----- ----- ----- ----- -----
1350  8FDD
1351  8FDD              Avanza_India_2_SP
1352  8FDD
1353  8FDD 0D           	dec c
1354  8FDE 28 0A        	jr z,Avanza_punteros_indios
1355  8FE0
1356  8FE0 FD 2C        	inc iyl
1357  8FE2
1358  8FE2 2C           	inc l
1359  8FE3 2C           	inc l
1360  8FE4 2C           	inc l
1361  8FE5
1362  8FE5 46           	ld b,(hl)
1363  8FE6 22 59 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1364  8FE9
1365  8FE9 C9           	ret
1366  8FEA
1367  8FEA              ; ----- ----- ----- ----- -----
1368  8FEA
1369  8FEA              Avanza_punteros_indios
1370  8FEA
1371  8FEA 15           	dec d
1372  8FEB 28 15        	jr z,Prepara_salida
1373  8FED
1374  8FED 4A           	ld c,d
1375  8FEE
1376  8FEE 2A 57 8C     	ld hl,(India_SP)
1377  8FF1 2C           	inc l
1378  8FF2 2C           	inc l
1379  8FF3 2C           	inc l
1380  8FF4 7E           	ld a,(hl)
1381  8FF5 22 57 8C     	ld (India_SP),hl
1382  8FF8
1383  8FF8 2C           	inc l
1384  8FF9 2C           	inc l
1385  8FFA 2C           	inc l
1386  8FFB 46           	ld b,(hl)
1387  8FFC 22 59 8C     	ld (India_2_SP),hl
1388  8FFF
1389  8FFF FD 2C        	inc iyl
1390  9001
1391  9001 C9           	ret
1392  9002
1393  9002              Prepara_salida
1394  9002
1395  9002 21 00 89     	ld hl,Tabla_de_pintado
1396  9005 22 57 8C     	ld (India_SP),hl
1397  9008 C9           	ret
1398  9009
1399  9009
1400  9009 2C           Intercambia_1_byte inc l
1401  900A 1C           	inc e
1402  900B 46           	ld b,(hl)
1403  900C 1A           	ld a,(de)
1404  900D EB           	ex de,hl
1405  900E 70           	ld (hl),b
1406  900F 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1407  9010 C9           	ret
1408  9011
1409  9011              ; -----------------------------------------------------------------------------------
1410  9011              ;
1411  9011              ;	20/01/24
1412  9011              ;
1413  9011              ;
1414  9011
1415  9011              Construye_movimientos_masticados_entidad
1416  9011
1417  9011 2A EB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1418  9014 E5           	push hl
1419  9015
1420  9015 CD B4 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1421  9018              ;															; _ el (Contador_de_mov_masticados).
1422  9018
1423  9018              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1424  9018              ; A contiene la coordenada X de la posición de inicio de la entidad.
1425  9018
1426  9018 CD 8C 90     	call Cuad1_or_cuad2
1427  901B
1428  901B CD 99 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1429  901E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1430  901E CD 29 9C     	call Recompone_posicion_inicio
1431  9021
1432  9021 CD 59 99     1 call Draw
1433  9024 CD 99 90     	call Guarda_movimiento_masticado
1434  9027
1435  9027 18 4A        	jr 2F
1436  9029
1437  9029              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1438  9029              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1439  9029              ;! -------------------------------------------------------------------------------------------------------------------------------
1440  9029              ;! -------------------------------------------------------------------------------------------------------------------------------
1441  9029
1442  9029 F5           	push af
1443  902A C5           	push bc
1444  902B D5           	push de
1445  902C E5           	push hl
1446  902D FD E5        	push iy
1447  902F DD E5        	push ix
1448  9031
1449  9031 AF           	xor a
1450  9032 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1451  9034
1452  9034              ;	8BFE 00           CTRL_DESPLZ
1453  9034              ;	8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1454  9034              ;	$ddc0			  Almacén de movimientos masticados.
1455  9034              ;	8BEF 00 00        Puntero_de_impresion defw 0
1456  9034              ;	8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1457  9034              ;	8BEC 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1458  9034              ;	8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1459  9034              ;	8BFC 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1460  9034
1461  9034              ; -------------------------------------------------------------------------
1462  9034
1463  9034              ; 	Pos_actual $43fe -
1464  9034              ;	Puntero_de_impresion $44be
1465  9034              ;	Puntero_objeto $8540
1466  9034              ;	Ctrl_Desplz $00
1467  9034
1468  9034              ;	En función de la Posicion_actual:
1469  9034
1470  9034              ;	Coordenada_X $1e
1471  9034              ;	Coordenada_y $07
1472  9034
1473  9034              ; -------------------------------------------------------------------------
1474  9034
1475  9034 2A 37 8C     	ld hl,(Album_de_pintado)
1476  9037 22 55 8C     	ld (Scanlines_album_SP),hl
1477  903A
1478  903A FD E5        	push iy
1479  903C D1           	pop de
1480  903D
1481  903D D5           	push de
1482  903E CD CB 95     	call Genera_datos_de_impresion
1483  9041 D1           	pop de
1484  9042
1485  9042
1486  9042              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1487  9042              ;
1488  9042              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1489  9042              ;							DE (Puntero objeto).
1490  9042
1491  9042
1492  9042 2A 37 8C     	ld hl,(Album_de_pintado)
1493  9045 EB           	ex de,hl
1494  9046 CD BF 96     	call Rutinas_de_pintado
1495  9049
1496  9049 3A E5 8B     	ld a,(Coordenada_X)
1497  904C FE 1E        	cp 30
1498  904E 28 FE        	jr z,$
1499  9050 FE 1F        	cp 31
1500  9052 28 FE        	jr z,$
1501  9054 FE 00        	cp 0
1502  9056 28 FE        	jr z,$
1503  9058 FE 01        	cp 1
1504  905A 28 FE        	jr z,$
1505  905C
1506  905C              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1507  905C 3E 38        	ld a,%00111000
1508  905E CD 8B 95     	call Cls
1509  9061
1510  9061              ; Borra album de pintado.
1511  9061
1512  9061 AF           	xor a
1513  9062 21 00 80     	ld hl,$8000
1514  9065 06 28        	ld b,40
1515  9067 77           23 ld (hl),a
1516  9068 2C           	inc l
1517  9069 10 FC        	djnz 23b
1518  906B
1519  906B              ; ----- ----- ----- ----- -----
1520  906B
1521  906B DD E1        	pop ix
1522  906D FD E1        	pop iy
1523  906F E1           	pop hl
1524  9070 D1           	pop de
1525  9071 C1           	pop bc
1526  9072 F1           	pop af
1527  9073
1528  9073              ;! -------------------------------------------------------------------------------------------------------------------------------
1529  9073              ;! -------------------------------------------------------------------------------------------------------------------------------
1530  9073              ;! -------------------------------------------------------------------------------------------------------------------------------
1531  9073              ;! -------------------------------------------------------------------------------------------------------------------------------
1532  9073
1533  9073 CD C2 9F     2 call Movimiento
1534  9076
1535  9076 3A 5B 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1536  9079 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1537  907B 28 A4        	jr z,1B
1538  907D
1539  907D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1540  907D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1541  907D
1542  907D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1543  907E 22 EB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1544  9081
1545  9081              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1546  9081
1547  9081 CD 20 A1     	call Situa_en_contador_general_de_mov_masticados
1548  9084
1549  9084              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1550  9084              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1551  9084
1552  9084 ED 4B ED 8B  	ld bc,(Contador_de_mov_masticados)
1553  9088
1554  9088 71           	ld (hl),c
1555  9089 23           	inc hl
1556  908A 70           	ld (hl),b
1557  908B
1558  908B C9           	ret
1559  908C
1560  908C              ; -------------------------------------
1561  908C              ;
1562  908C              ;	07/12/24
1563  908C              ;
1564  908C              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1565  908C              ;
1566  908C              ;	INPUT: A contiene la Coordenada_X de la (Posicion_inicio) de la entidad.
1567  908C              ;
1568  908C              ;	MODIFY: A,(Cuad_objeto).
1569  908C              ;
1570  908C
1571  908C FE 10        Cuad1_or_cuad2 cp $10
1572  908E 38 04        	jr c,1F
1573  9090 3E 01        	ld a,1
1574  9092 18 01        	jr 2F
1575  9094
1576  9094 AF           1 xor a
1577  9095 32 03 8C     2 ld (Cuad_objeto),a
1578  9098 C9           	ret
1579  9099
1580  9099              ; -----------------------------------------------------------------------------------
1581  9099              ;
1582  9099              ;	28/12/23
1583  9099              ;
1584  9099              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1585  9099              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1586  9099
1587  9099              Guarda_movimiento_masticado
1588  9099
1589  9099 ED 73 33 8C  	ld (Stack),sp
1590  909D ED 7B EB 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1591  90A1
1592  90A1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1593  90A3 FD E5            push iy 												; Pushea Puntero_objeto.
1594  90A5
1595  90A5 ED 7B 33 8C      ld sp,(Stack)
1596  90A9
1597  90A9 2A ED 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1598  90AC 23           	inc hl
1599  90AD 22 ED 8B     	ld (Contador_de_mov_masticados),hl
1600  90B0
1601  90B0 CD B4 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1602  90B3              ;															; _ el (Contador_de_mov_masticados).
1603  90B3 C9               ret
1604  90B4
1605  90B4              ; --------------------------------------------------------------------------------------------------------------
1606  90B4              ;
1607  90B4              ;	12/1/24
1608  90B4              ;
1609  90B4              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1610  90B4
1611  90B4              Actualiza_Puntero_de_almacen_de_mov_masticados
1612  90B4
1613  90B4 2A EB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1614  90B7 01 04 00     	ld bc,4
1615  90BA A7           	and a
1616  90BB ED 4A        	adc hl,bc
1617  90BD 22 EB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1618  90C0 C9           	ret
1619  90C1
1620  90C1              ; ------------------------------------------
1621  90C1              ;
1622  90C1              ;	23/11/24
1623  90C1              ;
1624  90C1              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1625  90C1
1626  90C1
1627  90C1              Obtenemos_puntero_de_impresion
1628  90C1
1629  90C1 DD 6E 07     	ld l,(ix+7)
1630  90C4 DD 66 08     	ld h,(ix+8)
1631  90C7
1632  90C7              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1633  90C7
1634  90C7 ED 73 33 8C  	ld (Stack),sp
1635  90CB F9           	ld sp,hl
1636  90CC
1637  90CC AF           	xor a
1638  90CD 67           	ld h,a
1639  90CE 6C           	ld l,h															; ld hl,"0"
1640  90CF
1641  90CF D1           	pop de															; (Puntero_objeto) en DE.
1642  90D0 C1           	pop bc
1643  90D1
1644  90D1              ; 	Almacena (Puntero_de_impresion) en caja.
1645  90D1
1646  90D1 DD 71 05     	ld (ix+5),c
1647  90D4 DD 70 06     	ld (ix+6),b
1648  90D7
1649  90D7 ED 43 E9 8B  	ld (Puntero_de_impresion),bc
1650  90DB
1651  90DB              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1652  90DB
1653  90DB 39           	add hl,sp
1654  90DC DD 75 07     	ld (ix+7),l
1655  90DF DD 74 08     	ld (ix+8),h
1656  90E2
1657  90E2 C1           	pop bc
1658  90E3
1659  90E3 79           	ld a,c
1660  90E4 80           	add b															; Comprueba si ya no hay datos en el almacén.
1661  90E5
1662  90E5 ED 7B 33 8C  	ld sp,(Stack)
1663  90E9
1664  90E9 CC E5 94     	call z,Reinicia_entidad_maliciosa
1665  90EC
1666  90EC C9           	ret
1667  90ED
1668  90ED              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1669  90ED              ;
1670  90ED              ;	25/11/24
1671  90ED
1672  90ED              Cargamos_registros_con_explosion
1673  90ED
1674  90ED DD 6E 07     	ld l,(ix+7)
1675  90F0 DD 66 08     	ld h,(ix+8)
1676  90F3 CD 93 91     	call Extrae_address
1677  90F6 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1678  90F7
1679  90F7 DD 6E 05     	ld l,(ix+5)
1680  90FA DD 66 06     	ld h,(ix+6)
1681  90FD
1682  90FD E5           	push hl
1683  90FE DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1684  9100
1685  9100 C9           	ret
1686  9101
1687  9101
1688  9101              Cargamos_registros_con_explosion_Amadeus
1689  9101
1690  9101 2A B5 89     	ld hl,(Pamm_Amadeus)
1691  9104 CD 93 91     	call Extrae_address
1692  9107
1693  9107 5D           	ld e,l
1694  9108 54           	ld d,h
1695  9109
1696  9109 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1697  910D
1698  910D C9           	ret
1699  910E
1700  910E              ; --------------------------------------------------------------------------------------------------------------
1701  910E              ;
1702  910E              ;	17/06/24
1703  910E              ;
1704  910E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1705  910E              ;
1706  910E              ;	IX contiene el puntero de impresión.
1707  910E              ;	DE contiene (Puntero_objeto).
1708  910E
1709  910E
1710  910E              Cargamos_registros_con_mov_masticado_Amadeus
1711  910E
1712  910E ED 73 33 8C  	ld (Stack),sp
1713  9112 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1714  9116 D1           	pop de 															; DE contiene Puntero_objeto
1715  9117 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1716  9119 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1717  911D ED 7B 33 8C  	ld sp,(Stack)
1718  9121 C9           	ret
1719  9122
1720  9122              ; ---------------------------------------------------------------------------------------------------------------------
1721  9122              ;
1722  9122              ;	18/6/24
1723  9122              ;
1724  9122              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1725  9122
1726  9122              Genera_datos_de_impresion_Amadeus
1727  9122
1728  9122 3A B2 89     	ld a,(Impacto_Amadeus)
1729  9125 A7           	and a
1730  9126 20 03        	jr nz,1F
1731  9128
1732  9128              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1733  9128              ; _apuntando a la correspondiente explosión.
1734  9128
1735  9128 CD 0E 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1736  912B
1737  912B DD 7D        1 ld a,ixl
1738  912D E6 1F        	and $1f
1739  912F 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1740  9132
1741  9132 2A 55 8C     	ld hl,(Scanlines_album_SP)
1742  9135 E5           	push hl
1743  9136
1744  9136 2A 3B 8C     	ld hl,(Album_de_pintado_Amadeus)
1745  9139 22 55 8C     	ld (Scanlines_album_SP),hl
1746  913C
1747  913C CD CB 95     	call Genera_datos_de_impresion
1748  913F
1749  913F E1           	pop hl
1750  9140 22 55 8C     	ld (Scanlines_album_SP),hl
1751  9143
1752  9143 C9           	ret
1753  9144
1754  9144              ; ---------------------------------------------------------------------------------------------------------------------
1755  9144              ;
1756  9144              ;	13/03/24
1757  9144              ;
1758  9144              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1759  9144
1760  9144              Inicia_albumes_de_lineas
1761  9144
1762  9144 21 00 80     	ld hl,Scanlines_album
1763  9147 22 37 8C     	ld (Album_de_pintado),hl
1764  914A 22 55 8C     	ld (Scanlines_album_SP),hl
1765  914D
1766  914D 21 1A 81     	ld hl,Scanlines_album_2
1767  9150 22 39 8C     	ld (Album_de_borrado),hl
1768  9153
1769  9153 C9           	ret
1770  9154
1771  9154              Inicia_albumes_de_lineas_Amadeus
1772  9154
1773  9154 21 34 82     	ld hl,Amadeus_scanlines_album
1774  9157 22 3B 8C     	ld (Album_de_pintado_Amadeus),hl
1775  915A 21 58 82     	ld hl,Amadeus_scanlines_album_2
1776  915D 22 3D 8C     	ld (Album_de_borrado_Amadeus),hl
1777  9160
1778  9160 C9           	ret
1779  9161
1780  9161              Inicia_albumes_de_disparos
1781  9161
1782  9161 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1783  9164 22 3F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1784  9167 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1785  916A 22 41 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1786  916D
1787  916D 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1788  9170 22 43 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1789  9173 22 47 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1790  9176
1791  9176 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1792  9179 22 45 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1793  917C
1794  917C C9           	ret
1795  917D
1796  917D              ; ---------------------------------------------------------------------------------------------------------------------
1797  917D              ;
1798  917D              ; 8/1/23
1799  917D              ;
1800  917D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1801  917D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1802  917D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1803  917D
1804  917D              ; Destruye HL y DE !!!!!
1805  917D
1806  917D              Inicia_punteros_de_cajas
1807  917D
1808  917D 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1809  9180 CD 93 91         call Extrae_address
1810  9183 22 24 8C         ld (Puntero_store_caja),hl
1811  9186 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1812  9189 22 28 8C     	ld (Indice_restore_caja),hl
1813  918C CD 93 91     	call Extrae_address
1814  918F 22 26 8C     	ld (Puntero_restore_caja),hl
1815  9192 C9               ret
1816  9193
1817  9193              ; *************************************************************************************************************************************************************
1818  9193
1819  9193              ;
1820  9193              ; 20/10/22
1821  9193              ;
1822  9193              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1823  9193              ;
1824  9193              ; Destruye el puntero y DE !!!!!
1825  9193
1826  9193 5E           Extrae_address ld e,(hl)
1827  9194 23           	inc hl
1828  9195 56           	ld d,(hl)
1829  9196 2B           	dec hl
1830  9197 EB           	ex de,hl
1831  9198 C9           	ret
1832  9199
1833  9199              ; *************************************************************************************************************************************************************
1834  9199              ;
1835  9199              ;	7/12/24
1836  9199              ;
1837  9199              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1838  9199              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1839  9199              ;
1840  9199              ;   Destruye HL y BC !!!!!,
1841  9199              ;
1842  9199              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1843  9199              ;					"0" ..... Izquierda.
1844  9199
1845  9199              Inicia_Puntero_objeto
1846  9199
1847  9199 3A 03 8C     	ld a,(Cuad_objeto)
1848  919C A7           	and a
1849  919D
1850  919D CC A5 91     	call z,Inicia_puntero_objeto_der
1851  91A0 C8           	ret z
1852  91A1
1853  91A1 CD B8 91     	call Inicia_puntero_objeto_izq
1854  91A4 C9           	ret
1855  91A5
1856  91A5              ; Arrancamos desde la parte izquierda de la pantalla.
1857  91A5              ; Iniciamos (Indice_Sprite_der).
1858  91A5
1859  91A5 2A F9 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1860  91A8 22 FD 8B     	ld (Puntero_DESPLZ_der),hl
1861  91AB CD 93 91     	call Extrae_address
1862  91AE 22 F6 8B     	ld (Puntero_objeto),hl
1863  91B1
1864  91B1 2A FB 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1865  91B4 22 FF 8B     	ld (Puntero_DESPLZ_izq),hl
1866  91B7 C9           	ret
1867  91B8
1868  91B8              ; Arrancamos desde la parte derecha de la pantalla.
1869  91B8              ; Iniciamos (Indice_Sprite_izq).
1870  91B8
1871  91B8 2A FB 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1872  91BB 22 FF 8B     	ld (Puntero_DESPLZ_izq),hl
1873  91BE CD 93 91     	call Extrae_address
1874  91C1 22 F6 8B     	ld (Puntero_objeto),hl
1875  91C4
1876  91C4 2A F9 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1877  91C7 22 FD 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1878  91CA C9           	ret
1879  91CB
1880  91CB              ; **************************************************************************************************
1881  91CB              ;
1882  91CB              ;	27/11/24
1883  91CB              ;
1884  91CB              ;	INPUT: IX contiene (Puntero_store_caja).
1885  91CB              ;
1886  91CB              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1887  91CB
1888  91CB              Salta_caja_de_entidades_vacia
1889  91CB
1890  91CB DD 7E 00     	ld a,(ix+0)
1891  91CE A7           	and a
1892  91CF C0           	ret nz
1893  91D0
1894  91D0 CD DA 91     	call Incrementa_punteros_de_cajas
1895  91D3 DD 2A 24 8C  	ld ix,(Puntero_store_caja)
1896  91D7 18 F2        	jr Salta_caja_de_entidades_vacia
1897  91D9
1898  91D9 C9           	ret
1899  91DA
1900  91DA              ; **************************************************************************************************
1901  91DA              ;
1902  91DA              ;	08/05/23
1903  91DA              ;
1904  91DA              ;	Incrementamos los dos punteros de entidades. (+1).
1905  91DA
1906  91DA              Incrementa_punteros_de_cajas
1907  91DA
1908  91DA 2A 26 8C     	ld hl,(Puntero_restore_caja)
1909  91DD 22 24 8C     	ld (Puntero_store_caja),hl
1910  91E0 2A 28 8C     	ld hl,(Indice_restore_caja)
1911  91E3 23           	inc hl
1912  91E4 23           	inc hl
1913  91E5 22 28 8C     	ld (Indice_restore_caja),hl
1914  91E8 CD 93 91         call Extrae_address
1915  91EB 22 26 8C         ld (Puntero_restore_caja),hl
1916  91EE C9               ret
1917  91EF
1918  91EF              ; -----------------------------------------------------------
1919  91EF
1920  91EF              ; Teclado.
1921  91EF
1922  91EF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1923  91F1 DB FE        	in a,($fe)
1924  91F3 E6 01        	and $01
1925  91F5 28 02        	jr z,1f
1926  91F7 18 F6        	jr Pulsa_ENTER
1927  91F9 C9           1 ret
1928  91FA
1929  91FA              ; **************************************************************************************************
1930  91FA              ;
1931  91FA              ; Temporización.
1932  91FA
1933  91FA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1934  91FA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1935  91FA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1936  91FA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1937  91FA
1938  91FA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1939  91FA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1940  91FA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1941  91FA
1942  91FA              ; A partir de $4f61 no hace falta DELAY.
1943  91FA
1944  91FA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1945  91FA
1946  91FA              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1947  91FA              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1948  91FA              ;	LD A,B
1949  91FA              ;	AND A
1950  91FA              ;	JR NZ,wait
1951  91FA              ;	RET
1952  91FA
1953  91FA              ; ---------------------------------------------------------------------------------------------------------------
1954  91FA              ;
1955  91FA              ;	13/07/24
1956  91FA              ;
1957  91FA
1958  91FA              Inicia_Shield
1959  91FA
1960  91FA 21 7E 8C     	ld hl,Datos_Shield
1961  91FD 22 82 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1962  9200
1963  9200 7E           	ld a,(hl)
1964  9201 32 85 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1965  9204
1966  9204 3E 01        	ld a,1
1967  9206 32 86 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1968  9209
1969  9209 C9           	ret
1970  920A
1971  920A              ; ---------- ---------- ---------- ---------- ----------
1972  920A              ;
1973  920A              ;	30/11/24
1974  920A              ;
1975  920A              ;	Limpia la caja de entidades de una entidad eliminada.
1976  920A              ;
1977  920A              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1978  920A              ;	MODIFY: A,BC,DE y HL.
1979  920A
1980  920A              Limpia_caja_de_entidades
1981  920A
1982  920A DD E5        	push ix
1983  920C E1           	pop hl
1984  920D AF           	xor a
1985  920E 77           	ld (hl),a
1986  920F 5D           	ld e,l
1987  9210 54           	ld d,h
1988  9211 1C           	inc e
1989  9212 01 0B 00     	ld bc,11
1990  9215 ED B0        	ldir
1991  9217 C9           	ret
1992  9218
1993  9218              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1994  9218              ;
1995  9218              ;	4/6/24
1996  9218              ;
1997  9218              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1998  9218              ;
1999  9218              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2000  9218              ;
2001  9218
2002  9218              Actualiza_pantalla
2003  9218
2004  9218 3E 02        	ld a,2
2005  921A D3 FE        	out ($fe),a
2006  921C
2007  921C 3A 5B 8C     	ld a,(Ctrl_3)
2008  921F CB 57        	bit 2,a
2009  9221 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2010  9223
2011  9223              Borrando_entidades
2012  9223
2013  9223 2A 55 8C     	ld hl,(Scanlines_album_SP)
2014  9226 CD 93 91     	call Extrae_address
2015  9229 24           	inc h
2016  922A 25           	dec h
2017  922B 28 05        	jr z,Pintando_entidades
2018  922D CD BF 96     	call Rutinas_de_pintado												; Borra.
2019  9230 18 F1        	jr Borrando_entidades
2020  9232
2021  9232              Pintando_entidades
2022  9232
2023  9232 2A 57 8C     	ld hl,(India_SP)
2024  9235 2C           	inc l
2025  9236 CD 93 91     	call Extrae_address
2026  9239 24           	inc h
2027  923A 25           	dec h
2028  923B 28 0E        	jr z,Ejecuta_escudo
2029  923D 1C           	inc e
2030  923E 1C           	inc e
2031  923F ED 53 57 8C  	ld (India_SP),de
2032  9243 CD 93 91     	call Extrae_address
2033  9246 CD BF 96     	call Rutinas_de_pintado
2034  9249 18 E7        	jr Pintando_entidades
2035  924B
2036  924B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2037  924B
2038  924B              Ejecuta_escudo
2039  924B
2040  924B 3A 84 8C     	ld a,(Shield)
2041  924E A7           	and a
2042  924F 20 2F        	jr nz,Aplica_Shield
2043  9251
2044  9251              Borrando_Amadeus
2045  9251
2046  9251 21 5B 8C     	ld hl,Ctrl_3
2047  9254 CB 6E        	bit 5,(hl)
2048  9256 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2049  9258
2050  9258 2A 3D 8C     	ld hl,(Album_de_borrado_Amadeus)
2051  925B CD 93 91     	call Extrae_address
2052  925E 24           	inc h
2053  925F 25           	dec h
2054  9260 28 03        	jr z,Pintando_Amadeus
2055  9262 CD BF 96     	call Rutinas_de_pintado
2056  9265
2057  9265              Pintando_Amadeus
2058  9265
2059  9265 2A 3B 8C     	ld hl,(Album_de_pintado_Amadeus)
2060  9268 CD 93 91     	call Extrae_address
2061  926B 24           	inc h
2062  926C 25           	dec h
2063  926D 28 03        	jr z,1F
2064  926F CD BF 96     	call Rutinas_de_pintado
2065  9272
2066  9272              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2067  9272
2068  9272 21 5B 8C     1 ld hl,Ctrl_3
2069  9275 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2070  9277 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2071  9279 CB AE        	res 5,(hl)
2072  927B
2073  927B 3E 01        	ld a,1												; Borde azul.
2074  927D D3 FE        	out ($fe),a
2075  927F
2076  927F C9           	ret
2077  9280
2078  9280              Aplica_Shield
2079  9280
2080  9280              ;	Bit 1 "1" (Shield_3) Sólo borra.
2081  9280              ;		  "0"     ""     Borra/Pinta.
2082  9280              ;	Bit 2    ""  RET.	 No borra, no pinta.
2083  9280
2084  9280 21 86 8C     	ld hl,Shield_3
2085  9283
2086  9283 CB 5E        	bit 3,(hl)
2087  9285 20 DE        	jr nz,Pintando_Amadeus
2088  9287
2089  9287 CB 56        	bit 2,(hl)
2090  9289 20 E7        	jr nz,1B
2091  928B
2092  928B CB 4E        	bit 1,(hl)
2093  928D C4 94 92     	call nz,Borra_Amadeus_shield
2094  9290
2095  9290 28 BF        	jr z,Borrando_Amadeus
2096  9292 18 DE        	jr 1B
2097  9294
2098  9294              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2099  9294
2100  9294              Borra_Amadeus_shield
2101  9294
2102  9294 3A 5B 8C     	ld a,(Ctrl_3)
2103  9297 CB 6F        	bit 5,a
2104  9299 28 08        	jr z,1F
2105  929B
2106  929B 2A 3D 8C     	ld hl,(Album_de_borrado_Amadeus)
2107  929E CD 93 91     	call Extrae_address
2108  92A1 18 06        	jr 2F
2109  92A3
2110  92A3 2A 3B 8C     1 ld hl,(Album_de_pintado_Amadeus)
2111  92A6 CD 93 91     	call Extrae_address
2112  92A9
2113  92A9 CD BF 96     2 call Rutinas_de_pintado
2114  92AC
2115  92AC AF           	xor a
2116  92AD 3C           	inc a											; Asegura NZ en la salida de la rutina.
2117  92AE
2118  92AE C9           	ret
2119  92AF
2120  92AF              Pinta_Amadeus_shield
2121  92AF
2122  92AF 2A 3B 8C     	ld hl,(Album_de_pintado_Amadeus)
2123  92B2 CD 93 91     	call Extrae_address
2124  92B5 CD BF 96     	call Rutinas_de_pintado
2125  92B8
2126  92B8 AF           	xor a
2127  92B9 3C           	inc a											; Asegura NZ en la salida de la rutina.
2128  92BA
2129  92BA C9           	ret
2130  92BB
2131  92BB              Borra_Pinta_Amadeus_shield
2132  92BB
2133  92BB CD 94 92     	call Borra_Amadeus_shield
2134  92BE CD AF 92     	call Pinta_Amadeus_shield
2135  92C1 C9           	ret
2136  92C2
2137  92C2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2138  92C2              ;
2139  92C2              ;	19/6/24
2140  92C2              ;
2141  92C2
2142  92C2              Teclado
2143  92C2
2144  92C2              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2145  92C2
2146  92C2 3E F7        	ld a,$f7												; "5" para disparar.
2147  92C4 DB FE        	in a,($fe)
2148  92C6 E6 10        	and $10
2149  92C8
2150  92C8 CC BD A4     	call z,Genera_disparo_Amadeus
2151  92CB
2152  92CB 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2153  92CD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2154  92CF E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2155  92D1 CC 8F 9F         call z,Amadeus_a_izquierda
2156  92D4
2157  92D4 3E F7        	ld a,$f7
2158  92D6 DB FE        	in a,($fe)
2159  92D8 E6 01        	and $01
2160  92DA C8           	ret z
2161  92DB
2162  92DB 3E F7        	ld a,$f7
2163  92DD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2164  92DF E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2165  92E1 CC A7 9F     	call z,Amadeus_a_derecha
2166  92E4
2167  92E4 C9           	ret
2168  92E5
2169  92E5              ; ------------------------------------------------------------------------------------------------------------------------
2170  92E5              ;
2171  92E5              ;	06/07/24
2172  92E5              ;
2173  92E5
2174  92E5              Genera_explosion
2175  92E5
2176  92E5 21 6D 8C     	ld hl,Clock_explosion
2177  92E8 35           	dec (hl)
2178  92E9 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2179  92EB
2180  92EB              Borra_entidad_colisionada
2181  92EB
2182  92EB CD 75 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2183  92EE
2184  92EE DD E5        	push ix
2185  92F0 CD ED 90     	call Cargamos_registros_con_explosion
2186  92F3 CD CB 95     	call Genera_datos_de_impresion
2187  92F6 DD E1        	pop ix
2188  92F8
2189  92F8 AF           	xor a
2190  92F9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2191  92FA
2192  92FA C9           	ret
2193  92FB
2194  92FB              Siguiente_frame_explosion
2195  92FB
2196  92FB 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2197  92FD
2198  92FD              ; Avanza Frame de explosión.
2199  92FD
2200  92FD DD 6E 07     	ld l,(ix+7)
2201  9300 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2202  9303
2203  9303 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2204  9306
2205  9306 79           	ld a,c
2206  9307 95           	sub l
2207  9308 20 41        	jr nz,1F
2208  930A
2209  930A
2210  930A              ; Fín de la entidad !!!!!!!!!!!!!
2211  930A              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2212  930A
2213  930A              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2214  930A              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2215  930A              ; Entidades_en_curso db 0								; Entidades en pantalla.
2216  930A
2217  930A              ; La entidad eliminada, es la última del nivel ?
2218  930A
2219  930A 3A 2C 8C     	ld a,(Numero_de_entidades)
2220  930D A7           	and a
2221  930E 28 30        	jr z,2F
2222  9310
2223  9310              ; Decrementa (Numero_de_entidades)
2224  9310
2225  9310 3D           	dec a
2226  9311 32 2C 8C     	ld (Numero_de_entidades),a
2227  9314 21 2E 8C     	ld hl,Entidades_en_curso
2228  9317 35           	dec (hl)
2229  9318
2230  9318              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2231  9318              ; IX apunta al 1er .db de la entidad eliminada.
2232  9318
2233  9318 2A 2A 8C     	ld hl,(Puntero_indice_master)
2234  931B CD 93 91     	call Extrae_address
2235  931E
2236  931E DD E5        	push ix
2237  9320 D1           	pop de
2238  9321
2239  9321 01 0C 00     	ld bc,12
2240  9324 ED B0        	ldir
2241  9326
2242  9326              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2243  9326
2244  9326 CD C1 90     	call Obtenemos_puntero_de_impresion
2245  9329
2246  9329 DD 6E 05     	ld l,(ix+5)
2247  932C 2C           	inc l
2248  932D DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2249  9330
2250  9330 CD 9F 95     	call Genera_coordenadas
2251  9333
2252  9333 ED 4B E5 8B  	ld bc,(Coordenada_X)
2253  9337
2254  9337 DD 71 01     	ld (ix+1),c
2255  933A DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2256  933D
2257  933D AF           	xor a
2258  933E 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2259  933F
2260  933F C9           	ret
2261  9340
2262  9340              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2263  9340
2264  9340 21 2D 8C     2 ld hl,Numero_parcial_de_entidades
2265  9343 35           	dec (hl)
2266  9344 23           	inc hl
2267  9345 35           	dec (hl)
2268  9346
2269  9346 CD 0A 92     	call Limpia_caja_de_entidades
2270  9349 18 A0        	jr Borra_entidad_colisionada
2271  934B
2272  934B 23           1 inc hl
2273  934C 23           	inc hl
2274  934D
2275  934D DD 75 07     	ld (ix+7),l
2276  9350 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2277  9353
2278  9353 18 96        	jr Borra_entidad_colisionada
2279  9355
2280  9355              ; ----- ----- ----- ----- -----
2281  9355
2282  9355              Genera_explosion_Amadeus
2283  9355
2284  9355 21 6E 8C     	ld hl,Clock_explosion_Amadeus
2285  9358 35           	dec (hl)
2286  9359 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2287  935B
2288  935B              Borra_Amadeus_impactado
2289  935B
2290  935B CD DF 8E     	call Change_Amadeus
2291  935E CD 01 91     	call Cargamos_registros_con_explosion_Amadeus
2292  9361 CD 22 91     	call Genera_datos_de_impresion_Amadeus
2293  9364
2294  9364 21 5B 8C     	ld hl,Ctrl_3
2295  9367 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2296  9369
2297  9369 AF           	xor a
2298  936A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2299  936B
2300  936B C9           	ret
2301  936C
2302  936C              Siguiente_frame_explosion_Amadeus
2303  936C
2304  936C 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2305  936E
2306  936E              ; Avanza Frame de explosión.
2307  936E
2308  936E 2A B5 89     	ld hl,(Pamm_Amadeus)
2309  9371 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2310  9374
2311  9374 79           	ld a,c
2312  9375 95           	sub l
2313  9376 20 0B        	jr nz,1F
2314  9378
2315  9378              ; Fín de Amadeus !!!!!!!!!!!!!
2316  9378              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2317  9378
2318  9378 AF           	xor a
2319  9379 32 B2 89     	ld (Impacto_Amadeus),a
2320  937C 21 5B 8C     	ld hl,Ctrl_3
2321  937F CB F6        	set 6,(hl)
2322  9381
2323  9381 18 D8        	jr Borra_Amadeus_impactado
2324  9383
2325  9383 23           1 inc hl
2326  9384 23           	inc hl
2327  9385 22 B5 89     	ld (Pamm_Amadeus),hl
2328  9388 18 D1        	jr Borra_Amadeus_impactado
2329  938A
2330  938A              ; ---------------------------------------------------------------
2331  938A
2332  938A              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 938A              ; ******************************************************************************************************************************************************************************************
   2+ 938A              ;
   3+ 938A              ;   21/04/24
   4+ 938A              ;
   5+ 938A              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 938A              ;   (XOR) bit a bit.
   7+ 938A              ;
   8+ 938A              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 938A
  10+ 938A              Derivando_RND
  11+ 938A
  12+ 938A 21 F6 88         ld hl,Numeros_aleatorios
  13+ 938D
  14+ 938D ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 938F C5               push bc
  16+ 9390              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9390 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9393              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9393
  20+ 9393 A7           6 and a                                 ; Carry a "0".
  21+ 9394 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9396 30 02            jr nc,1F
  23+ 9398
  24+ 9398 CB C1            set 0,c
  25+ 939A
  26+ 939A 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 939B E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 939D 5F               ld e,a
  29+ 939E
  30+ 939E 7A               ld a,d
  31+ 939F E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 93A1 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 93A3
  34+ 93A3 CB 3F            srl a
  35+ 93A5
  36+ 93A5 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 93A6
  38+ 93A6 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 93A7 28 04            jr z,4F
  40+ 93A9
  41+ 93A9 CB FF            set 7,a
  42+ 93AB 18 02            jr 5F
  43+ 93AD
  44+ 93AD CB BF        4 res 7,a
  45+ 93AF
  46+ 93AF CB 21        5 sla c
  47+ 93B1 10 E0            djnz 6B
  48+ 93B3
  49+ 93B3 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 93B4
  51+ 93B4 77               ld (hl),a
  52+ 93B5 23               inc hl
  53+ 93B6 C1               pop bc
  54+ 93B7 10 D4            djnz 3B
  55+ 93B9
  56+ 93B9 C9               ret
  57+ 93BA
  58+ 93BA
  59+ 93BA
# file closed: RND_Derivando.asm
2333  93BA              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 93BA              ;---------------------------------------------------------------------------------------------------------------
   2+ 93BA              ;
   3+ 93BA              ;   13/11/24
   4+ 93BA
   5+ 93BA              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 93BA
   7+ 93BA              Genera_movimientos_masticados_del_nivel
   8+ 93BA
   9+ 93BA              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 93BA
  11+ 93BA              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 93BA              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 93BA              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 93BA
  15+ 93BA 2D           	dec l
  16+ 93BB 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 93BC 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 93BD 4E           	ld c,(hl)
  19+ 93BE
  20+ 93BE E5           1 push hl														; Push (Datos_de_nivel).
  21+ 93BF C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 93C0
  23+ 93C0              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 93C0
  25+ 93C0 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 93C1
  27+ 93C1 CD FF 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 93C4
  29+ 93C4              ;	Caja Master inicializada ???
  30+ 93C4
  31+ 93C4 7E           	ld a,(hl)
  32+ 93C5 A7           	and a
  33+ 93C6 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 93C8
  35+ 93C8              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 93C8
  37+ 93C8 C1           	pop bc
  38+ 93C9 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 93CA C5           	push bc
  40+ 93CB
  41+ 93CB CD 9F 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 93CE CD 33 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 93D1
  44+ 93D1 3A E4 8B     	ld a,(Tipo)
  45+ 93D4 CD 0F 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 93D7
  47+ 93D7              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 93D7
  49+ 93D7              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 93D7              ;	ld a,(hl)
  51+ 93D7              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 93D7              ;	and a
  53+ 93D7              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  54+ 93D7
  55+ 93D7              ;	inc a														; (Posicion_inicio) $4001.
  56+ 93D7
  57+ 93D7              ;2 ld hl,Posicion_inicio
  58+ 93D7              ;	ld (hl),a
  59+ 93D7
  60+ 93D7              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  61+ 93D7              ;	Generamos "Movimientos masticados" de la entidad.
  62+ 93D7
  63+ 93D7 CD 11 90     	call Construye_movimientos_masticados_entidad
  64+ 93DA
  65+ 93DA 2A 2A 8C     	ld hl,(Puntero_indice_master)
  66+ 93DD CD 93 91     	call Extrae_address
  67+ 93E0
  68+ 93E0 5D           	ld e,l
  69+ 93E1 54           	ld d,h
  70+ 93E2
  71+ 93E2 CD 5A 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  72+ 93E5
  73+ 93E5              Movimientos_masticados_construidos
  74+ 93E5
  75+ 93E5 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  76+ 93E6
  77+ 93E6 E1           	pop hl														; Pop (Datos_de_nivel).
  78+ 93E7 2C           	inc l														; Datos_de_nivel +1 en HL.
  79+ 93E8
  80+ 93E8 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  81+ 93E9 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  82+ 93EB
  83+ 93EB C9           	ret
  84+ 93EC
  85+ 93EC              ;---------------------------------------------------------------------------------------------------------------
  86+ 93EC              ;
  87+ 93EC              ;   9/11/24
  88+ 93EC              ;
  89+ 93EC              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  90+ 93EC              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  91+ 93EC              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  92+ 93EC              ;	_ de la 1ª entidad del Nivel.
  93+ 93EC              ;
  94+ 93EC              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  95+ 93EC
  96+ 93EC              ;	MODIFICA: HL,DE y A.
  97+ 93EC              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  98+ 93EC
  99+ 93EC              Inicializa_1er_Nivel
 100+ 93EC
 101+ 93EC              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 102+ 93EC
 103+ 93EC 21 CD 8B     	ld hl,Indice_de_niveles
 104+ 93EF CD 93 91     	call Extrae_address
 105+ 93F2 ED 53 7A 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 106+ 93F6
 107+ 93F6 7E           	ld a,(hl)
 108+ 93F7 32 2C 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 109+ 93FA
 110+ 93FA 2C           	inc l
 111+ 93FB 22 7C 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 112+ 93FE
 113+ 93FE C9           	ret
 114+ 93FF
 115+ 93FF              ; ----------------------
 116+ 93FF              ;
 117+ 93FF              ;	13/11/24
 118+ 93FF              ;
 119+ 93FF
 120+ 93FF              Situa_en_Caja_Master
 121+ 93FF
 122+ 93FF CD 1E 95         call Calcula_salto_en_BC
 123+ 9402 21 58 89         ld hl,Indice_de_cajas_master
 124+ 9405 A7               and a
 125+ 9406 ED 4A            adc hl,bc
 126+ 9408 22 2A 8C       	ld (Puntero_indice_master),hl
 127+ 940B CD 93 91     	call Extrae_address
 128+ 940E C9           	ret
 129+ 940F
 130+ 940F              ; ----------------------
 131+ 940F
 132+ 940F              ; Fija_velocidades ld de,Perfiles_de_velocidad
 133+ 940F              ; 	ld bc,4
 134+ 940F              ; 	ldir
 135+ 940F              ; 	ret
 136+ 940F
 137+ 940F 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 9410 CD 1E 95         call Calcula_salto_en_BC
 139+ 9413 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 9416 A7               and a
 141+ 9417 ED 4A            adc hl,bc
 142+ 9419 CD 93 91         call Extrae_address
 143+ 941C 22 15 8C         ld (Puntero_indice_mov),hl
 144+ 941F C9               ret
 145+ 9420
 146+ 9420              ;---------------------------------------------------------------------------------------------------------------
 147+ 9420              ;
 148+ 9420              ;   13/11/24
 149+ 9420              ;
 150+ 9420              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 9420
 152+ 9420
 153+ 9420              Prepara_Cajas_de_Entidades
 154+ 9420
 155+ 9420              ; Preparamos los punteros de las cajas de entidades:
 156+ 9420
 157+ 9420 CD 7D 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 9423              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 9423 CD 63 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 9426
 161+ 9426 2A 7C 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 9429
 163+ 9429              ; En este punto:
 164+ 9429              ;
 165+ 9429              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 9429              ; B contiene (Numero_parcial_de_entidades).
 167+ 9429
 168+ 9429 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 942A
 170+ 942A 7E           	ld a,(hl)
 171+ 942B
 172+ 942B CD FF 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 942E
 174+ 942E ED 5B 24 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 9432
 176+ 9432 D5           	push de
 177+ 9433 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 9435
 179+ 9435 01 0C 00     	ld bc,12
 180+ 9438 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 943A              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 943A
 183+ 943A              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 943A              ;
 185+ 943A              ;
 186+ 943A              ; ------------------------------------------------------ IX
 187+ 943A              ; ------------------------------------------------------ IX
 188+ 943A              ; ------------------------------------------------------ IX
 189+ 943A              ; ------------------------------------------------------ IX
 190+ 943A
 191+ 943A DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 943C
 193+ 943C CD C1 90     	call Obtenemos_puntero_de_impresion
 194+ 943F
 195+ 943F DD 6E 05     	ld l,(ix+5)
 196+ 9442 2C           	inc l
 197+ 9443 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 9446
 199+ 9446 D5           	push de														; Push (Puntero_objeto).
 200+ 9447 E5           	push hl														; Push (Puntero_de_impresion).
 201+ 9448
 202+ 9448 CD 9F 95     	call Genera_coordenadas
 203+ 944B
 204+ 944B ED 4B E5 8B  	ld bc,(Coordenada_X)
 205+ 944F
 206+ 944F DD 71 01     	ld (ix+1),c
 207+ 9452 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 9455
 209+ 9455 CD 75 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 9458
 211+ 9458 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 945A D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 945B
 214+ 945B CD CB 95     	call Genera_datos_de_impresion
 215+ 945E
 216+ 945E DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 9460
 218+ 9460              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 9460
 220+ 9460 CD D7 94     	call Decrementa_Contador_de_mov_masticados
 221+ 9463 CD B4 94     	call Limpiamos_bandeja_DRAW
 222+ 9466 CD DA 91     	call Incrementa_punteros_de_cajas
 223+ 9469
 224+ 9469              ; Siguiente entidad del Nivel.
 225+ 9469
 226+ 9469 2A 7C 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 946C 23           	inc hl 														; _ entidad del Nivel.
 228+ 946D
 229+ 946D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 946E
 231+ 946E 10 B9        	djnz 1B
 232+ 9470
 233+ 9470 C9           	ret
 234+ 9471
 235+ 9471              ; -------------------------------------------------------------------------------------------------------------------
 236+ 9471              ;
 237+ 9471              ;	27/5/24
 238+ 9471              ;
 239+ 9471              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 9471              ;
 241+ 9471
 242+ 9471              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 9471              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 9471
 245+ 9471 21 26 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 9474 CD 33 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 9477
 248+ 9477
 249+ 9477              Construye_movimientos_masticados_Amadeus
 250+ 9477
 251+ 9477 2A EB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 947A CD B4 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 947D              ;															; _ el (Contador_de_mov_masticados).
 254+ 947D CD 99 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 9480              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 9480
 257+ 9480              ; Generamos movimientos masticados de Amadeus.
 258+ 9480
 259+ 9480 06 79        	ld b,121												; $0079, 121d.
 260+ 9482
 261+ 9482 C5           1 push bc
 262+ 9483 CD 59 99     	call Draw
 263+ 9486 CD 99 90     	call Guarda_movimiento_masticado
 264+ 9489
 265+ 9489 CD C3 9C     	call Mov_right
 266+ 948C CD C3 9C     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 948F
 268+ 948F C1           	pop bc
 269+ 9490 10 F0        	djnz 1B
 270+ 9492
 271+ 9492              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 9492
 273+ 9492              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 9492              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 9492
 276+ 9492 2A EB 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 9495 01 08 00     	ld bc,8
 278+ 9498 A7           	and a
 279+ 9499 ED 42        	sbc hl,bc
 280+ 949B 22 EB 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 949E
 282+ 949E C9           	ret
 283+ 949F
 284+ 949F              ; ---------------------------------------------------------------------
 285+ 949F              ;
 286+ 949F              ;	10/02/24
 287+ 949F              ;
 288+ 949F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 949F              ;
 290+ 949F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 949F
 292+ 949F              Definicion_segun_tipo
 293+ 949F
 294+ 949F CD 1E 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 94A2 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 94A5 CD 29 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 94A8 C9           	ret
 298+ 94A9
 299+ 94A9              ; ---------------------------------------------------------------------
 300+ 94A9              ;
 301+ 94A9              ;	6/7/24
 302+ 94A9
 303+ 94A9
 304+ 94A9              Store_Restore_cajas
 305+ 94A9
 306+ 94A9 ED 5B 24 8C  	ld de,(Puntero_store_caja)
 307+ 94AD CD 5A 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 94B0 CD DA 91     	call Incrementa_punteros_de_cajas
 309+ 94B3 C9           	ret
 310+ 94B4
 311+ 94B4              ; ---------------------------------------------------------------------
 312+ 94B4              ;
 313+ 94B4              ;	23/6/24
 314+ 94B4              ;
 315+ 94B4              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 94B4              ;
 317+ 94B4              ;	MODIFY: HL
 318+ 94B4
 319+ 94B4              Limpiamos_bandeja_DRAW
 320+ 94B4
 321+ 94B4 ED 73 33 8C  	ld (Stack),sp
 322+ 94B8 31 09 8C     	ld sp,Vel_left
 323+ 94BB
 324+ 94BB AF           	xor a
 325+ 94BC 67           	ld h,a
 326+ 94BD 6F           	ld l,a
 327+ 94BE
 328+ 94BE E5           	push hl
 329+ 94BF E5           	push hl
 330+ 94C0 E5           	push hl
 331+ 94C1 E5           	push hl
 332+ 94C2 E5           	push hl
 333+ 94C3 E5           	push hl
 334+ 94C4 E5           	push hl
 335+ 94C5 E5           	push hl
 336+ 94C6 E5           	push hl
 337+ 94C7 E5           	push hl
 338+ 94C8 E5           	push hl
 339+ 94C9 E5           	push hl
 340+ 94CA E5           	push hl
 341+ 94CB E5           	push hl
 342+ 94CC E5           	push hl
 343+ 94CD E5           	push hl
 344+ 94CE E5           	push hl
 345+ 94CF E5           	push hl
 346+ 94D0
 347+ 94D0 33           	inc sp
 348+ 94D1
 349+ 94D1 E5           	push hl
 350+ 94D2 ED 7B 33 8C  	ld sp,(Stack)
 351+ 94D6
 352+ 94D6 C9           	ret
 353+ 94D7
 354+ 94D7              ; ---------------------------------------------------------------------
 355+ 94D7              ;
 356+ 94D7              ;	23/11/24
 357+ 94D7              ;
 358+ 94D7              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 94D7
 360+ 94D7              Decrementa_Contador_de_mov_masticados
 361+ 94D7
 362+ 94D7 DD 6E 09     	ld l,(ix+9)
 363+ 94DA DD 66 0A     	ld h,(ix+10)
 364+ 94DD
 365+ 94DD 2B           	dec hl
 366+ 94DE
 367+ 94DE DD 75 09     	ld (ix+9),l
 368+ 94E1 DD 74 0A     	ld (ix+10),h
 369+ 94E4
 370+ 94E4 C9           	ret
 371+ 94E5
 372+ 94E5              ; ---------------------------------------------------------------------
 373+ 94E5              ;
 374+ 94E5              ;	24/11/24
 375+ 94E5
 376+ 94E5              Reinicia_entidad_maliciosa
 377+ 94E5
 378+ 94E5              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 94E5
 380+ 94E5 CD 20 A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94E8 CD 2D A1     	call Transfiere_datos_de_contadores
 382+ 94EB
 383+ 94EB              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94EB
 385+ 94EB DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 94EE CD 9F 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 94F1
 388+ 94F1 7D           	ld a,l
 389+ 94F2 C6 0B        	add 11
 390+ 94F4 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 94F5
 392+ 94F5 CD 93 91     	call Extrae_address
 393+ 94F8
 394+ 94F8 DD 75 07     	ld (ix+7),l
 395+ 94FB DD 74 08     	ld (ix+8),h
 396+ 94FE
 397+ 94FE CD C1 90     	call Obtenemos_puntero_de_impresion
 398+ 9501
 399+ 9501              ; Incrementa (Contador_de_vueltas)x2.
 400+ 9501              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 9501
 402+ 9501              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 9501              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 9501              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 9501              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 9501              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 9501
 408+ 9501 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 9505
 410+ 9505 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 9508 CB 2F        	sra a
 412+ 950A CB 2F        	sra a
 413+ 950C
 414+ 950C DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 950F
 416+ 950F 3E 40        	ld a,$40
 417+ 9511 DD BE 03     	cp (ix+3)
 418+ 9514 C0           	ret nz
 419+ 9515
 420+ 9515              ; Límitador.
 421+ 9515
 422+ 9515              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 9515
 424+ 9515 DD CB 03 2E  	sra (ix+3)
 425+ 9519 DD CB 0B 2E  	sra (ix+11)
 426+ 951D
 427+ 951D C9           	ret
 428+ 951E
 429+ 951E              ;	------------------------------------------------------------------------------------
 430+ 951E              ;
 431+ 951E              ;	09/11/24
 432+ 951E              ;
 433+ 951E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 951E              ;
 435+ 951E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 951E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 951E
 438+ 951E A7           Calcula_salto_en_BC and a
 439+ 951F 28 04        	jr z,1F
 440+ 9521 CB 27        	sla a
 441+ 9523 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 9525 4F           1 ld c,a
 443+ 9526 06 00        	ld b,0
 444+ 9528 C9           	ret
 445+ 9529
 446+ 9529              ; ------------------------------------------------------------------
 447+ 9529              ;
 448+ 9529              ;	19/1/24
 449+ 9529              ;
 450+ 9529              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 9529              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 9529
 453+ 9529 A7           Situa_en_datos_de_definicion and a
 454+ 952A ED 4A        	adc hl,bc
 455+ 952C CD 93 91     	call Extrae_address
 456+ 952F 22 31 8C         ld (Datos_de_entidad),hl
 457+ 9532 C9           	ret
 458+ 9533
 459+ 9533              ; ----------------------------------------------------------------------------------------------------------
 460+ 9533              ;
 461+ 9533              ;	24/6/24
 462+ 9533              ;
 463+ 9533              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 9533              ;	_ de entidad.
 465+ 9533              ;
 466+ 9533              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 9533              ;
 468+ 9533              ;
 469+ 9533              ;	MODIFICA: HL,DE y BC
 470+ 9533
 471+ 9533
 472+ 9533              Definicion_de_entidad_a_bandeja_DRAW
 473+ 9533
 474+ 9533 18 FE        	jr $										; 2466 - 2172 = 294t/states.
 475+ 9535
 476+ 9535              ; Quiero optimizar esta rutina, parece un poco cutre. (Suprimimos las variables Filas y Columns).
 477+ 9535
 478+ 9535
 479+ 9535 11 E4 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 480+ 9538 7E           	ld a,(hl) 									; Volcamos Tipo.
 481+ 9539 12           	ld (de),a
 482+ 953A 23           	inc hl
 483+ 953B
 484+ 953B 11 E7 8B     	ld de,Contador_de_vueltas
 485+ 953E 7E           	ld a,(hl)
 486+ 953F 12           	ld (de),a
 487+ 9540 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 488+ 9541
 489+ 9541 11 F9 8B     	ld de,Indice_Sprite_der
 490+ 9544 01 04 00     	ld bc,4
 491+ 9547 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 492+ 9549
 493+ 9549 11 01 8C     	ld de,Posicion_inicio
 494+ 954C 01 03 00     	ld bc,3										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 495+ 954F ED B0        	ldir 										; Vuelco (Frames_explosion).
 496+ 9551
 497+ 9551 11 EB 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 498+ 9554 01 02 00     	ld bc,2
 499+ 9557 ED B0        	ldir
 500+ 9559
 501+ 9559 C9           	ret
 502+ 955A
 503+ 955A              ; ----------------------------------------------------------------------------------------------------------
 504+ 955A              ;
 505+ 955A              ;	1/8/24
 506+ 955A              ;
 507+ 955A
 508+ 955A              Parametros_de_bandeja_DRAW_a_caja
 509+ 955A
 510+ 955A 21 E4 8B     	ld hl,Bandeja_DRAW
 511+ 955D 01 0C 00     	ld bc,12
 512+ 9560 ED B0        	ldir
 513+ 9562 C9           	ret
 514+ 9563
 515+ 9563              ;---------------------------------------------------------------------------------------------------------------
 516+ 9563              ;
 517+ 9563              ;	13/11/24
 518+ 9563              ;
 519+ 9563              ;	INICIALIZA (Numero_parcial_de_entidades).
 520+ 9563              ;
 521+ 9563              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 522+ 9563              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ 9563
 524+ 9563              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ 9563              ;			- Actualiza (Numero_de_entidades).
 526+ 9563
 527+ 9563              ;	MODIFICA: A y B.
 528+ 9563
 529+ 9563
 530+ 9563              Inicializa_Numero_parcial_de_entidades
 531+ 9563
 532+ 9563 3A 2C 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 533+ 9566 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 534+ 9568 38 0E        	jr c,1F
 535+ 956A 28 0C        	jr z,1F
 536+ 956C
 537+ 956C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 538+ 956C              ; Actualizamos variables.
 539+ 956C
 540+ 956C D6 06        	sub 6
 541+ 956E 32 2C 8C     	ld (Numero_de_entidades),a
 542+ 9571 3E 06        	ld a,6
 543+ 9573 32 2D 8C     	ld (Numero_parcial_de_entidades),a
 544+ 9576 47           	ld b,a
 545+ 9577 C9           	ret
 546+ 9578
 547+ 9578              ; El nº total de entidades no supera el nº de cajas de entidades.
 548+ 9578              ; (Numero_de_entidades)="0".
 549+ 9578
 550+ 9578 32 2D 8C     1 ld (Numero_parcial_de_entidades),a
 551+ 957B 47           	ld b,a
 552+ 957C AF           	xor a
 553+ 957D 32 2C 8C     	ld (Numero_de_entidades),a
 554+ 9580 C9           	ret
 555+ 9581
# file closed: Rutinas_de_inicio_y_niveles.asm
2334  9581              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9581              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9581              ;
   3+ 9581              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9581              ;
   5+ 9581              ; *****************************************************************************************************************************************************************************************
   6+ 9581              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9581
   8+ 9581 7C           calcula_tercio ld a,h
   9+ 9582 E6 18        	and $18
  10+ 9584 CB 2F        	sra a
  11+ 9586 CB 2F        	sra a
  12+ 9588 CB 2F        	sra a
  13+ 958A C9           	ret
  14+ 958B
# file closed: calcula_tercio.asm
2335  958B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 958B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 958B              ;
   3+ 958B              ;
   4+ 958B              ;	CLS.
   5+ 958B              ;
   6+ 958B              ;	Limpia la pantalla y define sus atributos.
   7+ 958B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 958B              ;
   9+ 958B              ;	COLORES: 0 ..... NEGRO
  10+ 958B              ;    		 1 ..... AZUL
  11+ 958B              ; 			 2 ..... ROJO
  12+ 958B              ;			 3 ..... MAGENTA
  13+ 958B              ; 			 4 ..... VERDE
  14+ 958B              ; 			 5 ..... CIAN
  15+ 958B              ;			 6 ..... AMARILLO
  16+ 958B              ; 			 7 ..... BLANCO
  17+ 958B              ;
  18+ 958B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 958B              ;
  20+ 958B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 958B
  22+ 958B
  23+ 958B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 958E 11 01 40     	LD DE,$4001
  25+ 9591 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9594 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9596 ED B0        	LDIR
  28+ 9598 01 FF 02     	LD BC,767
  29+ 959B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 959C ED B0        	LDIR
  31+ 959E C9           	ret
  32+ 959F
# file closed: Cls.asm
2336  959F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 959F              ; ------------------------------------------------------------------------
   2+ 959F              ;
   3+ 959F              ;	30/1/24
   4+ 959F              ;
   5+ 959F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 959F              ;	Fila superior "0", Columna izquierda "0".
   7+ 959F              ;
   8+ 959F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 959F              ;
  10+ 959F              ;	Modifica: A,BC y DE.
  11+ 959F
  12+ 959F              Genera_coordenadas
  13+ 959F
  14+ 959F 7D           	ld a,l
  15+ 95A0 E6 1F        	and $1f
  16+ 95A2
  17+ 95A2 32 E5 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 95A5
  19+ 95A5 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 95A6 FE 40        	cp $40
  21+ 95A8 38 1C        	jr c,4F
  22+ 95AA
  23+ 95AA CD 81 95     	call calcula_tercio
  24+ 95AD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 95AE
  26+ 95AE 1E 00        	ld e,0
  27+ 95B0 7D           	ld a,l
  28+ 95B1 E6 E0        	and $e0
  29+ 95B3 28 01        	jr z,1F
  30+ 95B5 04           	inc b
  31+ 95B6
  32+ 95B6 04           1 inc b
  33+ 95B7 05           	dec b
  34+ 95B8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 95BA              ;														; _ , salimos.
  36+ 95BA 1C           3 inc e
  37+ 95BB D6 20        	sub 32
  38+ 95BD 20 FB        	jr nz,3B
  39+ 95BF 10 F5        	djnz 1B
  40+ 95C1
  41+ 95C1 7B           2 ld a,e
  42+ 95C2 32 E6 8B     	ld (Coordenada_y),a
  43+ 95C5 C9           	ret
  44+ 95C6
  45+ 95C6 AF           4 xor a
  46+ 95C7 32 E6 8B     	ld (Coordenada_y),a
  47+ 95CA C9           	ret
  48+ 95CB
# file closed: Genera_coordenadas.asm
2337  95CB              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 95CB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 95CB              ;
   3+ 95CB              ;	20/09/24
   4+ 95CB              ;
   5+ 95CB              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 95CB              ;   DE contiene Puntero_objeto.
   7+ 95CB              ;   IX contiene el Puntero de impresión.
   8+ 95CB
   9+ 95CB              Genera_datos_de_impresion
  10+ 95CB
  11+ 95CB ED 73 33 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 95CF
  13+ 95CF 2A 55 8C         ld hl,(Scanlines_album_SP)
  14+ 95D2
  15+ 95D2 3E 05            ld a,5
  16+ 95D4 85               add l
  17+ 95D5 6F               ld l,a
  18+ 95D6
  19+ 95D6 F9               ld sp,hl
  20+ 95D7 22 55 8C         ld (Scanlines_album_SP),hl
  21+ 95DA
  22+ 95DA 21 00 00         ld hl,0
  23+ 95DD
  24+ 95DD DD E5            push ix
  25+ 95DF 3B               dec sp
  26+ 95E0 ED 7A            adc hl,sp
  27+ 95E2 D5               push de
  28+ 95E3
  29+ 95E3              ; Recuperamos SP.
  30+ 95E3
  31+ 95E3 ED 7B 33 8C      ld sp,(Stack)
  32+ 95E7
  33+ 95E7 E5               push hl
  34+ 95E8 F1               pop af
  35+ 95E9 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95EA
  37+ 95EA              ; Tenemos el encabezado listo.
  38+ 95EA              ; Preparamos registros para generar los scanlines.
  39+ 95EA
  40+ 95EA DD E5            push ix
  41+ 95EC E1               pop hl                                          ; 1er scanline en HL.
  42+ 95ED
  43+ 95ED ED 5B 55 8C      ld de,(Scanlines_album_SP)
  44+ 95F1
  45+ 95F1              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95F1              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95F1
  48+ 95F1 7C               ld a,h
  49+ 95F2 FE 50            cp $50
  50+ 95F4 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95F6
  52+ 95F6 20 05            jr nz,2F
  53+ 95F8
  54+ 95F8 7D               ld a,l
  55+ 95F9 FE E0            cp $e0
  56+ 95FB 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95FD
  58+ 95FD 7D           2 ld a,l
  59+ 95FE FE C0            cp $c0
  60+ 9600 D2 96 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9603
  62+ 9603              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9603
  64+ 9603 CD 0B 9C         call NextScan
  65+ 9606 EB               ex de,hl
  66+ 9607
  67+ 9607 73               ld (hl),e
  68+ 9608 23               inc hl
  69+ 9609 72               ld (hl),d
  70+ 960A 23               inc hl
  71+ 960B
  72+ 960B EB               ex de,hl
  73+ 960C
  74+ 960C CD 0B 9C         call NextScan
  75+ 960F EB               ex de,hl
  76+ 9610
  77+ 9610 73               ld (hl),e
  78+ 9611 23               inc hl
  79+ 9612 72               ld (hl),d
  80+ 9613 23               inc hl
  81+ 9614
  82+ 9614 EB               ex de,hl
  83+ 9615
  84+ 9615 CD 0B 9C         call NextScan
  85+ 9618 EB               ex de,hl
  86+ 9619
  87+ 9619 73               ld (hl),e
  88+ 961A 23               inc hl
  89+ 961B 72               ld (hl),d
  90+ 961C 23               inc hl
  91+ 961D
  92+ 961D EB               ex de,hl
  93+ 961E
  94+ 961E CD 0B 9C         call NextScan
  95+ 9621 EB               ex de,hl
  96+ 9622
  97+ 9622 73               ld (hl),e
  98+ 9623 23               inc hl
  99+ 9624 72               ld (hl),d
 100+ 9625 23               inc hl
 101+ 9626
 102+ 9626 EB               ex de,hl
 103+ 9627
 104+ 9627 CD 0B 9C         call NextScan
 105+ 962A EB               ex de,hl
 106+ 962B
 107+ 962B 73               ld (hl),e
 108+ 962C 23               inc hl
 109+ 962D 72               ld (hl),d
 110+ 962E 23               inc hl
 111+ 962F
 112+ 962F EB               ex de,hl
 113+ 9630
 114+ 9630 CD 0B 9C         call NextScan
 115+ 9633 EB               ex de,hl
 116+ 9634
 117+ 9634 73               ld (hl),e
 118+ 9635 23               inc hl
 119+ 9636 72               ld (hl),d
 120+ 9637 23               inc hl
 121+ 9638
 122+ 9638 EB               ex de,hl
 123+ 9639
 124+ 9639 CD 0B 9C         call NextScan
 125+ 963C EB               ex de,hl
 126+ 963D
 127+ 963D 73               ld (hl),e
 128+ 963E 23               inc hl
 129+ 963F 72               ld (hl),d
 130+ 9640 23               inc hl
 131+ 9641
 132+ 9641 EB               ex de,hl
 133+ 9642
 134+ 9642 CD 0B 9C         call NextScan
 135+ 9645 EB               ex de,hl
 136+ 9646
 137+ 9646 73               ld (hl),e
 138+ 9647 23               inc hl
 139+ 9648 72               ld (hl),d
 140+ 9649 23               inc hl
 141+ 964A
 142+ 964A EB               ex de,hl
 143+ 964B
 144+ 964B CD 0B 9C         call NextScan
 145+ 964E EB               ex de,hl
 146+ 964F
 147+ 964F 73               ld (hl),e
 148+ 9650 23               inc hl
 149+ 9651 72               ld (hl),d
 150+ 9652 23               inc hl
 151+ 9653
 152+ 9653 EB               ex de,hl
 153+ 9654
 154+ 9654 CD 0B 9C         call NextScan
 155+ 9657 EB               ex de,hl
 156+ 9658
 157+ 9658 73               ld (hl),e
 158+ 9659 23               inc hl
 159+ 965A 72               ld (hl),d
 160+ 965B 23               inc hl
 161+ 965C
 162+ 965C EB               ex de,hl
 163+ 965D
 164+ 965D CD 0B 9C         call NextScan
 165+ 9660 EB               ex de,hl
 166+ 9661
 167+ 9661 73               ld (hl),e
 168+ 9662 23               inc hl
 169+ 9663 72               ld (hl),d
 170+ 9664 23               inc hl
 171+ 9665
 172+ 9665 EB               ex de,hl
 173+ 9666
 174+ 9666 CD 0B 9C         call NextScan
 175+ 9669 EB               ex de,hl
 176+ 966A
 177+ 966A 73               ld (hl),e
 178+ 966B 23               inc hl
 179+ 966C 72               ld (hl),d
 180+ 966D 23               inc hl
 181+ 966E
 182+ 966E EB               ex de,hl
 183+ 966F
 184+ 966F CD 0B 9C         call NextScan
 185+ 9672 EB               ex de,hl
 186+ 9673
 187+ 9673 73               ld (hl),e
 188+ 9674 23               inc hl
 189+ 9675 72               ld (hl),d
 190+ 9676 23               inc hl
 191+ 9677
 192+ 9677 EB               ex de,hl
 193+ 9678
 194+ 9678 CD 0B 9C         call NextScan
 195+ 967B EB               ex de,hl
 196+ 967C
 197+ 967C 73               ld (hl),e
 198+ 967D 23               inc hl
 199+ 967E 72               ld (hl),d
 200+ 967F 23               inc hl
 201+ 9680
 202+ 9680 EB               ex de,hl
 203+ 9681
 204+ 9681 CD 0B 9C         call NextScan
 205+ 9684 EB               ex de,hl
 206+ 9685
 207+ 9685              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9685              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9685              ;   _ generar sus scanlines.
 210+ 9685
 211+ 9685              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9685
 213+ 9685 73               ld (hl),e
 214+ 9686 23               inc hl
 215+ 9687 72               ld (hl),d
 216+ 9688 23               inc hl
 217+ 9689
 218+ 9689              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9689
 220+ 9689 22 55 8C         ld (Scanlines_album_SP),hl
 221+ 968C
 222+ 968C EB               ex de,hl
 223+ 968D
 224+ 968D              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 968D
 226+ 968D              ;    call NextScan
 227+ 968D              ;    call NextScan
 228+ 968D
 229+ 968D 22 60 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9690
 231+ 9690              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9690
 233+ 9690 08               ex af,af
 234+ 9691
 235+ 9691 F5               push af
 236+ 9692 E1               pop hl
 237+ 9693
 238+ 9693 36 10            ld (hl),16
 239+ 9695
 240+ 9695 C9               ret
 241+ 9696
 242+ 9696              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9696
 244+ 9696              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9696
 246+ 9696 3E 57            ld a,$57
 247+ 9698 94               sub h
 248+ 9699 47               ld b,a
 249+ 969A
 250+ 969A 3E DF            ld a,$df
 251+ 969C BD               cp l
 252+ 969D 38 04            jr c,1F
 253+ 969F
 254+ 969F 3E 08            ld a,8
 255+ 96A1 80               add b
 256+ 96A2 47               ld b,a
 257+ 96A3
 258+ 96A3              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 96A3              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 96A3
 261+ 96A3 48           1 ld c,b
 262+ 96A4 0C               inc c
 263+ 96A5
 264+ 96A5 04               inc b
 265+ 96A6 05               dec b
 266+ 96A7 20 02            jr nz,3F
 267+ 96A9
 268+ 96A9 18 0B            jr 6F
 269+ 96AB
 270+ 96AB CD 0B 9C     3 call NextScan
 271+ 96AE EB               ex de,hl
 272+ 96AF
 273+ 96AF 73               ld (hl),e
 274+ 96B0 23               inc hl
 275+ 96B1 72               ld (hl),d
 276+ 96B2 23               inc hl
 277+ 96B3
 278+ 96B3 EB               ex de,hl
 279+ 96B4 10 F5            djnz 3B
 280+ 96B6
 281+ 96B6 ED 53 55 8C  6 ld (Scanlines_album_SP),de
 282+ 96BA
 283+ 96BA 08           5 ex af,af
 284+ 96BB F5               push af
 285+ 96BC E1               pop hl
 286+ 96BD
 287+ 96BD 71               ld (hl),c
 288+ 96BE
 289+ 96BE C9               ret
 290+ 96BF
# file closed: Genera_datos_de_impresion.asm
2338  96BF              	include "Rutinas_de_pintado.asm"
# file opened: Rutinas_de_pintado.asm
   1+ 96BF              ; -----------------------------------------------------------------------------
   2+ 96BF              ;
   3+ 96BF              ;   28/12/24
   4+ 96BF              ;
   5+ 96BF
   6+ 96BF              ; Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
   7+ 96BF              ; Scanlines_album_2 equ $811a	;    ($811a - $8232)
   8+ 96BF              ; Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
   9+ 96BF              ; Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  10+ 96BF
  11+ 96BF              Rutinas_de_pintado
  12+ 96BF
  13+ 96BF ED 73 33 8C      ld (Stack),sp
  14+ 96C3
  15+ 96C3 EB               ex de,hl                                          ; HL se encuentra en el álbum de líneas.
  16+ 96C4              ;                                                     ; DE se encuentra en los datos del sprite.
  17+ 96C4 2C               inc l
  18+ 96C5 2C               inc l
  19+ 96C6
  20+ 96C6 46               ld b,(hl)                                         ; B contiene el nº de scanlines a imprimir.
  21+ 96C7
  22+ 96C7 2C               inc l
  23+ 96C8
  24+ 96C8 F9               ld sp,hl                                          ; El SP irá extrayendo scanlines en HL.
  25+ 96C9
  26+ 96C9              ;   Vamos a imprimir una entidad o Amadeus ???
  27+ 96C9
  28+ 96C9 7D               ld a,l
  29+ 96CA FE 34            cp $34
  30+ 96CC 38 03            jr c,Printing_routines_selector
  31+ 96CE
  32+ 96CE E1               pop hl
  33+ 96CF 18 0F            jr Pinta_rapido_3Chars                            ; Amadeus SIEMPRE se imprime completo, (3 Chars) y 16 scanlines.
  34+ 96D1
  35+ 96D1              ;   ----- ----- ----- ----- -----
  36+ 96D1
  37+ 96D1              Printing_routines_selector
  38+ 96D1
  39+ 96D1              ;   Seleccionaremos la rutina adecuada en función del nº de columna en el que nos encontremos.
  40+ 96D1              ;   Columnas (2-29) utilizaremos [Print_3Chars], Estas rutinas imiprimen el sprite completo, 3 chars.
  41+ 96D1
  42+ 96D1              ; En que columna nos encontramos?
  43+ 96D1
  44+ 96D1 E1               pop hl                                            ; Dirección de pantalla del 1er scan del sprite
  45+ 96D2
  46+ 96D2 7D               ld a,l
  47+ 96D3 E6 1F            and $1f
  48+ 96D5 FE 1E            cp 30
  49+ 96D7 D2 F2 97         jp nc,Desaparece_por_la_derecha
  50+ 96DA
  51+ 96DA              ; -----------------------------------------------------------------------------------------------------------------------------
  52+ 96DA
  53+ 96DA              Print_3Chars
  54+ 96DA
  55+ 96DA              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
  56+ 96DA              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
  57+ 96DA              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
  58+ 96DA
  59+ 96DA              ;   16 scanlines o menos ???
  60+ 96DA
  61+ 96DA 78               ld a,b
  62+ 96DB FE 10            cp 16
  63+ 96DD C2 D8 97         jp nz,Pinta_lento_3Chars                           ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  64+ 96E0
  65+ 96E0              ;   Rutinas:
  66+ 96E0
  67+ 96E0              Pinta_rapido_3Chars                                    ;   1520 t/states.
  68+ 96E0
  69+ 96E0 1A               ld a,(de)
  70+ 96E1 AE               xor (hl)
  71+ 96E2 77               ld (hl),a
  72+ 96E3 2C               inc l
  73+ 96E4 1C               inc e
  74+ 96E5 1A               ld a,(de)
  75+ 96E6 AE               xor (hl)
  76+ 96E7 77               ld (hl),a
  77+ 96E8 2C               inc l
  78+ 96E9 1C               inc e
  79+ 96EA 1A               ld a,(de)
  80+ 96EB AE               xor (hl)
  81+ 96EC 77               ld (hl),a
  82+ 96ED 1C               inc e
  83+ 96EE
  84+ 96EE E1               pop hl
  85+ 96EF
  86+ 96EF 1A               ld a,(de)
  87+ 96F0 AE               xor (hl)
  88+ 96F1 77               ld (hl),a
  89+ 96F2 2C               inc l
  90+ 96F3 1C               inc e
  91+ 96F4 1A               ld a,(de)
  92+ 96F5 AE               xor (hl)
  93+ 96F6 77               ld (hl),a
  94+ 96F7 2C               inc l
  95+ 96F8 1C               inc e
  96+ 96F9 1A               ld a,(de)
  97+ 96FA AE               xor (hl)
  98+ 96FB 77               ld (hl),a
  99+ 96FC 1C               inc e
 100+ 96FD
 101+ 96FD E1               pop hl
 102+ 96FE
 103+ 96FE 1A               ld a,(de)
 104+ 96FF AE               xor (hl)
 105+ 9700 77               ld (hl),a
 106+ 9701 2C               inc l
 107+ 9702 1C               inc e
 108+ 9703 1A               ld a,(de)
 109+ 9704 AE               xor (hl)
 110+ 9705 77               ld (hl),a
 111+ 9706 2C               inc l
 112+ 9707 1C               inc e
 113+ 9708 1A               ld a,(de)
 114+ 9709 AE               xor (hl)
 115+ 970A 77               ld (hl),a
 116+ 970B 1C               inc e
 117+ 970C
 118+ 970C E1               pop hl
 119+ 970D
 120+ 970D 1A               ld a,(de)
 121+ 970E AE               xor (hl)
 122+ 970F 77               ld (hl),a
 123+ 9710 2C               inc l
 124+ 9711 1C               inc e
 125+ 9712 1A               ld a,(de)
 126+ 9713 AE               xor (hl)
 127+ 9714 77               ld (hl),a
 128+ 9715 2C               inc l
 129+ 9716 1C               inc e
 130+ 9717 1A               ld a,(de)
 131+ 9718 AE               xor (hl)
 132+ 9719 77               ld (hl),a
 133+ 971A 1C               inc e
 134+ 971B
 135+ 971B E1               pop hl
 136+ 971C
 137+ 971C 1A               ld a,(de)
 138+ 971D AE               xor (hl)
 139+ 971E 77               ld (hl),a
 140+ 971F 2C               inc l
 141+ 9720 1C               inc e
 142+ 9721 1A               ld a,(de)
 143+ 9722 AE               xor (hl)
 144+ 9723 77               ld (hl),a
 145+ 9724 2C               inc l
 146+ 9725 1C               inc e
 147+ 9726 1A               ld a,(de)
 148+ 9727 AE               xor (hl)
 149+ 9728 77               ld (hl),a
 150+ 9729 1C               inc e
 151+ 972A
 152+ 972A E1               pop hl
 153+ 972B
 154+ 972B 1A               ld a,(de)
 155+ 972C AE               xor (hl)
 156+ 972D 77               ld (hl),a
 157+ 972E 2C               inc l
 158+ 972F 1C               inc e
 159+ 9730 1A               ld a,(de)
 160+ 9731 AE               xor (hl)
 161+ 9732 77               ld (hl),a
 162+ 9733 2C               inc l
 163+ 9734 1C               inc e
 164+ 9735 1A               ld a,(de)
 165+ 9736 AE               xor (hl)
 166+ 9737 77               ld (hl),a
 167+ 9738 1C               inc e
 168+ 9739
 169+ 9739 E1               pop hl
 170+ 973A
 171+ 973A 1A               ld a,(de)
 172+ 973B AE               xor (hl)
 173+ 973C 77               ld (hl),a
 174+ 973D 2C               inc l
 175+ 973E 1C               inc e
 176+ 973F 1A               ld a,(de)
 177+ 9740 AE               xor (hl)
 178+ 9741 77               ld (hl),a
 179+ 9742 2C               inc l
 180+ 9743 1C               inc e
 181+ 9744 1A               ld a,(de)
 182+ 9745 AE               xor (hl)
 183+ 9746 77               ld (hl),a
 184+ 9747 1C               inc e
 185+ 9748
 186+ 9748 E1               pop hl
 187+ 9749
 188+ 9749 1A               ld a,(de)
 189+ 974A AE               xor (hl)
 190+ 974B 77               ld (hl),a
 191+ 974C 2C               inc l
 192+ 974D 1C               inc e
 193+ 974E 1A               ld a,(de)
 194+ 974F AE               xor (hl)
 195+ 9750 77               ld (hl),a
 196+ 9751 2C               inc l
 197+ 9752 1C               inc e
 198+ 9753 1A               ld a,(de)
 199+ 9754 AE               xor (hl)
 200+ 9755 77               ld (hl),a
 201+ 9756 1C               inc e
 202+ 9757
 203+ 9757 E1               pop hl
 204+ 9758
 205+ 9758 1A               ld a,(de)
 206+ 9759 AE               xor (hl)
 207+ 975A 77               ld (hl),a
 208+ 975B 2C               inc l
 209+ 975C 1C               inc e
 210+ 975D 1A               ld a,(de)
 211+ 975E AE               xor (hl)
 212+ 975F 77               ld (hl),a
 213+ 9760 2C               inc l
 214+ 9761 1C               inc e
 215+ 9762 1A               ld a,(de)
 216+ 9763 AE               xor (hl)
 217+ 9764 77               ld (hl),a
 218+ 9765 1C               inc e
 219+ 9766
 220+ 9766 E1               pop hl
 221+ 9767
 222+ 9767 1A               ld a,(de)
 223+ 9768 AE               xor (hl)
 224+ 9769 77               ld (hl),a
 225+ 976A 2C               inc l
 226+ 976B 1C               inc e
 227+ 976C 1A               ld a,(de)
 228+ 976D AE               xor (hl)
 229+ 976E 77               ld (hl),a
 230+ 976F 2C               inc l
 231+ 9770 1C               inc e
 232+ 9771 1A               ld a,(de)
 233+ 9772 AE               xor (hl)
 234+ 9773 77               ld (hl),a
 235+ 9774 1C               inc e
 236+ 9775
 237+ 9775 E1               pop hl
 238+ 9776
 239+ 9776 1A               ld a,(de)
 240+ 9777 AE               xor (hl)
 241+ 9778 77               ld (hl),a
 242+ 9779 2C               inc l
 243+ 977A 1C               inc e
 244+ 977B 1A               ld a,(de)
 245+ 977C AE               xor (hl)
 246+ 977D 77               ld (hl),a
 247+ 977E 2C               inc l
 248+ 977F 1C               inc e
 249+ 9780 1A               ld a,(de)
 250+ 9781 AE               xor (hl)
 251+ 9782 77               ld (hl),a
 252+ 9783 1C               inc e
 253+ 9784
 254+ 9784 E1               pop hl
 255+ 9785
 256+ 9785 1A               ld a,(de)
 257+ 9786 AE               xor (hl)
 258+ 9787 77               ld (hl),a
 259+ 9788 2C               inc l
 260+ 9789 1C               inc e
 261+ 978A 1A               ld a,(de)
 262+ 978B AE               xor (hl)
 263+ 978C 77               ld (hl),a
 264+ 978D 2C               inc l
 265+ 978E 1C               inc e
 266+ 978F 1A               ld a,(de)
 267+ 9790 AE               xor (hl)
 268+ 9791 77               ld (hl),a
 269+ 9792 1C               inc e
 270+ 9793
 271+ 9793 E1               pop hl
 272+ 9794
 273+ 9794 1A               ld a,(de)
 274+ 9795 AE               xor (hl)
 275+ 9796 77               ld (hl),a
 276+ 9797 2C               inc l
 277+ 9798 1C               inc e
 278+ 9799 1A               ld a,(de)
 279+ 979A AE               xor (hl)
 280+ 979B 77               ld (hl),a
 281+ 979C 2C               inc l
 282+ 979D 1C               inc e
 283+ 979E 1A               ld a,(de)
 284+ 979F AE               xor (hl)
 285+ 97A0 77               ld (hl),a
 286+ 97A1 1C               inc e
 287+ 97A2
 288+ 97A2 E1               pop hl
 289+ 97A3
 290+ 97A3 1A               ld a,(de)
 291+ 97A4 AE               xor (hl)
 292+ 97A5 77               ld (hl),a
 293+ 97A6 2C               inc l
 294+ 97A7 1C               inc e
 295+ 97A8 1A               ld a,(de)
 296+ 97A9 AE               xor (hl)
 297+ 97AA 77               ld (hl),a
 298+ 97AB 2C               inc l
 299+ 97AC 1C               inc e
 300+ 97AD 1A               ld a,(de)
 301+ 97AE AE               xor (hl)
 302+ 97AF 77               ld (hl),a
 303+ 97B0 1C               inc e
 304+ 97B1
 305+ 97B1 E1               pop hl
 306+ 97B2
 307+ 97B2 1A               ld a,(de)
 308+ 97B3 AE               xor (hl)
 309+ 97B4 77               ld (hl),a
 310+ 97B5 2C               inc l
 311+ 97B6 1C               inc e
 312+ 97B7 1A               ld a,(de)
 313+ 97B8 AE               xor (hl)
 314+ 97B9 77               ld (hl),a
 315+ 97BA 2C               inc l
 316+ 97BB 1C               inc e
 317+ 97BC 1A               ld a,(de)
 318+ 97BD AE               xor (hl)
 319+ 97BE 77               ld (hl),a
 320+ 97BF 1C               inc e
 321+ 97C0
 322+ 97C0 E1               pop hl
 323+ 97C1
 324+ 97C1 1A               ld a,(de)
 325+ 97C2 AE               xor (hl)
 326+ 97C3 77               ld (hl),a
 327+ 97C4 2C               inc l
 328+ 97C5 1C               inc e
 329+ 97C6 1A               ld a,(de)
 330+ 97C7 AE               xor (hl)
 331+ 97C8 77               ld (hl),a
 332+ 97C9 2C               inc l
 333+ 97CA 1C               inc e
 334+ 97CB 1A               ld a,(de)
 335+ 97CC AE               xor (hl)
 336+ 97CD 77               ld (hl),a
 337+ 97CE 1C               inc e
 338+ 97CF
 339+ 97CF ED 73 55 8C      ld (Scanlines_album_SP),sp
 340+ 97D3 ED 7B 33 8C      ld sp,(Stack)
 341+ 97D7 C9               ret
 342+ 97D8
 343+ 97D8              Pinta_lento_3Chars
 344+ 97D8
 345+ 97D8 E1           1 pop hl
 346+ 97D9
 347+ 97D9 1A               ld a,(de)
 348+ 97DA AE               xor (hl)
 349+ 97DB 77               ld (hl),a
 350+ 97DC 2C               inc l
 351+ 97DD 1C               inc e
 352+ 97DE 1A               ld a,(de)
 353+ 97DF AE               xor (hl)
 354+ 97E0 77               ld (hl),a
 355+ 97E1 2C               inc l
 356+ 97E2 1C               inc e
 357+ 97E3 1A               ld a,(de)
 358+ 97E4 AE               xor (hl)
 359+ 97E5 77               ld (hl),a
 360+ 97E6 1C               inc e
 361+ 97E7
 362+ 97E7 10 EF            djnz 1B
 363+ 97E9
 364+ 97E9 ED 73 55 8C      ld (Scanlines_album_SP),sp
 365+ 97ED ED 7B 33 8C      ld sp,(Stack)
 366+ 97F1 C9               ret
 367+ 97F2
 368+ 97F2              ; -----------------------------------------------------------------------
 369+ 97F2              ; -----------------------------------------------------------------------
 370+ 97F2              ; -----------------------------------------------------------------------
 371+ 97F2
 372+ 97F2
 373+ 97F2              Desaparece_por_la_derecha
 374+ 97F2
 375+ 97F2              ;   1 o 2 Chars ???
 376+ 97F2
 377+ 97F2 C2 C9 98         jp nz,Print_1Char_right                                 ; "NZ" indica Columna "$1f".
 378+ 97F5
 379+ 97F5              Print_2Chars_right
 380+ 97F5
 381+ 97F5              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 382+ 97F5              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 383+ 97F5              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 384+ 97F5
 385+ 97F5              ;   16 scanlines o menos ???
 386+ 97F5
 387+ 97F5 78               ld a,b
 388+ 97F6 FE 10            cp 16
 389+ 97F8 C2 B3 98         jp nz,Pinta_lento_2Chars_right                         ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 390+ 97FB
 391+ 97FB              ;   Rutinas:
 392+ 97FB
 393+ 97FB              Pinta_rapido_2Chars_right                                  ;   1520 t/states.
 394+ 97FB
 395+ 97FB 1A               ld a,(de)
 396+ 97FC AE               xor (hl)
 397+ 97FD 77               ld (hl),a
 398+ 97FE 2C               inc l
 399+ 97FF 1C               inc e
 400+ 9800 1A               ld a,(de)
 401+ 9801 AE               xor (hl)
 402+ 9802 77               ld (hl),a
 403+ 9803 1C               inc e
 404+ 9804 1C               inc e
 405+ 9805
 406+ 9805 E1               pop hl
 407+ 9806
 408+ 9806 1A               ld a,(de)
 409+ 9807 AE               xor (hl)
 410+ 9808 77               ld (hl),a
 411+ 9809 2C               inc l
 412+ 980A 1C               inc e
 413+ 980B 1A               ld a,(de)
 414+ 980C AE               xor (hl)
 415+ 980D 77               ld (hl),a
 416+ 980E 1C               inc e
 417+ 980F 1C               inc e
 418+ 9810
 419+ 9810 E1               pop hl
 420+ 9811
 421+ 9811 1A               ld a,(de)
 422+ 9812 AE               xor (hl)
 423+ 9813 77               ld (hl),a
 424+ 9814 2C               inc l
 425+ 9815 1C               inc e
 426+ 9816 1A               ld a,(de)
 427+ 9817 AE               xor (hl)
 428+ 9818 77               ld (hl),a
 429+ 9819 1C               inc e
 430+ 981A 1C               inc e
 431+ 981B
 432+ 981B E1               pop hl
 433+ 981C
 434+ 981C 1A               ld a,(de)
 435+ 981D AE               xor (hl)
 436+ 981E 77               ld (hl),a
 437+ 981F 2C               inc l
 438+ 9820 1C               inc e
 439+ 9821 1A               ld a,(de)
 440+ 9822 AE               xor (hl)
 441+ 9823 77               ld (hl),a
 442+ 9824 1C               inc e
 443+ 9825 1C               inc e
 444+ 9826
 445+ 9826 E1               pop hl
 446+ 9827
 447+ 9827 1A               ld a,(de)
 448+ 9828 AE               xor (hl)
 449+ 9829 77               ld (hl),a
 450+ 982A 2C               inc l
 451+ 982B 1C               inc e
 452+ 982C 1A               ld a,(de)
 453+ 982D AE               xor (hl)
 454+ 982E 77               ld (hl),a
 455+ 982F 1C               inc e
 456+ 9830 1C               inc e
 457+ 9831
 458+ 9831 E1               pop hl
 459+ 9832
 460+ 9832 1A               ld a,(de)
 461+ 9833 AE               xor (hl)
 462+ 9834 77               ld (hl),a
 463+ 9835 2C               inc l
 464+ 9836 1C               inc e
 465+ 9837 1A               ld a,(de)
 466+ 9838 AE               xor (hl)
 467+ 9839 77               ld (hl),a
 468+ 983A 1C               inc e
 469+ 983B 1C               inc e
 470+ 983C
 471+ 983C E1               pop hl
 472+ 983D
 473+ 983D 1A               ld a,(de)
 474+ 983E AE               xor (hl)
 475+ 983F 77               ld (hl),a
 476+ 9840 2C               inc l
 477+ 9841 1C               inc e
 478+ 9842 1A               ld a,(de)
 479+ 9843 AE               xor (hl)
 480+ 9844 77               ld (hl),a
 481+ 9845 1C               inc e
 482+ 9846 1C               inc e
 483+ 9847
 484+ 9847 E1               pop hl
 485+ 9848
 486+ 9848 1A               ld a,(de)
 487+ 9849 AE               xor (hl)
 488+ 984A 77               ld (hl),a
 489+ 984B 2C               inc l
 490+ 984C 1C               inc e
 491+ 984D 1A               ld a,(de)
 492+ 984E AE               xor (hl)
 493+ 984F 77               ld (hl),a
 494+ 9850 1C               inc e
 495+ 9851 1C               inc e
 496+ 9852
 497+ 9852 E1               pop hl
 498+ 9853
 499+ 9853 1A               ld a,(de)
 500+ 9854 AE               xor (hl)
 501+ 9855 77               ld (hl),a
 502+ 9856 2C               inc l
 503+ 9857 1C               inc e
 504+ 9858 1A               ld a,(de)
 505+ 9859 AE               xor (hl)
 506+ 985A 77               ld (hl),a
 507+ 985B 1C               inc e
 508+ 985C 1C               inc e
 509+ 985D
 510+ 985D E1               pop hl
 511+ 985E
 512+ 985E 1A               ld a,(de)
 513+ 985F AE               xor (hl)
 514+ 9860 77               ld (hl),a
 515+ 9861 2C               inc l
 516+ 9862 1C               inc e
 517+ 9863 1A               ld a,(de)
 518+ 9864 AE               xor (hl)
 519+ 9865 77               ld (hl),a
 520+ 9866 1C               inc e
 521+ 9867 1C               inc e
 522+ 9868
 523+ 9868 E1               pop hl
 524+ 9869
 525+ 9869 1A               ld a,(de)
 526+ 986A AE               xor (hl)
 527+ 986B 77               ld (hl),a
 528+ 986C 2C               inc l
 529+ 986D 1C               inc e
 530+ 986E 1A               ld a,(de)
 531+ 986F AE               xor (hl)
 532+ 9870 77               ld (hl),a
 533+ 9871 1C               inc e
 534+ 9872 1C               inc e
 535+ 9873
 536+ 9873 E1               pop hl
 537+ 9874
 538+ 9874 1A               ld a,(de)
 539+ 9875 AE               xor (hl)
 540+ 9876 77               ld (hl),a
 541+ 9877 2C               inc l
 542+ 9878 1C               inc e
 543+ 9879 1A               ld a,(de)
 544+ 987A AE               xor (hl)
 545+ 987B 77               ld (hl),a
 546+ 987C 1C               inc e
 547+ 987D 1C               inc e
 548+ 987E
 549+ 987E E1               pop hl
 550+ 987F
 551+ 987F 1A               ld a,(de)
 552+ 9880 AE               xor (hl)
 553+ 9881 77               ld (hl),a
 554+ 9882 2C               inc l
 555+ 9883 1C               inc e
 556+ 9884 1A               ld a,(de)
 557+ 9885 AE               xor (hl)
 558+ 9886 77               ld (hl),a
 559+ 9887 1C               inc e
 560+ 9888 1C               inc e
 561+ 9889
 562+ 9889 E1               pop hl
 563+ 988A
 564+ 988A 1A               ld a,(de)
 565+ 988B AE               xor (hl)
 566+ 988C 77               ld (hl),a
 567+ 988D 2C               inc l
 568+ 988E 1C               inc e
 569+ 988F 1A               ld a,(de)
 570+ 9890 AE               xor (hl)
 571+ 9891 77               ld (hl),a
 572+ 9892 1C               inc e
 573+ 9893 1C               inc e
 574+ 9894
 575+ 9894 E1               pop hl
 576+ 9895
 577+ 9895 1A               ld a,(de)
 578+ 9896 AE               xor (hl)
 579+ 9897 77               ld (hl),a
 580+ 9898 2C               inc l
 581+ 9899 1C               inc e
 582+ 989A 1A               ld a,(de)
 583+ 989B AE               xor (hl)
 584+ 989C 77               ld (hl),a
 585+ 989D 1C               inc e
 586+ 989E 1C               inc e
 587+ 989F
 588+ 989F E1               pop hl
 589+ 98A0
 590+ 98A0 1A               ld a,(de)
 591+ 98A1 AE               xor (hl)
 592+ 98A2 77               ld (hl),a
 593+ 98A3 2C               inc l
 594+ 98A4 1C               inc e
 595+ 98A5 1A               ld a,(de)
 596+ 98A6 AE               xor (hl)
 597+ 98A7 77               ld (hl),a
 598+ 98A8 1C               inc e
 599+ 98A9 1C               inc e
 600+ 98AA
 601+ 98AA ED 73 55 8C      ld (Scanlines_album_SP),sp
 602+ 98AE ED 7B 33 8C      ld sp,(Stack)
 603+ 98B2 C9               ret
 604+ 98B3
 605+ 98B3              Pinta_lento_2Chars_right
 606+ 98B3
 607+ 98B3 E1           2 pop hl
 608+ 98B4
 609+ 98B4 1A               ld a,(de)
 610+ 98B5 AE               xor (hl)
 611+ 98B6 77               ld (hl),a
 612+ 98B7 2C               inc l
 613+ 98B8 1C               inc e
 614+ 98B9 1A               ld a,(de)
 615+ 98BA AE               xor (hl)
 616+ 98BB 77               ld (hl),a
 617+ 98BC 1C               inc e
 618+ 98BD 1C               inc e
 619+ 98BE
 620+ 98BE 10 F3            djnz 2B
 621+ 98C0
 622+ 98C0 ED 73 55 8C      ld (Scanlines_album_SP),sp
 623+ 98C4 ED 7B 33 8C      ld sp,(Stack)
 624+ 98C8 C9               ret
 625+ 98C9
 626+ 98C9              ; -----------------------------------------------------------------------
 627+ 98C9              ; -----------------------------------------------------------------------
 628+ 98C9
 629+ 98C9              Print_1Char_right
 630+ 98C9
 631+ 98C9
 632+ 98C9              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 633+ 98C9              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 634+ 98C9              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 635+ 98C9
 636+ 98C9              ;   16 scanlines o menos ???
 637+ 98C9
 638+ 98C9 78               ld a,b
 639+ 98CA FE 10            cp 16
 640+ 98CC C2 47 99         jp nz,Pinta_lento_1Char_right                          ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 641+ 98CF
 642+ 98CF              ;   Rutinas:
 643+ 98CF
 644+ 98CF              Pinta_rapido_1Char_right                                  ;   1520 t/states.
 645+ 98CF
 646+ 98CF 1A               ld a,(de)
 647+ 98D0 AE               xor (hl)
 648+ 98D1 77               ld (hl),a
 649+ 98D2 1C               inc e
 650+ 98D3 1C               inc e
 651+ 98D4 1C               inc e
 652+ 98D5
 653+ 98D5 E1               pop hl
 654+ 98D6
 655+ 98D6 1A               ld a,(de)
 656+ 98D7 AE               xor (hl)
 657+ 98D8 77               ld (hl),a
 658+ 98D9 1C               inc e
 659+ 98DA 1C               inc e
 660+ 98DB 1C               inc e
 661+ 98DC
 662+ 98DC E1               pop hl
 663+ 98DD
 664+ 98DD 1A               ld a,(de)
 665+ 98DE AE               xor (hl)
 666+ 98DF 77               ld (hl),a
 667+ 98E0 1C               inc e
 668+ 98E1 1C               inc e
 669+ 98E2 1C               inc e
 670+ 98E3
 671+ 98E3 E1               pop hl
 672+ 98E4
 673+ 98E4 1A               ld a,(de)
 674+ 98E5 AE               xor (hl)
 675+ 98E6 77               ld (hl),a
 676+ 98E7 1C               inc e
 677+ 98E8 1C               inc e
 678+ 98E9 1C               inc e
 679+ 98EA
 680+ 98EA E1               pop hl
 681+ 98EB
 682+ 98EB 1A               ld a,(de)
 683+ 98EC AE               xor (hl)
 684+ 98ED 77               ld (hl),a
 685+ 98EE 1C               inc e
 686+ 98EF 1C               inc e
 687+ 98F0 1C               inc e
 688+ 98F1
 689+ 98F1 E1               pop hl
 690+ 98F2
 691+ 98F2 1A               ld a,(de)
 692+ 98F3 AE               xor (hl)
 693+ 98F4 77               ld (hl),a
 694+ 98F5 1C               inc e
 695+ 98F6 1C               inc e
 696+ 98F7 1C               inc e
 697+ 98F8
 698+ 98F8 E1               pop hl
 699+ 98F9
 700+ 98F9 1A               ld a,(de)
 701+ 98FA AE               xor (hl)
 702+ 98FB 77               ld (hl),a
 703+ 98FC 1C               inc e
 704+ 98FD 1C               inc e
 705+ 98FE 1C               inc e
 706+ 98FF
 707+ 98FF E1               pop hl
 708+ 9900
 709+ 9900 1A               ld a,(de)
 710+ 9901 AE               xor (hl)
 711+ 9902 77               ld (hl),a
 712+ 9903 1C               inc e
 713+ 9904 1C               inc e
 714+ 9905 1C               inc e
 715+ 9906
 716+ 9906 E1               pop hl
 717+ 9907
 718+ 9907 1A               ld a,(de)
 719+ 9908 AE               xor (hl)
 720+ 9909 77               ld (hl),a
 721+ 990A 1C               inc e
 722+ 990B 1C               inc e
 723+ 990C 1C               inc e
 724+ 990D
 725+ 990D E1               pop hl
 726+ 990E
 727+ 990E 1A               ld a,(de)
 728+ 990F AE               xor (hl)
 729+ 9910 77               ld (hl),a
 730+ 9911 1C               inc e
 731+ 9912 1C               inc e
 732+ 9913 1C               inc e
 733+ 9914
 734+ 9914 E1               pop hl
 735+ 9915
 736+ 9915 1A               ld a,(de)
 737+ 9916 AE               xor (hl)
 738+ 9917 77               ld (hl),a
 739+ 9918 1C               inc e
 740+ 9919 1C               inc e
 741+ 991A 1C               inc e
 742+ 991B
 743+ 991B E1               pop hl
 744+ 991C
 745+ 991C 1A               ld a,(de)
 746+ 991D AE               xor (hl)
 747+ 991E 77               ld (hl),a
 748+ 991F 1C               inc e
 749+ 9920 1C               inc e
 750+ 9921 1C               inc e
 751+ 9922
 752+ 9922 E1               pop hl
 753+ 9923
 754+ 9923 1A               ld a,(de)
 755+ 9924 AE               xor (hl)
 756+ 9925 77               ld (hl),a
 757+ 9926 1C               inc e
 758+ 9927 1C               inc e
 759+ 9928 1C               inc e
 760+ 9929
 761+ 9929 E1               pop hl
 762+ 992A
 763+ 992A 1A               ld a,(de)
 764+ 992B AE               xor (hl)
 765+ 992C 77               ld (hl),a
 766+ 992D 1C               inc e
 767+ 992E 1C               inc e
 768+ 992F 1C               inc e
 769+ 9930
 770+ 9930 E1               pop hl
 771+ 9931
 772+ 9931 1A               ld a,(de)
 773+ 9932 AE               xor (hl)
 774+ 9933 77               ld (hl),a
 775+ 9934 1C               inc e
 776+ 9935 1C               inc e
 777+ 9936 1C               inc e
 778+ 9937
 779+ 9937 E1               pop hl
 780+ 9938
 781+ 9938 1A               ld a,(de)
 782+ 9939 AE               xor (hl)
 783+ 993A 77               ld (hl),a
 784+ 993B 1C               inc e
 785+ 993C 1C               inc e
 786+ 993D 1C               inc e
 787+ 993E
 788+ 993E ED 73 55 8C      ld (Scanlines_album_SP),sp
 789+ 9942 ED 7B 33 8C      ld sp,(Stack)
 790+ 9946 C9               ret
 791+ 9947
 792+ 9947              Pinta_lento_1Char_right
 793+ 9947
 794+ 9947 E1           3 pop hl
 795+ 9948
 796+ 9948 1A               ld a,(de)
 797+ 9949 AE               xor (hl)
 798+ 994A 77               ld (hl),a
 799+ 994B 1C               inc e
 800+ 994C 1C               inc e
 801+ 994D 1C               inc e
 802+ 994E
 803+ 994E 10 F7            djnz 3B
 804+ 9950
 805+ 9950 ED 73 55 8C      ld (Scanlines_album_SP),sp
 806+ 9954 ED 7B 33 8C      ld sp,(Stack)
 807+ 9958 C9               ret
# file closed: Rutinas_de_pintado.asm
2339  9959              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9959              ; ******************************************************************************************************************************************************************************************
   2+ 9959              ;
   3+ 9959              ; 26/06/23
   4+ 9959              ;
   5+ 9959              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9959
   7+ 9959              Draw
   8+ 9959
   9+ 9959 CD FF 9B     	call Prepara_draw
  10+ 995C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 995D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 995E 28 05        	jr z,2F
  13+ 9960
  14+ 9960 3A 03 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9963 18 0C        	jr 1F
  16+ 9965
  17+ 9965 2A 01 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9968 22 F4 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 996B CD F7 9A     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 996E              ;													; _la esquina superior izquierda de la pantalla.
  21+ 996E
  22+ 996E CD 84 A0     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9971
  24+ 9971 3A F1 8B     1 ld a,(Ctrl_0)
  25+ 9974 CB 6F        	bit 5,a
  26+ 9976 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9978
  28+ 9978 CD 8D 99     	call Comprueba_limite_horizontal
  29+ 997B CD 1D 9A     	call Comprueba_limite_vertical
  30+ 997E
  31+ 997E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 997E              ; -----------------------
  33+ 997E              ; -----------------------
  34+ 997E              ; -----------------------
  35+ 997E
  36+ 997E CD 73 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9981 CD AA 9B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9984
  39+ 9984 3A F1 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9987 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9989 32 F1 8B     	ld (Ctrl_0),a
  42+ 998C
  43+ 998C C9           	ret
  44+ 998D
  45+ 998D              ; *******************************************************************************************************************************************************************************************
  46+ 998D              ;	21/01/23
  47+ 998D              ;
  48+ 998D              ; 	Comprueba_limite_horizontal.
  49+ 998D              ;
  50+ 998D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 998D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 998D              ;
  53+ 998D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 998D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 998D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 998D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 998D
  58+ 998D
  59+ 998D
  60+ 998D 3A F1 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9990 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9992 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9994 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9996 32 F1 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9999 18 09            jr 6F
  66+ 999B CB 5F        1 bit 3,a
  67+ 999D 28 0A            jr z,2F
  68+ 999F E6 F7            and $f7
  69+ 99A1 32 F1 8B         ld (Ctrl_0),a
  70+ 99A4 CD F7 9A     6 call Inicializacion
  71+ 99A7 18 5B            jr 5F
  72+ 99A9 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 99AA
  74+ 99AA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 99AA              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 99AA
  77+ 99AA EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 99AB 2A 05 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 99AE CD 81 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 99B1 67           	ld h,a
  81+ 99B2 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 99B3 CD 81 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 99B6 67           	ld h,a
  84+ 99B7 A7           	and a
  85+ 99B8 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 99BA 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 99BB 3A 03 8C     	ld a,(Cuad_objeto)
  88+ 99BE FE 02        	cp 2
  89+ 99C0 38 1E        	jr c,3F
  90+ 99C2 28 1C        	jr z,3F
  91+ 99C4 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 99C5 28 23            jr z,7F
  93+ 99C7 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 99C9 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 99CB E1           	pop hl
  96+ 99CC
  97+ 99CC              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 99CC              ; _para indicar con E="2" en caso necesario.
  99+ 99CC
 100+ 99CC E5               push hl
 101+ 99CD C5               push bc
 102+ 99CE CD 81 95     	call calcula_tercio
 103+ 99D1 FE 01        	cp 1
 104+ 99D3 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 99D5 CD 05 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 99D8 28 26            jr z,9F
 107+ 99DA 38 24            jr c,9F
 108+ 99DC 1E 00        11 ld e,0
 109+ 99DE 18 22            jr 8F
 110+ 99E0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 99E1 28 07        	jr z, 7F
 112+ 99E3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 99E5 1E 00         	ld e,0
 114+ 99E7 E1           	pop hl
 115+ 99E8 18 04        	jr 4F
 116+ 99EA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 99EC 18 15            jr 10F
 118+ 99EE
 119+ 99EE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 99EE              ; _para indicar con E="2" en caso necesario.
 121+ 99EE
 122+ 99EE E5           4 push hl
 123+ 99EF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 99F0 CD 81 95     	call calcula_tercio
 125+ 99F3 FE 01        	cp 1
 126+ 99F5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 99F7 CD 05 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 99FA 28 04            jr z,9F
 129+ 99FC 30 02            jr nc,9F
 130+ 99FE 18 02        	jr 8F
 131+ 9A00 1E 02        9 ld e,2
 132+ 9A02 C1           8 pop bc
 133+ 9A03 E1           10 pop hl
 134+ 9A04 C9           5 ret
 135+ 9A05
 136+ 9A05              ; --------------------
 137+ 9A05              ;
 138+ 9A05              ; 25/08/22
 139+ 9A05
 140+ 9A05 CD 81 95     Comprueba_centro call calcula_tercio
 141+ 9A08 67               ld h,a
 142+ 9A09 08           	ex af,af
 143+ 9A0A FE 02        	cp 2
 144+ 9A0C 38 07        	jr c,1F
 145+ 9A0E 28 05        	jr z,1F
 146+ 9A10 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9A13 18 03        	jr 2F
 148+ 9A15 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9A18 08           2 ex af,af
 150+ 9A19 A7               and a
 151+ 9A1A ED 42            sbc hl,bc
 152+ 9A1C C9               ret
 153+ 9A1D
 154+ 9A1D              ; *********************************************************************************************************************************************************************************************
 155+ 9A1D              ;
 156+ 9A1D              ;   16/8/22
 157+ 9A1D              ;
 158+ 9A1D              ;	Comprueba_limite_vertical
 159+ 9A1D              ;
 160+ 9A1D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9A1D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9A1D              ;
 163+ 9A1D
 164+ 9A1D 2A F4 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9A20 7D           	ld a,l
 166+ 9A21 E6 1F        	and $1F
 167+ 9A23 57           	ld d,a
 168+ 9A24 3A 07 8C     	ld a,(Limite_vertical)
 169+ 9A27 BA           	cp d 											; Límite - Posición.
 170+ 9A28 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9A29 3A 03 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9A2C CB 47        	bit 0,a
 173+ 9A2E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9A30
 175+ 9A30              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9A30
 177+ 9A30 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9A31 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9A33
 180+ 9A33              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9A33              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9A33
 183+ 9A33 3A E5 8B         ld a,(Coordenada_X)
 184+ 9A36 16 0F            ld d,Centro_izquierda
 185+ 9A38 A7               and a
 186+ 9A39 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9A3A 28 1E            jr z,3F
 188+ 9A3C 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9A3E              ;                                                    ; _salimos sin modificar nada.
 190+ 9A3E 18 0E            jr 2F
 191+ 9A40 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9A41 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9A43
 194+ 9A43              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9A43              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9A43
 197+ 9A43 3A E5 8B         ld a,(Coordenada_X)
 198+ 9A46 16 10            ld d,Centro_derecha
 199+ 9A48 A7               and a
 200+ 9A49 92               sub d
 201+ 9A4A 28 0E            jr z,3F
 202+ 9A4C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9A4E              ;                                                    ; _salimos sin modificar nada.
 204+ 9A4E CB 43        2 bit 0,e
 205+ 9A50 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9A52 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9A53 CD E7 9A         call Modificaccionne
 208+ 9A56 C1           	pop bc
 209+ 9A57 CD F7 9A         call Inicializacion
 210+ 9A5A C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9A5B
 212+ 9A5B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9A5B
 214+ 9A5B C5           4 push bc
 215+ 9A5C 01 F3 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9A5F 0A           	ld a,(bc)
 217+ 9A60 3D           	dec a
 218+ 9A61 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9A62 7D           	ld a,l
 220+ 9A63 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9A64 CB 47        	bit 0,a
 222+ 9A66 28 03        	jr z,5F
 223+ 9A68 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9A69 18 2E        	jr 7F
 225+ 9A6B
 226+ 9A6B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9A6B
 228+ 9A6B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9A6C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9A6D 3A F1 8B     	ld a,(Ctrl_0)
 231+ 9A70 CB 4F        	bit 1,a
 232+ 9A72 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9A74 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9A75
 235+ 9A75              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9A75
 237+ 9A75 1C               inc e
 238+ 9A76 1D               dec e
 239+ 9A77 20 07            jr nz,12F
 240+ 9A79 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9A7A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9A7B 22 F4 8B     	ld (Posicion_actual),hl
 243+ 9A7E 18 44        13 jr 9F
 244+ 9A80 CB 43        12 bit 0,e
 245+ 9A82 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9A84              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9A84 C1           	pop bc
 248+ 9A85 18 D3        	jr 3B
 249+ 9A87 80           14 add b
 250+ 9A88 6F               ld l,a
 251+ 9A89 22 F4 8B     	ld (Posicion_actual),hl
 252+ 9A8C CD E7 9A         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9A8F 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9A91 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9A93 32 F1 8B         ld (Ctrl_0),a
 256+ 9A96 F1           	pop af
 257+ 9A97 18 2B        	jr 9F
 258+ 9A99
 259+ 9A99              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9A99
 261+ 9A99 F5           7 push af
 262+ 9A9A 3A F1 8B     	ld a,(Ctrl_0)
 263+ 9A9D CB 47        	bit 0,a
 264+ 9A9F 20 1D        	jr nz,8F
 265+ 9AA1 F1           	pop af
 266+ 9AA2
 267+ 9AA2              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9AA2
 269+ 9AA2 1C           	inc e
 270+ 9AA3 1D               dec e
 271+ 9AA4 20 07            jr nz,10F
 272+ 9AA6 90           	sub b
 273+ 9AA7 6F               ld l,a
 274+ 9AA8 22 F4 8B     	ld (Posicion_actual),hl
 275+ 9AAB 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9AAD              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9AAD CB 43        10 bit 0,e
 278+ 9AAF 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9AB1              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9AB1 C1           	pop bc
 281+ 9AB2 18 A6        	jr 3B
 282+ 9AB4 90           16 sub b
 283+ 9AB5 6F               ld l,a
 284+ 9AB6 22 F4 8B     	ld (Posicion_actual),hl
 285+ 9AB9 CD E7 9A         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9ABC 18 06            jr 9F
 287+ 9ABE E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9AC0 32 F1 8B         ld (Ctrl_0),a
 289+ 9AC3 F1           	pop af
 290+ 9AC4 C1           9 pop bc
 291+ 9AC5 1E 00        	ld e,0
 292+ 9AC7 CD F7 9A         call Inicializacion
 293+ 9ACA F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9ACB 08           	ex af,af
 295+ 9ACC F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9ACD 18 8B            jr 3B
 297+ 9ACF
 298+ 9ACF              ; --------------------
 299+ 9ACF
 300+ 9ACF 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9AD1 CD 1A 9C     1 call PreviousScan
 302+ 9AD4 10 FB            djnz 1B
 303+ 9AD6 22 F4 8B     	ld (Posicion_actual),hl
 304+ 9AD9 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9ADA C9           	ret
 306+ 9ADB
 307+ 9ADB              ; --------------------
 308+ 9ADB
 309+ 9ADB 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9ADD CD 0B 9C     1 call NextScan
 311+ 9AE0 10 FB            djnz 1B
 312+ 9AE2 22 F4 8B     	ld (Posicion_actual),hl
 313+ 9AE5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9AE6 C9           	ret
 315+ 9AE7
 316+ 9AE7              ; --------------------
 317+ 9AE7              ;
 318+ 9AE7              ;	22/01/23
 319+ 9AE7              ;
 320+ 9AE7              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9AE7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9AE7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9AE7
 324+ 9AE7
 325+ 9AE7              Modificaccionne
 326+ 9AE7
 327+ 9AE7 3A 03 8C     	ld a,(Cuad_objeto)
 328+ 9AEA FE 02        	cp 2
 329+ 9AEC CC CF 9A         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9AEF DC CF 9A         call c,Modifica_Pos_actual
 331+ 9AF2 C8           	ret z
 332+ 9AF3 CD DB 9A         call Modifica_Pos_actual2
 333+ 9AF6 C9               ret
 334+ 9AF7
 335+ 9AF7              ; *************************************************************************************************************************************************************************************************
 336+ 9AF7              ;
 337+ 9AF7              ;	13/8/22
 338+ 9AF7              ;
 339+ 9AF7              ;	Inicializacion
 340+ 9AF7              ;
 341+ 9AF7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9AF7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9AF7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9AF7              ;
 345+ 9AF7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9AF7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9AF7              ;	_ desaparece/aparece.
 348+ 9AF7
 349+ 9AF7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9AF7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9AF7              ;
 352+ 9AF7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9AF7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9AF7              ; 		   [E] ="0"
 355+ 9AF7
 356+ 9AF7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9AF7
 358+ 9AF7 CD 81 95     Inicializacion call calcula_tercio
 359+ 9AFA 28 36        	jr z,primit
 360+ 9AFC E6 02        	and 2
 361+ 9AFE 20 07        	jr nz,segmit
 362+ 9B00 7D           	ld a,l
 363+ 9B01 FE 7F        	cp $7f
 364+ 9B03 38 2D        	jr c,primit
 365+ 9B05 28 2B        	jr z,primit
 366+ 9B07 CD 6D 9B     segmit call column
 367+ 9B0A 38 13        	jr c,tercuad
 368+ 9B0C 3E 04        cuarcuad ld a,4
 369+ 9B0E 32 03 8C     	ld (Cuad_objeto),a
 370+ 9B11 21 20 48     	ld hl,$4820
 371+ 9B14 22 05 8C     	ld (Limite_horizontal),hl
 372+ 9B17 21 07 8C     	ld hl,Limite_vertical
 373+ 9B1A 36 0D        	ld (hl),$0d
 374+ 9B1C 08           	ex af,af
 375+ 9B1D 18 3C        	jr 1F
 376+ 9B1F              tercuad
 377+ 9B1F 3E 03        	ld a,3
 378+ 9B21 32 03 8C     	ld (Cuad_objeto),a
 379+ 9B24 21 20 48     	ld hl,$4820
 380+ 9B27 22 05 8C     	ld (Limite_horizontal),hl
 381+ 9B2A 21 07 8C     	ld hl,Limite_vertical
 382+ 9B2D 36 12        	ld (hl),$12
 383+ 9B2F 08           	ex af,af
 384+ 9B30 18 29        	jr 1F
 385+ 9B32 CD 6D 9B     primit call column
 386+ 9B35 38 13        	jr c, primcuad
 387+ 9B37              segcuad
 388+ 9B37 3E 02        	ld a,2
 389+ 9B39 32 03 8C     	ld (Cuad_objeto),a
 390+ 9B3C 21 C0 4F     	ld hl,$4fc0
 391+ 9B3F 22 05 8C     	ld (Limite_horizontal),hl
 392+ 9B42 21 07 8C     	ld hl,Limite_vertical
 393+ 9B45 36 0D        	ld (hl),$0d
 394+ 9B47 08           	ex af,af
 395+ 9B48 18 11        	jr 1F
 396+ 9B4A              primcuad
 397+ 9B4A 3E 01        	ld a,1
 398+ 9B4C 32 03 8C     	ld (Cuad_objeto),a
 399+ 9B4F 21 C0 4F     	ld hl,$4fc0
 400+ 9B52 22 05 8C     	ld (Limite_horizontal),hl
 401+ 9B55 21 07 8C     	ld hl,Limite_vertical
 402+ 9B58 36 12        	ld (hl),$12
 403+ 9B5A 08           	ex af,af
 404+ 9B5B
 405+ 9B5B C5           1 push bc
 406+ 9B5C E5           	push hl
 407+ 9B5D D5           	push de
 408+ 9B5E
 409+ 9B5E 2A F4 8B     	ld hl,(Posicion_actual)
 410+ 9B61 CD 9F 95     	call Genera_coordenadas
 411+ 9B64
 412+ 9B64 D1           	pop de
 413+ 9B65 E1           	pop hl
 414+ 9B66 C1           	pop bc
 415+ 9B67
 416+ 9B67 21 F1 8B     	ld hl,Ctrl_0
 417+ 9B6A CB EE        	set 5,(hl)
 418+ 9B6C C9           	ret
 419+ 9B6D
 420+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9B6D
 422+ 9B6D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9B6D              ;
 424+ 9B6D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9B6D
 426+ 9B6D 7D           column ld a,l
 427+ 9B6E E6 1F        	and $1f
 428+ 9B70 FE 10         	cp $10
 429+ 9B72 C9            	ret
 430+ 9B73
 431+ 9B73              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9B73              ;
 433+ 9B73              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9B73              ;
 435+ 9B73              ; 14/12/22
 436+ 9B73              ;
 437+ 9B73              ;	Modifica: A y BC.
 438+ 9B73
 439+ 9B73 3A 03 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9B76 E6 01        	and 1
 441+ 9B78 28 17        	jr z,1F
 442+ 9B7A
 443+ 9B7A              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9B7A
 445+ 9B7A 3A E5 8B     	ld a,(Coordenada_X)
 446+ 9B7D 47           	ld b,a
 447+ 9B7E 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9B7F 79           	ld a,c
 449+ 9B80 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9B81 38 08        	jr c,2F
 451+ 9B83 47           	ld b,a
 452+ 9B84 79           	ld a,c
 453+ 9B85 90           	sub b
 454+ 9B86 32 04 8C     	ld (Columnas),a
 455+ 9B89 18 1B        	jr 4F
 456+ 9B8B 79           2 ld a,c
 457+ 9B8C 32 04 8C     	ld (Columnas),a
 458+ 9B8F 18 15        	jr 4F
 459+ 9B91
 460+ 9B91              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9B91
 462+ 9B91 3A E5 8B     1 ld a,(Coordenada_X)
 463+ 9B94 81           	add c
 464+ 9B95 3D           	dec a
 465+ 9B96 D6 1F        	sub $1f
 466+ 9B98 38 08        	jr c,3F
 467+ 9B9A 47           	ld b,a
 468+ 9B9B 79           	ld a,c
 469+ 9B9C 90           	sub b
 470+ 9B9D 32 04 8C     	ld (Columnas),a
 471+ 9BA0 18 04        	jr 4F
 472+ 9BA2 79           3 ld a,c
 473+ 9BA3 32 04 8C     	ld (Columnas),a
 474+ 9BA6 D9           4 exx
 475+ 9BA7 4F           	ld c,a
 476+ 9BA8 D9           	exx
 477+ 9BA9 C9            ret
 478+ 9BAA
 479+ 9BAA              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9BAA              ;
 481+ 9BAA              ;   19/7/23
 482+ 9BAA              ;
 483+ 9BAA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9BAA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9BAA              ;
 486+ 9BAA              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9BAA              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9BAA              ;
 489+ 9BAA              ;	DESTRUYE: HL,B Y A.
 490+ 9BAA
 491+ 9BAA 3A 03 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9BAD FE 02        	cp 2
 493+ 9BAF 38 18        	jr c,1F
 494+ 9BB1 28 16        	jr z,1F
 495+ 9BB3 E6 01        	and 1
 496+ 9BB5 28 0D        	jr z,3F
 497+ 9BB7
 498+ 9BB7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9BB7
 500+ 9BB7 CD F3 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9BBA
 502+ 9BBA 7D           9 ld a,l
 503+ 9BBB E6 1F        	and $1f
 504+ 9BBD 28 2A        	jr z,7F
 505+ 9BBF 2B           	dec hl
 506+ 9BC0 10 F8        	djnz 9B
 507+ 9BC2 18 25        	jr 7F
 508+ 9BC4
 509+ 9BC4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9BC4
 511+ 9BC4 2A F4 8B     3 ld hl,(Posicion_actual)
 512+ 9BC7 18 20        	jr 7F
 513+ 9BC9
 514+ 9BC9 28 14        1 jr z,2F
 515+ 9BCB
 516+ 9BCB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9BCB
 518+ 9BCB CD F3 9B     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9BCE
 520+ 9BCE 7D           4 ld a,l
 521+ 9BCF E6 1F        	and $1f
 522+ 9BD1 28 03        	jr z,6F
 523+ 9BD3 2B           	dec hl
 524+ 9BD4 10 F8        	djnz 4B
 525+ 9BD6 06 0F        6 ld b,15
 526+ 9BD8 CD 1A 9C     5 call PreviousScan
 527+ 9BDB 10 FB        	djnz 5B
 528+ 9BDD 18 0A        	jr 7F
 529+ 9BDF
 530+ 9BDF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9BDF
 532+ 9BDF CD F3 9B     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9BE2 06 0F        	ld b,15
 534+ 9BE4 CD 1A 9C     8 call PreviousScan
 535+ 9BE7 10 FB        	djnz 8B
 536+ 9BE9
 537+ 9BE9 E5           7 push hl
 538+ 9BEA DD E1        	pop ix
 539+ 9BEC
 540+ 9BEC 2A F6 8B     	ld hl,(Puntero_objeto)
 541+ 9BEF E5           	push hl
 542+ 9BF0 FD E1        	pop iy
 543+ 9BF2
 544+ 9BF2 C9           	ret
 545+ 9BF3
 546+ 9BF3              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9BF3              ;
 548+ 9BF3              ;	2/1/23
 549+ 9BF3              ;
 550+ 9BF3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9BF3              ;
 552+ 9BF3              ;	Tras esta rutina tenemos:
 553+ 9BF3              ;
 554+ 9BF3              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9BF3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9BF3              ;
 557+ 9BF3              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9BF3
 559+ 9BF3 2A F4 8B     Operandos ld hl,(Posicion_actual)
 560+ 9BF6 3A 04 8C     	ld a,(Columnas)
 561+ 9BF9 3D           	dec a
 562+ 9BFA 20 01        	jr nz,1F
 563+ 9BFC 3C           	inc a
 564+ 9BFD 47           1 ld b,a
 565+ 9BFE C9           	ret
 566+ 9BFF
 567+ 9BFF              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9BFF              ;
 569+ 9BFF              ;	Prepara_draw
 570+ 9BFF              ;
 571+ 9BFF              ;	Es una rutina de carga.
 572+ 9BFF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9BFF              ;
 574+ 9BFF              ;	FUNCIONAMIENTO:
 575+ 9BFF              ;
 576+ 9BFF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9BFF              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9BFF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9BFF              ;
 580+ 9BFF              ;	DESTRUYE:
 581+ 9BFF              ;
 582+ 9BFF              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9BFF
 584+ 9BFF 21 F2 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9C02 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9C03 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9C04 4E           	ld c,(hl)
 588+ 9C05 2A F4 8B     	ld hl,(Posicion_actual)
 589+ 9C08 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9C0A C9           	ret
 591+ 9C0B
 592+ 9C0B              ;----------------------------------------------------------------------------------------------------------------
 593+ 9C0B              ;
 594+ 9C0B              ;	5/08/22
 595+ 9C0B              ;
 596+ 9C0B              ;   NextScan.
 597+ 9C0B              ;
 598+ 9C0B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9C0B              ;
 600+ 9C0B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9C0B              ;
 602+ 9C0B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9C0B              ;
 604+ 9C0B              ;       DESTRUIDOS: AF y HL !!!
 605+ 9C0B              ;
 606+ 9C0B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9C0B              ;
 608+ 9C0B
 609+ 9C0B 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9C0C 7C               ld a,h
 611+ 9C0D E6 07            and 7
 612+ 9C0F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9C10
 614+ 9C10 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9C11 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9C13 6F               ld l,a
 617+ 9C14 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9C15
 619+ 9C15 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9C16 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9C18 67               ld h,a
 622+ 9C19 C9               ret
 623+ 9C1A
 624+ 9C1A              ;----------------------------------------------------------------------------------------------------------------
 625+ 9C1A              ;
 626+ 9C1A              ;	5/08/22
 627+ 9C1A              ;
 628+ 9C1A              ;   PreviousScan.
 629+ 9C1A              ;
 630+ 9C1A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9C1A              ;
 632+ 9C1A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9C1A              ;
 634+ 9C1A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9C1A              ;
 636+ 9C1A              ;       DESTRUIDOS: AF y HL !!!
 637+ 9C1A              ;
 638+ 9C1A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9C1A              ;
 640+ 9C1A
 641+ 9C1A 7C           PreviousScan ld a,h
 642+ 9C1B 25               dec h               ; Dec H.
 643+ 9C1C E6 07            and 7
 644+ 9C1E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9C1F
 646+ 9C1F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9C20 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9C22 6F               ld l,a
 649+ 9C23 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9C24
 651+ 9C24 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9C25 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9C27 67               ld h,a
 654+ 9C28 C9               ret
 655+ 9C29
 656+ 9C29
 657+ 9C29
 658+ 9C29
 659+ 9C29
 660+ 9C29
 661+ 9C29
 662+ 9C29
 663+ 9C29
 664+ 9C29
 665+ 9C29
 666+ 9C29
# file closed: Draw_XOR.asm
2340  9C29              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9C29
   2+ 9C29              ; ******************************************************************************************************************************************************************************************
   3+ 9C29              ;
   4+ 9C29              ;   20/05/23
   5+ 9C29              ;
   6+ 9C29              ;	Recompone_posicion_inicio
   7+ 9C29              ;
   8+ 9C29              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9C29              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9C29              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9C29              ;	_ a una u otra rutina.
  12+ 9C29
  13+ 9C29              Recompone_posicion_inicio
  14+ 9C29
  15+ 9C29 2A 01 8C     	ld hl,(Posicion_inicio)
  16+ 9C2C 7D           	ld a,l
  17+ 9C2D E6 1F        	and $1f
  18+ 9C2F 28 16        	jr z,1F
  19+ 9C31
  20+ 9C31 FE 1F        	cp $1f
  21+ 9C33 28 0D        	jr z,3F
  22+ 9C35
  23+ 9C35 21 F0 8B     	ld hl,Ctrl_2
  24+ 9C38 CB C6        	set 0,(hl)
  25+ 9C3A 2A F6 8B     	ld hl,(Puntero_objeto)
  26+ 9C3D 22 22 8C     	ld (Repone_puntero_objeto),hl
  27+ 9C40 18 08        	jr 2F
  28+ 9C42
  29+ 9C42 CD E1 9D     3 call Mov_left
  30+ 9C45 18 03        	jr 2F
  31+ 9C47
  32+ 9C47 CD C3 9C     1 call Mov_right
  33+ 9C4A 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9C4D 22 F6 8B     	ld (Puntero_objeto),hl
  35+ 9C50 C9           	ret
  36+ 9C51
  37+ 9C51              ; ******************************************************************************************************************************************************************************************
  38+ 9C51              ;
  39+ 9C51              ;   27/05/23
  40+ 9C51              ;
  41+ 9C51              ;	Mov_down
  42+ 9C51              ;
  43+ 9C51              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9C51              ;
  45+ 9C51              ;
  46+ 9C51              Mov_down
  47+ 9C51
  48+ 9C51 CD B1 9C     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9C54              ;																	; _ repone (Puntero_objeto).
  50+ 9C54              ;	ld hl,Ctrl_0
  51+ 9C54              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9C54              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9C54              ; 																	; _ en el caso de que no lo haya.
  54+ 9C54 3A 0C 8C     	ld a,(Vel_down)
  55+ 9C57 47           	ld b,a
  56+ 9C58 2A F4 8B         ld hl,(Posicion_actual)
  57+ 9C5B CD 81 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9C5E E6 02        	and 2
  59+ 9C60 28 17        	jr z,1F
  60+ 9C62
  61+ 9C62              ; Nos encontramos en el último tercio de pantalla.
  62+ 9C62              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9C62
  64+ 9C62 7C           	ld a,h
  65+ 9C63 FE 57        	cp $57
  66+ 9C65 20 12        	jr nz,1F
  67+ 9C67
  68+ 9C67 7D           	ld a,l
  69+ 9C68 C6 20        	add $20
  70+ 9C6A 30 0D        	jr nc,1F
  71+ 9C6C
  72+ 9C6C              ; ------------------------------
  73+ 9C6C              ;
  74+ 9C6C              ;	12/01/24
  75+ 9C6C
  76+ 9C6C              ;	call Reaparece_arriba
  77+ 9C6C CD 69 9F     	call Reinicio
  78+ 9C6F
  79+ 9C6F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9C6F
  81+ 9C6F 3A 5B 8C     	ld a,(Ctrl_3)
  82+ 9C72 CB CF        	set 1,a
  83+ 9C74 32 5B 8C     	ld (Ctrl_3),a
  84+ 9C77
  85+ 9C77 18 08        	jr 3F
  86+ 9C79              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9C79              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9C79              ; ------------------------------
  89+ 9C79
  90+ 9C79 CD 0B 9C     1 call NextScan
  91+ 9C7C 22 F4 8B     	ld (Posicion_actual),hl
  92+ 9C7F 10 DA            djnz 2B
  93+ 9C81 CD 9F 95     3 call Genera_coordenadas
  94+ 9C84 C9           	ret
  95+ 9C85
  96+ 9C85              ; ******************************************************************************************************************************************************************************************
  97+ 9C85              ;
  98+ 9C85              ;   27/05/23
  99+ 9C85              ;
 100+ 9C85              ;	Mov_up
 101+ 9C85              ;
 102+ 9C85              ; 	Mueve el Sprite hacia arriba.
 103+ 9C85              ;
 104+ 9C85              ;
 105+ 9C85              Mov_up
 106+ 9C85
 107+ 9C85 CD B1 9C     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9C88              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9C88              ;	ld hl,Ctrl_0
 110+ 9C88              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9C88              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9C88              ; 																		; _ en el caso de que no lo haya.
 113+ 9C88 3A 0B 8C     	ld a,(Vel_up)
 114+ 9C8B 47           	ld b,a
 115+ 9C8C 2A F4 8B     	ld hl,(Posicion_actual)
 116+ 9C8F CD 81 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9C92 A7           	and a
 118+ 9C93 20 10        	jr nz,1F
 119+ 9C95
 120+ 9C95              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9C95              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9C95
 123+ 9C95 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9C96 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9C98 20 0B            jr nz,1F
 126+ 9C9A 7D               ld a,l
 127+ 9C9B D6 20            sub $20
 128+ 9C9D 30 06            jr nc,1F
 129+ 9C9F 25               dec h
 130+ 9CA0
 131+ 9CA0              ; -----------------------------
 132+ 9CA0 CD 4A 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9CA3              ;	call Reinicio
 134+ 9CA3              ; -----------------------------
 135+ 9CA3
 136+ 9CA3 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9CA5 CD 1A 9C     1 call PreviousScan
 138+ 9CA8 22 F4 8B     	ld (Posicion_actual),hl
 139+ 9CAB 10 E2            djnz 3B
 140+ 9CAD CD 9F 95     2 call Genera_coordenadas
 141+ 9CB0 C9           	ret
 142+ 9CB1
 143+ 9CB1              ; -----------------------------
 144+ 9CB1              ;
 145+ 9CB1              ;	27/5/23
 146+ 9CB1              ;
 147+ 9CB1              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9CB1              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9CB1              ;
 150+ 9CB1              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9CB1              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9CB1              ;
 153+ 9CB1              ;	Modifica: A y (Puntero_objeto).
 154+ 9CB1
 155+ 9CB1 3A F0 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9CB4 CB 47        	bit 0,a
 157+ 9CB6 C8           	ret z
 158+ 9CB7 CB 87        	res 0,a
 159+ 9CB9 32 F0 8B     	ld (Ctrl_2),a
 160+ 9CBC 2A 22 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9CBF 22 F6 8B     	ld (Puntero_objeto),hl
 162+ 9CC2 C9           	ret
 163+ 9CC3
 164+ 9CC3              ; ******************************************************************************************************************************************************************************************
 165+ 9CC3              ;
 166+ 9CC3              ;	19/10/22
 167+ 9CC3              ;
 168+ 9CC3              ;	Mov_right.
 169+ 9CC3              ;
 170+ 9CC3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9CC3              ;
 172+ 9CC3
 173+ 9CC3 3A F1 8B     Mov_right ld a,(Ctrl_0)
 174+ 9CC6 CB 77        	bit 6,a
 175+ 9CC8 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9CCA
 177+ 9CCA CD F8 9E     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9CCD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9CCE
 180+ 9CCE 21 F1 8B     	ld hl,Ctrl_0
 181+ 9CD1 CB E6        	set 4,(hl)
 182+ 9CD3 18 4D        	jr 8F
 183+ 9CD5
 184+ 9CD5              10
 185+ 9CD5
 186+ 9CD5              ;! Probar a quitar este bit de control, creo que ya no tiene sentido.
 187+ 9CD5              ;	ld hl,Ctrl_0
 188+ 9CD5              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 189+ 9CD5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 190+ 9CD5              ; 																	; _ en el caso de que no lo haya.
 191+ 9CD5 3A E5 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 192+ 9CD8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 193+ 9CDA 20 46        	jr nz,8F
 194+ 9CDC
 195+ 9CDC 3A F8 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 196+ 9CDF A7           	and a 															; _[3] para continuar con el DESPLZ.
 197+ 9CE0 28 40        	jr z,8F
 198+ 9CE2
 199+ 9CE2              ; ---------- ---------- ----------
 200+ 9CE2              ;
 201+ 9CE2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 202+ 9CE2
 203+ 9CE2 3A 0A 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 204+ 9CE5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 205+ 9CE7 28 11        	jr z,1F
 206+ 9CE9 38 06        	jr c,6F
 207+ 9CEB FE 04        	cp 4
 208+ 9CED 28 14        	jr z,7F
 209+ 9CEF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 210+ 9CF1
 211+ 9CF1              ; ---------- ---------- ----------
 212+ 9CF1              ;
 213+ 9CF1              ; Perfiles de velocidad
 214+ 9CF1              ;
 215+ 9CF1
 216+ 9CF1 3A F8 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 217+ 9CF4 FE FE        	cp $fe
 218+ 9CF6 20 2A        	jr nz,8F
 219+ 9CF8 18 10        	jr 3F
 220+ 9CFA 3A F8 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 221+ 9CFD FE FD        	cp $fd
 222+ 9CFF 20 21        	jr nz,8F
 223+ 9D01 18 07        	jr 3F
 224+ 9D03 3A F8 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 225+ 9D06 FE FB        	cp $fb
 226+ 9D08 20 18        	jr nz,8F
 227+ 9D0A
 228+ 9D0A              ; ---------- ---------- ----------
 229+ 9D0A
 230+ 9D0A              3
 231+ 9D0A CD 38 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 232+ 9D0D              ;	call Reinicio
 233+ 9D0D
 234+ 9D0D              ; ---------- ---------- ----------
 235+ 9D0D              ;
 236+ 9D0D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 237+ 9D0D
 238+ 9D0D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 239+ 9D0F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 240+ 9D10 CD 29 9D     	call DESPLZ_DER
 241+ 9D13 C1           	pop bc
 242+ 9D14 10 F9        	djnz 5B
 243+ 9D16 2A F4 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 244+ 9D19 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 245+ 9D1A 22 F4 8B     	ld (Posicion_actual),hl
 246+ 9D1D CD 9F 95     	call Genera_coordenadas
 247+ 9D20 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 248+ 9D22
 249+ 9D22              ; ---------- ---------- ----------
 250+ 9D22
 251+ 9D22 2A F4 8B     8 ld hl,(Posicion_actual)
 252+ 9D25 CD 29 9D     	call DESPLZ_DER
 253+ 9D28 C9           2 ret
 254+ 9D29
 255+ 9D29              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 256+ 9D29              ;
 257+ 9D29              ;	22/9/22
 258+ 9D29              ;
 259+ 9D29
 260+ 9D29 CD 38 9D     DESPLZ_DER call Desplaza_derecha
 261+ 9D2C CD 84 9D         call modifica_parametros_1er_DESPLZ_2
 262+ 9D2F CD AD 9D         call Ciclo_completo
 263+ 9D32 21 F1 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 264+ 9D35 CB FE        	set 7,(hl)
 265+ 9D37 C9           	ret
 266+ 9D38
 267+ 9D38              ; ******************************************************************************************************************************************************************************************
 268+ 9D38              ;	15/02/23
 269+ 9D38              ;
 270+ 9D38
 271+ 9D38 3A 0A 8C     Desplaza_derecha ld a,(Vel_right)
 272+ 9D3B 47           	ld b,a
 273+ 9D3C 2A FD 8B     	ld hl,(Puntero_DESPLZ_der)
 274+ 9D3F 23           1 inc hl
 275+ 9D40 23           	inc hl
 276+ 9D41 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 277+ 9D43 22 FD 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 278+ 9D46 CD 93 91     	call Extrae_address
 279+ 9D49 22 F6 8B     	ld (Puntero_objeto),hl
 280+ 9D4C
 281+ 9D4C              ; Modifica (Puntero_DESPLZ_izq).
 282+ 9D4C
 283+ 9D4C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 284+ 9D4C              ; Cuántos movimientos hemos hecho ??
 285+ 9D4C              ; DE contiene (Puntero_DESPLZ_der).
 286+ 9D4C
 287+ 9D4C 2A F9 8B     7 ld hl,(Indice_Sprite_der)
 288+ 9D4F EB           	ex de,hl
 289+ 9D50 A7           	and a
 290+ 9D51 ED 52        	sbc hl,de
 291+ 9D53 CB 3D        	srl l
 292+ 9D55 3E 08        6 ld a,8
 293+ 9D57 95           	sub l
 294+ 9D58 30 1E        	jr nc,3F
 295+ 9D5A
 296+ 9D5A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 297+ 9D5A              ; B="0".
 298+ 9D5A
 299+ 9D5A 04           4 inc b
 300+ 9D5B 3C           	inc a
 301+ 9D5C 20 FC        	jr nz,4B
 302+ 9D5E 78           	ld a,b
 303+ 9D5F 08           	ex af,af
 304+ 9D60 2A F9 8B     	ld hl,(Indice_Sprite_der)
 305+ 9D63 23           5 inc hl
 306+ 9D64 23           	inc hl
 307+ 9D65 10 FC        	djnz 5B
 308+ 9D67 22 FD 8B     	ld (Puntero_DESPLZ_der),hl
 309+ 9D6A CD 93 91     	call Extrae_address
 310+ 9D6D 22 F6 8B     	ld (Puntero_objeto),hl
 311+ 9D70
 312+ 9D70              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 313+ 9D70              ; _(Posicion_actual).
 314+ 9D70
 315+ 9D70 21 F4 8B     	ld hl,Posicion_actual
 316+ 9D73 34           	inc (hl)
 317+ 9D74 08               ex af,af
 318+ 9D75 6F           	ld l,a
 319+ 9D76 18 DD        	jr 6B
 320+ 9D78
 321+ 9D78              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 322+ 9D78
 323+ 9D78 47           3 ld b,a
 324+ 9D79 2A FB 8B     	ld hl,(Indice_Sprite_izq)
 325+ 9D7C 23           2 inc hl
 326+ 9D7D 23           	inc hl
 327+ 9D7E 10 FC        	djnz 2B
 328+ 9D80 22 FF 8B     	ld (Puntero_DESPLZ_izq),hl
 329+ 9D83 C9           8 ret
 330+ 9D84
 331+ 9D84              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 332+ 9D84              ;
 333+ 9D84              ;	24/7/22
 334+ 9D84              ;
 335+ 9D84              ;	modifica_parametros_1er_DESPLZ_2
 336+ 9D84              ;
 337+ 9D84              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 338+ 9D84              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 339+ 9D84              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 340+ 9D84
 341+ 9D84 3A F8 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 342+ 9D87 A7           	and a
 343+ 9D88 20 1F        	jr nz,1F
 344+ 9D8A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 345+ 9D8C 32 F8 8B         ld (CTRL_DESPLZ),a
 346+ 9D8F
 347+ 9D8F 21 F3 8B     	ld hl,Columns
 348+ 9D92 34           	inc (hl)
 349+ 9D93
 350+ 9D93 3A 03 8C     	ld a,(Cuad_objeto)
 351+ 9D96 E6 01        	and 1
 352+ 9D98 28 0F        	jr z,1F
 353+ 9D9A 2A F4 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 354+ 9D9D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 355+ 9D9E 22 F4 8B     	ld (Posicion_actual),hl
 356+ 9DA1 CD 9F 95     	call Genera_coordenadas
 357+ 9DA4 CD 04 9F     	call Inc_CTRL_DESPLZ
 358+ 9DA7 18 03        	jr 2F
 359+ 9DA9
 360+ 9DA9 CD 04 9F     1 call Inc_CTRL_DESPLZ
 361+ 9DAC C9           2 ret
 362+ 9DAD
 363+ 9DAD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 364+ 9DAD              ;
 365+ 9DAD              ;	24/7/22
 366+ 9DAD              ;
 367+ 9DAD              ;	Ciclo_completo.
 368+ 9DAD              ;
 369+ 9DAD              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 370+ 9DAD              ;
 371+ 9DAD              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 372+ 9DAD              ; 	Decrementamos (Columns).
 373+ 9DAD              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 374+ 9DAD              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 375+ 9DAD
 376+ 9DAD
 377+ 9DAD 3A F8 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 378+ 9DB0 FE FF        	cp $ff
 379+ 9DB2 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 380+ 9DB4 E6 F0        	and $f0
 381+ 9DB6 20 28        	jr nz,3F
 382+ 9DB8
 383+ 9DB8              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 384+ 9DB8
 385+ 9DB8 3A F8 8B     	ld a,(CTRL_DESPLZ)
 386+ 9DBB 47           	ld b,a
 387+ 9DBC 3E F8        	ld a,$f8
 388+ 9DBE 80           	add b
 389+ 9DBF 32 F8 8B     	ld (CTRL_DESPLZ),a
 390+ 9DC2 18 1C        	jr 3F
 391+ 9DC4              1
 392+ 9DC4 21 F3 8B     	ld hl,Columns												 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 393+ 9DC7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 394+ 9DC8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 395+ 9DC9 32 F8 8B     	ld (CTRL_DESPLZ),a
 396+ 9DCC 3A 03 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 397+ 9DCF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 398+ 9DD1 20 0A        	jr nz,2F
 399+ 9DD3 2A F4 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 400+ 9DD6 23           	inc hl
 401+ 9DD7 22 F4 8B     	ld (Posicion_actual),hl
 402+ 9DDA CD 9F 95     	call Genera_coordenadas
 403+ 9DDD
 404+ 9DDD              ; Inicia el puntero de Sprite.
 405+ 9DDD
 406+ 9DDD CD A5 91     2 call Inicia_puntero_objeto_der
 407+ 9DE0 C9           3 ret
 408+ 9DE1
 409+ 9DE1              ; ******************************************************************************************************************************************************************************************
 410+ 9DE1              ;
 411+ 9DE1              ;	15/02/23
 412+ 9DE1              ;
 413+ 9DE1              ;	Mov_left.
 414+ 9DE1              ;
 415+ 9DE1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 416+ 9DE1              ;
 417+ 9DE1              Mov_left
 418+ 9DE1
 419+ 9DE1              ;	ld hl,Ctrl_0
 420+ 9DE1              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 421+ 9DE1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 422+ 9DE1              ; 																	; _ en el caso de que no lo haya.
 423+ 9DE1 3A F1 8B     	ld a,(Ctrl_0)
 424+ 9DE4 CB 77        	bit 6,a
 425+ 9DE6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 426+ 9DE8
 427+ 9DE8 CD FE 9E     	call Stop_Amadeus_left
 428+ 9DEB C8           	ret z
 429+ 9DEC 20 4A        	jr nz,8F
 430+ 9DEE
 431+ 9DEE 3A E5 8B     11 ld a,(Coordenada_X)
 432+ 9DF1 A7           	and a
 433+ 9DF2 20 44        	jr nz,8F
 434+ 9DF4
 435+ 9DF4 3A F8 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 436+ 9DF7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 437+ 9DF8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 438+ 9DFA
 439+ 9DFA              ; ---------- ---------- ----------
 440+ 9DFA
 441+ 9DFA 3A 09 8C     	ld a,(Vel_left)
 442+ 9DFD FE 02        	cp 2
 443+ 9DFF 28 0F        	jr z,1F
 444+ 9E01 38 04        	jr c,6F
 445+ 9E03 FE 04        	cp 4
 446+ 9E05 28 12        	jr z,7F
 447+ 9E07
 448+ 9E07              ; ---------- ---------- ----------
 449+ 9E07
 450+ 9E07 3A F8 8B     6 ld a,(CTRL_DESPLZ)
 451+ 9E0A FE F8        	cp $f8
 452+ 9E0C 20 2A        	jr nz,8F
 453+ 9E0E 18 10        	jr 4F
 454+ 9E10 3A F8 8B     1 ld a,(CTRL_DESPLZ)
 455+ 9E13 FE F9        	cp $f9
 456+ 9E15 20 21        	jr nz,8F
 457+ 9E17 18 07        	jr 4F
 458+ 9E19 3A F8 8B     7 ld a,(CTRL_DESPLZ)
 459+ 9E1C FE FB        	cp $fb
 460+ 9E1E 20 18        	jr nz,8F
 461+ 9E20
 462+ 9E20              ; ---------- ---------- ----------
 463+ 9E20
 464+ 9E20              4
 465+ 9E20 CD 26 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 466+ 9E23              ;	call Reinicio
 467+ 9E23
 468+ 9E23              ; ---------- ---------- ----------
 469+ 9E23
 470+ 9E23 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 471+ 9E25 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 472+ 9E26
 473+ 9E26              ;	ld hl,(Indice_Sprite_izq)
 474+ 9E26              ;	ld (Puntero_DESPLZ_izq),hl
 475+ 9E26
 476+ 9E26 CD 3F 9E     	call DESPLZ_IZQ
 477+ 9E29 C1           	pop bc
 478+ 9E2A 10 F9        	djnz 5B
 479+ 9E2C 2A F4 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 480+ 9E2F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 481+ 9E30 22 F4 8B     	ld (Posicion_actual),hl
 482+ 9E33 CD 9F 95     	call Genera_coordenadas
 483+ 9E36 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 484+ 9E38
 485+ 9E38              ; ---------- ---------- ----------
 486+ 9E38
 487+ 9E38              ; Movemos, no hay recolocación.
 488+ 9E38
 489+ 9E38 2A F4 8B     8 ld hl,(Posicion_actual)
 490+ 9E3B CD 3F 9E     	call DESPLZ_IZQ
 491+ 9E3E C9           2 ret
 492+ 9E3F
 493+ 9E3F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 494+ 9E3F              ;
 495+ 9E3F              ;	22/9/22
 496+ 9E3F
 497+ 9E3F              DESPLZ_IZQ
 498+ 9E3F
 499+ 9E3F CD 4E 9E     	call Desplaza_izquierda
 500+ 9E42 CD 9A 9E         call modifica_parametros_1er_DESPLZ
 501+ 9E45 CD C2 9E     	call Ciclo_completo_2
 502+ 9E48 21 F1 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 503+ 9E4B CB BE        	res 7,(hl)
 504+ 9E4D C9           	ret
 505+ 9E4E
 506+ 9E4E              Desplaza_izquierda
 507+ 9E4E
 508+ 9E4E 3A 09 8C     	ld a,(Vel_left)
 509+ 9E51 47           	ld b,a
 510+ 9E52 2A FF 8B     	ld hl,(Puntero_DESPLZ_izq)
 511+ 9E55 23           1 inc hl
 512+ 9E56 23           	inc hl
 513+ 9E57 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 514+ 9E59 22 FF 8B     	ld (Puntero_DESPLZ_izq),hl
 515+ 9E5C CD 93 91     	call Extrae_address
 516+ 9E5F 22 F6 8B     	ld (Puntero_objeto),hl
 517+ 9E62
 518+ 9E62              ; Modifica (Puntero_DESPLZ_der).
 519+ 9E62
 520+ 9E62              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 521+ 9E62              ; Cuántos movimientos hemos hecho ??
 522+ 9E62              ; DE contiene (Puntero_DESPLZ_izq).
 523+ 9E62
 524+ 9E62 2A FB 8B     7 ld hl,(Indice_Sprite_izq)
 525+ 9E65 EB           	ex de,hl
 526+ 9E66 A7           	and a
 527+ 9E67 ED 52        	sbc hl,de
 528+ 9E69 CB 3D        	srl l
 529+ 9E6B 3E 08        6 ld a,8
 530+ 9E6D 95           	sub l
 531+ 9E6E 30 1E        	jr nc,3F
 532+ 9E70
 533+ 9E70              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 534+ 9E70              ; B="0".
 535+ 9E70
 536+ 9E70 04           4 inc b
 537+ 9E71 3C           	inc a
 538+ 9E72 20 FC        	jr nz,4B
 539+ 9E74 78           	ld a,b
 540+ 9E75 08           	ex af,af
 541+ 9E76 2A FB 8B     	ld hl,(Indice_Sprite_izq)
 542+ 9E79 23           5 inc hl
 543+ 9E7A 23           	inc hl
 544+ 9E7B 10 FC        	djnz 5B
 545+ 9E7D 22 FF 8B     	ld (Puntero_DESPLZ_izq),hl
 546+ 9E80 CD 93 91     	call Extrae_address
 547+ 9E83 22 F6 8B     	ld (Puntero_objeto),hl
 548+ 9E86
 549+ 9E86              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 550+ 9E86              ; _(Posicion_actual).
 551+ 9E86
 552+ 9E86 21 F4 8B     	ld hl,Posicion_actual
 553+ 9E89 35           	dec (hl)
 554+ 9E8A 08           	ex af,af
 555+ 9E8B 6F           	ld l,a
 556+ 9E8C 18 DD        	jr 6B
 557+ 9E8E
 558+ 9E8E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 559+ 9E8E
 560+ 9E8E 47           3 ld b,a
 561+ 9E8F 2A F9 8B     	ld hl,(Indice_Sprite_der)
 562+ 9E92 23           2 inc hl
 563+ 9E93 23           	inc hl
 564+ 9E94 10 FC        	djnz 2B
 565+ 9E96 22 FD 8B     	ld (Puntero_DESPLZ_der),hl
 566+ 9E99 C9           8 ret
 567+ 9E9A
 568+ 9E9A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 569+ 9E9A              ;
 570+ 9E9A              ;	modifica_parametros_1er_DESPLZ
 571+ 9E9A              ;
 572+ 9E9A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 573+ 9E9A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 574+ 9E9A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 575+ 9E9A
 576+ 9E9A 3A F8 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 577+ 9E9D A7           	and a
 578+ 9E9E 20 1E        	jr nz,1F
 579+ 9EA0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 580+ 9EA1 32 F8 8B         ld (CTRL_DESPLZ),a
 581+ 9EA4 21 F3 8B     	ld hl,Columns
 582+ 9EA7 34           	inc (hl)
 583+ 9EA8 3A 03 8C     	ld a,(Cuad_objeto)
 584+ 9EAB E6 01        	and 1
 585+ 9EAD 20 0F        	jr nz,1F
 586+ 9EAF 2A F4 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 587+ 9EB2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 588+ 9EB3 22 F4 8B     	ld (Posicion_actual),hl
 589+ 9EB6 CD 9F 95     	call Genera_coordenadas
 590+ 9EB9 CD 15 9F     	call Dec_CTRL_DESPLZ
 591+ 9EBC 18 03        	jr 2F
 592+ 9EBE CD 15 9F     1 call Dec_CTRL_DESPLZ
 593+ 9EC1 C9           2 ret
 594+ 9EC2
 595+ 9EC2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 596+ 9EC2
 597+ 9EC2 3A F8 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 598+ 9EC5 FE F7        	cp $f7
 599+ 9EC7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 600+ 9EC9 30 2C        	jr nc,3F
 601+ 9ECB
 602+ 9ECB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 603+ 9ECB
 604+ 9ECB 06 00        	ld b,0
 605+ 9ECD 04           4 inc b
 606+ 9ECE 3C           	inc a
 607+ 9ECF FE F7        	cp $f7
 608+ 9ED1 20 FA        	jr nz,4B
 609+ 9ED3 3E FF        	ld a,$ff
 610+ 9ED5 90           	sub b
 611+ 9ED6 32 F8 8B     	ld (CTRL_DESPLZ),a
 612+ 9ED9 18 1C        	jr 3F
 613+ 9EDB
 614+ 9EDB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 615+ 9EDB
 616+ 9EDB 21 F3 8B     1 ld hl,Columns
 617+ 9EDE 35           	dec (hl)
 618+ 9EDF AF           	xor a
 619+ 9EE0 32 F8 8B     	ld (CTRL_DESPLZ),a
 620+ 9EE3 3A 03 8C     	ld a,(Cuad_objeto)
 621+ 9EE6 E6 01        	and 1
 622+ 9EE8 28 0A        	jr z,2F
 623+ 9EEA 2A F4 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 624+ 9EED 2B           	dec hl
 625+ 9EEE 22 F4 8B     	ld (Posicion_actual),hl
 626+ 9EF1 CD 9F 95     	call Genera_coordenadas
 627+ 9EF4
 628+ 9EF4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 629+ 9EF4
 630+ 9EF4 CD B8 91     2 call Inicia_puntero_objeto_izq
 631+ 9EF7 C9           3 ret
 632+ 9EF8
 633+ 9EF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9EF8              ;
 635+ 9EF8              ;	19/10/22
 636+ 9EF8              ;
 637+ 9EF8              ;	(cp 29) para un Amadeus de 3 Columns.
 638+ 9EF8              ;	(cp 30)   ""  ""    ""     2 Columns.
 639+ 9EF8
 640+ 9EF8 3A E5 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 641+ 9EFB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 642+ 9EFD C9           	ret
 643+ 9EFE
 644+ 9EFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 645+ 9EFE              ;
 646+ 9EFE              ;	19/10/22
 647+ 9EFE              ;
 648+ 9EFE              ;	(cp 2) para un Amadeus de 3 Columns.
 649+ 9EFE              ;	(cp 1)   ""  ""    ""     2 Columns.
 650+ 9EFE
 651+ 9EFE 3A E5 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 652+ 9F01 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 653+ 9F03 C9           	ret
 654+ 9F04
 655+ 9F04              ; ---------- ---------- ---------- ---------- ---------- ----------
 656+ 9F04              ;
 657+ 9F04              ;	24/7/22
 658+ 9F04              ;
 659+ 9F04              ;	Inc_CTRL_DESPLZ
 660+ 9F04              ;
 661+ 9F04              ;
 662+ 9F04              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 663+ 9F04
 664+ 9F04 21 F8 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 665+ 9F07 3A 0A 8C     	ld a,(Vel_right)
 666+ 9F0A A7           	and a
 667+ 9F0B 28 06        	jr z,1F
 668+ 9F0D 47           	ld b,a
 669+ 9F0E 34           3 inc (hl)
 670+ 9F0F 10 FD        	djnz 3B
 671+ 9F11 18 01        	jr 2F
 672+ 9F13 34           1 inc (hl)
 673+ 9F14 C9           2 ret
 674+ 9F15
 675+ 9F15              ; ---------- ---------- ---------- ---------- ---------- ----------
 676+ 9F15              ;
 677+ 9F15              ;	5/2/23
 678+ 9F15              ;
 679+ 9F15              ;	Dec_CTRL_DESPLZ
 680+ 9F15              ;
 681+ 9F15              ;
 682+ 9F15              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 683+ 9F15
 684+ 9F15 21 F8 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 685+ 9F18 3A 09 8C     	ld a,(Vel_left)
 686+ 9F1B A7           	and a
 687+ 9F1C 28 06        	jr z,1F
 688+ 9F1E 47           	ld b,a
 689+ 9F1F 35           3 dec (hl)
 690+ 9F20 10 FD        	djnz 3B
 691+ 9F22 18 01        	jr 2F
 692+ 9F24 35           1 dec (hl)
 693+ 9F25 C9           2 ret
 694+ 9F26
 695+ 9F26              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9F26
 697+ 9F26 2A F4 8B     Reaparece_derecha ld hl,(Posicion_actual)
 698+ 9F29 01 1F 00     	ld bc,31
 699+ 9F2C A7           	and a
 700+ 9F2D ED 4A        	adc hl,bc
 701+ 9F2F 22 F4 8B     	ld (Posicion_actual),hl
 702+ 9F32 21 F1 8B     	ld hl,Ctrl_0														; $xxx1
 703+ 9F35 CB C6        	set 0,(hl)
 704+ 9F37 C9           	ret
 705+ 9F38
 706+ 9F38              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9F38
 708+ 9F38 2A F4 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 709+ 9F3B 01 1F 00     	ld bc,31
 710+ 9F3E A7           	and a
 711+ 9F3F ED 42        	sbc hl,bc
 712+ 9F41 22 F4 8B     	ld (Posicion_actual),hl 											; $xx1x
 713+ 9F44 21 F1 8B     	ld hl,Ctrl_0
 714+ 9F47 CB CE        	set 1,(hl)
 715+ 9F49 C9           	ret
 716+ 9F4A
 717+ 9F4A              ; ---------- ---------- ---------- ---------- ---------- ----------
 718+ 9F4A
 719+ 9F4A 24           Reaparece_abajo inc h
 720+ 9F4B 01 E0 17     	ld bc,$17e0
 721+ 9F4E A7           	and a
 722+ 9F4F ED 4A        	adc hl,bc
 723+ 9F51 22 F4 8B     	ld (Posicion_actual),hl
 724+ 9F54 21 F1 8B     	ld hl,Ctrl_0
 725+ 9F57 CB D6        	set 2,(hl)
 726+ 9F59 C9           	ret
 727+ 9F5A
 728+ 9F5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 729+ 9F5A
 730+ 9F5A 01 E0 17     Reaparece_arriba ld bc,$17e0
 731+ 9F5D A7           	and a
 732+ 9F5E ED 42        	sbc hl,bc
 733+ 9F60 22 F4 8B     	ld (Posicion_actual),hl
 734+ 9F63 21 F1 8B     	ld hl,Ctrl_0
 735+ 9F66 CB DE        	set 3,(hl)
 736+ 9F68 C9           	ret
 737+ 9F69
 738+ 9F69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 739+ 9F69              ;
 740+ 9F69              ;	15/07/23
 741+ 9F69
 742+ 9F69              Reinicio
 743+ 9F69
 744+ 9F69              ; Vamos a reiniciar los punteros y variables de movimiento.
 745+ 9F69
 746+ 9F69 AF           	xor a
 747+ 9F6A 21 19 8C     	ld hl,Puntero_indice_mov_bucle
 748+ 9F6D CD 8B 9F     	call Limpia_contenido_hl
 749+ 9F70
 750+ 9F70 21 F4 8B     	ld hl,Posicion_actual
 751+ 9F73 CD 8B 9F     	call Limpia_contenido_hl
 752+ 9F76
 753+ 9F76 CD 0F 94     	call Situa_Puntero_indice_mov
 754+ 9F79 CD 84 A0     	call Inicia_Puntero_mov
 755+ 9F7C
 756+ 9F7C 21 1B 8C     	ld hl,Incrementa_puntero
 757+ 9F7F 06 05        	ld b,5
 758+ 9F81 77           1 ld (hl),a
 759+ 9F82 23           	inc hl
 760+ 9F83 10 FC        	djnz 1B
 761+ 9F85
 762+ 9F85 21 F0 8B     	ld hl,Ctrl_2
 763+ 9F88 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 764+ 9F8A
 765+ 9F8A C9           	ret
 766+ 9F8B
 767+ 9F8B 77           Limpia_contenido_hl	ld (hl),a
 768+ 9F8C 23           	inc hl
 769+ 9F8D 77           	ld (hl),a
 770+ 9F8E C9           	ret
 771+ 9F8F
 772+ 9F8F              ; ----------------------------------------------------------------------------------------------------------------
 773+ 9F8F              ;
 774+ 9F8F              ;	18/6/24
 775+ 9F8F              ;
 776+ 9F8F
 777+ 9F8F              Amadeus_a_izquierda
 778+ 9F8F
 779+ 9F8F              ;	Actualiza contador de movimientos.
 780+ 9F8F
 781+ 9F8F 21 B7 89     	ld hl,Comm_Amadeus
 782+ 9F92 35           	dec (hl)
 783+ 9F93 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 784+ 9F95
 785+ 9F95 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 786+ 9F98 2B           	dec hl
 787+ 9F99 2B           	dec hl
 788+ 9F9A 2B           	dec hl
 789+ 9F9B 2B           	dec hl
 790+ 9F9C 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 791+ 9F9F
 792+ 9F9F 21 5B 8C     	ld hl,Ctrl_3
 793+ 9FA2 CB EE        	set 5,(hl)
 794+ 9FA4
 795+ 9FA4 C9           	ret
 796+ 9FA5
 797+ 9FA5 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 798+ 9FA6 C9           	ret
 799+ 9FA7
 800+ 9FA7
 801+ 9FA7              Amadeus_a_derecha
 802+ 9FA7
 803+ 9FA7              ;	Actualiza contador de movimientos.
 804+ 9FA7
 805+ 9FA7 21 B7 89     	ld hl,Comm_Amadeus
 806+ 9FAA 34           	inc (hl)
 807+ 9FAB 3E 7A        	ld a,$7a
 808+ 9FAD BE           	cp (hl)
 809+ 9FAE 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 810+ 9FB0
 811+ 9FB0 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 812+ 9FB3 23           	inc hl
 813+ 9FB4 23           	inc hl
 814+ 9FB5 23           	inc hl
 815+ 9FB6 23           	inc hl
 816+ 9FB7 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 817+ 9FBA
 818+ 9FBA 21 5B 8C     	ld hl,Ctrl_3
 819+ 9FBD CB EE        	set 5,(hl)
 820+ 9FBF C9           	ret
 821+ 9FC0
 822+ 9FC0 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 823+ 9FC1 C9           	ret
# file closed: Direcciones.asm
2341  9FC2              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9FC2              ; ----- ----- ----- ----- -----
   2+ 9FC2              ;
   3+ 9FC2              ;   28/12/23
   4+ 9FC2
   5+ 9FC2              Movimiento
   6+ 9FC2
   7+ 9FC2              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9FC2
   9+ 9FC2 3A F0 8B         ld a,(Ctrl_2)
  10+ 9FC5 CB 57            bit 2,a
  11+ 9FC7 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9FC9
  13+ 9FC9 2A 17 8C         ld hl,(Puntero_mov)
  14+ 9FCC 7E               ld a,(hl)
  15+ 9FCD
  16+ 9FCD              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9FCD
  18+ 9FCD              Inicia_desplazamiento.
  19+ 9FCD
  20+ 9FCD              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9FCD
  22+ 9FCD CD BA A0         call Ajusta_velocidad_desplazamiento
  23+ 9FD0
  24+ 9FD0              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9FD0
  26+ 9FD0              ; Iniciamos (Repetimos_mov).
  27+ 9FD0
  28+ 9FD0 7E               ld a,(hl)
  29+ 9FD1 E6 0F            and $0f
  30+ 9FD3 32 1D 8C         ld (Repetimos_desplazamiento),a
  31+ 9FD6 32 1E 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9FD9
  33+ 9FD9              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9FD9
  35+ 9FD9 23               inc hl
  36+ 9FDA 7E               ld a,(hl)
  37+ 9FDB 32 20 8C         ld (Cola_de_desplazamiento),a
  38+ 9FDE 2B               dec hl
  39+ 9FDF
  40+ 9FDF 21 F0 8B         ld hl,Ctrl_2
  41+ 9FE2 CB D6            set 2,(hl)
  42+ 9FE4
  43+ 9FE4              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ 9FE4              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ 9FE4
  46+ 9FE4              Desplazamiento_iniciado
  47+ 9FE4
  48+ 9FE4              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ 9FE4
  50+ 9FE4              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ 9FE4
  52+ 9FE4              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ 9FE4              ;                               Izquierda_y_subiendo+8 (11)
  54+ 9FE4              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ 9FE4              ;                               Izquierda_y_subiendo+8 (8)
  56+ 9FE4              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ 9FE4              ;                               Izquierda_y_subiendo+8 (8)
  58+ 9FE4              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ 9FE4              ;                               Izquierda_y_subiendo+8 (8)
  60+ 9FE4              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ 9FE4              ;                               Izquierda_y_subiendo+8 (8)
  62+ 9FE4              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ 9FE4              ;                               Izquierda_y_subiendo+8 (7)
  64+ 9FE4              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ 9FE4              ;                               Izquierda_y_subiendo+8 (7)
  66+ 9FE4              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ 9FE4              ;                               Izquierda_y_subiendo+8 (7)
  68+ 9FE4
  69+ 9FE4
  70+ 9FE4
  71+ 9FE4
  72+ 9FE4
  73+ 9FE4              ;    ld bc,Derecha_y_subiendo+2
  74+ 9FE4              ;    ld hl,(Puntero_mov)
  75+ 9FE4              ;    ld a,c
  76+ 9FE4              ;    cp l
  77+ 9FE4              ;    jr nz,3F
  78+ 9FE4
  79+ 9FE4              ;    jr $
  80+ 9FE4
  81+ 9FE4              ;    ld a,(Coordenada_X)
  82+ 9FE4              ;    sub 4
  83+ 9FE4              ;    jr z,4F
  84+ 9FE4
  85+ 9FE4              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ 9FE4
  87+ 9FE4              ;    ld b,a
  88+ 9FE4              ;    ld hl,Derecha_y_subiendo+7
  89+ 9FE4              ;    ld a,(hl)
  90+ 9FE4              ;    sub b
  91+ 9FE4              ;    ld (hl),a
  92+ 9FE4
  93+ 9FE4
  94+ 9FE4 CD 8E A0         call Aplica_desplazamiento
  95+ 9FE7
  96+ 9FE7 21 1D 8C         ld hl,Repetimos_desplazamiento
  97+ 9FEA 35               dec (hl)
  98+ 9FEB C0               ret nz
  99+ 9FEC
 100+ 9FEC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ 9FEC              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ 9FEC              ; Analiza (Cola_de_desplazamiento).
 103+ 9FEC
 104+ 9FEC 3A 20 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ 9FEF A7               and a
 106+ 9FF0 CC E3 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ 9FF3 28 30            jr z,Reinicia_el_movimiento
 108+ 9FF5
 109+ 9FF5 FE FF            cp $ff
 110+ 9FF7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ 9FF9
 112+ 9FF9 FE FE            cp $fe
 113+ 9FFB CC 68 A0         call z,Fijamos_bucle
 114+ 9FFE 28 25            jr z,Reinicia_el_movimiento
 115+ A000
 116+ A000 FE FD            cp $fd
 117+ A002 20 11            jr nz,1F
 118+ A004
 119+ A004              ; ---
 120+ A004              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ A004
 122+ A004 3A F0 8B         ld a,(Ctrl_2)
 123+ A007 CB 5F            bit 3,a
 124+ A009 20 1A            jr nz,Reinicia_el_movimiento
 125+ A00B
 126+ A00B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ A00B
 128+ A00B 21 F0 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ A00E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ A010
 131+ A010 CD 79 A0         call Inicia_Repetimos_movimiento
 132+ A013 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ A015              ; ---
 134+ A015
 135+ A015 FE 01        1 cp 1
 136+ A017 CA 52 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ A01A
 138+ A01A 3D               dec a
 139+ A01B 32 20 8C         ld (Cola_de_desplazamiento),a
 140+ A01E
 141+ A01E 3A 1E 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ A021 32 1D 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ A024              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ A024 C9               ret
 145+ A025
 146+ A025              Reinicia_el_movimiento
 147+ A025
 148+ A025 3A F0 8B         ld a,(Ctrl_2)
 149+ A028 CB 5F            bit 3,a
 150+ A02A 28 1B            jr z,2F
 151+ A02C
 152+ A02C              ; (Cola_de_desplazamiento)="254".
 153+ A02C
 154+ A02C 21 1F 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ A02F 35               dec (hl)
 156+ A030 20 15            jr nz,2F
 157+ A032
 158+ A032              ; Fin de las repeticiones del último movimiento.
 159+ A032
 160+ A032 21 F0 8B         ld hl,Ctrl_2
 161+ A035 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ A037
 163+ A037 2A 17 8C         ld hl,(Puntero_mov)
 164+ A03A 23               inc hl
 165+ A03B 23               inc hl
 166+ A03C 23               inc hl
 167+ A03D 22 17 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ A040              ;                                                               ; _ para ejecutar su mandato. :)
 169+ A040 7E               ld a,(hl)
 170+ A041 32 20 8C         ld (Cola_de_desplazamiento),a
 171+ A044
 172+ A044 C3 EC 9F         jp Cola
 173+ A047
 174+ A047 CD 84 A0     2 call Inicia_Puntero_mov
 175+ A04A
 176+ A04A 21 F0 8B         ld hl,Ctrl_2
 177+ A04D CB 96            res 2,(hl)
 178+ A04F
 179+ A04F C3 C2 9F         jp Movimiento
 180+ A052
 181+ A052              Siguiente_desplazamiento
 182+ A052
 183+ A052              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ A052              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ A052
 186+ A052 21 F0 8B         ld hl,Ctrl_2
 187+ A055 CB 96            res 2,(hl)
 188+ A057
 189+ A057 2A 17 8C         ld hl,(Puntero_mov)
 190+ A05A 23               inc hl
 191+ A05B 23               inc hl
 192+ A05C 22 17 8C         ld (Puntero_mov),hl
 193+ A05F
 194+ A05F 7E               ld a,(hl)
 195+ A060 A7               and a
 196+ A061 CC E3 A0         call z,Incrementa_Puntero_indice_mov
 197+ A064 CA 25 A0         jp z,Reinicia_el_movimiento
 198+ A067
 199+ A067 C9               ret
 200+ A068
 201+ A068              ; Subrutinas -----------------------------------------
 202+ A068              ; ---------- --------- --------- ---------- ----------
 203+ A068              ;
 204+ A068              ;   24/07/23
 205+ A068              ;
 206+ A068              ;   Fijamos_bucle
 207+ A068              ;
 208+ A068              ;
 209+ A068
 210+ A068              Fijamos_bucle
 211+ A068
 212+ A068 3A 1B 8C         ld a,(Incrementa_puntero)
 213+ A06B 3C               inc a
 214+ A06C 32 1C 8C         ld (Incrementa_puntero_backup),a
 215+ A06F
 216+ A06F CD E3 A0         call Incrementa_Puntero_indice_mov
 217+ A072 2A 15 8C         ld hl,(Puntero_indice_mov)
 218+ A075 22 19 8C         ld (Puntero_indice_mov_bucle),hl
 219+ A078 C9               ret
 220+ A079
 221+ A079              ; ---------- --------- --------- ---------- ----------
 222+ A079              ;
 223+ A079              ;   07/7/23
 224+ A079              ;
 225+ A079              ;   Inicia_Repetimos_movimiento
 226+ A079              ;
 227+ A079              ;
 228+ A079
 229+ A079              Inicia_Repetimos_movimiento
 230+ A079
 231+ A079              ; Iniciamos (Repetimos_movimiento).
 232+ A079
 233+ A079 DD 2A 17 8C      ld ix,(Puntero_mov)
 234+ A07D DD 7E 02         ld a,(ix+2)
 235+ A080 32 1F 8C         ld (Repetimos_movimiento),a
 236+ A083
 237+ A083 C9               ret
 238+ A084
 239+ A084              ; ---------- --------- --------- ---------- ----------
 240+ A084              ;
 241+ A084              ;   26/6/23
 242+ A084              ;
 243+ A084              ;   Inicia_Puntero_mov
 244+ A084              ;
 245+ A084              ;
 246+ A084
 247+ A084 2A 15 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ A087 CD 93 91         call Extrae_address
 249+ A08A 22 17 8C         ld (Puntero_mov),hl
 250+ A08D C9               ret
 251+ A08E
 252+ A08E              ; ---------- --------- --------- ---------- ----------
 253+ A08E              ;
 254+ A08E              ;   27/06/23
 255+ A08E              ;
 256+ A08E              ;   Aplica_movimiento.
 257+ A08E
 258+ A08E              Aplica_desplazamiento
 259+ A08E
 260+ A08E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ A08E
 262+ A08E 2A 17 8C         ld hl,(Puntero_mov)
 263+ A091
 264+ A091 7E               ld a,(hl)
 265+ A092 E6 F0            and $f0
 266+ A094 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ A095
 268+ A095 CB 7E            bit 7,(hl)
 269+ A097 28 03            jr z,1F
 270+ A099 CD 85 9C         call Mov_up
 271+ A09C
 272+ A09C 2A 17 8C     1 ld hl,(Puntero_mov)
 273+ A09F CB 76            bit 6,(hl)
 274+ A0A1 28 03            jr z,2F
 275+ A0A3 CD 51 9C         call Mov_down
 276+ A0A6
 277+ A0A6 2A 17 8C     2 ld hl,(Puntero_mov)
 278+ A0A9 CB 6E            bit 5,(hl)
 279+ A0AB 28 03            jr z,3F
 280+ A0AD CD E1 9D         call Mov_left
 281+ A0B0
 282+ A0B0 2A 17 8C     3 ld hl,(Puntero_mov)
 283+ A0B3 CB 66            bit 4,(hl)
 284+ A0B5 C8               ret z
 285+ A0B6 CD C3 9C         call Mov_right
 286+ A0B9
 287+ A0B9 C9               ret
 288+ A0BA
 289+ A0BA              ; ---------- --------- --------- ---------- ----------
 290+ A0BA              ;
 291+ A0BA              ;   26/06/23
 292+ A0BA              ;
 293+ A0BA              ;   Ajusta_velocidad_desplazamiento.
 294+ A0BA
 295+ A0BA              Ajusta_velocidad_desplazamiento
 296+ A0BA
 297+ A0BA              ; 1er byte de la cadena de movimiento.
 298+ A0BA              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ A0BA
 300+ A0BA CD D8 A0         call Extrae_nibble_alto
 301+ A0BD
 302+ A0BD 32 0B 8C         ld (Vel_up),a
 303+ A0C0 79               ld a,c
 304+ A0C1 E6 0F            and $0f
 305+ A0C3 32 0C 8C         ld (Vel_down),a
 306+ A0C6
 307+ A0C6              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ A0C6              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ A0C6
 310+ A0C6 23               inc hl
 311+ A0C7 CD D8 A0         call Extrae_nibble_alto
 312+ A0CA
 313+ A0CA 32 09 8C         ld (Vel_left),a
 314+ A0CD 79               ld a,c
 315+ A0CE E6 0F            and $0f
 316+ A0D0 32 0A 8C         ld (Vel_right),a
 317+ A0D3
 318+ A0D3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ A0D3
 320+ A0D3 23               inc hl
 321+ A0D4 22 17 8C         ld (Puntero_mov),hl
 322+ A0D7 C9               ret
 323+ A0D8
 324+ A0D8 06 04        Extrae_nibble_alto ld b,4
 325+ A0DA 7E               ld a,(hl)
 326+ A0DB 4F               ld c,a
 327+ A0DC E6 F0            and $f0
 328+ A0DE CB 3F        1 srl a
 329+ A0E0 10 FC            djnz 1B
 330+ A0E2 C9               ret
 331+ A0E3
 332+ A0E3              ; ---------- --------- --------- ---------- ----------
 333+ A0E3              ;
 334+ A0E3              ;   5/7/23
 335+ A0E3              ;
 336+ A0E3              ;   Incrementa_Puntero_indice_mov
 337+ A0E3
 338+ A0E3              Incrementa_Puntero_indice_mov
 339+ A0E3
 340+ A0E3 21 1B 8C         ld hl,Incrementa_puntero
 341+ A0E6 34               inc (hl)
 342+ A0E7
 343+ A0E7 2A 15 8C         ld hl,(Puntero_indice_mov)
 344+ A0EA 01 02 00         ld bc,2
 345+ A0ED A7               and a
 346+ A0EE 09               add hl,bc
 347+ A0EF 22 15 8C         ld (Puntero_indice_mov),hl
 348+ A0F2
 349+ A0F2 7E               ld a,(hl)
 350+ A0F3 A7               and a
 351+ A0F4
 352+ A0F4              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ A0F4
 354+ A0F4              ;    jr z,$
 355+ A0F4
 356+ A0F4              ;! Reinicia el Patrón de movimiento.
 357+ A0F4
 358+ A0F4 CC F9 A0         call z,Inicializa_Puntero_indice_mov_2
 359+ A0F7
 360+ A0F7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ A0F8
 362+ A0F8 C9               ret
 363+ A0F9
 364+ A0F9              ; ---------- --------- --------- ---------- ----------
 365+ A0F9              ;
 366+ A0F9              ;   15/01/24
 367+ A0F9              ;
 368+ A0F9              ;   Inicializa_Puntero_indice_mov
 369+ A0F9
 370+ A0F9              Inicializa_Puntero_indice_mov_2
 371+ A0F9
 372+ A0F9              ; Existe etiqueta de bucle principal???
 373+ A0F9
 374+ A0F9 2A 19 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ A0FC 24               inc h
 376+ A0FD 25               dec h
 377+ A0FE 28 05            jr z,2F
 378+ A100
 379+ A100 22 15 8C         ld (Puntero_indice_mov),hl
 380+ A103 18 14            jr 3F
 381+ A105
 382+ A105              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ A105
 384+ A105 3A 1B 8C     2 ld a,(Incrementa_puntero)
 385+ A108 47               ld b,a
 386+ A109
 387+ A109 2A 15 8C         ld hl,(Puntero_indice_mov)
 388+ A10C 2B           1 dec hl
 389+ A10D 2B               dec hl
 390+ A10E 10 FC            djnz 1B
 391+ A110 22 15 8C         ld (Puntero_indice_mov),hl
 392+ A113
 393+ A113 AF               xor a
 394+ A114 32 1B 8C         ld (Incrementa_puntero),a
 395+ A117 18 06            jr 4F
 396+ A119
 397+ A119 3A 1C 8C     3 ld a,(Incrementa_puntero_backup)
 398+ A11C 32 1B 8C         ld (Incrementa_puntero),a
 399+ A11F C9           4 ret
 400+ A120
 401+ A120              ; ----------------------------------------------------------------------
 402+ A120              ;
 403+ A120              ;   24/11/24
 404+ A120              ;
 405+ A120              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ A120
 407+ A120 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ A123 CD 1E 95         call Calcula_salto_en_BC
 409+ A126 21 0D 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ A129 A7               and a
 411+ A12A ED 4A            adc hl,bc
 412+ A12C C9               ret
 413+ A12D
 414+ A12D              ; ----------------------------------------------------------------------
 415+ A12D              ;
 416+ A12D              ;   24/11/24
 417+ A12D              ;
 418+ A12D              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ A12D              ;
 420+ A12D              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ A12D
 422+ A12D 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ A12E 23               inc hl
 424+ A12F 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ A130 DD 71 09         ld (ix+9),c
 426+ A133 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ A136 C9               ret
 428+ A137
# file closed: Movimiento.asm
2342  A137              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A137              ; --------------------------------------------------------------------------------------
   2+ A137              ;
   3+ A137              ;   25/10/24
   4+ A137              ;
   5+ A137
   6+ A137              Pinta_disparos_Entidades
   7+ A137
   8+ A137 ED 73 33 8C      ld (Stack),sp
   9+ A13B ED 7B 45 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A13F
  11+ A13F 3E 02            ld a,2
  12+ A141 08               ex af,af
  13+ A142
  14+ A142 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A144              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A144              ;                                     _ No encontraría "0".
  17+ A144 FD E1        4 pop iy
  18+ A146 D1               pop de                          ; 1er .db IYL
  19+ A147              ;                                   ; 2º  .db IYH
  20+ A147              ;                                   ; 3er .db E.
  21+ A147              ;   Album vacío ???
  22+ A147
  23+ A147 FD 7D            ld a,iyl
  24+ A149 FD 84            add iyh
  25+ A14B 83               add e
  26+ A14C 28 1F            jr z,1F
  27+ A14E
  28+ A14E              ;   Imprime album, (contiene datos).
  29+ A14E
  30+ A14E 3B               dec sp
  31+ A14F
  32+ A14F E1               pop hl                          ; Puntero de impresión en HL.
  33+ A150
  34+ A150              ; Imprime el 1er scanline del disparo.
  35+ A150
  36+ A150 FD 7D            ld a,iyl
  37+ A152 AE               xor (hl)
  38+ A153 77               ld (hl),a
  39+ A154
  40+ A154 2C               inc l
  41+ A155
  42+ A155 FD 7C            ld a,iyh
  43+ A157 AE               xor (hl)
  44+ A158 77               ld (hl),a
  45+ A159
  46+ A159 2C               inc l
  47+ A15A
  48+ A15A 7B               ld a,e
  49+ A15B AE               xor (hl)
  50+ A15C 77               ld (hl),a
  51+ A15D
  52+ A15D              ; Imprime el 2º scanline del disparo.
  53+ A15D
  54+ A15D E1               pop hl
  55+ A15E
  56+ A15E FD 7D            ld a,iyl
  57+ A160 AE               xor (hl)
  58+ A161 77               ld (hl),a
  59+ A162
  60+ A162 2C               inc l
  61+ A163
  62+ A163 FD 7C            ld a,iyh
  63+ A165 AE               xor (hl)
  64+ A166 77               ld (hl),a
  65+ A167
  66+ A167 2C               inc l
  67+ A168
  68+ A168 7B               ld a,e
  69+ A169 AE               xor (hl)
  70+ A16A 77               ld (hl),a
  71+ A16B
  72+ A16B 10 D7            djnz 4B
  73+ A16D
  74+ A16D 08           1 ex af,af
  75+ A16E 3D               dec a
  76+ A16F 20 05            jr nz,2F
  77+ A171
  78+ A171 ED 7B 33 8C      ld sp,(Stack)
  79+ A175 C9               ret
  80+ A176
  81+ A176 ED 7B 43 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A17A 08               ex af,af
  83+ A17B 18 C5            jr 3B
  84+ A17D
  85+ A17D              ; --------------------------------------------------------------------------------------
  86+ A17D              ;
  87+ A17D              ;   2/12/24
  88+ A17D              ;
  89+ A17D
  90+ A17D              Motor_de_disparos_entidades
  91+ A17D
  92+ A17D 3A 4B 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A180 FE 07            cp 7
  94+ A182 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A183
  96+ A183 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A185 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A188
  99+ A188 CD 93 91     1 call Extrae_address
 100+ A18B 1C               inc e
 101+ A18C 1C               inc e
 102+ A18D ED 53 5E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A191
 104+ A191               ; Caja vacía ???
 105+ A191
 106+ A191 2D               dec l
 107+ A192 7E               ld a,(hl)
 108+ A193 A7               and a
 109+ A194 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A196
 111+ A196              ; --- Trabajamos con caja:
 112+ A196
 113+ A196 2C               inc l
 114+ A197
 115+ A197              ; --- Existe posibilidad de impacto ???
 116+ A197
 117+ A197 3A 84 8C         ld a,(Shield)
 118+ A19A A7               and a
 119+ A19B 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A19D
 121+ A19D CB 46            bit 0,(hl)
 122+ A19F C4 DF A1         call nz, Comprueba_impacto_con_Amadeus
 123+ A1A2 20 37            jr nz,3F
 124+ A1A4
 125+ A1A4 CD 66 A2     6 call Rota_disparo_si_procede
 126+ A1A7
 127+ A1A7              ; ------------------------------------------------------------
 128+ A1A7
 129+ A1A7 2D               dec l
 130+ A1A8 2D               dec l
 131+ A1A9
 132+ A1A9 CD 93 91         call Extrae_address
 133+ A1AC
 134+ A1AC              ;   (Puntero_de_impresion) del disparo en HL
 135+ A1AC              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A1AC
 137+ A1AC 3A 5D 8C         ld a,(Ctrl_5)
 138+ A1AF CB 57            bit 2,a
 139+ A1B1 28 09            jr z,4F
 140+ A1B3
 141+ A1B3 CB 97            res 2,a
 142+ A1B5 32 5D 8C         ld (Ctrl_5),a
 143+ A1B8 2C               inc l
 144+ A1B9 2C               inc l
 145+ A1BA 18 0C            jr 5F
 146+ A1BC
 147+ A1BC CB 5F        4 bit 3,a
 148+ A1BE 28 08            jr z,5F
 149+ A1C0
 150+ A1C0 CB 9F            res 3,a
 151+ A1C2 32 5D 8C         ld (Ctrl_5),a
 152+ A1C5 2D               dec l
 153+ A1C6 2D               dec l
 154+ A1C7 2D               dec l
 155+ A1C8
 156+ A1C8              ; ---------------------------------------------------------------------
 157+ A1C8
 158+ A1C8              ;! Velocidad del disparo de entidades.
 159+ A1C8
 160+ A1C8 CD 0B 9C     5 call NextScan
 161+ A1CB CD 0B 9C         call NextScan
 162+ A1CE
 163+ A1CE              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A1CE
 165+ A1CE CD 43 A2         call Fin_de_disparo_de_entidad
 166+ A1D1
 167+ A1D1 EB               ex de,hl
 168+ A1D2
 169+ A1D2 73               ld (hl),e
 170+ A1D3 23               inc hl
 171+ A1D4 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A1D5
 173+ A1D5 2A 5E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A1D8 18 02            jr 2F
 175+ A1DA
 176+ A1DA C9               ret
 177+ A1DB
 178+ A1DB EB           3 ex de,hl
 179+ A1DC 10 AA        2 djnz 1B
 180+ A1DE
 181+ A1DE C9               ret
 182+ A1DF
 183+ A1DF              ; ------------- ------------- ------------
 184+ A1DF              ;
 185+ A1DF              ;   1/11/24
 186+ A1DF
 187+ A1DF              Comprueba_impacto_con_Amadeus
 188+ A1DF
 189+ A1DF              ;   El disparo se encuentra en zona de Amadeus.
 190+ A1DF              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A1DF
 192+ A1DF              ;   Modificamos registros, así que guardamos ...
 193+ A1DF
 194+ A1DF C5               push bc
 195+ A1E0 E5               push hl
 196+ A1E1 D5               push de
 197+ A1E2
 198+ A1E2 2D               dec l
 199+ A1E3 2D               dec l
 200+ A1E4
 201+ A1E4 CD 93 91         call Extrae_address
 202+ A1E7
 203+ A1E7 3A AF 89         ld a,(CX_Amadeus)
 204+ A1EA 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A1EB
 206+ A1EB 7D               ld a,l
 207+ A1EC E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A1EE
 209+ A1EE 06 03            ld b,3
 210+ A1F0
 211+ A1F0 B9           1 cp c
 212+ A1F1 28 15            jr z,Coincidencia
 213+ A1F3 0C               inc c
 214+ A1F4 10 FA            djnz 1B
 215+ A1F6
 216+ A1F6 0D               dec c
 217+ A1F7 0D               dec c
 218+ A1F8 0D               dec c
 219+ A1F9
 220+ A1F9 3C               inc a
 221+ A1FA B9               cp c
 222+ A1FB 28 0B            jr z,Coincidencia
 223+ A1FD
 224+ A1FD 3C               inc a
 225+ A1FE B9               cp c
 226+ A1FF 28 07            jr z,Coincidencia
 227+ A201
 228+ A201 D1           2 pop de
 229+ A202 E1               pop hl
 230+ A203 C1               pop bc
 231+ A204
 232+ A204              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A204
 234+ A204 CB 86            res 0,(hl)
 235+ A206 AF               xor a                       ; Z before RET.
 236+ A207 C9               ret
 237+ A208
 238+ A208              Coincidencia
 239+ A208
 240+ A208              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A208              ;   Existe posibilidad de impacto.
 242+ A208              ;   Vamos a averiguarlo ...
 243+ A208
 244+ A208 1D               dec e
 245+ A209 1D               dec e
 246+ A20A 1D               dec e
 247+ A20B
 248+ A20B              ; DE en Puntero_objeto del disparo.
 249+ A20B              ; HL en Puntero_de_impresión del disparo.
 250+ A20B
 251+ A20B              ; Comparador:
 252+ A20B
 253+ A20B 06 03            ld b,3
 254+ A20D
 255+ A20D 1A           3 ld a,(de)
 256+ A20E 4F               ld c,a
 257+ A20F A6               and (hl)
 258+ A210 B9               cp c
 259+ A211 20 06            jr nz,Amadeus_impactado
 260+ A213
 261+ A213 2C               inc l
 262+ A214 1C               inc e
 263+ A215
 264+ A215 10 F6            djnz 3B
 265+ A217
 266+ A217 18 E8            jr 2B
 267+ A219
 268+ A219              Amadeus_impactado
 269+ A219
 270+ A219              ; Borramos disparo.
 271+ A219
 272+ A219              ;   Exclusion.
 273+ A219
 274+ A219 D1               pop de
 275+ A21A E1               pop hl
 276+ A21B
 277+ A21B E5               push hl
 278+ A21C D5               push de
 279+ A21D
 280+ A21D CD D1 A2         call Borra_6_bytes
 281+ A220
 282+ A220 21 4B 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A223 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A224
 285+ A224              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A224
 287+ A224 21 B2 89         ld hl,Impacto_Amadeus
 288+ A227 36 01            ld (hl),1
 289+ A229
 290+ A229              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A229              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A229
 293+ A229 3A B3 89         ld a,(p.imp.amadeus)
 294+ A22C FE DE            cp $de
 295+ A22E 20 04            jr nz,1F
 296+ A230
 297+ A230 3D               dec a
 298+ A231 32 B3 89         ld (p.imp.amadeus),a
 299+ A234
 300+ A234              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A234
 302+ A234 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A237 21 B5 89         ld hl,Pamm_Amadeus
 304+ A23A
 305+ A23A 73               ld (hl),e
 306+ A23B 23               inc hl
 307+ A23C 72               ld (hl),d
 308+ A23D
 309+ A23D D1               pop de
 310+ A23E E1               pop hl
 311+ A23F C1               pop bc
 312+ A240
 313+ A240 AF               xor a
 314+ A241 3C               inc a               ; NZ before RET.
 315+ A242 C9               ret
 316+ A243
 317+ A243              ; ------------- ------------- ------------
 318+ A243              ;
 319+ A243              ;   31/10/24
 320+ A243
 321+ A243              Fin_de_disparo_de_entidad
 322+ A243
 323+ A243              ; Estamos en zona de Amadeus ??
 324+ A243
 325+ A243 7C               ld a,h
 326+ A244 FE 54            cp $54
 327+ A246 38 0D            jr c,1F
 328+ A248
 329+ A248 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A249
 331+ A249 5D               ld e,l
 332+ A24A 54               ld d,h
 333+ A24B
 334+ A24B 21 E0 57         ld hl,$57e0
 335+ A24E ED 52            sbc hl,de
 336+ A250
 337+ A250 38 6F            jr c,Elimina_disparo_entidad
 338+ A252
 339+ A252 6B               ld l,e
 340+ A253 62               ld h,d
 341+ A254
 342+ A254 D1               pop de
 343+ A255
 344+ A255 7C           1 ld a,h
 345+ A256 FE 50            cp $50
 346+ A258 D8               ret c
 347+ A259
 348+ A259 7D               ld a,l
 349+ A25A FE C0            cp $c0
 350+ A25C D8               ret c
 351+ A25D
 352+ A25D              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A25D              ; Así podremos comprobar si hay colisión más adelante.
 354+ A25D
 355+ A25D 1C               inc e
 356+ A25E 1C               inc e
 357+ A25F
 358+ A25F EB               ex de,hl
 359+ A260 CB C6            set 0,(hl)
 360+ A262 EB               ex de,hl
 361+ A263
 362+ A263 1D               dec e
 363+ A264 1D               dec e
 364+ A265
 365+ A265 C9               ret
 366+ A266
 367+ A266              ; ----------------------------------------------------------
 368+ A266              ;
 369+ A266              ;   08/10/24
 370+ A266
 371+ A266              ;   Estructura de un disparo de entidades.
 372+ A266
 373+ A266              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A266              ; 	defw 0											; Puntero de impresión.
 375+ A266              ;	defw 0											; Control.
 376+ A266
 377+ A266              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A266              ;   _de la entidad en el momento de disparar.
 379+ A266
 380+ A266              ;   El byte alto muestra la siguiente información:
 381+ A266              ;
 382+ A266              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A266              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A266              ;
 385+ A266              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A266              ;
 387+ A266              ;                        10xx ..... Izquierda.
 388+ A266              ;                        01xx ..... Derecha.
 389+ A266              ;                        00xx ..... Recto.
 390+ A266
 391+ A266              Rota_disparo_si_procede
 392+ A266
 393+ A266              ;   Nos situamos en el byte alto de (Control).
 394+ A266
 395+ A266 CB 76            bit 6,(hl)
 396+ A268 20 2D            jr nz,Rota_a_derecha
 397+ A26A CB 7E            bit 7,(hl)
 398+ A26C C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A26D
 400+ A26D              Rota_a_izq
 401+ A26D
 402+ A26D E5               push hl
 403+ A26E
 404+ A26E 7D               ld a,l
 405+ A26F D6 05            sub 5
 406+ A271 6F               ld l,a
 407+ A272
 408+ A272 E5               push hl
 409+ A273 FD E1            pop iy
 410+ A275
 411+ A275 A7               and a
 412+ A276
 413+ A276 FD CB 02 16      rl (iy+02)
 414+ A27A FD CB 01 16      rl (iy+01)
 415+ A27E FD CB 00 16      rl (iy+00)
 416+ A282
 417+ A282 30 3B            jr nc,Exit
 418+ A284
 419+ A284              ; Desplazamiento completo hasta Carry.
 420+ A284              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A284
 422+ A284 FD 36 02 03      ld (iy+02),$03
 423+ A288 FD 36 01 00      ld (iy+01),$00
 424+ A28C FD 36 00 00      ld (iy+00),$00
 425+ A290
 426+ A290 21 5D 8C         ld hl,Ctrl_5
 427+ A293 CB DE            set 3,(hl)
 428+ A295
 429+ A295 18 28            jr Exit
 430+ A297
 431+ A297              Rota_a_derecha
 432+ A297
 433+ A297 E5               push hl
 434+ A298
 435+ A298 7D               ld a,l
 436+ A299 D6 05            sub 5
 437+ A29B 6F               ld l,a
 438+ A29C
 439+ A29C E5               push hl
 440+ A29D FD E1            pop iy
 441+ A29F
 442+ A29F A7               and a
 443+ A2A0
 444+ A2A0 FD CB 00 1E      rr (iy+00)
 445+ A2A4 FD CB 01 1E      rr (iy+01)
 446+ A2A8 FD CB 02 1E      rr (iy+02)
 447+ A2AC
 448+ A2AC 30 11            jr nc,Exit
 449+ A2AE
 450+ A2AE              ; Desplazamiento completo hasta Carry.
 451+ A2AE              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A2AE
 453+ A2AE FD 36 00 01      ld (iy+00),$01
 454+ A2B2 FD 36 01 80      ld (iy+01),$80
 455+ A2B6 FD 36 02 00      ld (iy+02),$00
 456+ A2BA
 457+ A2BA 21 5D 8C         ld hl,Ctrl_5
 458+ A2BD CB D6            set 2,(hl)
 459+ A2BF
 460+ A2BF E1           Exit pop hl
 461+ A2C0 C9               ret
 462+ A2C1
 463+ A2C1              ; ------------ ----------- ------------
 464+ A2C1              ;
 465+ A2C1              ;   25/9/24
 466+ A2C1
 467+ A2C1              Elimina_disparo_entidad
 468+ A2C1
 469+ A2C1 21 4B 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A2C4 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A2C5
 472+ A2C5 E1               pop hl
 473+ A2C6 E5               push hl
 474+ A2C7
 475+ A2C7 2C               inc l
 476+ A2C8 2C               inc l
 477+ A2C9
 478+ A2C9 CD D1 A2         call Borra_6_bytes
 479+ A2CC
 480+ A2CC D1               pop de
 481+ A2CD
 482+ A2CD 21 00 00         ld hl,0
 483+ A2D0
 484+ A2D0 C9               ret
 485+ A2D1
 486+ A2D1              ; ----- ----- ----- ----- -----
 487+ A2D1
 488+ A2D1              Borra_6_bytes
 489+ A2D1
 490+ A2D1 16 06            ld d,6                                                    ; Contador
 491+ A2D3 AF               xor a                                                     ; Borrador
 492+ A2D4 77           1 ld (hl),a
 493+ A2D5 2D               dec l
 494+ A2D6 15               dec d
 495+ A2D7 20 FB            jr nz,1B
 496+ A2D9
 497+ A2D9 C9               ret
 498+ A2DA
 499+ A2DA              ; --------------------------------------------------------------------------------------
 500+ A2DA              ;
 501+ A2DA              ;   12/10/24
 502+ A2DA              ;
 503+ A2DA
 504+ A2DA              Genera_datos_de_impresion_disparos_Entidades
 505+ A2DA
 506+ A2DA 3E 07            ld a,7
 507+ A2DC 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A2DD
 509+ A2DD              ; ---------------
 510+ A2DD
 511+ A2DD              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A2DD
 513+ A2DD 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A2E0
 515+ A2E0 CD 93 91     1 call Extrae_address
 516+ A2E3
 517+ A2E3 13               inc de
 518+ A2E4 13               inc de
 519+ A2E5
 520+ A2E5 ED 53 5E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A2E9
 522+ A2E9 2D               dec l
 523+ A2EA 7E               ld a,(hl)
 524+ A2EB A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A2EC 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A2EE
 527+ A2EE              ; ----- ----- ----- -----
 528+ A2EE
 529+ A2EE 2D               dec l
 530+ A2EF CD 93 91         call Extrae_address
 531+ A2F2 E5               push hl
 532+ A2F3
 533+ A2F3 1D               dec e
 534+ A2F4
 535+ A2F4 EB               ex de,hl
 536+ A2F5
 537+ A2F5 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A2F6 2D               dec l
 539+ A2F7 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A2F8 2D               dec l
 541+ A2F9 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A2FA
 543+ A2FA E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A2FB
 545+ A2FB              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A2FB
 547+ A2FB FD 2A 47 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A2FF FD 73 00         ld (iy+0),e
 549+ A302 FD 70 01         ld (iy+1),b
 550+ A305 FD 71 02         ld (iy+2),c
 551+ A308
 552+ A308 FD 75 03         ld (iy+3),l
 553+ A30B FD 74 04         ld (iy+4),h
 554+ A30E
 555+ A30E CD 0B 9C         call NextScan
 556+ A311
 557+ A311 FD 75 05         ld (iy+5),l
 558+ A314 FD 74 06         ld (iy+6),h
 559+ A317
 560+ A317 FD E5            push iy
 561+ A319 E1               pop hl
 562+ A31A
 563+ A31A 3E 07            ld a,7
 564+ A31C 85               add l
 565+ A31D 6F               ld l,a
 566+ A31E
 567+ A31E 22 47 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A321
 569+ A321              ; ----- ----- ----- -----
 570+ A321
 571+ A321              Situa_en_siguiente_caja
 572+ A321
 573+ A321 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A322 3D               dec a
 575+ A323 C8               ret z
 576+ A324
 577+ A324 08               ex af,af
 578+ A325 2A 5E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A328 18 B6            jr 1B
 580+ A32A
 581+ A32A              ; --------------------------------------------------------------------------------------
 582+ A32A              ;
 583+ A32A              ;   12/10/24
 584+ A32A              ;
 585+ A32A
 586+ A32A              Genera_disparo_de_entidad_maldosa
 587+ A32A
 588+ A32A              ;   Estructura de un disparo de entidades.
 589+ A32A
 590+ A32A              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A32A              ; 	defw 0											; Puntero de impresión.
 592+ A32A              ;	defw 0											; Control.
 593+ A32A
 594+ A32A              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A32A              ;   _de la entidad en el momento de disparar.
 596+ A32A
 597+ A32A              ;   El byte de control muestra la siguiente información:
 598+ A32A
 599+ A32A              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A32A              ;
 601+ A32A              ;                        10xx ..... Izquierda.
 602+ A32A              ;                        01xx ..... Derecha.
 603+ A32A              ;                        00xx ..... Recto.
 604+ A32A
 605+ A32A              ;*  Exclusiones.
 606+ A32A
 607+ A32A              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A32A              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A32A
 610+ A32A 3A 4B 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A32D A7               and a
 612+ A32E C8               ret z
 613+ A32F
 614+ A32F 3A E6 8B         ld a,(Coordenada_y)
 615+ A332 A7               and a
 616+ A333 C8               ret z
 617+ A334
 618+ A334 3D               dec a
 619+ A335 C8               ret z
 620+ A336
 621+ A336 FE 10            cp 16
 622+ A338 D0               ret nc
 623+ A339
 624+ A339              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A339              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A339              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A339
 628+ A339 21 4D 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A33C 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A33D
 631+ A33D              ;   Decrementa el numero de disparos de entidades.
 632+ A33D
 633+ A33D 21 4B 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A340 35               dec (hl)
 635+ A341
 636+ A341 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A344
 638+ A344 CD 93 91     1 call Extrae_address
 639+ A347
 640+ A347 13               inc de
 641+ A348 13               inc de
 642+ A349
 643+ A349 ED 53 5E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A34D
 645+ A34D              ;   Comprobamos si la caja está vacía.
 646+ A34D
 647+ A34D 2D               dec l
 648+ A34E 7E               ld a,(hl)
 649+ A34F A7               and a
 650+ A350 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A352 2C               inc l
 652+ A353
 653+ A353              ;   Caja vacía, vamos a generar un disparo.
 654+ A353              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A353
 656+ A353 CD 74 A3         call Genera_byte_inclinacion
 657+ A356
 658+ A356 7E               ld a,(hl)
 659+ A357 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A358
 661+ A358 2D               dec l
 662+ A359
 663+ A359 CD 90 A3         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A35C
 665+ A35C 70               ld (hl),b
 666+ A35D 2D               dec l
 667+ A35E 71               ld (hl),c
 668+ A35F
 669+ A35F 2D               dec l
 670+ A360
 671+ A360              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A360
 673+ A360 FD 7E 02         ld a,(iy+02)
 674+ A363 77               ld (hl),a
 675+ A364 2D               dec l
 676+ A365
 677+ A365 FD 7E 01         ld a,(iy+01)
 678+ A368 77               ld (hl),a
 679+ A369 2D               dec l
 680+ A36A
 681+ A36A FD 7E 00         ld a,(iy+00)
 682+ A36D 77               ld (hl),a
 683+ A36E
 684+ A36E C9               ret
 685+ A36F
 686+ A36F              ;   --- --- ---
 687+ A36F
 688+ A36F              Situa_en_siguiente_disparo
 689+ A36F
 690+ A36F 2A 5E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A372 18 D0            jr 1B
 692+ A374
 693+ A374              ; --------------------------------------------------------------------------------------
 694+ A374              ;
 695+ A374              ;   09/10/24
 696+ A374              ;
 697+ A374
 698+ A374              Genera_byte_inclinacion
 699+ A374
 700+ A374              ; Determina tendencia del disparo.
 701+ A374
 702+ A374 3A AF 89         ld a,(CX_Amadeus)
 703+ A377 47               ld b,a
 704+ A378 3A E5 8B         ld a,(Coordenada_X)
 705+ A37B 90               sub b
 706+ A37C 38 07            jr c,Disparo_a_derecha
 707+ A37E
 708+ A37E FE 06        Disparo_a_izquierda cp 6
 709+ A380
 710+ A380 D8               ret c
 711+ A381 C8               ret z
 712+ A382
 713+ A382 CB FE            set 7,(hl)
 714+ A384 C9               ret
 715+ A385
 716+ A385 47           Disparo_a_derecha ld b,a
 717+ A386 3E FF            ld a,$ff
 718+ A388 90               sub b
 719+ A389
 720+ A389 FE 05            cp 5
 721+ A38B
 722+ A38B D8               ret c
 723+ A38C C8               ret z
 724+ A38D
 725+ A38D CB F6            set 6,(hl)
 726+ A38F C9               ret
 727+ A390
 728+ A390              ; --------------------------------------------------------------------------------------
 729+ A390              ;
 730+ A390              ;   09/10/24
 731+ A390              ;
 732+ A390
 733+ A390              Modifica_puntero_de_impresion
 734+ A390
 735+ A390              ;   Puntero de impresión del disparo en BC.
 736+ A390
 737+ A390 E5               push hl
 738+ A391
 739+ A391 2A 60 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A394 CD 0B 9C         call NextScan
 741+ A397
 742+ A397 4D               ld c,l
 743+ A398 44               ld b,h
 744+ A399
 745+ A399 E1               pop hl
 746+ A39A
 747+ A39A 08               ex af,af
 748+ A39B CB 77            bit 6,a
 749+ A39D 28 06            jr z,1F
 750+ A39F
 751+ A39F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A3A3 0C               inc c
 753+ A3A4 C9               ret
 754+ A3A5
 755+ A3A5 CB 7F        1 bit 7,a
 756+ A3A7 28 F6            jr z,2B
 757+ A3A9
 758+ A3A9 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A3AD 0D               dec c
 760+ A3AE
 761+ A3AE C9               ret
 762+ A3AF
 763+ A3AF              ; --------------------------------------------------------------------------------------
 764+ A3AF              ;
 765+ A3AF              ;   28/11/24
 766+ A3AF              ;
 767+ A3AF
 768+ A3AF              Compara_con_coordenadas_de_disparo
 769+ A3AF
 770+ A3AF DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A3B2 47               ld b,a
 772+ A3B3 3A 65 8C         ld a,(Coordenadas_disparo_certero)
 773+ A3B6 90               sub b
 774+ A3B7
 775+ A3B7              ; A = "0" ok
 776+ A3B7              ; A = "1" ok
 777+ A3B7
 778+ A3B7 28 08            jr z,Comprueba_coordenada_X
 779+ A3B9 3D               dec a
 780+ A3BA 28 05            jr z,Comprueba_coordenada_X
 781+ A3BC
 782+ A3BC              ; A = "$ff" ok
 783+ A3BC
 784+ A3BC FE FE            cp $fe
 785+ A3BE 28 01            jr z,Comprueba_coordenada_X
 786+ A3C0
 787+ A3C0 C9               ret
 788+ A3C1
 789+ A3C1              Comprueba_coordenada_X
 790+ A3C1
 791+ A3C1 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A3C4 47               ld b,a
 793+ A3C5 21 66 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A3C8 7E               ld a,(hl)
 795+ A3C9 90               sub b
 796+ A3CA
 797+ A3CA              ; A = "0" ok
 798+ A3CA              ; A = "1" ok
 799+ A3CA
 800+ A3CA 28 09            jr z,Activa_Impacto_en_entidad
 801+ A3CC 3D               dec a
 802+ A3CD 28 06            jr z,Activa_Impacto_en_entidad
 803+ A3CF
 804+ A3CF              ; A = "2" ok
 805+ A3CF
 806+ A3CF 3D               dec a
 807+ A3D0 28 03            jr z,Activa_Impacto_en_entidad
 808+ A3D2
 809+ A3D2              ; A = "$ff"
 810+ A3D2
 811+ A3D2 FE FD            cp $fd
 812+ A3D4 C0               ret nz
 813+ A3D5
 814+ A3D5              Activa_Impacto_en_entidad
 815+ A3D5
 816+ A3D5              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A3D5
 818+ A3D5 3E 02            ld a,2
 819+ A3D7 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A3DA
 821+ A3DA              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A3DA
 823+ A3DA 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A3DD
 825+ A3DD DD 73 07         ld (ix+7),e
 826+ A3E0 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A3E3
 828+ A3E3              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A3E3
 830+ A3E3 21 62 8C         ld hl,Impacto2
 831+ A3E6 CB 9E            res 3,(hl)
 832+ A3E8
 833+ A3E8 C9               ret
 834+ A3E9
 835+ A3E9              ; --------------------------------------------------------------------------------------
 836+ A3E9              ;
 837+ A3E9              ;   13/10/24
 838+ A3E9              ;
 839+ A3E9
 840+ A3E9              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A3E9
 842+ A3E9              Limpia_album_de_pintado_disparos_Amadeus
 843+ A3E9
 844+ A3E9 2A 3F 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A3EC 06 06            ld b,6
 846+ A3EE AF               xor a
 847+ A3EF 77           1 ld (hl),a
 848+ A3F0 2C               inc l
 849+ A3F1 10 FC            djnz 1B
 850+ A3F3
 851+ A3F3 C9               ret
 852+ A3F4
 853+ A3F4              ; --------------------------------------------------------------------------------------
 854+ A3F4              ;
 855+ A3F4              ;   29/09/24
 856+ A3F4              ;
 857+ A3F4
 858+ A3F4              Calcula_bytes_pintado_disparos
 859+ A3F4
 860+ A3F4 2A 43 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A3F7 45               ld b,l
 862+ A3F8 2A 47 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A3FB 7D               ld a,l
 864+ A3FC
 865+ A3FC 90               sub b
 866+ A3FD 32 49 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A400
 868+ A400 C9               ret
 869+ A401
 870+ A401              ; --------------------------------------------------------------------------------------
 871+ A401              ;
 872+ A401              ;   26/10/24
 873+ A401              ;
 874+ A401              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A401              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A401              ;   _disparos que el álbum del FRAME actual).
 877+ A401
 878+ A401              Limpia_album_de_pintado_disparos_entidades
 879+ A401
 880+ A401 21 4A 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A404 7E               ld a,(hl)
 882+ A405 2D               dec l
 883+ A406 46               ld b,(hl)
 884+ A407 90               sub b
 885+ A408
 886+ A408 D8               ret c
 887+ A409 C8               ret z
 888+ A40A
 889+ A40A F5               push af
 890+ A40B 80               add b
 891+ A40C 77               ld (hl),a
 892+ A40D F1               pop af
 893+ A40E
 894+ A40E              ; Clean.
 895+ A40E
 896+ A40E 47           2 ld b,a
 897+ A40F AF               xor a
 898+ A410 2A 47 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A413 77           1 ld (hl),a
 900+ A414 23               inc hl
 901+ A415 10 FC            djnz 1B
 902+ A417
 903+ A417 C9               ret
 904+ A418
 905+ A418              ; --------------------------------------------------------------------------------------
 906+ A418              ;
 907+ A418              ;   29/09/24
 908+ A418              ;
 909+ A418
 910+ A418              Motor_Disparos_Amadeus
 911+ A418
 912+ A418 21 1D 89         ld hl,Disparo_Amad+1
 913+ A41B
 914+ A41B 34               inc (hl)
 915+ A41C 35               dec (hl)
 916+ A41D
 917+ A41D C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A41E
 919+ A41E              ;   Esta caja contiene un disparo.
 920+ A41E
 921+ A41E CD 25 A4         call Consulta_Impacto
 922+ A421 CC 3E A4         call z,Mueve_disparo_Amadeus
 923+ A424
 924+ A424 C9               ret
 925+ A425
 926+ A425              ; ----------------------
 927+ A425              ;
 928+ A425              ;
 929+ A425              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A425              ;
 931+ A425              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A425
 933+ A425
 934+ A425              Consulta_Impacto
 935+ A425
 936+ A425              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A425              ;   _sea lo más coherente posible.
 938+ A425
 939+ A425 E5               push hl
 940+ A426 2B               dec hl
 941+ A427 CD 1A A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A42A E1               pop hl
 943+ A42B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A42C
 945+ A42C C8               ret z
 946+ A42D
 947+ A42D 3A 62 8C         ld a,(Impacto2)
 948+ A430 CB DF            set 3,a
 949+ A432 32 62 8C         ld (Impacto2),a
 950+ A435
 951+ A435 E5               push hl
 952+ A436 CD 07 A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A439 E1               pop hl
 954+ A43A CD 57 A4         call Elimina_disparo_Amadeus
 955+ A43D
 956+ A43D C9               ret
 957+ A43E
 958+ A43E              ; ----------------------
 959+ A43E              ;
 960+ A43E              ;
 961+ A43E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A43E
 963+ A43E              Mueve_disparo_Amadeus
 964+ A43E
 965+ A43E CD 93 91         call Extrae_address
 966+ A441
 967+ A441 CD 1A 9C         call PreviousScan
 968+ A444 CD 1A 9C         call PreviousScan
 969+ A447 CD 1A 9C         call PreviousScan
 970+ A44A CD 1A 9C         call PreviousScan
 971+ A44D
 972+ A44D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A44D
 974+ A44D 7C               ld a,h
 975+ A44E D6 40            sub $40
 976+ A450 EB               ex de,hl
 977+ A451 38 04            jr c,Elimina_disparo_Amadeus
 978+ A453
 979+ A453               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A453
 981+ A453 73               ld (hl),e
 982+ A454 23               inc hl
 983+ A455 72               ld (hl),d
 984+ A456
 985+ A456 C9               ret
 986+ A457
 987+ A457              ; ----------------------
 988+ A457              ;
 989+ A457              ;   29/9/24
 990+ A457
 991+ A457              Elimina_disparo_Amadeus
 992+ A457
 993+ A457              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A457              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A457
 996+ A457              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A457              ;   	defw 0											; Puntero de impresión.
 998+ A457
 999+ A457 2B               dec hl
1000+ A458 2B               dec hl
1001+ A459
1002+ A459 AF               xor a
1003+ A45A 77               ld (hl),a
1004+ A45B 23               inc hl
1005+ A45C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A45D
1007+ A45D 23               inc hl
1008+ A45E 77               ld (hl),a
1009+ A45F 23               inc hl
1010+ A460 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A461
1012+ A461 3E 01            ld a,1
1013+ A463 32 4C 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A466
1015+ A466 CD E9 A3         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A469
1017+ A469 AF               xor a
1018+ A46A 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A46B
1020+ A46B C9               ret
1021+ A46C
1022+ A46C              ; --------------------------------------------------------------------------------------
1023+ A46C              ;
1024+ A46C              ;   13/10/24
1025+ A46C              ;
1026+ A46C
1027+ A46C              Pinta_disparos_Amadeus
1028+ A46C
1029+ A46C 06 02            ld b,2
1030+ A46E ED 73 33 8C      ld (Stack),sp
1031+ A472 ED 7B 41 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A476 D1           3 pop de
1033+ A477 14               inc d
1034+ A478 15               dec d
1035+ A479 28 1C            jr z,1F
1036+ A47B E1               pop hl
1037+ A47C
1038+ A47C              Imprime_scanlines_en_pantalla
1039+ A47C
1040+ A47C              ; 1er scanline
1041+ A47C
1042+ A47C 1A               ld a,(de)
1043+ A47D AE               xor (hl)
1044+ A47E 77               ld (hl),a
1045+ A47F
1046+ A47F 1C               inc e
1047+ A480 2C               inc l
1048+ A481
1049+ A481 1A               ld a,(de)
1050+ A482 AE               xor (hl)
1051+ A483 77               ld (hl),a
1052+ A484
1053+ A484 1D               dec e
1054+ A485 E1               pop hl
1055+ A486
1056+ A486              ; 2º scanline
1057+ A486
1058+ A486 1A               ld a,(de)
1059+ A487 AE               xor (hl)
1060+ A488 77               ld (hl),a
1061+ A489
1062+ A489 1C               inc e
1063+ A48A 2C               inc l
1064+ A48B
1065+ A48B 1A               ld a,(de)
1066+ A48C AE               xor (hl)
1067+ A48D 77               ld (hl),a
1068+ A48E
1069+ A48E 1D               dec e
1070+ A48F
1071+ A48F 18 06            jr 1F
1072+ A491
1073+ A491 ED 7B 3F 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A495 18 DF            jr 3B
1075+ A497 10 F8        1 djnz 2B
1076+ A499 ED 7B 33 8C      ld sp,(Stack)
1077+ A49D C9               ret
1078+ A49E
1079+ A49E              ; --------------------------------------------------------------------------------------
1080+ A49E              ;
1081+ A49E              ;   13/10/24
1082+ A49E              ;
1083+ A49E              ;   Modifica: HL,BC y DE.
1084+ A49E
1085+ A49E
1086+ A49E              Genera_datos_de_impresion_disparos_Amadeus
1087+ A49E
1088+ A49E ED 73 33 8C      ld (Stack),sp
1089+ A4A2 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A4A5 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A4A6
1092+ A4A6 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A4A7 15               dec d
1094+ A4A8
1095+ A4A8 28 0E            jr z,Salida
1096+ A4AA
1097+ A4AA              Genera_scanlines_de_disparo_Amadeus
1098+ A4AA
1099+ A4AA E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A4AB              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A4AB ED 7B 3F 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A4AF
1103+ A4AF C1               pop bc
1104+ A4B0 C1               pop bc
1105+ A4B1 C1               pop bc
1106+ A4B2
1107+ A4B2 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A4B3 CD 1A 9C         call PreviousScan
1109+ A4B6 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A4B7 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A4B8
1112+ A4B8              Salida
1113+ A4B8
1114+ A4B8 ED 7B 33 8C      ld sp,(Stack)
1115+ A4BC
1116+ A4BC C9               ret
1117+ A4BD
1118+ A4BD              ; --------------------------------------------------------------------------------------
1119+ A4BD              ;
1120+ A4BD              ;   12/09/24
1121+ A4BD              ;
1122+ A4BD
1123+ A4BD              Genera_disparo_Amadeus
1124+ A4BD
1125+ A4BD              ;*  Exclusiones.
1126+ A4BD
1127+ A4BD 3A 4C 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A4C0 A7               and a
1129+ A4C1 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A4C2
1131+ A4C2 3D               dec a
1132+ A4C3 32 4C 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A4C6
1134+ A4C6              Define_puntero_objeto_disparo
1135+ A4C6
1136+ A4C6              ;   Inicializamos contador.
1137+ A4C6
1138+ A4C6 06 00            ld b,0
1139+ A4C8
1140+ A4C8 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A4CB 2C               inc l
1142+ A4CC
1143+ A4CC 3E 80            ld a,$80
1144+ A4CE BE               cp (hl)
1145+ A4CF 28 0D            jr z,1F
1146+ A4D1
1147+ A4D1 04               inc b
1148+ A4D2
1149+ A4D2 3E 60            ld a,$60
1150+ A4D4 BE               cp (hl)
1151+ A4D5 28 07            jr z,1F
1152+ A4D7
1153+ A4D7
1154+ A4D7 04               inc b
1155+ A4D8
1156+ A4D8 3E 18            ld a,$18
1157+ A4DA BE               cp (hl)
1158+ A4DB 28 01            jr z,1F
1159+ A4DD
1160+ A4DD 04               inc b
1161+ A4DE
1162+ A4DE              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A4DE
1164+ A4DE              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A4DE
1166+ A4DE CD 1A 9C     1 call PreviousScan
1167+ A4E1
1168+ A4E1 78               ld a,b
1169+ A4E2 CB 3F            srl a
1170+ A4E4 28 03            jr z,4F
1171+ A4E6
1172+ A4E6              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A4E6 E5               push hl
1174+ A4E7 18 02            jr 5F
1175+ A4E9 2D           4 dec l
1176+ A4EA E5               push hl
1177+ A4EB              ; ---
1178+ A4EB
1179+ A4EB              ;   Calcula el Puntero_objeto del disparo.
1180+ A4EB
1181+ A4EB 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A4EE 04               inc b
1183+ A4EF 05               dec b
1184+ A4F0 28 04            jr z,2F
1185+ A4F2
1186+ A4F2              ;   Nos desplazamos por el índice de disparos.
1187+ A4F2
1188+ A4F2 2C           3 inc l
1189+ A4F3 2C               inc l
1190+ A4F4 10 FC            djnz 3B
1191+ A4F6
1192+ A4F6              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A4F6 CD 93 91     2 call Extrae_address
1194+ A4F9 E5               push hl
1195+ A4FA              ; ---
1196+ A4FA
1197+ A4FA              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A4FA              ; HL en el 1er .db de la caja.
1199+ A4FA
1200+ A4FA 21 1C 89         ld hl,Disparo_Amad
1201+ A4FD
1202+ A4FD 06 02            ld b,2
1203+ A4FF
1204+ A4FF D1           6 pop de
1205+ A500 73               ld (hl),e
1206+ A501 23               inc hl
1207+ A502 72               ld (hl),d
1208+ A503 23               inc hl
1209+ A504
1210+ A504 10 F9            djnz 6B
1211+ A506
1212+ A506 C9               ret
1213+ A507
1214+ A507              Genera_coordenadas_de_disparo_Amadeus
1215+ A507
1216+ A507              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A507              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A507              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A507
1220+ A507 CD 93 91         call Extrae_address
1221+ A50A CD 9F 95         call Genera_coordenadas
1222+ A50D
1223+ A50D 3D               dec a
1224+ A50E
1225+ A50E 21 65 8C         ld hl,Coordenadas_disparo_certero
1226+ A511 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A512 23               inc hl
1228+ A513 3A E5 8B         ld a,(Coordenada_X)
1229+ A516 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A517
1231+ A517 AF               xor a
1232+ A518 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A519
1234+ A519 C9               ret
1235+ A51A
1236+ A51A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A51A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A51A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A51A
1240+ A51A              ; ----------------------------------------------
1241+ A51A              ;
1242+ A51A              ;   27/08/24
1243+ A51A              ;
1244+ A51A              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A51A              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A51A
1247+ A51A              Detecta_impacto_en_disparo_de_Amadeus
1248+ A51A
1249+ A51A              Extraccion_de_datos
1250+ A51A
1251+ A51A 13               inc de
1252+ A51B 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A51C
1254+ A51C 5E               ld e,(hl)
1255+ A51D 23               inc hl
1256+ A51E 56               ld d,(hl)
1257+ A51F
1258+ A51F 23               inc hl
1259+ A520
1260+ A520 4E               ld c,(hl)
1261+ A521 23               inc hl
1262+ A522 46               ld b,(hl)
1263+ A523
1264+ A523 C5               push bc
1265+ A524 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A525
1267+ A525              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A525
1269+ A525 CD 1A 9C         call PreviousScan
1270+ A528 CD 1A 9C         call PreviousScan
1271+ A52B
1272+ A52B              Detecta_impacto_
1273+ A52B
1274+ A52B 1A               ld a,(de)
1275+ A52C A6               and (hl)
1276+ A52D C0               ret nz
1277+ A52E
1278+ A52E 13               inc de
1279+ A52F 23               inc hl
1280+ A530
1281+ A530 1A               ld a,(de)
1282+ A531 A6               and (hl)
1283+ A532 C9               ret
1284+ A533
1285+ A533              ; -------------------------------------------------------------------------------------------------------------
1286+ A533              ;
1287+ A533              ;   25/11//24
1288+ A533              ;
1289+ A533              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A533              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A533              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A533              ;
1293+ A533              ;   MODIFICA: HL,DE,BC y A.
1294+ A533              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A533              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A533
1297+ A533              Colision_Entidad_Amadeus
1298+ A533
1299+ A533              ; Posible contacto de entidad con Amadeus. ?????
1300+ A533
1301+ A533              ; Exclusiones:
1302+ A533
1303+ A533 3A 84 8C         ld a,(Shield)
1304+ A536 A7               and a
1305+ A537 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A538
1307+ A538 21 5B 8C         ld hl,Ctrl_3
1308+ A53B CB 76            bit 6,(hl)
1309+ A53D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A53E
1311+ A53E 21 62 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A541 CB 56            bit 2,(hl)
1313+ A543 C0               ret nz
1314+ A544
1315+ A544 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A547 FE 14        	cp $14
1317+ A549 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A54A
1319+ A54A 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A54D A7               and a
1321+ A54E C0               ret nz
1322+ A54F
1323+ A54F              Genera_coordenadas_X
1324+ A54F
1325+ A54F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A54F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A54F
1328+ A54F              ;   Limpiamos almacenes.
1329+ A54F
1330+ A54F              ;    call Limpia_Coordenadas_X
1331+ A54F
1332+ A54F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A54F
1334+ A54F 21 67 8C         ld hl,Coordenadas_X_Entidad
1335+ A552 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A555 CD 7B A5         call Guarda_coordenadas_X
1337+ A558
1338+ A558              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A558
1340+ A558 3A AF 89         ld a,(CX_Amadeus)
1341+ A55B CD 7B A5         call Guarda_coordenadas_X
1342+ A55E
1343+ A55E DD E5            push ix
1344+ A560 CD 8F A5         call Compara_coordenadas_X
1345+ A563 DD E1            pop ix
1346+ A565
1347+ A565 C0               ret nz
1348+ A566
1349+ A566 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A568 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A56B
1352+ A56B DD 7D            ld a,ixl
1353+ A56D C6 04            add 4
1354+ A56F DD 6F            ld ixl,a
1355+ A571
1356+ A571 DD 22 63 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A575
1358+ A575 21 62 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A578 CB D6            set 2,(hl)
1360+ A57A
1361+ A57A C9               ret
1362+ A57B
1363+ A57B               ; ----- ----- ----- ----- -----
1364+ A57B
1365+ A57B 77           Guarda_coordenadas_X ld (hl),a
1366+ A57C 3C               inc a
1367+ A57D 2C               inc l
1368+ A57E 77               ld (hl),a
1369+ A57F 3C               inc a
1370+ A580 2C               inc l
1371+ A581 77               ld (hl),a
1372+ A582 2C               inc l
1373+ A583 C9               ret
1374+ A584
1375+ A584 AF           Limpia_Coordenadas_X xor a
1376+ A585 06 06            ld b,6
1377+ A587 21 6A 8C         ld hl,Coordenadas_X_Amadeus
1378+ A58A 77           1 ld (hl),a
1379+ A58B 23               inc hl
1380+ A58C 10 FC            djnz 1B
1381+ A58E C9               ret
1382+ A58F
1383+ A58F              ; ----- ----- ----- ----- -----
1384+ A58F
1385+ A58F              Compara_coordenadas_X
1386+ A58F
1387+ A58F DD 21 67 8C      ld ix,Coordenadas_X_Entidad
1388+ A593 DD 7E 00         ld a,(ix+0)
1389+ A596 CD A4 A5         call Comparando
1390+ A599 C8               ret z
1391+ A59A
1392+ A59A 3C               inc a
1393+ A59B CD B3 A5         call Comparando_1
1394+ A59E C8               ret z
1395+ A59F
1396+ A59F 3C               inc a
1397+ A5A0 CD B3 A5         call Comparando_1
1398+ A5A3 C9               ret
1399+ A5A4
1400+ A5A4              ; ----- ----- ----- ----- -----
1401+ A5A4              ;
1402+ A5A4              ;   4/12/23
1403+ A5A4              ;
1404+ A5A4              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A5A4
1406+ A5A4              Comparando
1407+ A5A4
1408+ A5A4 DD 2C            inc ixl
1409+ A5A6 DD 2C            inc ixl
1410+ A5A8 DD 2C            inc ixl
1411+ A5AA
1412+ A5AA DD 46 00         ld b,(ix+0)
1413+ A5AD DD 4E 01         ld c,(ix+1)
1414+ A5B0 DD 56 02         ld d,(ix+2)
1415+ A5B3
1416+ A5B3 B8           Comparando_1 cp b
1417+ A5B4 C8               ret z
1418+ A5B5 B9               cp c
1419+ A5B6 C8               ret z
1420+ A5B7 BA               cp d
1421+ A5B8 C9               ret
1422+ A5B9
1423+ A5B9              ; -----------------------------------------------------------------------
1424+ A5B9              ;
1425+ A5B9              ;   04/7/24
1426+ A5B9              ;
1427+ A5B9
1428+ A5B9              Detecta_colision_nave_entidad
1429+ A5B9
1430+ A5B9              ; Exclusiones:
1431+ A5B9
1432+ A5B9              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A5B9
1434+ A5B9 21 62 8C     	ld hl,Impacto2
1435+ A5BC CB 56        	bit 2,(hl)
1436+ A5BE C8           	ret z
1437+ A5BF
1438+ A5BF              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A5BF
1440+ A5BF 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A5C2 CD 93 91         call Extrae_address
1442+ A5C5 54               ld d,h
1443+ A5C6 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A5C7
1445+ A5C7 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A5CA 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A5CC FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A5CF
1449+ A5CF C5           1 push bc
1450+ A5D0 06 03            ld b,3
1451+ A5D2 E5               push hl
1452+ A5D3
1453+ A5D3              ; .db
1454+ A5D3
1455+ A5D3 1A           3 ld a,(de)
1456+ A5D4 A7               and a
1457+ A5D5 20 03            jr nz,4F
1458+ A5D7
1459+ A5D7 2C               inc l
1460+ A5D8 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A5DA
1462+ A5DA ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A5DC 28 04            jr z,2F
1464+ A5DE
1465+ A5DE              ; Impacto.
1466+ A5DE FD 2D            dec iyl
1467+ A5E0 28 22            jr z,5F
1468+ A5E2
1469+ A5E2 1C           2 inc e
1470+ A5E3 10 EE            djnz 3B
1471+ A5E5
1472+ A5E5 E1               pop hl
1473+ A5E6
1474+ A5E6              ; Hay salto de línea en el puntero de impresión ???
1475+ A5E6
1476+ A5E6 7C               ld a,h
1477+ A5E7 D6 57            sub $57
1478+ A5E9 20 0A            jr nz,6F
1479+ A5EB
1480+ A5EB              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A5EB
1482+ A5EB 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A5EE 3E 20            ld a,$20
1484+ A5F0 A7               and a
1485+ A5F1 85               add l
1486+ A5F2 6F               ld l,a
1487+ A5F3 18 01            jr 7F
1488+ A5F5
1489+ A5F5 24           6 inc h
1490+ A5F6
1491+ A5F6 C1           7 pop bc
1492+ A5F7 10 D6            djnz 1B
1493+ A5F9
1494+ A5F9              ;   Fin de la comparativa.
1495+ A5F9
1496+ A5F9              ;   NO HAY COLISIÓN !!!!!.
1497+ A5F9              ;
1498+ A5F9              ;   .db (Impacto) de Amadeus a "0".
1499+ A5F9              ;   RES el bit2 de (Impacto2).
1500+ A5F9              ;
1501+ A5F9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A5F9              ;   Lo colocamos a "0".
1503+ A5F9
1504+ A5F9 21 62 8C         ld hl,Impacto2
1505+ A5FC CB 96            res 2,(hl)
1506+ A5FE 2A 63 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A601 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A603 C9               ret
1509+ A604
1510+ A604              ;   COLISIÓN !!!!!.
1511+ A604              ;
1512+ A604              ;   .db (Impacto) de Amadeus a "1".
1513+ A604              ;   SET el bit3 de (Impacto2).
1514+ A604              ;
1515+ A604              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A604
1517+ A604 E1           5 pop hl
1518+ A605 C1               pop bc
1519+ A606
1520+ A606 21 B2 89         ld hl,Impacto_Amadeus
1521+ A609 36 01            ld (hl),1
1522+ A60B 21 62 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A60E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A610
1525+ A610 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A613 2A 63 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A616
1528+ A616 23               inc hl
1529+ A617 23               inc hl
1530+ A618 23               inc hl
1531+ A619
1532+ A619 73               ld (hl),e
1533+ A61A 23               inc hl
1534+ A61B 72               ld (hl),d
1535+ A61C
1536+ A61C              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A61C
1538+ A61C 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A61F 21 B5 89         ld hl,Pamm_Amadeus
1540+ A622
1541+ A622 73               ld (hl),e
1542+ A623 23               inc hl
1543+ A624 72               ld (hl),d
1544+ A625
1545+ A625 C9               ret
1546+ A626
1547+ A626
1548+ A626
# file closed: Disparo.asm
2343  A626
2344  A626              	SAVESNA "Pruebas.sna", START
2345  A626
2346  A626
2347  A626
2348  A626
# file closed: Banco_de_pruebas.asm
