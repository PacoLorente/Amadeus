# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E0 89     	call Frame
  15  A104
  16  A104 3A 13 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 BD 84        	defw Caja_1
  98+ 846A FA 84        	defw Caja_2
  99+ 846C 37 85        	defw Caja_3
 100+ 846E 74 85        	defw Caja_4
 101+ 8470 B1 85        	defw Caja_5
 102+ 8472 EE 85        	defw Caja_6
 103+ 8474 2B 86        	defw Caja_7
 104+ 8476 68 86        	defw Caja_8
 105+ 8478 A5 86        	defw Caja_9
 106+ 847A E2 86        	defw Caja_10
 107+ 847C              ;	...
 108+ 847C              ;	...
 109+ 847C              ;	+ entidades ...
 110+ 847C 00 00        	defw 0
 111+ 847E 00 00        	defw 0
 112+ 8480
 113+ 8480              ; ---------- ---------- ---------- ---------- ----------
 114+ 8480
 115+ 8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8482 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8484 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8489
 120+ 8489 05           	db %00000101									; (Attr).
 121+ 848A 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 848C 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 848E
 124+ 848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8492
 127+ 8492 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8494 04           	db 4 											; (Cuad_objeto).
 129+ 8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8499
 131+ 8499 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 849A
 133+ 849A 00 00        	db 0,0											; Variables_de_borrado
 134+ 849C 00 00        	defw 0											;	" " " " " " "
 135+ 849E 00 00        	defw 0											;	" " " " " " "
 136+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 84A4
 138+ 84A4 00 00        	db 0,0											; Variables_de_pintado
 139+ 84A6 00 00        	defw 0											;	" " " " " " "
 140+ 84A8 00 00        	defw 0											;	" " " " " " "
 141+ 84AA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 84AE
 143+ 84AE 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 84B1
 145+ 84B1 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 84B5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 84B8
 148+ 84B8 00           	db 0 											; (Columnas).
 149+ 84B9 00 00        	defw 0											; (Limite_horizontal).
 150+ 84BB 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 151+ 84BD
 152+ 84BD              ; ---------- ---------- ---------- ---------- ----------
 153+ 84BD
 154+ 84BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 84BF 00 00        	defw 0											; (Posicion_actual).
 156+ 84C1 00 00        	defw 0 											; (Puntero_objeto).
 157+ 84C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 84C6
 159+ 84C6 00           	db %00000000 									; (Attr).
 160+ 84C7
 161+ 84C7 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 84C9 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 84CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 84CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 84CF
 166+ 84CF 00 00        	defw 0											; (Posicion_inicio).
 167+ 84D1 00           	db 0											; (Cuad_objeto).
 168+ 84D2
 169+ 84D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 84D6
 171+ 84D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 84D7
 173+ 84D7 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 84D9 00 00        	defw 0											;	" " " " " " "
 175+ 84DB 00 00        	defw 0											;	" " " " " " "
 176+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 84E1
 178+ 84E1 00 00        	db 0,0											; Variables_de_pintado
 179+ 84E3 00 00        	defw 0											;	" " " " " " "
 180+ 84E5 00 00        	defw 0											;	" " " " " " "
 181+ 84E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 84EB
 183+ 84EB 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 84EE
 185+ 84EE 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 84F2 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 84F5
 188+ 84F5 00           	db 0 											; (Columnas).
 189+ 84F6 00 00        	defw 0											; (Limite_horizontal).
 190+ 84F8 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 191+ 84FA
 192+ 84FA              ; ---------- ---------- ---------- ---------- ----------
 193+ 84FA
 194+ 84FA 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 84FC 00 00        	defw 0											; (Posicion_actual).
 196+ 84FE 00 00        	defw 0 											; (Puntero_objeto).
 197+ 8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8503
 199+ 8503 00           	db %00000000 									; (Attr).
 200+ 8504
 201+ 8504 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8506 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 850C
 206+ 850C 00 00        	defw 0											; (Posicion_inicio).
 207+ 850E 00           	db 0											; (Cuad_objeto).
 208+ 850F
 209+ 850F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8513
 211+ 8513 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8514
 213+ 8514 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8516 00 00        	defw 0											;	" " " " " " "
 215+ 8518 00 00        	defw 0											;	" " " " " " "
 216+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 851E
 218+ 851E 00 00        	db 0,0											; Variables_de_pintado
 219+ 8520 00 00        	defw 0											;	" " " " " " "
 220+ 8522 00 00        	defw 0											;	" " " " " " "
 221+ 8524 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8528
 223+ 8528 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 852B
 225+ 852B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 852F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8532
 228+ 8532 00           	db 0 											; (Columnas).
 229+ 8533 00 00        	defw 0											; (Limite_horizontal).
 230+ 8535 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 231+ 8537
 232+ 8537              ; ---------- ---------- ---------- ---------- ----------
 233+ 8537
 234+ 8537 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8539 00 00        	defw 0											; (Posicion_actual).
 236+ 853B 00 00        	defw 0 											; (Puntero_objeto).
 237+ 853D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8540
 239+ 8540 00           	db %00000000 									; (Attr).
 240+ 8541
 241+ 8541 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8543 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8545 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8547 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8549
 246+ 8549 00 00        	defw 0											; (Posicion_inicio).
 247+ 854B 00           	db 0											; (Cuad_objeto).
 248+ 854C
 249+ 854C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8550
 251+ 8550 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8551
 253+ 8551 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8553 00 00        	defw 0											;	" " " " " " "
 255+ 8555 00 00        	defw 0											;	" " " " " " "
 256+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 855B
 258+ 855B 00 00        	db 0,0											; Variables_de_pintado
 259+ 855D 00 00        	defw 0											;	" " " " " " "
 260+ 855F 00 00        	defw 0											;	" " " " " " "
 261+ 8561 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8565
 263+ 8565 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8568
 265+ 8568 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 856C 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 856F
 268+ 856F 00           	db 0 											; (Columnas).
 269+ 8570 00 00        	defw 0											; (Limite_horizontal).
 270+ 8572 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 271+ 8574
 272+ 8574              ; ---------- ---------- ---------- ---------- ----------
 273+ 8574
 274+ 8574 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8576 00 00        	defw 0											; (Posicion_actual).
 276+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 277+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 857D
 279+ 857D 00           	db %00000000 									; (Attr).
 280+ 857E
 281+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8586
 286+ 8586 00 00        	defw 0											; (Posicion_inicio).
 287+ 8588 00           	db 0											; (Cuad_objeto).
 288+ 8589
 289+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 858D
 291+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 858E
 293+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8590 00 00        	defw 0											;	" " " " " " "
 295+ 8592 00 00        	defw 0											;	" " " " " " "
 296+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8598
 298+ 8598 00 00        	db 0,0											; Variables_de_pintado
 299+ 859A 00 00        	defw 0											;	" " " " " " "
 300+ 859C 00 00        	defw 0											;	" " " " " " "
 301+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 85A2
 303+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 85A5
 305+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85AC
 308+ 85AC 00           	db 0 											; (Columnas).
 309+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 85AF 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85B1
 312+ 85B1              ; ---------- ---------- ---------- ---------- ----------
 313+ 85B1
 314+ 85B1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 85B3 00 00        	defw 0											; (Posicion_actual).
 316+ 85B5 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85BA
 319+ 85BA 00           	db %00000000 									; (Attr).
 320+ 85BB
 321+ 85BB 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 85BD 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 85BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85C3
 326+ 85C3 00 00        	defw 0											; (Posicion_inicio).
 327+ 85C5 00           	db 0											; (Cuad_objeto).
 328+ 85C6
 329+ 85C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85CA
 331+ 85CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85CB
 333+ 85CB 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 85CD 00 00        	defw 0											;	" " " " " " "
 335+ 85CF 00 00        	defw 0											;	" " " " " " "
 336+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85D5
 338+ 85D5 00 00        	db 0,0											; Variables_de_pintado
 339+ 85D7 00 00        	defw 0											;	" " " " " " "
 340+ 85D9 00 00        	defw 0											;	" " " " " " "
 341+ 85DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85DF
 343+ 85DF 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85E2
 345+ 85E2 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85E6 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85E9
 348+ 85E9 00           	db 0 											; (Columnas).
 349+ 85EA 00 00        	defw 0											; (Limite_horizontal).
 350+ 85EC 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85EE
 352+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 353+ 85EE
 354+ 85EE 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 85F0 00 00        	defw 0											; (Posicion_actual).
 356+ 85F2 00 00        	defw 0 											; (Puntero_objeto).
 357+ 85F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 85F7
 359+ 85F7 00           	db %00000000 									; (Attr).
 360+ 85F8
 361+ 85F8 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 85FA 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 85FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8600
 366+ 8600 00 00        	defw 0											; (Posicion_inicio).
 367+ 8602 00           	db 0											; (Cuad_objeto).
 368+ 8603
 369+ 8603 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8607
 371+ 8607 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 8608
 373+ 8608 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 860A 00 00        	defw 0											;	" " " " " " "
 375+ 860C 00 00        	defw 0											;	" " " " " " "
 376+ 860E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8612
 378+ 8612 00 00        	db 0,0											; Variables_de_pintado
 379+ 8614 00 00        	defw 0											;	" " " " " " "
 380+ 8616 00 00        	defw 0											;	" " " " " " "
 381+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 861C
 383+ 861C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 861F
 385+ 861F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8623 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8626
 388+ 8626 00           	db 0 											; (Columnas).
 389+ 8627 00 00        	defw 0											; (Limite_horizontal).
 390+ 8629 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 391+ 862B
 392+ 862B              ; ---------- ---------- ---------- ---------- ----------
 393+ 862B
 394+ 862B 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 862D 00 00        	defw 0											; (Posicion_actual).
 396+ 862F 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8631 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8634
 399+ 8634 00           	db %00000000 									; (Attr).
 400+ 8635
 401+ 8635 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 8637 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 8639 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 863B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 863D
 406+ 863D 00 00        	defw 0											; (Posicion_inicio).
 407+ 863F 00           	db 0											; (Cuad_objeto).
 408+ 8640
 409+ 8640 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8644
 411+ 8644 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8645
 413+ 8645 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8647 00 00        	defw 0											;	" " " " " " "
 415+ 8649 00 00        	defw 0											;	" " " " " " "
 416+ 864B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 864F
 418+ 864F 00 00        	db 0,0											; Variables_de_pintado
 419+ 8651 00 00        	defw 0											;	" " " " " " "
 420+ 8653 00 00        	defw 0											;	" " " " " " "
 421+ 8655 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8659
 423+ 8659 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 865C
 425+ 865C 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8660 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8663
 428+ 8663 00           	db 0 											; (Columnas).
 429+ 8664 00 00        	defw 0											; (Limite_horizontal).
 430+ 8666 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8668
 432+ 8668              ; ---------- ---------- ---------- ---------- ----------
 433+ 8668
 434+ 8668 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 866A 00 00        	defw 0											; (Posicion_actual).
 436+ 866C 00 00        	defw 0 											; (Puntero_objeto).
 437+ 866E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8671
 439+ 8671 00           	db %00000000 									; (Attr).
 440+ 8672
 441+ 8672 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8674 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8676 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8678 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 867A
 446+ 867A 00 00        	defw 0											; (Posicion_inicio).
 447+ 867C 00           	db 0											; (Cuad_objeto).
 448+ 867D
 449+ 867D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8681
 451+ 8681 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8682
 453+ 8682 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8684 00 00        	defw 0											;	" " " " " " "
 455+ 8686 00 00        	defw 0											;	" " " " " " "
 456+ 8688 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 868C
 458+ 868C 00 00        	db 0,0											; Variables_de_pintado
 459+ 868E 00 00        	defw 0											;	" " " " " " "
 460+ 8690 00 00        	defw 0											;	" " " " " " "
 461+ 8692 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8696
 463+ 8696 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8699
 465+ 8699 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 869D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 86A0
 468+ 86A0 00           	db 0 											; (Columnas).
 469+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 470+ 86A3 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 471+ 86A5
 472+ 86A5              ; ---------- ---------- ---------- ---------- ----------
 473+ 86A5
 474+ 86A5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 86A7 00 00        	defw 0											; (Posicion_actual).
 476+ 86A9 00 00        	defw 0 											; (Puntero_objeto).
 477+ 86AB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 86AE
 479+ 86AE 00           	db %00000000 									; (Attr).
 480+ 86AF
 481+ 86AF 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 86B1 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 86B3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 86B7
 486+ 86B7 00 00        	defw 0											; (Posicion_inicio).
 487+ 86B9 00           	db 0											; (Cuad_objeto).
 488+ 86BA
 489+ 86BA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 86BE
 491+ 86BE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 86BF
 493+ 86BF 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 86C1 00 00        	defw 0											;	" " " " " " "
 495+ 86C3 00 00        	defw 0											;	" " " " " " "
 496+ 86C5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 86C9
 498+ 86C9 00 00        	db 0,0											; Variables_de_pintado
 499+ 86CB 00 00        	defw 0											;	" " " " " " "
 500+ 86CD 00 00        	defw 0											;	" " " " " " "
 501+ 86CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 86D3
 503+ 86D3 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 86D6
 505+ 86D6 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 86DA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 86DD
 508+ 86DD 00           	db 0 											; (Columnas).
 509+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 510+ 86E0 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 511+ 86E2
 512+ 86E2              ; ---------- ---------- ---------- ---------- ----------
 513+ 86E2
 514+ 86E2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 86E4 00 00        	defw 0											; (Posicion_actual).
 516+ 86E6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 86E8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 86EB
 519+ 86EB 00           	db %00000000 									; (Attr).
 520+ 86EC
 521+ 86EC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 86EE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 86F0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 86F2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 86F4
 526+ 86F4 00 00        	defw 0											; (Posicion_inicio).
 527+ 86F6 00           	db 0											; (Cuad_objeto).
 528+ 86F7
 529+ 86F7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 86FB
 531+ 86FB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 86FC
 533+ 86FC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 86FE 00 00        	defw 0											;	" " " " " " "
 535+ 8700 00 00        	defw 0											;	" " " " " " "
 536+ 8702 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 8706
 538+ 8706 00 00        	db 0,0											; Variables_de_pintado
 539+ 8708 00 00        	defw 0											;	" " " " " " "
 540+ 870A 00 00        	defw 0											;	" " " " " " "
 541+ 870C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8710
 543+ 8710 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8713
 545+ 8713 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 8717 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 871A
 548+ 871A 00           	db 0 											; (Columnas).
 549+ 871B 00 00        	defw 0											; (Limite_horizontal).
 550+ 871D 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 551+ 871F
 552+ 871F              ; -------------------------------------------------------------------------------------
 553+ 871F              ;
 554+ 871F              ;	20/05/23
 555+ 871F              ;
 556+ 871F              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 871F              ;
 558+ 871F              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 871F              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 871F              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 871F              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 871F
 563+ 871F              Indice_de_entidades
 564+ 871F
 565+ 871F 33 87        	defw Entidad_1
 566+ 8721 43 87        	defw Entidad_2
 567+ 8723 53 87        	defw Entidad_3
 568+ 8725 63 87        	defw Entidad_4
 569+ 8727 73 87        	defw Entidad_5
 570+ 8729 83 87        	defw Entidad_6
 571+ 872B 93 87        	defw Entidad_7
 572+ 872D A3 87        	defw Entidad_8
 573+ 872F B3 87        	defw Entidad_9
 574+ 8731 C3 87        	defw Entidad_10
 575+ 8733
 576+ 8733              ;	BADSAT, (Satélite malvado).
 577+ 8733
 578+ 8733 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 579+ 8735 04           	db %00000100									; (Attr).
 580+ 8736 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 581+ 8738 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 582+ 873A 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 583+ 873C 01           	db 1											; (Cuad_objeto).
 584+ 873D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 585+ 8741 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 586+ 8743
 587+ 8743 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 588+ 8745 02           	db %00000010									; (Attr).
 589+ 8746 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 590+ 8748 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 591+ 874A 5F 48        	defw $485f                                      ; (Posicion_inicio).
 592+ 874C 01           	db 1											; (Cuad_objeto).
 593+ 874D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 594+ 8751 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 595+ 8753
 596+ 8753 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 597+ 8755 04           	db %00000100									; (Attr).
 598+ 8756 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 599+ 8758 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 600+ 875A A0 47        	defw $47a0                                      ; (Posicion_inicio).
 601+ 875C 01           	db 1											; (Cuad_objeto).
 602+ 875D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 603+ 8761 17 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 604+ 8763
 605+ 8763 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 606+ 8765 01           	db %00000001									; (Attr).
 607+ 8766 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 608+ 8768 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 609+ 876A BF 47        	defw $47bf                                      ; (Posicion_inicio).
 610+ 876C 01           	db 1											; (Cuad_objeto).
 611+ 876D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 612+ 8771 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 613+ 8773
 614+ 8773 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 615+ 8775 01           	db %00000001									; (Attr).
 616+ 8776 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 8778 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 877A 07 40        	defw $4007                                      ; (Posicion_inicio).
 619+ 877C 01           	db 1											; (Cuad_objeto).
 620+ 877D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8781 19 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 622+ 8783
 623+ 8783 02 02        Entidad_6 db 2,2		                     		; (Filas) / (Columns).
 624+ 8785 04           	db %00000100									; (Attr).
 625+ 8786 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 8788 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 878A FF 48        	defw $48ff	                             	    ; (Posicion_inicio).
 628+ 878C 01           	db 1											; (Cuad_objeto).
 629+ 878D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 8791 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 631+ 8793
 632+ 8793 02 02        Entidad_7 db 2,2		                     		; (Filas) / (Columns).
 633+ 8795 02           	db %00000010									; (Attr).
 634+ 8796 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 635+ 8798 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 636+ 879A 7F 48        	defw $487f                                      ; (Posicion_inicio).
 637+ 879C 01           	db 1											; (Cuad_objeto).
 638+ 879D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 639+ 87A1 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 640+ 87A3
 641+ 87A3 02 02        Entidad_8 db 2,2		                     		; (Filas) / (Columns).
 642+ 87A5 04           	db %00000100									; (Attr).
 643+ 87A6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 644+ 87A8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 645+ 87AA E0 48        	defw $48e0                                      ; (Posicion_inicio).
 646+ 87AC 01           	db 1											; (Cuad_objeto).
 647+ 87AD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 648+ 87B1 17 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 649+ 87B3
 650+ 87B3 02 02        Entidad_9 db 2,2		                     		; (Filas) / (Columns).
 651+ 87B5 01           	db %00000001									; (Attr).
 652+ 87B6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 653+ 87B8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 654+ 87BA 3F 50        	defw $503f                                      ; (Posicion_inicio).
 655+ 87BC 01           	db 1											; (Cuad_objeto).
 656+ 87BD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 657+ 87C1 23 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 658+ 87C3
 659+ 87C3 02 02        Entidad_10 db 2,2		                     		; (Filas) / (Columns).
 660+ 87C5 01           	db %00000001									; (Attr).
 661+ 87C6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 662+ 87C8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 663+ 87CA 13 40        	defw $4013                                      ; (Posicion_inicio).
 664+ 87CC 01           	db 1											; (Cuad_objeto).
 665+ 87CD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 666+ 87D1 19 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  87D3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87D3              ; 13/05/23
   2+ 87D3
   3+ 87D3              Indice_de_niveles
   4+ 87D3
   5+ 87D3 E1 87        	defw Nivel_1
   6+ 87D5 EB 87        	defw Nivel_2
   7+ 87D7 F8 87        	defw Nivel_3
   8+ 87D9 08 88        	defw Nivel_4
   9+ 87DB 1A 88        	defw Nivel_5
  10+ 87DD
  11+ 87DD              ;	...
  12+ 87DD              ;	...
  13+ 87DD              ;	+ Niveles ...
  14+ 87DD
  15+ 87DD 00 00        	defw 0
  16+ 87DF 00 00        	defw 0
  17+ 87E1
  18+ 87E1 09           Nivel_1 db 9	                                ; Nº de entidades.
  19+ 87E2 01 02 03 04  	db 1,2,3,4,5,6,7,8,9						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 87E6 05 06 07 08
  19+ 87EA 09
  20+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 87F0 01 02
  22+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87F6 01 02
  23+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 87FD 01
  25+ 87FE 03 01 01 01  	db 3,1,1,1,1
  25+ 8802 01
  26+ 8803 03 01 01 01  	db 3,1,1,1,1
  26+ 8807 01
  27+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  28+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 880D 01
  29+ 880E 04 01 01 01  	db 4,1,1,1,1
  29+ 8812 01
  30+ 8813 04 01 01 01  	db 4,1,1,1,1
  30+ 8817 01
  31+ 8818 02 03        	db 2,3
  32+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  33+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 881F 01
  34+ 8820 05 01 01 01  	db 5,1,1,1,1
  34+ 8824 01
  35+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8829 01
  36+ 882A 05 01 01 01  	db 5,1,1,1,1
  36+ 882E 01
  37+ 882F
  38+ 882F              ;---------------------------------------------------------------------------------------------------------------
  39+ 882F              ;
  40+ 882F              ;   21/5/23
  41+ 882F              ;
  42+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 882F              ;	_en la caja DRAW correspondiente.
  46+ 882F              ;
  47+ 882F              ;	MODIFICA: HL,DE y A.
  48+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 882F
  50+ 882F              Inicializa_Punteros_de_nivel
  51+ 882F
  52+ 882F 21 D3 87     	ld hl,Indice_de_niveles
  53+ 8832 22 47 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8835 CD F0 8B     	call Extrae_address
  55+ 8838 7E           	ld a,(hl)
  56+ 8839 32 1A 89     	ld (Numero_de_entidades),a
  57+ 883C 23           	inc hl
  58+ 883D 22 49 89     	ld (Datos_de_nivel),hl
  59+ 8840 C9           	ret
  60+ 8841
  61+ 8841              ;---------------------------------------------------------------------------------------------------------------
  62+ 8841              ;
  63+ 8841              ;   13/5/23
  64+ 8841              ;
  65+ 8841              ;	Destruye A,BC,HL,DE
  66+ 8841
  67+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8841              ;	_del juego.
  69+ 8841
  70+ 8841              Prepara_cajas
  71+ 8841
  72+ 8841              ; Preparamos los punteros de las cajas.
  73+ 8841
  74+ 8841 21 68 84     	ld hl,Indice_de_cajas
  75+ 8844 CD F0 8B     	call Extrae_address
  76+ 8847 CD 84 88     	call Avanza_caja
  77+ 884A
  78+ 884A CD BF 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 884D
  80+ 884D 2A 49 89     	ld hl,(Datos_de_nivel)
  81+ 8850
  82+ 8850              ; HL está en los datos del nivel correspondiente.
  83+ 8850              ; B actuará como contador de cajas.
  84+ 8850
  85+ 8850 C5           1 push bc
  86+ 8851
  87+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8852 CD 75 88     	call PreparaBC
  89+ 8855
  90+ 8855 21 1F 87     	ld hl,Indice_de_entidades
  91+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  92+ 885B 22 20 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 885E
  94+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  95+ 8861
  96+ 8861 2A 18 89     	ld hl,(Indice_restore_caja)
  97+ 8864 CD F0 8B     	call Extrae_address
  98+ 8867 CD 84 88     	call Avanza_caja
  99+ 886A
 100+ 886A 2A 49 89     	ld hl,(Datos_de_nivel)
 101+ 886D 23           	inc hl
 102+ 886E 22 49 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8871
 104+ 8871 C1           	pop bc
 105+ 8872 10 DC        	djnz 1B
 106+ 8874 C9           	ret
 107+ 8875
 108+ 8875 CB 27        PreparaBC sla a
 109+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8879 4F           	ld c,a
 111+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 887C C9           	ret
 113+ 887D
 114+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 887E ED 4A        	adc hl,bc
 116+ 8880 CD F0 8B     	call Extrae_address
 117+ 8883 C9           	ret
 118+ 8884
 119+ 8884 22 14 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8887 13           	inc de
 121+ 8888 13           	inc de
 122+ 8889 EB           	ex de,hl
 123+ 888A 22 18 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 888D C9           	ret
 125+ 888E
 126+ 888E              Datos_de_entidad_a_caja
 127+ 888E
 128+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 888E
 130+ 888E ED 5B 14 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD B9 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD B9 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD B9 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8 C9           	ret
 154+ 88B9
 155+ 88B9 EB           Situa_DE ex de,hl
 156+ 88BA A7           	and a
 157+ 88BB ED 4A        	adc hl,bc
 158+ 88BD EB           	ex de,hl
 159+ 88BE C9           	ret
 160+ 88BF
 161+ 88BF              ;---------------------------------------------------------------------------------------------------------------
 162+ 88BF              ;
 163+ 88BF              ;	21/5/23
 164+ 88BF              ;
 165+ 88BF              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 88BF              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 88BF              ;
 168+ 88BF              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 88BF              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 88BF              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 88BF              ;
 172+ 88BF              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 88BF              ;	MODIFICA: A y B.
 174+ 88BF              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 88BF
 176+ 88BF              Admin_num_entidades
 177+ 88BF
 178+ 88BF              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 88BF
 180+ 88BF 3A 1A 89     	ld a,(Numero_de_entidades)
 181+ 88C2 A7           	and a
 182+ 88C3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 88C3 28 FE        	jr z,$
 184+ 88C5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 88C5 FE 0A        	cp 10
 186+ 88C7 38 08        	jr c,1F
 187+ 88C9
 188+ 88C9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 88C9              ; Actualizamos variables.
 190+ 88C9
 191+ 88C9 3E 0A        	ld a,10
 192+ 88CB 32 1B 89     	ld (Numero_parcial_de_entidades),a
 193+ 88CE 47           	ld b,a
 194+ 88CF 18 04        	jr 2F
 195+ 88D1
 196+ 88D1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 197+ 88D1              ; (Numero_de_entidades)="0".
 198+ 88D1
 199+ 88D1 32 1B 89     1 ld (Numero_parcial_de_entidades),a
 200+ 88D4 47           	ld b,a
 201+ 88D5 C9           2 ret
# file closed: Niveles.asm
  25  88D6
  26  88D6              ; ******************************************************************************************************************************************************************************************
  27  88D6              ; Constantes.
  28  88D6              ; ******************************************************************************************************************************************************************************************
  29  88D6              ;
  30  88D6              ; 25/05/23
  31  88D6              ;
  32  88D6              ; Constantes generales.
  33  88D6              ;
  34  88D6
  35  88D6              Sprite_vacio equ $f000
  36  88D6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  88D6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  88D6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  88D6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  88D6
  41  88D6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  88D6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  88D6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  88D6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  88D6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  88D6              ;                               				        ; De momento situamos este almacén en $7060.
  47  88D6
  48  88D6              ; ******************************************************************************************************************************************************************************************
  49  88D6              ; Variables.
  50  88D6              ; ******************************************************************************************************************************************************************************************
  51  88D6              ;
  52  88D6              ; 10/11/22
  53  88D6              ;
  54  88D6              ; Variables de DRAW. (Motor principal).
  55  88D6              ;
  56  88D6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  88D6
  58  88D6 00           Filas db 0												; Filas. [DRAW]
  59  88D7 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  88D8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  88DA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  88DC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  88DD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  88DE
  65  88DE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  88DE
  67  88DE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  88DF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  88DF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  88DF 00           Attr db 0												; Atributos de la entidad:
  71  88E0
  72  88E0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  88E0              ;
  74  88E0              ;	COLORES: 0 ..... NEGRO
  75  88E0              ;    		 1 ..... AZUL
  76  88E0              ; 			 2 ..... ROJO
  77  88E0              ;			 3 ..... MAGENTA
  78  88E0              ; 			 4 ..... VERDE
  79  88E0              ; 			 5 ..... CIAN
  80  88E0              ;			 6 ..... AMARILLO
  81  88E0              ; 			 7 ..... BLANCO
  82  88E0
  83  88E0 00 00        Indice_Sprite_der defw 0
  84  88E2 00 00        Indice_Sprite_izq defw 0
  85  88E4 00 00        Puntero_DESPLZ_der defw 0
  86  88E6 00 00        Puntero_DESPLZ_izq defw 0
  87  88E8
  88  88E8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  88EA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  88EB
  91  88EB              ; Variables de objeto. (Características).
  92  88EB
  93  88EB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  88EC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  88ED 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  88EE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  88EF
  98  88EF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  88F0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  88F0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  88F0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  88F2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  88F4 00 00        	defw 0
 104  88F6 00 00 00 00  	db 0,0,0,0
 105  88FA
 106  88FA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  88FC 00 00        	defw 0
 108  88FE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  8900 00 00 00 00  	db 0,0,0,0
 110  8904
 111  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 112  8904
 113  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 114  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 115  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 116  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 117  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 118  8905              ;
 119  8905              ; 														DESCRIPCIÖN:
 120  8905              ;
 121  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 122  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 123  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 124  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 125  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 126  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 127  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 128  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 129  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 130  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 131  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 132  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 133  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 134  8905              ;
 135  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 136  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 137  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 138  8905
 139  8905 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 140  8906
 141  8906              ; Movimiento.
 142  8906
 143  8906 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 144  8907 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 145  8909 00 00        Puntero_mov defw 0
 146  890B 00           Contador_db_mov db 0
 147  890C 00           Incrementa_puntero db 0
 148  890D 00           Repetimos_db db 0
 149  890E
 150  890E              ; Variables de funcionamiento. [DRAW].
 151  890E
 152  890E 00           Columnas db 0
 153  890F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 154  8911              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  8911 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8912
 157  8912              ; variables de control general.
 158  8912
 159  8912 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 160  8913
 161  8913              ; 61 Bytes por entidad.
 162  8913              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 163  8913              ;					         		---------;      ;---------
 164  8913
 165  8913
 166  8913              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 167  8913
 168  8913 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 169  8914
 170  8914              ;														DESCRIPCIÓN:
 171  8914              ;
 172  8914              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 173  8914              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 174  8914              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 175  8914              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 176  8914              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 177  8914              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 178  8914              ;														BIT 3, .............
 179  8914              ;														BIT 4, .............
 180  8914              ;														BIT 5, .............
 181  8914
 182  8914              ; Gestión de ENTIDADES y CAJAS.
 183  8914
 184  8914              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 185  8914 00 00        Puntero_store_caja defw 0
 186  8916 00 00        Puntero_restore_caja defw 0
 187  8918 00 00        Indice_restore_caja defw 0
 188  891A 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 189  891B 00           Numero_parcial_de_entidades db 0
 190  891C 00           Entidades_en_curso db 0									; ..... ..... .....
 191  891D 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 192  891E              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 193  891E              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 194  891E              ;														; _ (Numero_de_malotes)="0".
 195  891E 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 196  8920 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 197  8922              ;														; _ puntero (Indice_entidades).
 198  8922
 199  8922
 200  8922              ;---------------------------------------------------------------------------------------------------------------
 201  8922              ;
 202  8922              ; Sirven para PINTAR.
 203  8922
 204  8922 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 205  8924              ;														; _variable para almacenar lo posición del puntero_
 206  8924              ; 														; _de pila, SP.
 207  8924 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 208  8926              ;														; La utiliza la rutina [Extrae_foto_registros].
 209  8926 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 210  8928              ;														; _el snapshot de los registros de la siguiente entidad.
 211  8928              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 212  8928 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 213  892A              ;														; _el snapshot de los registros del siguiente disparo.
 214  892A              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 215  892A
 216  892A              ;---------------------------------------------------------------------------------------------------------------
 217  892A
 218  892A              ; Gestión de Disparos.
 219  892A
 220  892A 00           Numero_de_disparotes db 0
 221  892B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 222  892D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 223  892F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 224  8930              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 225  8930              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 226  8930 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 227  8932              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 228  8932              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 229  8932              ;														; _produzca colisión.
 230  8932 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 231  8934              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 232  8934 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 233  8937              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 234  8937 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 235  893A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 236  893A
 237  893A              ;---------------------------------------------------------------------------------------------------------------
 238  893A
 239  893A              ; Relojes y temporizaciones.
 240  893A
 241  893A 00           Contador_de_frames db 0
 242  893B 00           Secundero db 0
 243  893C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 244  893D              ;														; Repite la oleada de entidades.
 245  893D 01           Habilita_disparo_Amadeus db 1
 246  893E 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 247  893F 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 248  8940
 249  8940 01           Habilita_disparo_entidad db 1
 250  8941 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 251  8942 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 252  8943
 253  8943              ;---------------------------------------------------------------------------------------------------------------
 254  8943
 255  8943              ; Gestión de FRAMES.
 256  8943
 257  8943 00           Switch db 0
 258  8944
 259  8944              ; Variables de Raster y localización en pantalla.
 260  8944
 261  8944 00 FF        Temp_Raster defw $ff00
 262  8946
 263  8946              ;---------------------------------------------------------------------------------------------------------------
 264  8946
 265  8946              ; Gestión de NIVELES.
 266  8946
 267  8946 00           Nivel db 0												 ; Nivel actual del juego.
 268  8947 00 00        Puntero_indice_NIVELES defw 0
 269  8949 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 270  894B              ; 														 ; _ que definen el NIVEL.
 271  894B
 272  894B
 273  894B              ; Y todo comienza aquí .....
 274  894B              ;
 275  894B              ; Rutina principal *************************************************************************************************************************************************************************
 276  894B              ;
 277  894B              ;	14/11/22
 278  894B
 279  894B              START
 280  894B
 281  894B 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 282  894E 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 283  8950 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 284  8952 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 285  8954 F3           	DI
 286  8955
 287  8955 3E 07        	ld a,%00000111
 288  8957 CD 1F 97     	call Cls
 289  895A
 290  895A              ;	call Pinta_marco
 291  895A
 292  895A CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 293  895D CD C9 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 294  8960
 295  8960 CD 41 88     4 call Prepara_cajas
 296  8963
 297  8963 CD 9C 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 298  8966              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 299  8966 CD 79 8C     	call Restore_entidad
 300  8969
 301  8969 21 1B 89     	ld hl,Numero_parcial_de_entidades
 302  896C 46           	ld b,(hl)
 303  896D 04           	inc b
 304  896E 05           	dec b
 305  896F 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 306  8971
 307  8971              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 308  8971              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 309  8971              ;	Pintamos el resto de entidades:
 310  8971
 311  8971              ;	INICIA ENTIDADES !!!!!
 312  8971
 313  8971 C5           1 push bc  												; Guardo el contador de entidades.
 314  8972 CD F6 8B     	call Inicia_Puntero_objeto
 315  8975 CD 33 97     	call Recompone_posicion_inicio
 316  8978 CD 6F 91     	call Draw
 317  897B CD A0 7F     	call Guarda_foto_registros
 318  897E CD 3E 8C      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 319  8981 C1           	pop bc
 320  8982 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 321  8984
 322  8984              ;	call Pinta_marco
 323  8984
 324  8984              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 325  8984
 326  8984 3A 13 89     	ld a,(Ctrl_1)
 327  8987 CB 5F        	bit 3,a
 328  8989 20 18        	jr nz,5F											; Loop
 329  898B
 330  898B              ; 	INICIA AMADEUS !!!!!
 331  898B
 332  898B CD A0 8C     3 call Restore_Amadeus
 333  898E CD F6 8B     	call Inicia_Puntero_objeto
 334  8991 CD 6F 91     	call Draw
 335  8994 CD A0 7F     	call Guarda_foto_registros
 336  8997 11 80 84     	ld de,Amadeus_db
 337  899A CD B2 8C     	call Store_Amadeus
 338  899D
 339  899D              ; 	INICIA DISPAROS !!!!!
 340  899D
 341  899D CD B2 8B     	call Inicia_Puntero_Disparo_Entidades
 342  89A0 CD B9 8B     	call Inicia_Puntero_Disparo_Amadeus
 343  89A3
 344  89A3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 345  89A3
 346  89A3 CD 9C 8B     5 call Inicia_punteros_de_cajas
 347  89A6 CD 79 8C     	call Restore_entidad
 348  89A9
 349  89A9 3A 13 89     	ld a,(Ctrl_1)
 350  89AC CB 5F        	bit 3,a
 351  89AE 28 0A        	jr z,6F
 352  89B0
 353  89B0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 354  89B0
 355  89B0 21 13 89     	ld hl,Ctrl_1
 356  89B3 CB 9E        	res 3,(hl)
 357  89B5 CD C0 8B     	call Calcula_numero_de_malotes
 358  89B8 18 07        	jr 7F
 359  89BA
 360  89BA              ; ----------
 361  89BA
 362  89BA 3A 1B 89     6 ld a,(Numero_parcial_de_entidades)
 363  89BD 3C           	inc a
 364  89BE 32 1D 89     	ld (Numero_de_malotes),a
 365  89C1
 366  89C1 AF           7 xor a
 367  89C2 FB           2 ei
 368  89C3 28 FD        	jr z,2B
 369  89C5
 370  89C5 3A 3B 89     	ld a,(Secundero)
 371  89C8 47           	ld b,a
 372  89C9 3A 3C 89     	ld a,(Activa_recarga_cajas)
 373  89CC B8           	cp b
 374  89CD 28 08        	jr z,8F
 375  89CF
 376  89CF 21 13 89     	ld hl,Ctrl_1
 377  89D2 CB E6        	set 4,(hl)
 378  89D4 AF           	xor a
 379  89D5 18 EB        	jr 2B
 380  89D7
 381  89D7 21 13 89     8 ld hl,Ctrl_1
 382  89DA CB A6        	res 4,(hl)
 383  89DC F3           	di
 384  89DD
 385  89DD C3 60 89     	jp 4B
 386  89E0
 387  89E0              ; -----------------------------------------------------------------------------------
 388  89E0
 389  89E0              Frame
 390  89E0
 391  89E0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 392  89E0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 393  89E0
 394  89E0              ; PINTAMOS.
 395  89E0
 396  89E0 3E 02            ld a,2
 397  89E2 D3 FE            out ($fe),a
 398  89E4 CD 73 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 399  89E7 CD AC 94     	call Extrae_foto_disparos
 400  89EA 3E 01            ld a,1
 401  89EC D3 FE            out ($fe),a
 402  89EE
 403  89EE              ; ----------------------------------------------------------------------
 404  89EE
 405  89EE              ; RELOJES.
 406  89EE
 407  89EE 21 3A 89     	ld hl,Contador_de_frames
 408  89F1 34           	inc (hl)											; 0 - 255
 409  89F2
 410  89F2 3E 3C        	ld a,60
 411  89F4 BE           	cp (hl)
 412  89F5 20 22        	jr nz,13F
 413  89F7
 414  89F7 36 00        	ld (hl),0
 415  89F9
 416  89F9 21 3B 89     	ld hl,Secundero
 417  89FC 34           	inc (hl)
 418  89FD
 419  89FD 7E           	ld a,(hl)
 420  89FE E6 01        	and %00000001
 421  8A00 20 10        	jr nz,20F
 422  8A02
 423  8A02 3A 1B 89     	ld a,(Numero_parcial_de_entidades)
 424  8A05 47           	ld b,a
 425  8A06 3A 1C 89     	ld a,(Entidades_en_curso)
 426  8A09 B8           	cp b
 427  8A0A 28 06        	jr z,20F
 428  8A0C 30 04        	jr nc,20F
 429  8A0E
 430  8A0E 3C           	inc a
 431  8A0F 32 1C 89     	ld (Entidades_en_curso),a
 432  8A12
 433  8A12 3E 3C        20 ld a,60
 434  8A14 BE           	cp (hl)
 435  8A15 20 02        	jr nz,13F
 436  8A17
 437  8A17 36 00        	ld (hl),0
 438  8A19
 439  8A19 21 3D 89     13 ld hl,Habilita_disparo_Amadeus
 440  8A1C 11 3F 89     	ld de,Temporiza_disparo_Amadeus
 441  8A1F CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 442  8A22
 443  8A22 21 40 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 444  8A25 11 42 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 445  8A28 CD D5 7F     	call Habilita_disparos
 446  8A2B
 447  8A2B              ; COLISIONES.
 448  8A2B
 449  8A2B CD 09 91     	call Selector_de_impactos
 450  8A2E
 451  8A2E              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 452  8A2E              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 453  8A2E              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 454  8A2E
 455  8A2E AF           	xor a
 456  8A2F 32 2F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 457  8A32
 458  8A32 CD 9C 8B     	call Inicia_punteros_de_cajas
 459  8A35 CD 79 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 460  8A38              ; 														; _ en DRAW.
 461  8A38 3A D6 88     	ld a,(Filas)
 462  8A3B A7           	and a
 463  8A3C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 464  8A3E CD 8B 8C     	call Incrementa_punteros_de_cajas
 465  8A41 18 F2        	jr 12B
 466  8A43
 467  8A43              ; ---------------------------------------------------------------------------------------
 468  8A43
 469  8A43 CD 87 8F     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 470  8A46 21 00 70     	ld hl,Album_de_fotos
 471  8A49 22 26 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 472  8A4C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 473  8A4C 3A 1B 89     	ld a,(Numero_parcial_de_entidades)
 474  8A4F 47               ld b,a
 475  8A50 A7           	and a
 476  8A51 20 16        	jr nz,2F
 477  8A53
 478  8A53 21 13 89     	ld hl,Ctrl_1
 479  8A56 CB 66        	bit 4,(hl)
 480  8A58 C2 D1 8A     	jp nz,4F
 481  8A5B
 482  8A5B 21 13 89     	ld hl,Ctrl_1
 483  8A5E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 484  8A60 3A 3B 89     	ld a,(Secundero)
 485  8A63 3C           	inc a
 486  8A64 32 3C 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 487  8A67
 488  8A67 18 68        	jr 4F
 489  8A69
 490  8A69              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 491  8A69
 492  8A69              ; Código que ejecutamos con cada entidad:
 493  8A69
 494  8A69              ; Impacto ???
 495  8A69
 496  8A69 3A 1C 89     2 ld a,(Entidades_en_curso)
 497  8A6C A7           	and a
 498  8A6D 28 62        	jr z,4F
 499  8A6F 47           	ld b,a
 500  8A70
 501  8A70 C5           15 push bc 												; Nº de entidades en curso.
 502  8A71
 503  8A71 3A EF 88     	ld a,(Impacto)
 504  8A74 A7           	and a
 505  8A75 28 14        	jr z,8F
 506  8A77
 507  8A77              ; Hay Impacto en esta entidad.
 508  8A77
 509  8A77 CD 53 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 510  8A7A CD BB 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 511  8A7D
 512  8A7D              ; -----
 513  8A7D
 514  8A7D 21 1B 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 515  8A80 35           	dec (hl)
 516  8A81 21 1C 89     	ld hl,Entidades_en_curso
 517  8A84 35           	dec (hl)
 518  8A85 21 1A 89     	ld hl,Numero_de_entidades
 519  8A88 35           	dec (hl)
 520  8A89 18 27        	jr 7F
 521  8A8B
 522  8A8B              ; -----
 523  8A8B
 524  8A8B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 525  8A8B              ; _con las coordenadas de la entidad almacenada en DRAW.
 526  8A8B
 527  8A8B 3A 13 89     8 ld a,(Ctrl_1)
 528  8A8E CB 57        	bit 2,a
 529  8A90 28 20        	jr z,7F
 530  8A92
 531  8A92 2A 32 89     	ld hl,(Coordenadas_disparo_certero)
 532  8A95 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 533  8A96              ;														; E contiene la coordenada_X del disparo.
 534  8A96 2A DC 88     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 535  8A99              ;														; H Coordenado_y de la entidad.
 536  8A99 A7           	and a
 537  8A9A ED 52        	sbc hl,de
 538  8A9C
 539  8A9C CD 40 91     	call Determina_resultado_comparativa
 540  8A9F 04           	inc b
 541  8AA0 05           	dec b
 542  8AA1
 543  8AA1              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 544  8AA1              ;	jr z,$
 545  8AA1              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 546  8AA1
 547  8AA1 28 0F        	jr z,7F
 548  8AA3
 549  8AA3              ; ----- ----- -----
 550  8AA3
 551  8AA3 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 552  8AA5 32 EF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 553  8AA8 21 13 89     	ld hl,Ctrl_1
 554  8AAB CB 96        	res 2,(hl)
 555  8AAD 21 32 89     	ld hl,Coordenadas_disparo_certero
 556  8AB0 36 00        	ld (hl),0
 557  8AB2
 558  8AB2
 559  8AB2 CD 04 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 560  8AB5
 561  8AB5 3A 04 89     	ld a,(Ctrl_0)
 562  8AB8 CB 67        	bit 4,a
 563  8ABA 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 564  8ABC
 565  8ABC              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 566  8ABC              ; [[[
 567  8ABC CD 14 8D     	call Detecta_disparo_entidad
 568  8ABF              ; ]]]
 569  8ABF CD 63 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 570  8AC2
 571  8AC2 21 04 89     	ld hl,Ctrl_0
 572  8AC5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 573  8AC7 AF           	xor a
 574  8AC8 32 05 89     	ld (Obj_dibujado),a
 575  8ACB
 576  8ACB CD 3E 8C     6 call Store_Restore_cajas
 577  8ACE
 578  8ACE C1           	pop bc
 579  8ACF 10 9F        	djnz 15B
 580  8AD1
 581  8AD1              ; Tras la gestión de las entidades, ... AMADEUS.
 582  8AD1
 583  8AD1 CD A0 8C     4 call Restore_Amadeus
 584  8AD4
 585  8AD4 3A EF 88     	ld a,(Impacto)
 586  8AD7 A7           	and a
 587  8AD8 20 FE        	jr nz,$
 588  8ADA
 589  8ADA              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 590  8ADA
 591  8ADA CD 34 8B     	call Mov_Amadeus
 592  8ADD
 593  8ADD 3A 04 89     	ld a,(Ctrl_0)
 594  8AE0 CB 67        	bit 4,a
 595  8AE2 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 596  8AE4
 597  8AE4 CD 63 8B     	call Guarda_foto_entidad_a_pintar
 598  8AE7
 599  8AE7 21 04 89     3 ld hl,Ctrl_0
 600  8AEA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 601  8AEC AF           	xor a
 602  8AED 32 05 89     	ld (Obj_dibujado),a
 603  8AF0
 604  8AF0 11 80 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 605  8AF3 CD B2 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 606  8AF6
 607  8AF6 CD A5 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 608  8AF9
 609  8AF9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 610  8AF9
 611  8AF9 CD D8 8B     	call Calcula_numero_de_disparotes
 612  8AFC CD C0 8B     9 call Calcula_numero_de_malotes
 613  8AFF
 614  8AFF 3E 04        	ld a,4
 615  8B01 D3 FE        	out ($fe),a
 616  8B03
 617  8B03 C9           	ret
 618  8B04
 619  8B04              ; --------------------------------------------------------------------------------------------------------------
 620  8B04              ;
 621  8B04              ;	27/03/23
 622  8B04
 623  8B04              Mov_obj
 624  8B04
 625  8B04              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 626  8B04
 627  8B04 AF           	xor a
 628  8B05 32 05 89     	ld (Obj_dibujado),a
 629  8B08 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 630  8B0B              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 631  8B0B              ; 														; _de la entidad.
 632  8B0B CD 6D 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 633  8B0E              ;														; Obj_dibujado="0".
 634  8B0E              ; Movemos Entidades malignas.
 635  8B0E
 636  8B0E 21 07 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 637  8B11 34           	inc (hl)
 638  8B12 35           	dec (hl)                                            ; Salimos de la rutina.
 639  8B13 C8           	ret z
 640  8B14
 641  8B14 CD 27 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 642  8B17
 643  8B17 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 644  8B1A CB 67        	bit 4,a
 645  8B1C C8           	ret z
 646  8B1D
 647  8B1D              ; Ha habido desplazamiento de la entidad maligna.
 648  8B1D              ; Ha llegado a zona de AMADEUS ???
 649  8B1D
 650  8B1D 3A DD 88     	ld a,(Coordenada_y)
 651  8B20 FE 14        	cp $14
 652  8B22 D4 D6 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 653  8B25              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 654  8B25              ; ---------
 655  8B25
 656  8B25 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 657  8B27 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 658  8B2A CD 6D 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 659  8B2D CD 84 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 660  8B30 CD 53 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 661  8B33 C9           	ret													; _de la misma.
 662  8B34
 663  8B34              ; --------------------------------------------------------------------------------------------------------------
 664  8B34              ;
 665  8B34              ;	29/1/23
 666  8B34
 667  8B34              Mov_Amadeus
 668  8B34
 669  8B34 AF           	xor a
 670  8B35 32 05 89     	ld (Obj_dibujado),a
 671  8B38 CD 6D 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 672  8B3B              ;														; Obj_dibujado="0".
 673  8B3B              ; Movemos Amadeus.
 674  8B3B
 675  8B3B CD DD 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 676  8B3E 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 677  8B41 CB 67        	bit 4,a
 678  8B43 C8           	ret z
 679  8B44
 680  8B44              ; ---------
 681  8B44
 682  8B44 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 683  8B46 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 684  8B49 CD 6D 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 685  8B4C CD 84 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 686  8B4F CD 53 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 687  8B52 C9           	ret													; _de la nave.
 688  8B53
 689  8B53              ; --------------------------------------------------------------------------------------------------------------
 690  8B53              ;
 691  8B53              ;	31/01/23
 692  8B53              ;
 693  8B53              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 694  8B53
 695  8B53              Guarda_foto_entidad_a_borrar
 696  8B53
 697  8B53 CD 49 94     	call Prepara_draw
 698  8B56 CD 83 93     	call calcula_CColumnass
 699  8B59 CD BA 93     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 700  8B5C CD 0F 94     	call Define_rutina_de_impresion
 701  8B5F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 702  8B62 C9           	ret
 703  8B63
 704  8B63              ; --------------------------------------------------------------------------------------------------------------
 705  8B63              ;
 706  8B63              ;	31/01/23
 707  8B63              ;
 708  8B63              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 709  8B63              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 710  8B63
 711  8B63              Guarda_foto_entidad_a_pintar
 712  8B63
 713  8B63 CD 90 8B     	call Repone_pintar
 714  8B66 CD 6F 91     	call Draw
 715  8B69 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 716  8B6C C9           	ret
 717  8B6D
 718  8B6D              ; --------------------------------------------------------------------------------------------------------------
 719  8B6D              ;
 720  8B6D              ;
 721  8B6D
 722  8B6D 21 D6 88     Prepara_var_pintado_borrado	ld hl,Filas
 723  8B70 3A 05 89     	ld a,(Obj_dibujado)
 724  8B73 A7           	and a
 725  8B74 28 05        	jr z,1F
 726  8B76 11 FA 88     	ld de,Variables_de_pintado
 727  8B79 18 03        	jr 2F
 728  8B7B 11 F0 88     1 ld de,Variables_de_borrado
 729  8B7E 01 08 00     2 ld bc,8
 730  8B81 ED B0        	ldir
 731  8B83 C9           	ret
 732  8B84
 733  8B84              ; --------------------------------------------------------------------------------------------------------------
 734  8B84
 735  8B84 21 F0 88     Repone_borrar ld hl,Variables_de_borrado
 736  8B87 11 D6 88     	ld de,Filas
 737  8B8A 01 08 00     	ld bc,8
 738  8B8D ED B0        	ldir
 739  8B8F C9           	ret
 740  8B90
 741  8B90 21 FA 88     Repone_pintar ld hl,Variables_de_pintado
 742  8B93 11 D6 88     	ld de,Filas
 743  8B96 01 08 00     	ld bc,8
 744  8B99 ED B0        	ldir
 745  8B9B C9           	ret
 746  8B9C
 747  8B9C              ; *************************************************************************************************************************************************************
 748  8B9C              ;
 749  8B9C              ; 8/1/23
 750  8B9C              ;
 751  8B9C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 752  8B9C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 753  8B9C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 754  8B9C
 755  8B9C              ; Destruye HL y DE !!!!!
 756  8B9C
 757  8B9C              Inicia_punteros_de_cajas
 758  8B9C
 759  8B9C 21 68 84     	ld hl,Indice_de_cajas
 760  8B9F CD F0 8B         call Extrae_address
 761  8BA2 22 14 89         ld (Puntero_store_caja),hl
 762  8BA5 21 6A 84     	ld hl,Indice_de_cajas+2
 763  8BA8 22 18 89     	ld (Indice_restore_caja),hl
 764  8BAB CD F0 8B     	call Extrae_address
 765  8BAE 22 16 89     	ld (Puntero_restore_caja),hl
 766  8BB1 C9               ret
 767  8BB2
 768  8BB2              ; *************************************************************************************************************************************************************
 769  8BB2              ;
 770  8BB2              ; 8/1/23
 771  8BB2              ;
 772  8BB2              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 773  8BB2
 774  8BB2 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 775  8BB5 22 2B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 776  8BB8 C9           	ret
 777  8BB9 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 778  8BBC 22 2D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 779  8BBF C9           	ret
 780  8BC0
 781  8BC0              ; -------------------------------------------------------------------------------------------------------------
 782  8BC0              ;
 783  8BC0              ; 28/2/23
 784  8BC0              ;
 785  8BC0
 786  8BC0              Calcula_numero_de_malotes
 787  8BC0
 788  8BC0 21 00 70     	ld hl,Album_de_fotos
 789  8BC3 EB           	ex de,hl
 790  8BC4 2A 26 89     	ld hl,(Stack_snapshot)
 791  8BC7
 792  8BC7 06 00        	ld b,0
 793  8BC9 7D           	ld a,l
 794  8BCA 93           	sub e
 795  8BCB 28 07        	jr z,1F
 796  8BCD
 797  8BCD              ; Nº de malotes no es "0".
 798  8BCD
 799  8BCD D6 06        2 sub 6
 800  8BCF 04           	inc b
 801  8BD0 A7           	and a
 802  8BD1 20 FA        	jr nz,2B
 803  8BD3 78           	ld a,b
 804  8BD4
 805  8BD4 32 1D 89     1 ld (Numero_de_malotes),a
 806  8BD7 C9           	ret
 807  8BD8
 808  8BD8              ; -------------------------------------------------------------------------------------------------------------
 809  8BD8              ;
 810  8BD8              ; 28/2/23
 811  8BD8              ;
 812  8BD8
 813  8BD8              Calcula_numero_de_disparotes
 814  8BD8
 815  8BD8 21 85 70     	ld hl,Album_de_fotos_disparos
 816  8BDB EB           	ex de,hl
 817  8BDC 2A 28 89     	ld hl,(Stack_snapshot_disparos)
 818  8BDF
 819  8BDF 06 00        	ld b,0
 820  8BE1 7D           	ld a,l
 821  8BE2 93           	sub e
 822  8BE3 28 07        	jr z,1F
 823  8BE5
 824  8BE5              ; Nº de malotes no es "0".
 825  8BE5
 826  8BE5 D6 06        2 sub 6
 827  8BE7 04           	inc b
 828  8BE8 A7           	and a
 829  8BE9 20 FA        	jr nz,2B
 830  8BEB 78           	ld a,b
 831  8BEC
 832  8BEC 32 2A 89     1 ld (Numero_de_disparotes),a
 833  8BEF C9           	ret
 834  8BF0              ; *************************************************************************************************************************************************************
 835  8BF0              ;
 836  8BF0              ; 20/10/22
 837  8BF0              ;
 838  8BF0              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 839  8BF0              ;
 840  8BF0              ; Destruye el puntero y DE !!!!!
 841  8BF0
 842  8BF0 5E           Extrae_address ld e,(hl)
 843  8BF1 23           	inc hl
 844  8BF2 56           	ld d,(hl)
 845  8BF3 2B           	dec hl
 846  8BF4 EB           	ex de,hl
 847  8BF5 C9           	ret
 848  8BF6
 849  8BF6              ; *************************************************************************************************************************************************************
 850  8BF6              ;
 851  8BF6              ;	7/2/23
 852  8BF6              ;
 853  8BF6              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 854  8BF6              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 855  8BF6              ;
 856  8BF6              ;   Destruye HL y BC !!!!!,
 857  8BF6              ;
 858  8BF6              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 859  8BF6              ;					"0" ..... Izquierda.
 860  8BF6
 861  8BF6              Inicia_Puntero_objeto
 862  8BF6
 863  8BF6 3A EA 88     	ld a,(Cuad_objeto)
 864  8BF9 E6 01        	and 1
 865  8BFB F5           	push af
 866  8BFC CC 1A 8C     	call z,Inicia_puntero_objeto_izq
 867  8BFF F1           	pop af
 868  8C00 28 2B        	jr z,1F
 869  8C02 CD 07 8C     	call Inicia_puntero_objeto_der
 870  8C05 18 26        	jr 1F
 871  8C07
 872  8C07              ; Arrancamos desde la parte izquierda de la pantalla.
 873  8C07              ; Iniciamos (Indice_Sprite_der).
 874  8C07
 875  8C07 2A E0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 876  8C0A 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 877  8C0D CD F0 8B     	call Extrae_address
 878  8C10 22 DA 88     	ld (Puntero_objeto),hl
 879  8C13
 880  8C13 2A E2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 881  8C16 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 882  8C19 C9           	ret
 883  8C1A
 884  8C1A              ; Arrancamos desde la parte derecha de la pantalla.
 885  8C1A              ; Iniciamos (Indice_Sprite_izq).
 886  8C1A
 887  8C1A 2A E2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 888  8C1D 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 889  8C20 CD F0 8B     	call Extrae_address
 890  8C23 22 DA 88     	ld (Puntero_objeto),hl
 891  8C26
 892  8C26 2A E0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 893  8C29 22 E4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 894  8C2C C9           	ret
 895  8C2D
 896  8C2D              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 897  8C2D
 898  8C2D 21 38 83     1 ld hl,Amadeus
 899  8C30 ED 4B DA 88  	ld bc,(Puntero_objeto)
 900  8C34 B7 ED 42     	sub hl,bc
 901  8C37 C0           	ret nz
 902  8C38 21 04 89     	ld hl,Ctrl_0
 903  8C3B CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 904  8C3D C9           	ret 												; _de nuestra nave en los extremos.
 905  8C3E
 906  8C3E              ; *************************************************************************************************************************************************************
 907  8C3E              ;
 908  8C3E              ;	14/5/23
 909  8C3E              ;
 910  8C3E              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 911  8C3E              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 912  8C3E
 913  8C3E              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 914  8C3E              ;	_de la 2ª y 3ª entidad respectivamente.
 915  8C3E
 916  8C3E              Store_Restore_cajas
 917  8C3E
 918  8C3E E5           	push hl
 919  8C3F D5           	push de
 920  8C40 C5            	push bc
 921  8C41
 922  8C41              ;	STORE !!!!!
 923  8C41              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 924  8C41
 925  8C41 21 D6 88     	ld hl,Filas
 926  8C44 ED 5B 14 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 927  8C48 01 3D 00     	ld bc,61
 928  8C4B ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 929  8C4D
 930  8C4D              ; 	Entidad_sospechosa. 20/4/23
 931  8C4D
 932  8C4D 3A EF 88     	ld a,(Impacto)
 933  8C50 A7           	and a
 934  8C51 28 0C        	jr z,1F
 935  8C53
 936  8C53 2A 14 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 937  8C56 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 938  8C59 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 939  8C5A ED 4A        	adc hl,bc 											; _ "0" más adelante.
 940  8C5C 22 30 89     	ld (Entidad_sospechosa_de_colision),hl
 941  8C5F
 942  8C5F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 943  8C5F
 944  8C5F 2A 16 89     1 ld hl,(Puntero_restore_caja)
 945  8C62 7E           	ld a,(hl)
 946  8C63 A7           	and a
 947  8C64 F5           	push af
 948  8C65 28 08        	jr z,2F
 949  8C67
 950  8C67 11 D6 88     	ld de,Filas
 951  8C6A 01 3D 00     	ld bc,61
 952  8C6D ED B0        	ldir
 953  8C6F
 954  8C6F CD 8B 8C     2 call Incrementa_punteros_de_cajas
 955  8C72 F1           	pop af
 956  8C73 28 EA        	jr z,1B
 957  8C75
 958  8C75 C1           	pop bc
 959  8C76 D1           	pop de
 960  8C77 E1           	pop hl
 961  8C78
 962  8C78 C9           	ret
 963  8C79
 964  8C79              ; **************************************************************************************************
 965  8C79              ;
 966  8C79              ;	12/05/23
 967  8C79              ;
 968  8C79              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 969  8C79
 970  8C79 E5           Restore_entidad push hl
 971  8C7A D5           	push de
 972  8C7B C5            	push bc
 973  8C7C
 974  8C7C 2A 14 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 975  8C7F 11 D6 88     	ld de,Filas
 976  8C82 01 3D 00     	ld bc,61
 977  8C85 ED B0        	ldir
 978  8C87
 979  8C87 C1           	pop bc
 980  8C88 D1           	pop de
 981  8C89 E1           	pop hl
 982  8C8A C9           	ret
 983  8C8B
 984  8C8B
 985  8C8B              ; **************************************************************************************************
 986  8C8B              ;
 987  8C8B              ;	08/05/23
 988  8C8B              ;
 989  8C8B              ;	Incrementamos los dos punteros de entidades. (+1).
 990  8C8B
 991  8C8B 2A 16 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 992  8C8E 22 14 89     	ld (Puntero_store_caja),hl
 993  8C91 2A 18 89     	ld hl,(Indice_restore_caja)
 994  8C94 23           	inc hl
 995  8C95 23           	inc hl
 996  8C96 22 18 89     	ld (Indice_restore_caja),hl
 997  8C99 CD F0 8B         call Extrae_address
 998  8C9C 22 16 89         ld (Puntero_restore_caja),hl
 999  8C9F C9               ret
1000  8CA0
1001  8CA0              ; **************************************************************************************************
1002  8CA0              ;
1003  8CA0              ;	25/01/23
1004  8CA0              ;
1005  8CA0              ;	Restore_Amadeus
1006  8CA0              ;
1007  8CA0              ;	Cargamos en DRAW los parámetros de Amadeus.
1008  8CA0              ;
1009  8CA0
1010  8CA0 E5           Restore_Amadeus	push hl
1011  8CA1 D5           	push de
1012  8CA2 C5            	push bc
1013  8CA3 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1014  8CA6 11 D6 88     	ld de,Filas
1015  8CA9 01 3D 00     	ld bc,61
1016  8CAC ED B0        	ldir
1017  8CAE C1           	pop bc
1018  8CAF D1           	pop de
1019  8CB0 E1           	pop hl
1020  8CB1 C9           	ret
1021  8CB2
1022  8CB2              ; *************************************************************************************************************************************************************
1023  8CB2              ;
1024  8CB2              ;	29/04/23
1025  8CB2              ;
1026  8CB2              ;	Store_Amadeus
1027  8CB2              ;
1028  8CB2              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1029  8CB2              ;
1030  8CB2              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1031  8CB2              ;
1032  8CB2              ;	DESTRUYE: HL y BC y DE.
1033  8CB2
1034  8CB2 21 D6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1035  8CB5 01 3D 00     	ld bc,61
1036  8CB8 ED B0        	ldir
1037  8CBA C9           	ret
1038  8CBB
1039  8CBB              ; -----------------------------------------------------------
1040  8CBB              ;
1041  8CBB              ;	27/04/23
1042  8CBB              ;
1043  8CBB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1044  8CBB              ;
1045  8CBB              ;	Destruye: HL,BC,DE,A
1046  8CBB
1047  8CBB 21 D6 88     Borra_datos_entidad ld hl,Filas
1048  8CBE 01 3C 00     	ld bc,60
1049  8CC1 AF           	xor a
1050  8CC2 77           	ld (hl),a
1051  8CC3 11 D7 88     	ld de,Filas+1
1052  8CC6 ED B0        	ldir
1053  8CC8 C9           	ret
1054  8CC9
1055  8CC9              ; -----------------------------------------------------------
1056  8CC9
1057  8CC9              ; Teclado.
1058  8CC9
1059  8CC9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1060  8CCB DB FE        	in a,($fe)
1061  8CCD E6 01        	and $01
1062  8CCF 28 02        	jr z,1f
1063  8CD1 18 F6        	jr Pulsa_ENTER
1064  8CD3 C9           1 ret
1065  8CD4
1066  8CD4              ; **************************************************************************************************
1067  8CD4              ;
1068  8CD4              ; Temporización.
1069  8CD4
1070  8CD4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1071  8CD4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1072  8CD4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1073  8CD4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1074  8CD4
1075  8CD4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1076  8CD4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1077  8CD4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1078  8CD4
1079  8CD4              ; A partir de $4f61 no hace falta DELAY.
1080  8CD4
1081  8CD4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1082  8CD4
1083  8CD4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1084  8CD7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1085  8CD8 78           	LD A,B
1086  8CD9 A7           	AND A
1087  8CDA 20 FB        	JR NZ,wait
1088  8CDC C9           	RET
1089  8CDD
1090  8CDD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1091  8CDD              ;
1092  8CDD              ;	5/3/23
1093  8CDD              ;
1094  8CDD              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1095  8CDD
1096  8CDD              Movimiento_Amadeus
1097  8CDD
1098  8CDD              ; Disparo.
1099  8CDD
1100  8CDD 3A 3D 89     	ld a,(Habilita_disparo_Amadeus)
1101  8CE0 A7           	and a
1102  8CE1 20 02        	jr nz,1F
1103  8CE3 18 15        	jr 2F
1104  8CE5
1105  8CE5 3E F7        1 ld a,$f7													; "5" para disparar.
1106  8CE7 DB FE        	in a,($fe)
1107  8CE9 E6 10        	and $10
1108  8CEB
1109  8CEB F5           	push af
1110  8CEC CC 52 8D     	call z,Genera_disparo
1111  8CEF F1           	pop af
1112  8CF0 20 08        	jr nz,2F
1113  8CF2
1114  8CF2 3A 3D 89     	ld a,(Habilita_disparo_Amadeus)
1115  8CF5 EE 01        	xor 1
1116  8CF7 32 3D 89     	ld (Habilita_disparo_Amadeus),a
1117  8CFA
1118  8CFA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1119  8CFC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1120  8CFE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1121  8D00 CC C7 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1122  8D03 3E F7        	ld a,$f7
1123  8D05 DB FE        	in a,($fe)
1124  8D07 E6 01        	and $01
1125  8D09 C8           	ret z
1126  8D0A
1127  8D0A 3E F7        	ld a,$f7
1128  8D0C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1129  8D0E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1130  8D10 CC A9 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1131  8D13 C9           	ret
1132  8D14
1133  8D14              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1134  8D14              ;
1135  8D14              ;	Rutina provisional para que los malotes cagen balas.
1136  8D14
1137  8D14              Detecta_disparo_entidad
1138  8D14
1139  8D14 3A 40 89     	ld a,(Habilita_disparo_entidad)
1140  8D17 A7           	and a
1141  8D18 C8           	ret z
1142  8D19 3E 7F        	ld a,$7f
1143  8D1B DB FE        	in a,($fe)
1144  8D1D E6 01        	and 1
1145  8D1F C0           	ret nz
1146  8D20 CD 52 8D     	call Genera_disparo
1147  8D23 C9           	ret
1148  8D24
1149  8D24              ; Pinta indicadores de FILAS. ------------------------------------------------------
1150  8D24
1151  8D24 21 00 40     Pinta_marco ld hl,$4000
1152  8D27 E5           	push hl
1153  8D28
1154  8D28 CD 47 8D     	call Pinta_linea
1155  8D2B E1           	pop hl
1156  8D2C 3E 80        	ld a,$80
1157  8D2E CD 3A 8D     	call Pinta_columna
1158  8D31
1159  8D31 21 1F 40     	ld hl,$401f
1160  8D34 3E 01        	ld a,1
1161  8D36 CD 3A 8D     	call Pinta_columna
1162  8D39 C9           	ret
1163  8D3A
1164  8D3A 06 BF        Pinta_columna ld b,191
1165  8D3C F5           	push af
1166  8D3D CD 55 94     1 call NextScan
1167  8D40 F1           	pop af
1168  8D41 77           	ld (hl),a
1169  8D42 F5           	push af
1170  8D43 10 F8        	djnz 1B
1171  8D45 F1           	pop af
1172  8D46 C9           	ret
1173  8D47 36 FF        Pinta_linea ld (hl),$ff
1174  8D49 54           	ld d,h
1175  8D4A 5D           	ld e,l
1176  8D4B 13           	inc de
1177  8D4C 01 1F 00     	ld bc,31
1178  8D4F ED B0        	ldir
1179  8D51 C9           	ret
1180  8D52
1181  8D52              ; ---------------------------------------------------------------
1182  8D52
1183  8D52              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D52              ; ******************************************************************************************************************************************************************************************
   2+ 8D52              ;
   3+ 8D52              ;   17/04/23
   4+ 8D52              ;
   5+ 8D52              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D52              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D52              ;
   8+ 8D52              ;
   9+ 8D52              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D52              ;
  11+ 8D52              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D52              ;               _ hacen las entidades hacia abajo.
  13+ 8D52              ;
  14+ 8D52              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D52              ;
  16+ 8D52              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D52              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D52              ;
  19+ 8D52              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D52              ;           _ la bala.
  21+ 8D52              ;
  22+ 8D52              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D52              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D52              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D52              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D52              ;           _ en el momento de generarse la bala)).
  27+ 8D52
  28+ 8D52              Genera_disparo
  29+ 8D52
  30+ 8D52              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D52              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D52              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D52              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D52              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D52              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D52              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D52
  38+ 8D52              ; Exclusiones:
  39+ 8D52
  40+ 8D52 3A 0E 89         ld a,(Columnas)
  41+ 8D55 47               ld b,a
  42+ 8D56 3A D7 88         ld a,(Columns)
  43+ 8D59 B8               cp b
  44+ 8D5A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8D5B
  46+ 8D5B              ; ----- ----- -----
  47+ 8D5B
  48+ 8D5B 3A 04 89         ld a,(Ctrl_0)
  49+ 8D5E CB 77            bit 6,a
  50+ 8D60 20 06            jr nz,14F
  51+ 8D62
  52+ 8D62 3A DD 88         ld a,(Coordenada_y)
  53+ 8D65 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8D67 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8D68
  56+ 8D68 21 00 80     14 ld hl,Indice_disparo
  57+ 8D6B 3A DE 88         ld a,(CTRL_DESPLZ)
  58+ 8D6E 4F               ld c,a
  59+ 8D6F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8D71              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8D71              ;                                            ""        ""       "f9", B="1"
  62+ 8D71              ;                                            ""        ""       "fb", B="2"
  63+ 8D71              ;                                            ""        ""       "fb", B="3"
  64+ 8D71 A7               and a
  65+ 8D72 28 10            jr z,1F
  66+ 8D74 E6 01            and 1
  67+ 8D76 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8D77
  69+ 8D77 79               ld a,c
  70+ 8D78 16 F9            ld d,$f9
  71+ 8D7A 23           2 inc hl
  72+ 8D7B 23               inc hl
  73+ 8D7C 04               inc b
  74+ 8D7D BA               cp d
  75+ 8D7E 28 04            jr z,1F
  76+ 8D80 14               inc d
  77+ 8D81 14               inc d
  78+ 8D82 18 F6            jr 2B
  79+ 8D84
  80+ 8D84 CD F0 8B     1 call Extrae_address
  81+ 8D87 E5               push hl
  82+ 8D88 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8D8A DD 21 E8 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8D8E
  85+ 8D8E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8D8E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8D8E
  88+ 8D8E 3A 04 89         ld a,(Ctrl_0)
  89+ 8D91 CB 77            bit 6,a
  90+ 8D93 20 04            jr nz,19F
  91+ 8D95
  92+ 8D95 AF               xor a
  93+ 8D96 32 40 89         ld (Habilita_disparo_entidad),a
  94+ 8D99
  95+ 8D99 3A EA 88     19 ld a,(Cuad_objeto)
  96+ 8D9C FE 02            cp 2
  97+ 8D9E 38 66            jr c,3F
  98+ 8DA0 28 64            jr z,3F
  99+ 8DA2
 100+ 8DA2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8DA2
 102+ 8DA2 E6 01            and 1
 103+ 8DA4 28 30            jr z,4F
 104+ 8DA6
 105+ 8DA6              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8DA6              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8DA6              ;
 108+ 8DA6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8DA6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8DA6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8DA6
 112+ 8DA6 2A D8 88     	ld hl,(Posicion_actual)
 113+ 8DA9
 114+ 8DA9              ;   Amadeus o entidad ???.
 115+ 8DA9
 116+ 8DA9 3A 04 89         ld a,(Ctrl_0)
 117+ 8DAC CB 77            bit 6,a
 118+ 8DAE 28 0A            jr z,8F
 119+ 8DB0
 120+ 8DB0              ; 	Dispara Amadeus.
 121+ 8DB0
 122+ 8DB0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8DB2 CD 64 94         call PreviousScan
 124+ 8DB5 CD 64 94         call PreviousScan
 125+ 8DB8
 126+ 8DB8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8DB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8DB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8DB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8DB8
 131+ 8DB8 18 11            jr 10F
 132+ 8DBA
 133+ 8DBA              ; 	Dispara Entidad.
 134+ 8DBA
 135+ 8DBA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8DBD              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8DBD
 138+ 8DBD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8DBD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8DBD
 141+ 8DBD C5               push bc
 142+ 8DBE 06 10            ld b,16
 143+ 8DC0 CD 55 94     9 call NextScan
 144+ 8DC3 10 FB            djnz 9B
 145+ 8DC5 C1               pop bc
 146+ 8DC6 CD 30 8E         call Ajusta_disparo_parte_izquierda
 147+ 8DC9 18 06            jr 17F
 148+ 8DCB
 149+ 8DCB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8DCB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8DCB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8DCB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8DCB
 154+ 8DCB CD 30 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8DCE CD A5 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8DD1              ;                                                      ; _al generar el disparo.
 157+ 8DD1
 158+ 8DD1              ; 	LLegados a este punto tendremos:
 159+ 8DD1              ;
 160+ 8DD1              ;       Puntero_objeto_disparo en IY.
 161+ 8DD1              ;       Rutinas_de_impresion en IX.
 162+ 8DD1              ;       Puntero_de_impresion en HL.
 163+ 8DD1              ;       Impacto/Dirección en BC.
 164+ 8DD1
 165+ 8DD1 CD 38 8E     17 call Almacena_disparo
 166+ 8DD4 18 52            jr 6F                                             ; RET.
 167+ 8DD6
 168+ 8DD6              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8DD6              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8DD6              ;
 171+ 8DD6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8DD6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8DD6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8DD6
 175+ 8DD6 2A D8 88     4 ld hl,(Posicion_actual)
 176+ 8DD9
 177+ 8DD9              ;   Amadeus o entidad ???.
 178+ 8DD9
 179+ 8DD9 3A 04 89         ld a,(Ctrl_0)
 180+ 8DDC CB 77            bit 6,a
 181+ 8DDE 28 0A            jr z,11F
 182+ 8DE0
 183+ 8DE0              ; 	Dispara Amadeus.
 184+ 8DE0
 185+ 8DE0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8DE2 CD 64 94         call PreviousScan
 187+ 8DE5 CD 64 94         call PreviousScan
 188+ 8DE8
 189+ 8DE8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8DE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8DE8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8DE8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8DE8
 194+ 8DE8 18 11            jr 13F
 195+ 8DEA
 196+ 8DEA              ; 	Dispara Entidad.
 197+ 8DEA
 198+ 8DEA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8DED              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8DED
 201+ 8DED              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8DED              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8DED
 204+ 8DED C5               push bc
 205+ 8DEE 06 10            ld b,16
 206+ 8DF0 CD 55 94     12 call NextScan
 207+ 8DF3 10 FB            djnz 12B
 208+ 8DF5 C1               pop bc
 209+ 8DF6
 210+ 8DF6 CD 29 8E         call Ajusta_disparo_parte_derecha
 211+ 8DF9 18 06            jr 18F
 212+ 8DFB
 213+ 8DFB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8DFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8DFB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8DFB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8DFB
 218+ 8DFB CD 29 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8DFE CD A5 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E01              ;                                                       ; _al generar el disparo.
 221+ 8E01
 222+ 8E01              ; LLegados a este punto tendremos:
 223+ 8E01              ;
 224+ 8E01              ;       Puntero_objeto_disparo en IY.
 225+ 8E01              ;       Rutinas_de_impresion en IX.
 226+ 8E01              ;       Puntero_de_impresion en HL.
 227+ 8E01              ;       Impacto/Dirección en BC.
 228+ 8E01
 229+ 8E01 CD 38 8E     18 call Almacena_disparo
 230+ 8E04 18 22            jr 6F                                               ; RET.
 231+ 8E06
 232+ 8E06              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E06
 234+ 8E06 28 11        3 jr z,5F
 235+ 8E08
 236+ 8E08              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E08              ;
 238+ 8E08              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E08              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E08              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E08              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E08
 243+ 8E08              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E08              ;	   ""        ""       "f9", B="1"
 245+ 8E08              ;	   ""        ""       "fb", B="2"
 246+ 8E08              ; 	   ""        ""       "fb", B="3"
 247+ 8E08
 248+ 8E08 2A D8 88     	ld hl,(Posicion_actual)
 249+ 8E0B CD 55 94     	call NextScan
 250+ 8E0E
 251+ 8E0E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E0E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E0E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E0E
 256+ 8E0E CD 30 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E11
 258+ 8E11              ; 	No se produce impacto. B="$80"
 259+ 8E11              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E11
 261+ 8E11 01 80 80         ld bc,$8080
 262+ 8E14
 263+ 8E14              ; 	LLegados a este punto tendremos:
 264+ 8E14              ;
 265+ 8E14              ;       Puntero_objeto_disparo en IY.
 266+ 8E14              ;       Rutinas_de_impresion en IX.
 267+ 8E14              ;       Puntero_de_impresion en HL.
 268+ 8E14              ;       Impacto/Dirección en BC.
 269+ 8E14
 270+ 8E14 CD 38 8E         call Almacena_disparo
 271+ 8E17 18 0F            jr 6F                                           ; RET.
 272+ 8E19
 273+ 8E19              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8E19              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8E19              ;
 276+ 8E19              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8E19              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8E19              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8E19              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8E19
 281+ 8E19 2A D8 88     5 ld hl,(Posicion_actual)
 282+ 8E1C CD 55 94     	call NextScan
 283+ 8E1F
 284+ 8E1F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8E1F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8E1F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8E1F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8E1F
 289+ 8E1F CD 29 8E         call Ajusta_disparo_parte_derecha
 290+ 8E22
 291+ 8E22              ; 	No se produce impacto. B="$80"
 292+ 8E22              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8E22
 294+ 8E22 01 80 80     15 ld bc,$8080
 295+ 8E25
 296+ 8E25              ; 	LLegados a este punto tendremos:
 297+ 8E25              ;
 298+ 8E25              ;       Puntero_objeto_disparo en IY.
 299+ 8E25              ;       Rutinas_de_impresion en IX.
 300+ 8E25              ;       Puntero_de_impresion en HL.
 301+ 8E25              ;       Impacto/Dirección en BC.
 302+ 8E25
 303+ 8E25 CD 38 8E         call Almacena_disparo
 304+ 8E28
 305+ 8E28 C9           6 ret
 306+ 8E29
 307+ 8E29              ; ----------------------------------------------------------------
 308+ 8E29              ;
 309+ 8E29              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8E29              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8E29              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8E29
 313+ 8E29 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8E2A FE 02            cp 2
 315+ 8E2C 38 01            jr c,1F
 316+ 8E2E 23               inc hl
 317+ 8E2F C9           1 ret
 318+ 8E30
 319+ 8E30 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8E31 FE 01        	cp 1
 321+ 8E33 20 01        	jr nz,1F
 322+ 8E35 2B           	dec hl
 323+ 8E36 2B           1 dec hl
 324+ 8E37 C9               ret
 325+ 8E38
 326+ 8E38              ; ----------------------------------------------------------------
 327+ 8E38              ;
 328+ 8E38              ;   25/02/23
 329+ 8E38              ;
 330+ 8E38              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8E38              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8E38              ;
 333+ 8E38              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8E38              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8E38
 336+ 8E38              Almacena_disparo
 337+ 8E38
 338+ 8E38 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8E39 F1               pop af
 340+ 8E3A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8E3B
 342+ 8E3B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8E3C E6 01            and 1
 344+ 8E3E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8E40              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8E40              ; 	Dispara AMADEUS.
 347+ 8E40
 348+ 8E40              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8E40              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8E40              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8E40              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8E40
 353+ 8E40 C5               push bc
 354+ 8E41 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8E44 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8E47 A7               and a
 357+ 8E48 ED 42            sbc hl,bc
 358+ 8E4A CC B9 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8E4D C1               pop bc
 360+ 8E4E 28 54            jr z,4F
 361+ 8E50
 362+ 8E50 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8E53 23               inc hl
 364+ 8E54 23               inc hl
 365+ 8E55 22 2D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8E58              ;                                                   ; _ Disparo_(+1).
 367+ 8E58 18 18            jr 2F
 368+ 8E5A
 369+ 8E5A              ; Dispara una entidad.
 370+ 8E5A
 371+ 8E5A C5           1 push bc
 372+ 8E5B 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8E5E 2A 2B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8E61 A7               and a
 375+ 8E62 ED 42            sbc hl,bc
 376+ 8E64 CC B2 8B         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8E67 C1               pop bc
 378+ 8E68 28 3A            jr z,4F
 379+ 8E6A
 380+ 8E6A 2A 2B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8E6D 23               inc hl
 382+ 8E6E 23               inc hl
 383+ 8E6F 22 2B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8E72              ;                                                   ; _ Disparo_(+1).
 385+ 8E72 CD F0 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8E75              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8E75              ;
 388+ 8E75              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8E75              ;                                                     Rutinas_de_impresion en IX.
 390+ 8E75              ;                                                     Puntero_de_impresion en HL.
 391+ 8E75              ;                                                     Impacto/Dirección en BC.
 392+ 8E75
 393+ 8E75 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8E76 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8E77 23               inc hl                                          ; _ al siguiente.
 396+ 8E78 A7               and a
 397+ 8E79 20 C0            jr nz,3B
 398+ 8E7B
 399+ 8E7B 08               ex af,af
 400+ 8E7C ED 73 22 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8E80 F9               ld sp,hl
 402+ 8E81
 403+ 8E81 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8E83 F5               push af                                         ; Puntero de impresión.
 405+ 8E84 FD E5            push iy                                         ; Puntero objeto.
 406+ 8E86 C5               push bc                                         ; Control.
 407+ 8E87
 408+ 8E87 ED 7B 22 89      ld sp,(Stack)
 409+ 8E8B
 410+ 8E8B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8E8B
 412+ 8E8B 21 13 89     	ld hl,Ctrl_1
 413+ 8E8E CB C6        	set 0,(hl)
 414+ 8E90
 415+ 8E90 DD E5        	push ix
 416+ 8E92 E1               pop hl
 417+ 8E93 F5               push af
 418+ 8E94 DD E1            pop ix
 419+ 8E96
 420+ 8E96 CD A0 7F     	call Guarda_foto_registros
 421+ 8E99
 422+ 8E99 21 13 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8E9C CB 86        	res 0,(hl)
 424+ 8E9E
 425+ 8E9E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8E9E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8E9E
 428+ 8E9E CD B9 8B         call Inicia_Puntero_Disparo_Amadeus
 429+ 8EA1 CD B2 8B         call Inicia_Puntero_Disparo_Entidades
 430+ 8EA4
 431+ 8EA4 C9           4 ret
 432+ 8EA5
 433+ 8EA5              ; ----------------------------------------------------------------
 434+ 8EA5              ;
 435+ 8EA5              ;   4/3/23
 436+ 8EA5              ;
 437+ 8EA5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8EA5              ;   _ al generarse el disparo.
 439+ 8EA5              ;
 440+ 8EA5              ;       "$80" ..... No se produce colisión.
 441+ 8EA5              ;       "$81" ..... Se produce colisión.
 442+ 8EA5
 443+ 8EA5              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8EA5              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8EA5
 446+ 8EA5
 447+ 8EA5 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8EA7 E5               push hl                                        ; Puntero de impresión.
 449+ 8EA8
 450+ 8EA8 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8EAA CD C6 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8EAD
 453+ 8EAD 7B               ld a,e
 454+ 8EAE E6 01            and 1
 455+ 8EB0 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8EB2
 457+ 8EB2 E1               pop hl
 458+ 8EB3 E5               push hl
 459+ 8EB4 CD 55 94         call NextScan
 460+ 8EB7
 461+ 8EB7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8EB8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8EBA 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8EBC              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8EBC 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8EBE CD C6 8E         call Bucle_2
 467+ 8EC1
 468+ 8EC1 43           2 ld b,e
 469+ 8EC2 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8EC3 FD E1            pop iy
 471+ 8EC5 C9               ret
 472+ 8EC6
 473+ 8EC6               ; ---------- ----------
 474+ 8EC6
 475+ 8EC6 06 02        Bucle_2 ld b,2
 476+ 8EC8 FD 7E 00     2 ld a,(iy)
 477+ 8ECB A6               and (hl)
 478+ 8ECC 28 02            jr z,1F
 479+ 8ECE 1E 81            ld e,$81
 480+ 8ED0 23           1 inc hl
 481+ 8ED1 FD 23            inc iy
 482+ 8ED3 10 F3            djnz 2B
 483+ 8ED5 C9               ret
 484+ 8ED6
 485+ 8ED6              ; -------------------------------------------------------------------------------------------------------------
 486+ 8ED6              ;
 487+ 8ED6              ;   11/04/23
 488+ 8ED6              ;
 489+ 8ED6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8ED6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8ED6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8ED6              ;
 493+ 8ED6              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8ED6
 495+ 8ED6              Compara_coordenadas_X
 496+ 8ED6
 497+ 8ED6              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8ED6              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8ED6
 500+ 8ED6              ; Preparamos registros:
 501+ 8ED6
 502+ 8ED6 21 DC 88         ld hl,Filas+6
 503+ 8ED9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8EDA 23               inc hl
 505+ 8EDB 23               inc hl
 506+ 8EDC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8EDD 43               ld b,e
 508+ 8EDE 21 EA 88         ld hl,Filas+20
 509+ 8EE1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8EE2 21 37 89         ld hl,Coordenadas_X_Entidad
 511+ 8EE5 CD F6 90         call Guarda_coordenadas_X
 512+ 8EE8
 513+ 8EE8              ; Preparamos registros:
 514+ 8EE8
 515+ 8EE8 21 86 84         ld hl,Amadeus_db+6
 516+ 8EEB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8EEC 23               inc hl
 518+ 8EED 23               inc hl
 519+ 8EEE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8EEF 7B               ld a,e
 521+ 8EF0 08               ex af,af'
 522+ 8EF1 21 94 84         ld hl,Amadeus_db+20
 523+ 8EF4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8EF5 21 34 89         ld hl,Coordenadas_X_Amadeus
 525+ 8EF8 CD F6 90         call Guarda_coordenadas_X
 526+ 8EFB
 527+ 8EFB              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8EFB              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8EFB
 530+ 8EFB 04               inc b
 531+ 8EFC 05               dec b
 532+ 8EFD 28 04            jr z,1F
 533+ 8EFF 06 03            ld b,3
 534+ 8F01 18 02            jr 2F
 535+ 8F03 06 02        1 ld b,2
 536+ 8F05 08           2 ex af,af'
 537+ 8F06 3C               inc a
 538+ 8F07 3D               dec a
 539+ 8F08 28 04            jr z,5F
 540+ 8F0A 0E 03            ld c,3
 541+ 8F0C 18 02            jr 6F
 542+ 8F0E 0E 02        5 ld c,2
 543+ 8F10 79           6 ld a,c
 544+ 8F11 08               ex af,af'
 545+ 8F12 11 37 89         ld de,Coordenadas_X_Entidad
 546+ 8F15 1A           4 ld a,(de)
 547+ 8F16 21 34 89         ld hl,Coordenadas_X_Amadeus
 548+ 8F19 BE           3 cp (hl)
 549+ 8F1A 28 0E            jr z,7F
 550+ 8F1C 23               inc hl
 551+ 8F1D 0D               dec c
 552+ 8F1E 20 F9            jr nz,3B
 553+ 8F20 13               inc de
 554+ 8F21 08               ex af,af'
 555+ 8F22 4F               ld c,a
 556+ 8F23 08               ex af,af'
 557+ 8F24 10 EF            djnz 4B
 558+ 8F26
 559+ 8F26              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8F26
 561+ 8F26 CD 35 91     8 call Limpia_Coordenadas_X
 562+ 8F29 C9               ret
 563+ 8F2A
 564+ 8F2A              7
 565+ 8F2A 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8F2C 32 EF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8F2F 21 2F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8F32 CB D6            set 2,(hl)
 569+ 8F34 18 F0            jr 8B
 570+ 8F36
 571+ 8F36              ; -----------------------------------------------------------------------
 572+ 8F36              ;
 573+ 8F36              ;   17/04/23
 574+ 8F36              ;
 575+ 8F36
 576+ 8F36              Detecta_colision_nave_entidad
 577+ 8F36
 578+ 8F36              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8F36
 580+ 8F36 2A D8 88         ld hl,(Posicion_actual)
 581+ 8F39 CD BA 93         call Calcula_puntero_de_impresion
 582+ 8F3C
 583+ 8F3C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8F3C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8F3C
 586+ 8F3C DD E5            push ix
 587+ 8F3E E1               pop hl
 588+ 8F3F E5               push hl
 589+ 8F40
 590+ 8F40              ; ----- ----- -----
 591+ 8F40 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8F42 06 0A            ld b,10
 593+ 8F44 CD 74 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8F47 7B               ld a,e
 595+ 8F48 FE 05            cp 5
 596+ 8F4A 38 0E            jr c,3F
 597+ 8F4C
 598+ 8F4C              ; LLegados a este punto:
 599+ 8F4C              ;
 600+ 8F4C              ;   HAY COLISIÓN !!!!!.
 601+ 8F4C              ;
 602+ 8F4C              ;   .db (Impacto) de Amadeus a "1".
 603+ 8F4C              ;   SET el bit3 de (Impacto2).
 604+ 8F4C              ;
 605+ 8F4C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8F4C
 607+ 8F4C 21 99 84         ld hl,Amadeus_db+25
 608+ 8F4F 36 01            ld (hl),1
 609+ 8F51 21 2F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8F54 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8F56 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8F58 18 18            jr 1F
 613+ 8F5A
 614+ 8F5A              ; -----
 615+ 8F5A
 616+ 8F5A E1           3 pop hl
 617+ 8F5B CD 55 94         call NextScan
 618+ 8F5E E5               push hl
 619+ 8F5F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8F60 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8F62 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8F64 30 0C            jr nc,1F
 623+ 8F66              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8F66 10 DC            djnz 2B
 625+ 8F68
 626+ 8F68              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8F68
 628+ 8F68              ; LLegados a este punto:
 629+ 8F68              ;
 630+ 8F68              ;   NO HAY COLISIÓN !!!!!.
 631+ 8F68              ;
 632+ 8F68              ;   .db (Impacto) de Amadeus a "0".
 633+ 8F68              ;   RES el bit2 de (Impacto2).
 634+ 8F68              ;
 635+ 8F68              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8F68              ;   Lo colocamos a "0".
 637+ 8F68
 638+ 8F68 21 2F 89         ld hl,Impacto2
 639+ 8F6B CB 96            res 2,(hl)
 640+ 8F6D 2A 30 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8F70 36 00            ld (hl),0
 642+ 8F72
 643+ 8F72 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8F73 C9               ret
 645+ 8F74
 646+ 8F74               ; ---------- ----------
 647+ 8F74
 648+ 8F74 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8F75 3A D7 88         ld a,(Columns)
 650+ 8F78 47               ld b,a
 651+ 8F79 FD 7E 00     2 ld a,(iy)
 652+ 8F7C BE               cp (hl)
 653+ 8F7D 28 01            jr z,1F
 654+ 8F7F
 655+ 8F7F 1C               inc e
 656+ 8F80
 657+ 8F80 23           1 inc hl
 658+ 8F81 FD 23            inc iy
 659+ 8F83 10 F4            djnz 2B
 660+ 8F85 C1               pop bc
 661+ 8F86 C9               ret
 662+ 8F87
 663+ 8F87              ; -------------------------------------------------------------------------------------------------------------
 664+ 8F87              ;
 665+ 8F87              ;   13/03/23
 666+ 8F87              ;
 667+ 8F87              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8F87              ;
 669+ 8F87              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8F87
 671+ 8F87 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8F8A 7E               ld a,(hl)
 673+ 8F8B A7               and a
 674+ 8F8C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8F8D
 676+ 8F8D 44               ld b,h
 677+ 8F8E 4D               ld c,l
 678+ 8F8F 2A 28 89         ld hl,(Stack_snapshot_disparos)
 679+ 8F92 E5               push hl
 680+ 8F93 A7               and a
 681+ 8F94 ED 42            sbc hl,bc
 682+ 8F96 E5               push hl
 683+ 8F97 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8F98
 685+ 8F98 E1               pop hl
 686+ 8F99 54               ld d,h
 687+ 8F9A 5D               ld e,l
 688+ 8F9B 1B               dec de
 689+ 8F9C ED B8            lddr                                                ; Limpiamos.
 690+ 8F9E
 691+ 8F9E 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 8FA1 22 28 89         ld (Stack_snapshot_disparos),hl
 693+ 8FA4
 694+ 8FA4 C9               ret
 695+ 8FA5
 696+ 8FA5              ; -------------------------------------------------------------------------------------------------------------
 697+ 8FA5              ;
 698+ 8FA5              ;   28/03/23
 699+ 8FA5              ;
 700+ 8FA5
 701+ 8FA5 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8FA8 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8FAB
 704+ 8FAB CD F0 8B     2 call Extrae_address
 705+ 8FAE 7E               ld a,(hl)
 706+ 8FAF A7               and a
 707+ 8FB0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8FB2
 709+ 8FB2              ; ----- ----- ----- ----- ----- -----
 710+ 8FB2
 711+ 8FB2 C5               push bc
 712+ 8FB3 CD 6F 90         call foto_disparo_a_borrar
 713+ 8FB6
 714+ 8FB6              ; Existe colisión con este disparo???
 715+ 8FB6
 716+ 8FB6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8FB7 7E               ld a,(hl)
 718+ 8FB8 2B               dec hl
 719+ 8FB9 E6 01            and 1
 720+ 8FBB 28 1D            jr z,9F
 721+ 8FBD
 722+ 8FBD              ;   En este punto:
 723+ 8FBD              ;
 724+ 8FBD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8FBD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8FBD              ;   _con la entidad).
 727+ 8FBD              ;
 728+ 8FBD              ;   Disparo_2A defw 0                                ; Control.
 729+ 8FBD              ;    defw 0                                          ; Puntero objeto.
 730+ 8FBD              ;    defw 0                                          ; Puntero de impresión.
 731+ 8FBD              ;    defw 0                                          ; Rutina de impresión.
 732+ 8FBD
 733+ 8FBD E5               push hl
 734+ 8FBE
 735+ 8FBE 06 04            ld b,4
 736+ 8FC0 23           19 inc hl
 737+ 8FC1 10 FD            djnz 19B
 738+ 8FC3
 739+ 8FC3 CD F0 8B         call Extrae_address
 740+ 8FC6 CD 86 9A         call Genera_coordenadas_disparo
 741+ 8FC9
 742+ 8FC9              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8FC9
 744+ 8FC9 21 32 89         ld hl,Coordenadas_disparo_certero
 745+ 8FCC 72               ld (hl),d
 746+ 8FCD 23               inc hl
 747+ 8FCE 73               ld (hl),e
 748+ 8FCF
 749+ 8FCF              ; Elimino el disparo de la base de datos.
 750+ 8FCF
 751+ 8FCF E1               pop hl
 752+ 8FD0 CD EB 90         call Elimina_disparo_de_base_de_datos
 753+ 8FD3 21 2F 89         ld hl,Impacto2
 754+ 8FD6 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8FD8
 756+ 8FD8 18 06            jr 11F
 757+ 8FDA
 758+ 8FDA CD 98 90     9 call Mueve_disparo
 759+ 8FDD CD 6F 90         call foto_disparo_a_borrar
 760+ 8FE0
 761+ 8FE0 C1           11 pop bc
 762+ 8FE1 18 04            jr 7F
 763+ 8FE3
 764+ 8FE3              ; ----- ----- ----- ----- ----- -----
 765+ 8FE3
 766+ 8FE3 ED 42        1 sbc hl,bc
 767+ 8FE5 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8FE7 2A 2D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8FEA 23               inc hl
 770+ 8FEB 23               inc hl
 771+ 8FEC 22 2D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8FEF 18 BA            jr 2B
 773+ 8FF1 CD B9 8B     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8FF4
 775+ 8FF4 01 66 84         ld bc,Disparo_11
 776+ 8FF7 2A 2B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8FFA
 778+ 8FFA CD F0 8B     5 call Extrae_address
 779+ 8FFD 7E               ld a,(hl)
 780+ 8FFE A7               and a
 781+ 8FFF 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9001
 783+ 9001              ; ----- ----- ----- ----- ----- -----
 784+ 9001
 785+ 9001 C5               push bc
 786+ 9002 CD 6F 90         call foto_disparo_a_borrar
 787+ 9005
 788+ 9005              ; Existe colisión con este disparo???
 789+ 9005
 790+ 9005 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9006 7E               ld a,(hl)
 792+ 9007 2B               dec hl
 793+ 9008 E6 01            and 1
 794+ 900A 28 48            jr z,10F
 795+ 900C
 796+ 900C              ; La colisión se produce con Amadeus???
 797+ 900C              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 900C
 799+ 900C E5               push hl
 800+ 900D
 801+ 900D 06 04            ld b,4
 802+ 900F 23           16 inc hl
 803+ 9010 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9012 CD F0 8B         call Extrae_address
 805+ 9015 CD 86 9A         call Genera_coordenadas_disparo
 806+ 9018
 807+ 9018 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9019 FE 16            cp $16
 809+ 901B 38 22            jr c,15F
 810+ 901D
 811+ 901D              ; (Colisiones en filas 16 y 17).
 812+ 901D
 813+ 901D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 901E
 815+ 901E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 901E
 817+ 901E 21 86 84         ld hl,Amadeus_db+6
 818+ 9021 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9022 23               inc hl
 820+ 9023 23               inc hl
 821+ 9024 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9025 21 94 84         ld hl,Amadeus_db+20
 823+ 9028 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9029 21 34 89         ld hl,Coordenadas_X_Amadeus
 825+ 902C CD F6 90         call Guarda_coordenadas_X
 826+ 902F
 827+ 902F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9030
 829+ 9030              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9030
 831+ 9030 06 03            ld b,3
 832+ 9032 21 34 89         ld hl,Coordenadas_X_Amadeus
 833+ 9035 7E           18 ld a,(hl)
 834+ 9036 BA               cp d
 835+ 9037 20 03            jr nz,17F
 836+ 9039
 837+ 9039              ; Colisión Amadeus !!!!!!!!!!
 838+ 9039
 839+ 9039 E1               pop hl
 840+ 903A 18 09            jr 14F
 841+ 903C
 842+ 903C 23           17 inc hl
 843+ 903D 10 F6            djnz 18B
 844+ 903F
 845+ 903F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 903F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 903F
 848+ 903F E1           15 pop hl
 849+ 9040 23               inc hl
 850+ 9041 35               dec (hl)
 851+ 9042 2B               dec hl
 852+ 9043 18 0F            jr 10F
 853+ 9045
 854+ 9045              ; -----------------------debug
 855+ 9045
 856+ 9045              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9045              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9045
 859+ 9045 E5           14 push hl
 860+ 9046 CD EB 90         call Elimina_disparo_de_base_de_datos
 861+ 9049 21 2F 89         ld hl,Impacto2
 862+ 904C CB CE            set 1,(hl)
 863+ 904E CD 35 91         call Limpia_Coordenadas_X
 864+ 9051
 865+ 9051 E1               pop hl
 866+ 9052 18 06            jr 12F
 867+ 9054
 868+ 9054 CD 98 90     10 call Mueve_disparo
 869+ 9057 CD 6F 90         call foto_disparo_a_borrar
 870+ 905A C1           12 pop bc
 871+ 905B
 872+ 905B 18 04            jr 8F
 873+ 905D
 874+ 905D              ; ----- ----- ----- ----- ----- -----
 875+ 905D
 876+ 905D ED 42        4 sbc hl,bc
 877+ 905F 28 0A            jr z,6F
 878+ 9061
 879+ 9061 2A 2B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9064 23               inc hl
 881+ 9065 23               inc hl
 882+ 9066 22 2B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9069 18 8F            jr 5B
 884+ 906B
 885+ 906B CD B2 8B     6 call Inicia_Puntero_Disparo_Entidades
 886+ 906E C9               ret
 887+ 906F
 888+ 906F              ; ------------------------------------------------------------------
 889+ 906F
 890+ 906F              foto_disparo_a_borrar
 891+ 906F
 892+ 906F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9070 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9071 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9072
 896+ 9072 E5               push hl
 897+ 9073 23               inc hl
 898+ 9074 23               inc hl
 899+ 9075 ED 73 22 89      ld (Stack),sp
 900+ 9079 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 907A FD E1            pop iy
 902+ 907C DD E1            pop ix
 903+ 907E E1               pop hl
 904+ 907F ED 7B 22 89      ld sp,(Stack)
 905+ 9083 3A 13 89         ld a,(Ctrl_1)
 906+ 9086 CB C7            set 0,a
 907+ 9088 32 13 89         ld (Ctrl_1),a
 908+ 908B CD A0 7F         call Guarda_foto_registros
 909+ 908E 3A 13 89         ld a,(Ctrl_1)
 910+ 9091 CB 87            res 0,a
 911+ 9093 32 13 89         ld (Ctrl_1),a
 912+ 9096 E1               pop hl
 913+ 9097 C9               ret
 914+ 9098
 915+ 9098 E5           Mueve_disparo push hl
 916+ 9099 7E               ld a,(hl)
 917+ 909A 06 04            ld b,4
 918+ 909C 23           1 inc hl
 919+ 909D 10 FD            djnz 1B
 920+ 909F
 921+ 909F              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 909F
 923+ 909F CD F0 8B         call Extrae_address
 924+ 90A2
 925+ 90A2 E6 01            and 1
 926+ 90A4 28 2B            jr z,2F
 927+ 90A6
 928+ 90A6              ; Disparo hacia arriba, (Amadeus).
 929+ 90A6
 930+ 90A6              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 90A6              ; _ de la dificultad.
 932+ 90A6
 933+ 90A6 CD 64 94         call PreviousScan
 934+ 90A9 CD 64 94         call PreviousScan
 935+ 90AC CD 64 94         call PreviousScan
 936+ 90AF
 937+ 90AF              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 90AF
 939+ 90AF 7C               ld a,h
 940+ 90B0 FE 40            cp $40
 941+ 90B2 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 90B4
 943+ 90B4              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 90B4
 945+ 90B4 EB               ex de,hl
 946+ 90B5 06 04            ld b,4
 947+ 90B7 2B           6 dec hl
 948+ 90B8 10 FD            djnz 6B
 949+ 90BA
 950+ 90BA CD EB 90         call Elimina_disparo_de_base_de_datos
 951+ 90BD E1               pop hl
 952+ 90BE 18 10            jr 7F
 953+ 90C0
 954+ 90C0              ; Se ha desplazado la bala, compruebo colisión.
 955+ 90C0
 956+ 90C0 D5           3 push de
 957+ 90C1 C5               push bc
 958+ 90C2
 959+ 90C2 CD A5 8E         call Comprueba_Colision
 960+ 90C5
 961+ 90C5              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 90C5
 963+ 90C5 78               ld a,b
 964+ 90C6
 965+ 90C6 C1               pop bc
 966+ 90C7 D1               pop de
 967+ 90C8
 968+ 90C8 EB               ex de,hl
 969+ 90C9
 970+ 90C9 73               ld (hl),e
 971+ 90CA 23               inc hl
 972+ 90CB 72               ld (hl),d
 973+ 90CC
 974+ 90CC E1           4 pop hl
 975+ 90CD 23               inc hl
 976+ 90CE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 90CF 2B               dec hl
 978+ 90D0 C9           7 ret
 979+ 90D1
 980+ 90D1              ; Disparo hacia abajo, (Entidad).
 981+ 90D1
 982+ 90D1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 90D1              ; _ de la dificultad.
 984+ 90D1
 985+ 90D1 CD 55 94     2 call NextScan
 986+ 90D4 CD 55 94         call NextScan
 987+ 90D7 CD 55 94         call NextScan
 988+ 90DA
 989+ 90DA              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 90DA
 991+ 90DA 7C               ld a,h
 992+ 90DB FE 58            cp $58
 993+ 90DD 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 90DF
 995+ 90DF EB               ex de,hl
 996+ 90E0 06 04            ld b,4
 997+ 90E2 2B           5 dec hl
 998+ 90E3 10 FD            djnz 5B
 999+ 90E5
1000+ 90E5 CD EB 90         call Elimina_disparo_de_base_de_datos
1001+ 90E8 E1               pop hl
1002+ 90E9 18 E5            jr 7B
1003+ 90EB
1004+ 90EB              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 90EB
1006+ 90EB 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 90EE AF               xor a
1008+ 90EF 77               ld (hl),a
1009+ 90F0 54               ld d,h
1010+ 90F1 5D               ld e,l
1011+ 90F2 13               inc de
1012+ 90F3 ED B0            ldir
1013+ 90F5 C9               ret
1014+ 90F6
1015+ 90F6              ; -----------------------------------------------------------------
1016+ 90F6              ;
1017+ 90F6              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 90F6              ;
1019+ 90F6              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 90F6              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 90F6              ;
1022+ 90F6              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 90F6              ;
1024+ 90F6              ;   INPUTS:
1025+ 90F6              ;
1026+ 90F6              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 90F6              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 90F6              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 90F6
1030+ 90F6              ;   MODIFICA: A, HL, DE y C
1031+ 90F6
1032+ 90F6 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 90F7 79               ld a,c
1034+ 90F8 E6 01            and 1
1035+ 90FA 20 03            jr nz,1F
1036+ 90FC 14               inc d
1037+ 90FD 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 90FF
1039+ 90FF              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 90FF              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 90FF
1042+ 90FF 15           1 dec d
1043+ 9100 23           2 inc hl
1044+ 9101 72               ld (hl),d
1045+ 9102
1046+ 9102 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 9103 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 9104 C8               ret z
1049+ 9105
1050+ 9105 AF               xor a
1051+ 9106 5F               ld e,a
1052+ 9107 18 ED            jr Guarda_coordenadas_X
1053+ 9109
1054+ 9109              ; -----------------------------------------------------------------
1055+ 9109              ;
1056+ 9109              ;   12/04/23
1057+ 9109              ;
1058+ 9109
1059+ 9109 3A 2F 89     Selector_de_impactos ld a,(Impacto2)
1060+ 910C A7               and a
1061+ 910D C8               ret z
1062+ 910E
1063+ 910E FE 04            cp 4
1064+ 9110 20 09            jr nz,1F
1065+ 9112
1066+ 9112
1067+ 9112              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 9112
1069+ 9112 CD 36 8F         call Detecta_colision_nave_entidad
1070+ 9115
1071+ 9115 21 2F 89         ld hl,Impacto2
1072+ 9118 CB 5E            bit 3,(hl)
1073+ 911A C0               ret nz                                               ; Existe colisión, RET.
1074+ 911B
1075+ 911B              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 911B              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 911B
1078+ 911B 21 2F 89     1 ld hl,Impacto2
1079+ 911E CB 4E            bit 1,(hl)
1080+ 9120 28 07            jr z,2F
1081+ 9122
1082+ 9122 21 99 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9125 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9127 18 0B            jr 3F
1085+ 9129
1086+ 9129 21 2F 89     2 ld hl,Impacto2
1087+ 912C CB 46            bit 0,(hl)
1088+ 912E C8               ret z
1089+ 912F
1090+ 912F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 912F
1092+ 912F 21 13 89         ld hl,Ctrl_1
1093+ 9132 CB D6            set 2,(hl)
1094+ 9134
1095+ 9134 C9           3 ret
1096+ 9135
1097+ 9135              ; -----------------------------------------------------------------
1098+ 9135              ;
1099+ 9135              ;   16/04/23
1100+ 9135              ;
1101+ 9135
1102+ 9135 AF           Limpia_Coordenadas_X xor a
1103+ 9136 06 06            ld b,6
1104+ 9138 21 34 89         ld hl,Coordenadas_X_Amadeus
1105+ 913B 77           1 ld (hl),a
1106+ 913C 23               inc hl
1107+ 913D 10 FC            djnz 1B
1108+ 913F C9               ret
1109+ 9140
1110+ 9140              ; -----------------------------------------------------------------
1111+ 9140              ;
1112+ 9140              ;   25/04/23
1113+ 9140              ;
1114+ 9140
1115+ 9140              Determina_resultado_comparativa
1116+ 9140
1117+ 9140              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9140              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9140              ;
1120+ 9140              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9140              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9140              ;
1123+ 9140              ;   SBC HL,DE
1124+ 9140
1125+ 9140 7C               ld a,h
1126+ 9141 06 00            ld b,0
1127+ 9143
1128+ 9143 CD 53 91         call Compara_cositas
1129+ 9146
1130+ 9146 04               inc b
1131+ 9147 05               dec b
1132+ 9148 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 9149
1134+ 9149 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 914A 06 00            ld b,0
1136+ 914C
1137+ 914C CD 53 91         call Compara_cositas
1138+ 914F 18 01            jr 2F
1139+ 9151
1140+ 9151 04           1 inc b
1141+ 9152 C9           2 ret
1142+ 9153
1143+ 9153 A7           Compara_cositas and a
1144+ 9154 28 17            jr z,1F
1145+ 9156
1146+ 9156 FE FD            cp $fd
1147+ 9158 28 13            jr z,1F
1148+ 915A FE FE            cp $fe
1149+ 915C 28 0F            jr z,1F
1150+ 915E FE FF            cp $ff
1151+ 9160 28 0B            jr z,1F
1152+ 9162 FE 01            cp $01
1153+ 9164 28 07            jr z,1F
1154+ 9166 FE 02            cp $02
1155+ 9168 28 03            jr z,1F
1156+ 916A FE 03            cp $03
1157+ 916C C0               ret nz
1158+ 916D
1159+ 916D 04           1 inc b
1160+ 916E C9               ret
1161+ 916F
# file closed: Disparo.asm
1184  916F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 916F              ; ******************************************************************************************************************************************************************************************
   2+ 916F              ;
   3+ 916F              ; 01/23
   4+ 916F              ;
   5+ 916F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 916F
   7+ 916F CD 49 94     Draw call Prepara_draw
   8+ 9172 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9173 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9174 28 05        	jr z,2F
  11+ 9176
  12+ 9176 3A EA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9179 18 0C        	jr 1F
  14+ 917B 2A E8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 917E 22 D8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9181 CD 10 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9184              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9184 CD A9 9B     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 9187 3A 04 89     1 ld a,(Ctrl_0)
  20+ 918A CB 6F        	bit 5,a
  21+ 918C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 918E
  23+ 918E CD A6 91     	call Comprueba_limite_horizontal
  24+ 9191 CD 36 92     	call Comprueba_limite_vertical
  25+ 9194
  26+ 9194              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9194
  28+ 9194 CD 83 93     3 call calcula_CColumnass
  29+ 9197 CD BA 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 919A CD 0F 94     	call Define_rutina_de_impresion
  31+ 919D
  32+ 919D 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 91A0 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 91A2 32 04 89     	ld (Ctrl_0),a
  35+ 91A5
  36+ 91A5 C9           	ret
  37+ 91A6
  38+ 91A6              ; *******************************************************************************************************************************************************************************************
  39+ 91A6              ;	21/01/23
  40+ 91A6              ;
  41+ 91A6              ; 	Comprueba_limite_horizontal.
  42+ 91A6              ;
  43+ 91A6              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 91A6              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 91A6              ;
  46+ 91A6              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 91A6              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 91A6              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 91A6              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 91A6
  51+ 91A6
  52+ 91A6
  53+ 91A6 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 91A9 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 91AB 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 91AD E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 91AF 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 91B2 18 09            jr 6F
  59+ 91B4 CB 5F        1 bit 3,a
  60+ 91B6 28 0A            jr z,2F
  61+ 91B8 E6 F7            and $f7
  62+ 91BA 32 04 89         ld (Ctrl_0),a
  63+ 91BD CD 10 93     6 call Inicializacion
  64+ 91C0 18 5B            jr 5F
  65+ 91C2 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 91C3
  67+ 91C3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 91C3              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 91C3
  70+ 91C3 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 91C4 2A 0F 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 91C7 CD 15 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 91CA 67           	ld h,a
  74+ 91CB EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 91CC CD 15 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 91CF 67           	ld h,a
  77+ 91D0 A7           	and a
  78+ 91D1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 91D3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 91D4 3A EA 88     	ld a,(Cuad_objeto)
  81+ 91D7 FE 02        	cp 2
  82+ 91D9 38 1E        	jr c,3F
  83+ 91DB 28 1C        	jr z,3F
  84+ 91DD 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 91DE 28 23            jr z,7F
  86+ 91E0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 91E2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 91E4 E1           	pop hl
  89+ 91E5
  90+ 91E5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 91E5              ; _para indicar con E="2" en caso necesario.
  92+ 91E5
  93+ 91E5 E5               push hl
  94+ 91E6 C5               push bc
  95+ 91E7 CD 15 97     	call calcula_tercio
  96+ 91EA FE 01        	cp 1
  97+ 91EC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 91EE CD 1E 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 91F1 28 26            jr z,9F
 100+ 91F3 38 24            jr c,9F
 101+ 91F5 1E 00        11 ld e,0
 102+ 91F7 18 22            jr 8F
 103+ 91F9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 91FA 28 07        	jr z, 7F
 105+ 91FC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 91FE 1E 00         	ld e,0
 107+ 9200 E1           	pop hl
 108+ 9201 18 04        	jr 4F
 109+ 9203 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9205 18 15            jr 10F
 111+ 9207
 112+ 9207              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 9207              ; _para indicar con E="2" en caso necesario.
 114+ 9207
 115+ 9207 E5           4 push hl
 116+ 9208 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 9209 CD 15 97     	call calcula_tercio
 118+ 920C FE 01        	cp 1
 119+ 920E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9210 CD 1E 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9213 28 04            jr z,9F
 122+ 9215 30 02            jr nc,9F
 123+ 9217 18 02        	jr 8F
 124+ 9219 1E 02        9 ld e,2
 125+ 921B C1           8 pop bc
 126+ 921C E1           10 pop hl
 127+ 921D C9           5 ret
 128+ 921E
 129+ 921E              ; --------------------
 130+ 921E              ;
 131+ 921E              ; 25/08/22
 132+ 921E
 133+ 921E CD 15 97     Comprueba_centro call calcula_tercio
 134+ 9221 67               ld h,a
 135+ 9222 08           	ex af,af
 136+ 9223 FE 02        	cp 2
 137+ 9225 38 07        	jr c,1F
 138+ 9227 28 05        	jr z,1F
 139+ 9229 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 922C 18 03        	jr 2F
 141+ 922E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9231 08           2 ex af,af
 143+ 9232 A7               and a
 144+ 9233 ED 42            sbc hl,bc
 145+ 9235 C9               ret
 146+ 9236
 147+ 9236              ; *********************************************************************************************************************************************************************************************
 148+ 9236              ;
 149+ 9236              ;   16/8/22
 150+ 9236              ;
 151+ 9236              ;	Comprueba_limite_vertical
 152+ 9236              ;
 153+ 9236              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9236              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9236              ;
 156+ 9236
 157+ 9236 2A D8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9239 7D           	ld a,l
 159+ 923A E6 1F        	and $1F
 160+ 923C 57           	ld d,a
 161+ 923D 3A 11 89     	ld a,(Limite_vertical)
 162+ 9240 BA           	cp d 											; Límite - Posición.
 163+ 9241 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9242 3A EA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9245 CB 47        	bit 0,a
 166+ 9247 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9249
 168+ 9249              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9249
 170+ 9249 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 924A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 924C
 173+ 924C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 924C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 924C
 176+ 924C 3A DC 88         ld a,(Coordenada_X)
 177+ 924F 16 0F            ld d,Centro_izquierda
 178+ 9251 A7               and a
 179+ 9252 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9253 28 1E            jr z,3F
 181+ 9255 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9257              ;                                                    ; _salimos sin modificar nada.
 183+ 9257 18 0E            jr 2F
 184+ 9259 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 925A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 925C
 187+ 925C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 925C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 925C
 190+ 925C 3A DC 88         ld a,(Coordenada_X)
 191+ 925F 16 10            ld d,Centro_derecha
 192+ 9261 A7               and a
 193+ 9262 92               sub d
 194+ 9263 28 0E            jr z,3F
 195+ 9265 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9267              ;                                                    ; _salimos sin modificar nada.
 197+ 9267 CB 43        2 bit 0,e
 198+ 9269 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 926B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 926C CD 00 93         call Modificaccionne
 201+ 926F C1           	pop bc
 202+ 9270 CD 10 93         call Inicializacion
 203+ 9273 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9274
 205+ 9274              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9274
 207+ 9274 C5           4 push bc
 208+ 9275 01 D7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9278 0A           	ld a,(bc)
 210+ 9279 3D           	dec a
 211+ 927A 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 927B 7D           	ld a,l
 213+ 927C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 927D CB 47        	bit 0,a
 215+ 927F 28 03        	jr z,5F
 216+ 9281 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9282 18 2E        	jr 7F
 218+ 9284
 219+ 9284              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9284
 221+ 9284 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9285 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9286 3A 04 89     	ld a,(Ctrl_0)
 224+ 9289 CB 4F        	bit 1,a
 225+ 928B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 928D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 928E
 228+ 928E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 928E
 230+ 928E 1C               inc e
 231+ 928F 1D               dec e
 232+ 9290 20 07            jr nz,12F
 233+ 9292 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9293 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9294 22 D8 88     	ld (Posicion_actual),hl
 236+ 9297 18 44        13 jr 9F
 237+ 9299 CB 43        12 bit 0,e
 238+ 929B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 929D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 929D C1           	pop bc
 241+ 929E 18 D3        	jr 3B
 242+ 92A0 80           14 add b
 243+ 92A1 6F               ld l,a
 244+ 92A2 22 D8 88     	ld (Posicion_actual),hl
 245+ 92A5 CD 00 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 92A8 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 92AA E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 92AC 32 04 89         ld (Ctrl_0),a
 249+ 92AF F1           	pop af
 250+ 92B0 18 2B        	jr 9F
 251+ 92B2
 252+ 92B2              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 92B2
 254+ 92B2 F5           7 push af
 255+ 92B3 3A 04 89     	ld a,(Ctrl_0)
 256+ 92B6 CB 47        	bit 0,a
 257+ 92B8 20 1D        	jr nz,8F
 258+ 92BA F1           	pop af
 259+ 92BB
 260+ 92BB              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 92BB
 262+ 92BB 1C           	inc e
 263+ 92BC 1D               dec e
 264+ 92BD 20 07            jr nz,10F
 265+ 92BF 90           	sub b
 266+ 92C0 6F               ld l,a
 267+ 92C1 22 D8 88     	ld (Posicion_actual),hl
 268+ 92C4 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 92C6              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 92C6 CB 43        10 bit 0,e
 271+ 92C8 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 92CA              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 92CA C1           	pop bc
 274+ 92CB 18 A6        	jr 3B
 275+ 92CD 90           16 sub b
 276+ 92CE 6F               ld l,a
 277+ 92CF 22 D8 88     	ld (Posicion_actual),hl
 278+ 92D2 CD 00 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 92D5 18 06            jr 9F
 280+ 92D7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 92D9 32 04 89         ld (Ctrl_0),a
 282+ 92DC F1           	pop af
 283+ 92DD C1           9 pop bc
 284+ 92DE 1E 00        	ld e,0
 285+ 92E0 CD 10 93         call Inicializacion
 286+ 92E3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 92E4 08           	ex af,af
 288+ 92E5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 92E6 18 8B            jr 3B
 290+ 92E8
 291+ 92E8              ; --------------------
 292+ 92E8
 293+ 92E8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 92EA CD 64 94     1 call PreviousScan
 295+ 92ED 10 FB            djnz 1B
 296+ 92EF 22 D8 88     	ld (Posicion_actual),hl
 297+ 92F2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 92F3 C9           	ret
 299+ 92F4
 300+ 92F4              ; --------------------
 301+ 92F4
 302+ 92F4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 92F6 CD 55 94     1 call NextScan
 304+ 92F9 10 FB            djnz 1B
 305+ 92FB 22 D8 88     	ld (Posicion_actual),hl
 306+ 92FE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 92FF C9           	ret
 308+ 9300
 309+ 9300              ; --------------------
 310+ 9300              ;
 311+ 9300              ;	22/01/23
 312+ 9300              ;
 313+ 9300              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9300              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9300              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9300
 317+ 9300
 318+ 9300              Modificaccionne
 319+ 9300
 320+ 9300 3A EA 88     	ld a,(Cuad_objeto)
 321+ 9303 FE 02        	cp 2
 322+ 9305 CC E8 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 9308 DC E8 92         call c,Modifica_Pos_actual
 324+ 930B C8           	ret z
 325+ 930C CD F4 92         call Modifica_Pos_actual2
 326+ 930F C9               ret
 327+ 9310
 328+ 9310              ; *************************************************************************************************************************************************************************************************
 329+ 9310              ;
 330+ 9310              ;	13/8/22
 331+ 9310              ;
 332+ 9310              ;	Inicializacion
 333+ 9310              ;
 334+ 9310              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9310              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9310              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9310              ;
 338+ 9310              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9310              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9310              ;	_ desaparece/aparece.
 341+ 9310
 342+ 9310              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9310              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9310              ;
 345+ 9310              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9310              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9310              ; 		   [E] ="0"
 348+ 9310
 349+ 9310              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9310
 351+ 9310 CD 15 97     Inicializacion call calcula_tercio
 352+ 9313 28 36        	jr z,primit
 353+ 9315 E6 02        	and 2
 354+ 9317 20 07        	jr nz,segmit
 355+ 9319 7D           	ld a,l
 356+ 931A FE 7F        	cp $7f
 357+ 931C 38 2D        	jr c,primit
 358+ 931E 28 2B        	jr z,primit
 359+ 9320 CD 7D 93     segmit call column
 360+ 9323 38 13        	jr c,tercuad
 361+ 9325 3E 04        cuarcuad ld a,4
 362+ 9327 32 EA 88     	ld (Cuad_objeto),a
 363+ 932A 21 20 48     	ld hl,$4820
 364+ 932D 22 0F 89     	ld (Limite_horizontal),hl
 365+ 9330 21 11 89     	ld hl,Limite_vertical
 366+ 9333 36 0D        	ld (hl),$0d
 367+ 9335 08           	ex af,af
 368+ 9336 18 3C        	jr 1F
 369+ 9338              tercuad
 370+ 9338 3E 03        	ld a,3
 371+ 933A 32 EA 88     	ld (Cuad_objeto),a
 372+ 933D 21 20 48     	ld hl,$4820
 373+ 9340 22 0F 89     	ld (Limite_horizontal),hl
 374+ 9343 21 11 89     	ld hl,Limite_vertical
 375+ 9346 36 12        	ld (hl),$12
 376+ 9348 08           	ex af,af
 377+ 9349 18 29        	jr 1F
 378+ 934B CD 7D 93     primit call column
 379+ 934E 38 13        	jr c, primcuad
 380+ 9350              segcuad
 381+ 9350 3E 02        	ld a,2
 382+ 9352 32 EA 88     	ld (Cuad_objeto),a
 383+ 9355 21 C0 4F     	ld hl,$4fc0
 384+ 9358 22 0F 89     	ld (Limite_horizontal),hl
 385+ 935B 21 11 89     	ld hl,Limite_vertical
 386+ 935E 36 0D        	ld (hl),$0d
 387+ 9360 08           	ex af,af
 388+ 9361 18 11        	jr 1F
 389+ 9363              primcuad
 390+ 9363 3E 01        	ld a,1
 391+ 9365 32 EA 88     	ld (Cuad_objeto),a
 392+ 9368 21 C0 4F     	ld hl,$4fc0
 393+ 936B 22 0F 89     	ld (Limite_horizontal),hl
 394+ 936E 21 11 89     	ld hl,Limite_vertical
 395+ 9371 36 12        	ld (hl),$12
 396+ 9373 08           	ex af,af
 397+ 9374 CD 5B 9A     1 call Genera_coordenadas
 398+ 9377 21 04 89     	ld hl,Ctrl_0
 399+ 937A CB EE        	set 5,(hl)
 400+ 937C C9           	ret
 401+ 937D
 402+ 937D              ; ------------------------------------------------------------------------------------------------------------------
 403+ 937D
 404+ 937D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 937D              ;
 406+ 937D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 937D
 408+ 937D 7D           column ld a,l
 409+ 937E E6 1F        	and $1f
 410+ 9380 FE 10         	cp $10
 411+ 9382 C9            	ret
 412+ 9383
 413+ 9383              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9383              ;
 415+ 9383              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9383              ;
 417+ 9383              ; 14/12/22
 418+ 9383              ;
 419+ 9383              ;	Modifica: A y BC.
 420+ 9383
 421+ 9383 3A EA 88     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9386 E6 01        	and 1
 423+ 9388 28 17        	jr z,1F
 424+ 938A
 425+ 938A              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 938A
 427+ 938A 3A DC 88     	ld a,(Coordenada_X)
 428+ 938D 47           	ld b,a
 429+ 938E 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 938F 79           	ld a,c
 431+ 9390 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9391 38 08        	jr c,2F
 433+ 9393 47           	ld b,a
 434+ 9394 79           	ld a,c
 435+ 9395 90           	sub b
 436+ 9396 32 0E 89     	ld (Columnas),a
 437+ 9399 18 1B        	jr 4F
 438+ 939B 79           2 ld a,c
 439+ 939C 32 0E 89     	ld (Columnas),a
 440+ 939F 18 15        	jr 4F
 441+ 93A1
 442+ 93A1              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 93A1
 444+ 93A1 3A DC 88     1 ld a,(Coordenada_X)
 445+ 93A4 81           	add c
 446+ 93A5 3D           	dec a
 447+ 93A6 D6 1F        	sub $1f
 448+ 93A8 38 08        	jr c,3F
 449+ 93AA 47           	ld b,a
 450+ 93AB 79           	ld a,c
 451+ 93AC 90           	sub b
 452+ 93AD 32 0E 89     	ld (Columnas),a
 453+ 93B0 18 04        	jr 4F
 454+ 93B2 79           3 ld a,c
 455+ 93B3 32 0E 89     	ld (Columnas),a
 456+ 93B6 D9           4 exx
 457+ 93B7 4F           	ld c,a
 458+ 93B8 D9           	exx
 459+ 93B9 C9            ret
 460+ 93BA
 461+ 93BA              ; --------------------------------------------------------------------------------------------------------------------
 462+ 93BA              ;
 463+ 93BA              ; 7/1/23
 464+ 93BA              ;
 465+ 93BA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 93BA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 93BA              ;
 468+ 93BA              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 93BA              ;	DESTRUYE: HL,B Y A.
 470+ 93BA
 471+ 93BA 3A EA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 93BD FE 02        	cp 2
 473+ 93BF 38 18        	jr c,1F
 474+ 93C1 28 16        	jr z,1F
 475+ 93C3 E6 01        	and 1
 476+ 93C5 28 0D        	jr z,3F
 477+ 93C7
 478+ 93C7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 93C7
 480+ 93C7 CD 03 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 93CA
 482+ 93CA 7D           9 ld a,l
 483+ 93CB E6 1F        	and $1f
 484+ 93CD 28 2A        	jr z,7F
 485+ 93CF 2B           	dec hl
 486+ 93D0 10 F8        	djnz 9B
 487+ 93D2 18 25        	jr 7F
 488+ 93D4
 489+ 93D4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 93D4
 491+ 93D4 2A D8 88     3 ld hl,(Posicion_actual)
 492+ 93D7 18 20        	jr 7F
 493+ 93D9
 494+ 93D9 28 14        1 jr z,2F
 495+ 93DB
 496+ 93DB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 93DB
 498+ 93DB CD 03 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 93DE 7D           4 ld a,l
 500+ 93DF E6 1F        	and $1f
 501+ 93E1 28 03        	jr z,6F
 502+ 93E3 2B           	dec hl
 503+ 93E4 10 F8        	djnz 4B
 504+ 93E6 06 0F        6 ld b,15
 505+ 93E8 CD 64 94     5 call PreviousScan
 506+ 93EB 10 FB        	djnz 5B
 507+ 93ED 18 0A        	jr 7F
 508+ 93EF
 509+ 93EF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 93EF
 511+ 93EF CD 03 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 93F2 06 0F        	ld b,15
 513+ 93F4 CD 64 94     8 call PreviousScan
 514+ 93F7 10 FB        	djnz 8B
 515+ 93F9
 516+ 93F9 E5           7 push hl
 517+ 93FA DD E1        	pop ix
 518+ 93FC
 519+ 93FC 2A DA 88     	ld hl,(Puntero_objeto)
 520+ 93FF E5           	push hl
 521+ 9400 FD E1        	pop iy
 522+ 9402
 523+ 9402 C9           	ret
 524+ 9403
 525+ 9403              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9403              ;
 527+ 9403              ;	2/1/23
 528+ 9403              ;
 529+ 9403              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9403              ;
 531+ 9403              ;	Tras esta rutina tenemos:
 532+ 9403              ;
 533+ 9403              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9403              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9403              ;
 536+ 9403              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9403
 538+ 9403 2A D8 88     Operandos ld hl,(Posicion_actual)
 539+ 9406 3A 0E 89     	ld a,(Columnas)
 540+ 9409 3D           	dec a
 541+ 940A 20 01        	jr nz,1F
 542+ 940C 3C           	inc a
 543+ 940D 47           1 ld b,a
 544+ 940E C9           	ret
 545+ 940F
 546+ 940F              ; --------------------------------------------------------------------------------------------------------------------
 547+ 940F              ;
 548+ 940F              ;	3/1/23
 549+ 940F              ;
 550+ 940F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 940F              ;
 552+ 940F              ;	Destruye: A,B,HL y DE.
 553+ 940F
 554+ 940F              Define_rutina_de_impresion
 555+ 940F
 556+ 940F 3A D7 88     	ld a,(Columns)
 557+ 9412 47           	ld b,a
 558+ 9413 3A 0E 89     	ld a,(Columnas)
 559+ 9416 B8           	cp b
 560+ 9417 20 0D        	jr nz,2f
 561+ 9419
 562+ 9419              ;	La entidad se imprime entera.
 563+ 9419
 564+ 9419 21 E5 94     	ld hl, Indice_entidades_completas
 565+ 941C E6 01        	and 1
 566+ 941E 28 02        	jr z,1F
 567+ 9420
 568+ 9420 23           	inc hl
 569+ 9421 23           	inc hl
 570+ 9422
 571+ 9422 CD F0 8B     1 call Extrae_address
 572+ 9425 C9           	ret		;	ret
 573+ 9426
 574+ 9426              ;	La entidad no se imprime entera en pantalla.
 575+ 9426
 576+ 9426 3A EA 88     2 ld a,(Cuad_objeto)
 577+ 9429 E6 01        	and 1
 578+ 942B 28 17        	jr z,3F
 579+ 942D
 580+ 942D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 942D
 582+ 942D 21 E9 94     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9430 3A D7 88     4 ld a,(Columns)
 584+ 9433 E6 01        	and 1
 585+ 9435 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9437
 587+ 9437 23           	inc hl
 588+ 9438 23           	inc hl
 589+ 9439
 590+ 9439 3A 0E 89     	ld a,(Columnas)
 591+ 943C E6 01        	and 1
 592+ 943E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9440
 594+ 9440 23           	inc hl
 595+ 9441 23           	inc hl
 596+ 9442
 597+ 9442 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9444
 599+ 9444 21 EF 94     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9447 18 E7        	jr 4B
 601+ 9449
 602+ 9449              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9449              ;
 604+ 9449              ;	Prepara_draw
 605+ 9449              ;
 606+ 9449              ;	Es una rutina de carga.
 607+ 9449              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9449              ;
 609+ 9449              ;	FUNCIONAMIENTO:
 610+ 9449              ;
 611+ 9449              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9449              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9449              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9449              ;
 615+ 9449              ;	DESTRUYE:
 616+ 9449              ;
 617+ 9449              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9449
 619+ 9449 21 D6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 944C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 944D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 944E 4E           	ld c,(hl)
 623+ 944F 2A D8 88     	ld hl,(Posicion_actual)
 624+ 9452 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9454 C9           	ret
 626+ 9455
 627+ 9455              ;----------------------------------------------------------------------------------------------------------------
 628+ 9455              ;
 629+ 9455              ;	5/08/22
 630+ 9455              ;
 631+ 9455              ;   NextScan.
 632+ 9455              ;
 633+ 9455              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9455              ;
 635+ 9455              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9455              ;
 637+ 9455              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9455              ;
 639+ 9455              ;       DESTRUIDOS: AF y HL !!!
 640+ 9455              ;
 641+ 9455              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9455              ;
 643+ 9455
 644+ 9455 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9456 7C               ld a,h
 646+ 9457 E6 07            and 7
 647+ 9459 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 945A
 649+ 945A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 945B C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 945D 6F               ld l,a
 652+ 945E D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 945F
 654+ 945F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9460 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9462 67               ld h,a
 657+ 9463 C9               ret
 658+ 9464
 659+ 9464              ;----------------------------------------------------------------------------------------------------------------
 660+ 9464              ;
 661+ 9464              ;	5/08/22
 662+ 9464              ;
 663+ 9464              ;   PreviousScan.
 664+ 9464              ;
 665+ 9464              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9464              ;
 667+ 9464              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9464              ;
 669+ 9464              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9464              ;
 671+ 9464              ;       DESTRUIDOS: AF y HL !!!
 672+ 9464              ;
 673+ 9464              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9464              ;
 675+ 9464
 676+ 9464 7C           PreviousScan ld a,h
 677+ 9465 25               dec h               ; Dec H.
 678+ 9466 E6 07            and 7
 679+ 9468 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9469
 681+ 9469 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 946A D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 946C 6F               ld l,a
 684+ 946D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 946E
 686+ 946E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 946F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9471 67               ld h,a
 689+ 9472 C9               ret
 690+ 9473
 691+ 9473              ; -----------------------------------------------------------------------------------
 692+ 9473              ;
 693+ 9473              ;	28/2/23
 694+ 9473              ;
 695+ 9473              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9473              ;	Extrae fotos de Album_de_fotos.
 697+ 9473
 698+ 9473 3A 1D 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9476 A7           	and a
 700+ 9477 C8           	ret z
 701+ 9478 ED 73 22 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 947C 31 00 70     	ld sp,Album_de_fotos
 703+ 947F
 704+ 947F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9481 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9482 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9483
 708+ 9483 ED 73 24 89  	ld (Stack_2),sp
 709+ 9487 ED 7B 22 89  	ld sp,(Stack)
 710+ 948B
 711+ 948B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 948B
 713+ 948B 3E CD        	ld a,$cd
 714+ 948D 32 95 94     	ld (Imprime),a
 715+ 9490 EB           	ex de,hl
 716+ 9491 22 96 94     	ld (Imprime+1),hl
 717+ 9494 EB           	ex de,hl
 718+ 9495
 719+ 9495              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9495
 721+ 9495 00 00 00     Imprime db 0,0,0
 722+ 9498
 723+ 9498 3A 1D 89     	ld a,(Numero_de_malotes)
 724+ 949B 3D           	dec a
 725+ 949C 28 09        	jr z,1F
 726+ 949E 32 1D 89      	ld (Numero_de_malotes),a
 727+ 94A1
 728+ 94A1 ED 7B 24 89   	ld sp,(Stack_2)
 729+ 94A5 18 D8        	jr 2B
 730+ 94A7
 731+ 94A7 AF           1 xor a
 732+ 94A8 32 24 89     	ld (Stack_2),a
 733+ 94AB C9           	ret
 734+ 94AC
 735+ 94AC              ; -----------------------------------------------------------------------------------
 736+ 94AC              ;
 737+ 94AC              ;	28/2/23
 738+ 94AC              ;
 739+ 94AC              ;	Pinta los disparos generados.
 740+ 94AC
 741+ 94AC              Extrae_foto_disparos
 742+ 94AC
 743+ 94AC 3A 2A 89     	ld a,(Numero_de_disparotes)
 744+ 94AF A7           	and a
 745+ 94B0 C8           	ret z
 746+ 94B1 ED 73 22 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94B5 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 94B8
 749+ 94B8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 94BA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 94BB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 94BC
 753+ 94BC ED 73 24 89  	ld (Stack_2),sp
 754+ 94C0 ED 7B 22 89  	ld sp,(Stack)
 755+ 94C4
 756+ 94C4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 94C4
 758+ 94C4 3E CD        	ld a,$cd
 759+ 94C6 32 CE 94     	ld (Imprime2),a
 760+ 94C9 EB           	ex de,hl
 761+ 94CA 22 CF 94     	ld (Imprime2+1),hl
 762+ 94CD EB           	ex de,hl
 763+ 94CE
 764+ 94CE              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94CE
 766+ 94CE 00 00 00     Imprime2 db 0,0,0
 767+ 94D1
 768+ 94D1 3A 2A 89     	ld a,(Numero_de_disparotes)
 769+ 94D4 3D           	dec a
 770+ 94D5 28 09        	jr z,1F
 771+ 94D7 32 2A 89      	ld (Numero_de_disparotes),a
 772+ 94DA
 773+ 94DA ED 7B 24 89  	ld sp,(Stack_2)
 774+ 94DE 18 D8        	jr 2B
 775+ 94E0
 776+ 94E0 AF           1 xor a
 777+ 94E1 32 24 89     	ld (Stack_2),a
 778+ 94E4 C9           	ret
 779+ 94E5
# file closed: Draw_XOR.asm
1185  94E5              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 94E5              ;   índices de Rutinas de impresión.
   2+ 94E5
   3+ 94E5 F5 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 94E7 22 95            defw Pinta_Amadeus_3x2
   5+ 94E9
   6+ 94E9 78 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94EB 18 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94ED CC 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94EF
  10+ 94EF A2 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94F1 A6 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94F3 5A 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94F5
  14+ 94F5
  15+ 94F5              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94F5              ;
  17+ 94F5              ;   12/12/22
  18+ 94F5              ;
  19+ 94F5              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94F5              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94F5              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94F5              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94F5              ;
  24+ 94F5              ;   Modifica: DE y HL.
  25+ 94F5
  26+ 94F5 ED 73 22 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94F9 FD F9        	ld sp,iy
  28+ 94FB 06 10            ld b,16
  29+ 94FD D1           1 pop de
  30+ 94FE 7B               ld a,e
  31+ 94FF AE               xor (hl)
  32+ 9500 77           	ld (hl),a
  33+ 9501 23           	inc hl
  34+ 9502 7A               ld a,d
  35+ 9503 AE               xor (hl)
  36+ 9504 77           	ld (hl),a
  37+ 9505 2B           	dec hl
  38+ 9506 24           	inc h
  39+ 9507 7C               ld a,h
  40+ 9508 E6 07            and 7
  41+ 950A 20 0A            jr nz,2F
  42+ 950C 7D               ld a,l
  43+ 950D C6 20            add a,$20
  44+ 950F 6F               ld l,a
  45+ 9510 38 04            jr c,2F
  46+ 9512 7C               ld a,h
  47+ 9513 D6 08            sub 8
  48+ 9515 67               ld h,a
  49+ 9516 7C           2 ld a,h
  50+ 9517 FE 58            cp $58
  51+ 9519 28 02            jr z,3F
  52+ 951B 10 E0            djnz 1B
  53+ 951D ED 7B 22 89  3 ld sp,(Stack)
  54+ 9521 C9           	ret
  55+ 9522
  56+ 9522 ED 73 22 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9526 FD F9        	ld sp,iy
  58+ 9528 06 08            ld b,8
  59+ 952A D1           1 pop de
  60+ 952B 7B               ld a,e
  61+ 952C AE               xor (hl)
  62+ 952D 77           	ld (hl),a
  63+ 952E 23           	inc hl
  64+ 952F 7A               ld a,d
  65+ 9530 AE               xor (hl)
  66+ 9531 77           	ld (hl),a
  67+ 9532 23           	inc hl
  68+ 9533 D1           	pop de
  69+ 9534 7B               ld a,e
  70+ 9535 AE               xor (hl)
  71+ 9536 77           	ld (hl),a
  72+ 9537 2B           	dec hl
  73+ 9538 2B           	dec hl
  74+ 9539 24           	inc h
  75+ 953A 7C               ld a,h
  76+ 953B E6 07            and 7
  77+ 953D 20 0A            jr nz,2F
  78+ 953F 7D               ld a,l
  79+ 9540 C6 20            add a,$20
  80+ 9542 6F               ld l,a
  81+ 9543 38 04            jr c,2F
  82+ 9545 7C               ld a,h
  83+ 9546 D6 08            sub 8
  84+ 9548 67               ld h,a
  85+ 9549 7C           2 ld a,h
  86+ 954A FE 58            cp $58
  87+ 954C 28 25            jr z,4F
  88+ 954E 7A               ld a,d
  89+ 954F AE               xor (hl)
  90+ 9550 77               ld (hl),a
  91+ 9551 D1           	pop de
  92+ 9552 23           	inc hl
  93+ 9553 7B               ld a,e
  94+ 9554 AE               xor (hl)
  95+ 9555 77           	ld (hl),a
  96+ 9556 23           	inc hl
  97+ 9557 7A               ld a,d
  98+ 9558 AE               xor (hl)
  99+ 9559 77           	ld (hl),a
 100+ 955A 2B           	dec hl
 101+ 955B 2B           	dec hl
 102+ 955C 24           	inc h
 103+ 955D 7C               ld a,h
 104+ 955E E6 07            and 7
 105+ 9560 20 0A            jr nz,3F
 106+ 9562 7D               ld a,l
 107+ 9563 C6 20            add a,$20
 108+ 9565 6F               ld l,a
 109+ 9566 38 04            jr c,3F
 110+ 9568 7C               ld a,h
 111+ 9569 D6 08            sub 8
 112+ 956B 67               ld h,a
 113+ 956C 7C           3 ld a,h
 114+ 956D FE 58            cp $58
 115+ 956F 28 02            jr z,4F
 116+ 9571 10 B7            djnz 1B
 117+ 9573 ED 7B 22 89  4 ld sp,(Stack)
 118+ 9577 C9           	ret
 119+ 9578
 120+ 9578              ; ---------------------------------------------------
 121+ 9578
 122+ 9578 ED 73 22 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 957C FD F9        	ld sp,iy
 124+ 957E
 125+ 957E              ; >>>
 126+ 957E
 127+ 957E 06 10            ld b,16
 128+ 9580 D1           1 pop de
 129+ 9581 7A           	ld a,d
 130+ 9582 AE           	xor (hl)
 131+ 9583 77           	ld (hl),a
 132+ 9584 24           	inc h
 133+ 9585 7C               ld a,h
 134+ 9586 E6 07            and 7
 135+ 9588 20 0C            jr nz,2F
 136+ 958A 7D               ld a,l
 137+ 958B C6 20            add a,$20
 138+ 958D 6F               ld l,a
 139+ 958E 38 06            jr c,2F
 140+ 9590 7C               ld a,h
 141+ 9591 D6 08            sub 8
 142+ 9593 67               ld h,a
 143+ 9594 18 00            jr 2F
 144+ 9596 7C           2 ld a,h
 145+ 9597 FE 58            cp $58
 146+ 9599 28 02            jr z,3F
 147+ 959B 10 E3            djnz 1B
 148+ 959D ED 7B 22 89  3 ld sp,(Stack)
 149+ 95A1 C9           	ret
 150+ 95A2
 151+ 95A2 ED 73 22 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 95A6 FD F9        	ld sp,iy
 153+ 95A8
 154+ 95A8              ; >>>
 155+ 95A8
 156+ 95A8 06 10            ld b,16
 157+ 95AA D1           1 pop de
 158+ 95AB 7B           	ld a,e
 159+ 95AC AE           	xor (hl)
 160+ 95AD 77           	ld (hl),a
 161+ 95AE 24           	inc h
 162+ 95AF 7C               ld a,h
 163+ 95B0 E6 07            and 7
 164+ 95B2 20 0C            jr nz,2F
 165+ 95B4 7D               ld a,l
 166+ 95B5 C6 20            add a,$20
 167+ 95B7 6F               ld l,a
 168+ 95B8 38 06            jr c,2F
 169+ 95BA 7C               ld a,h
 170+ 95BB D6 08            sub 8
 171+ 95BD 67               ld h,a
 172+ 95BE 18 00            jr 2F
 173+ 95C0 7C           2 ld a,h
 174+ 95C1 FE 58            cp $58
 175+ 95C3 28 02            jr z,3F
 176+ 95C5 10 E3            djnz 1B
 177+ 95C7 ED 7B 22 89  3 ld sp,(Stack)
 178+ 95CB C9           	ret
 179+ 95CC
 180+ 95CC              ; ---------------------------------------------------
 181+ 95CC
 182+ 95CC ED 73 22 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 95D0 FD F9        	ld sp,iy
 184+ 95D2 06 08            ld b,8
 185+ 95D4 D1           1 pop de
 186+ 95D5 7A           	ld a,d
 187+ 95D6 AE           	xor (hl)
 188+ 95D7 77           	ld (hl),a
 189+ 95D8 23           	inc hl
 190+ 95D9 D1           	pop de
 191+ 95DA 7B           	ld a,e
 192+ 95DB AE           	xor (hl)
 193+ 95DC 77           	ld (hl),a
 194+ 95DD 2B           	dec hl
 195+ 95DE 24            	inc h
 196+ 95DF 7C               ld a,h
 197+ 95E0 E6 07            and 7
 198+ 95E2 20 0A            jr nz,2F
 199+ 95E4 7D               ld a,l
 200+ 95E5 C6 20            add a,$20
 201+ 95E7 6F               ld l,a
 202+ 95E8 38 04            jr c,2F
 203+ 95EA 7C               ld a,h
 204+ 95EB D6 08            sub 8
 205+ 95ED 67               ld h,a
 206+ 95EE 7C           2 ld a,h
 207+ 95EF FE 58            cp $58
 208+ 95F1 28 20            jr z,4F
 209+ 95F3 D1               pop de
 210+ 95F4 7B           	ld a,e
 211+ 95F5 AE           	xor (hl)
 212+ 95F6 77           	ld (hl),a
 213+ 95F7 23           	inc hl
 214+ 95F8 7A           	ld a,d
 215+ 95F9 AE           	xor (hl)
 216+ 95FA 77           	ld (hl),a
 217+ 95FB 2B           	dec hl
 218+ 95FC 24           	inc h
 219+ 95FD 7C               ld a,h
 220+ 95FE E6 07            and 7
 221+ 9600 20 0A            jr nz,3F
 222+ 9602 7D               ld a,l
 223+ 9603 C6 20            add a,$20
 224+ 9605 6F               ld l,a
 225+ 9606 38 04            jr c,3F
 226+ 9608 7C               ld a,h
 227+ 9609 D6 08            sub 8
 228+ 960B 67               ld h,a
 229+ 960C 7C           3 ld a,h
 230+ 960D FE 58            cp $58
 231+ 960F 28 02            jr z,4F
 232+ 9611 10 C1            djnz 1B
 233+ 9613 ED 7B 22 89  4 ld sp,(Stack)
 234+ 9617 C9           	ret
 235+ 9618
 236+ 9618 ED 73 22 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 961C FD F9        	ld sp,iy
 238+ 961E 06 08            ld b,8
 239+ 9620 D1           1 pop de
 240+ 9621 D1           	pop de
 241+ 9622 7B           	ld a,e
 242+ 9623 AE           	xor (hl)
 243+ 9624 77           	ld (hl),a
 244+ 9625 24            	inc h
 245+ 9626 7C               ld a,h
 246+ 9627 E6 07            and 7
 247+ 9629 20 0A            jr nz,2F
 248+ 962B 7D               ld a,l
 249+ 962C C6 20            add a,$20
 250+ 962E 6F               ld l,a
 251+ 962F 38 04            jr c,2F
 252+ 9631 7C               ld a,h
 253+ 9632 D6 08            sub 8
 254+ 9634 67               ld h,a
 255+ 9635 7C           2 ld a,h
 256+ 9636 FE 58            cp $58
 257+ 9638 28 1B            jr z,4F
 258+ 963A D1               pop de
 259+ 963B 7A           	ld a,d
 260+ 963C AE           	xor (hl)
 261+ 963D 77           	ld (hl),a
 262+ 963E 24           	inc h
 263+ 963F 7C               ld a,h
 264+ 9640 E6 07            and 7
 265+ 9642 20 0A            jr nz,3F
 266+ 9644 7D               ld a,l
 267+ 9645 C6 20            add a,$20
 268+ 9647 6F               ld l,a
 269+ 9648 38 04            jr c,3F
 270+ 964A 7C               ld a,h
 271+ 964B D6 08            sub 8
 272+ 964D 67               ld h,a
 273+ 964E 7C           3 ld a,h
 274+ 964F FE 58            cp $58
 275+ 9651 28 02            jr z,4F
 276+ 9653 10 CB            djnz 1B
 277+ 9655 ED 7B 22 89  4 ld sp,(Stack)
 278+ 9659 C9           	ret
 279+ 965A
 280+ 965A ED 73 22 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 965E FD F9        	ld sp,iy
 282+ 9660 06 08            ld b,8
 283+ 9662 D1           1 pop de
 284+ 9663 7B           	ld a,e
 285+ 9664 AE           	xor (hl)
 286+ 9665 77           	ld (hl),a
 287+ 9666 23           	inc hl
 288+ 9667 7A           	ld a,d
 289+ 9668 AE           	xor (hl)
 290+ 9669 77           	ld (hl),a
 291+ 966A 2B           	dec hl
 292+ 966B 24             	inc h
 293+ 966C 7C               ld a,h
 294+ 966D E6 07            and 7
 295+ 966F 20 0A            jr nz,2F
 296+ 9671 7D               ld a,l
 297+ 9672 C6 20            add a,$20
 298+ 9674 6F               ld l,a
 299+ 9675 38 04            jr c,2F
 300+ 9677 7C               ld a,h
 301+ 9678 D6 08            sub 8
 302+ 967A 67               ld h,a
 303+ 967B 7C           2 ld a,h
 304+ 967C FE 58            cp $58
 305+ 967E 28 21            jr z,4F
 306+ 9680 D1               pop de
 307+ 9681 7A           	ld a,d
 308+ 9682 AE           	xor (hl)
 309+ 9683 77           	ld (hl),a
 310+ 9684 23           	inc hl
 311+ 9685 D1               pop de
 312+ 9686 7B           	ld a,e
 313+ 9687 AE           	xor (hl)
 314+ 9688 77           	ld (hl),a
 315+ 9689 2B           	dec hl
 316+ 968A 24           	inc h
 317+ 968B 7C               ld a,h
 318+ 968C E6 07            and 7
 319+ 968E 20 0A            jr nz,3F
 320+ 9690 7D               ld a,l
 321+ 9691 C6 20            add a,$20
 322+ 9693 6F               ld l,a
 323+ 9694 38 04            jr c,3F
 324+ 9696 7C               ld a,h
 325+ 9697 D6 08            sub 8
 326+ 9699 67               ld h,a
 327+ 969A 7C           3 ld a,h
 328+ 969B FE 58            cp $58
 329+ 969D 28 02            jr z,4F
 330+ 969F 10 C1            djnz 1B
 331+ 96A1 ED 7B 22 89  4 ld sp,(Stack)
 332+ 96A5 C9           	ret
 333+ 96A6
 334+ 96A6 ED 73 22 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 96AA FD F9        	ld sp,iy
 336+ 96AC 06 08            ld b,8
 337+ 96AE D1           1 pop de
 338+ 96AF 7B           	ld a,e
 339+ 96B0 AE           	xor (hl)
 340+ 96B1 77           	ld (hl),a
 341+ 96B2 24            	inc h
 342+ 96B3 7C               ld a,h
 343+ 96B4 E6 07            and 7
 344+ 96B6 20 0A            jr nz,2F
 345+ 96B8 7D               ld a,l
 346+ 96B9 C6 20            add a,$20
 347+ 96BB 6F               ld l,a
 348+ 96BC 38 04            jr c,2F
 349+ 96BE 7C               ld a,h
 350+ 96BF D6 08            sub 8
 351+ 96C1 67               ld h,a
 352+ 96C2 7C           2 ld a,h
 353+ 96C3 FE 58            cp $58
 354+ 96C5 28 1C            jr z,4F
 355+ 96C7 D1               pop de
 356+ 96C8 7A           	ld a,d
 357+ 96C9 AE           	xor (hl)
 358+ 96CA 77           	ld (hl),a
 359+ 96CB 24           	inc h
 360+ 96CC 7C               ld a,h
 361+ 96CD E6 07            and 7
 362+ 96CF 20 0A            jr nz,3F
 363+ 96D1 7D               ld a,l
 364+ 96D2 C6 20            add a,$20
 365+ 96D4 6F               ld l,a
 366+ 96D5 38 04            jr c,3F
 367+ 96D7 7C               ld a,h
 368+ 96D8 D6 08            sub 8
 369+ 96DA 67               ld h,a
 370+ 96DB 7C           3 ld a,h
 371+ 96DC FE 58            cp $58
 372+ 96DE 28 03            jr z,4F
 373+ 96E0 D1               pop de
 374+ 96E1 10 CB            djnz 1B
 375+ 96E3 ED 7B 22 89  4 ld sp,(Stack)
 376+ 96E7 C9           	ret
 377+ 96E8
 378+ 96E8              ; ---------------------------------------------------
 379+ 96E8              ;
 380+ 96E8              ;   27/02/23
 381+ 96E8              ;
 382+ 96E8              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96E8              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96E8              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96E8
 386+ 96E8 ED 73 22 89  Pinta_Disparo ld (Stack),sp
 387+ 96EC FD F9            ld sp,iy
 388+ 96EE 06 02            ld b,2
 389+ 96F0 D1           1 pop de
 390+ 96F1 7B               ld a,e
 391+ 96F2 AE               xor (hl)
 392+ 96F3 77               ld (hl),a
 393+ 96F4 23               inc hl
 394+ 96F5 7A               ld a,d
 395+ 96F6 AE               xor (hl)
 396+ 96F7 77               ld (hl),a
 397+ 96F8 2B               dec hl
 398+ 96F9
 399+ 96F9 24               inc h
 400+ 96FA 7C               ld a,h
 401+ 96FB E6 07            and 7
 402+ 96FD 20 0A            jr nz,2F
 403+ 96FF 7D               ld a,l
 404+ 9700 C6 20            add a,$20
 405+ 9702 6F               ld l,a
 406+ 9703 38 04            jr c,2F
 407+ 9705 7C               ld a,h
 408+ 9706 D6 08            sub 8
 409+ 9708 67               ld h,a
 410+ 9709 7C           2 ld a,h
 411+ 970A FE 58            cp $58
 412+ 970C 28 02            jr z,3F
 413+ 970E
 414+ 970E 10 E0            djnz 1B
 415+ 9710 ED 7B 22 89  3 ld sp,(Stack)
 416+ 9714 C9               ret
 417+ 9715
# file closed: Rutinas_de_impresion_sprites.asm
1186  9715              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9715              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9715              ;
   3+ 9715              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9715              ;
   5+ 9715              ; *****************************************************************************************************************************************************************************************
   6+ 9715              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9715
   8+ 9715 7C           calcula_tercio ld a,h
   9+ 9716 E6 18        	and $18
  10+ 9718 CB 2F        	sra a
  11+ 971A CB 2F        	sra a
  12+ 971C CB 2F        	sra a
  13+ 971E C9           	ret
  14+ 971F
# file closed: calcula_tercio.asm
1187  971F              	include "Cls.asm"
# file opened: Cls.asm
   1+ 971F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 971F              ;
   3+ 971F              ;
   4+ 971F              ;	CLS.
   5+ 971F              ;
   6+ 971F              ;	Limpia la pantalla y define sus atributos.
   7+ 971F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 971F              ;
   9+ 971F              ;	COLORES: 0 ..... NEGRO
  10+ 971F              ;    		 1 ..... AZUL
  11+ 971F              ; 			 2 ..... ROJO
  12+ 971F              ;			 3 ..... MAGENTA
  13+ 971F              ; 			 4 ..... VERDE
  14+ 971F              ; 			 5 ..... CIAN
  15+ 971F              ;			 6 ..... AMARILLO
  16+ 971F              ; 			 7 ..... BLANCO
  17+ 971F              ;
  18+ 971F              ;	INPUT: A contiene los atributos de pantalla.
  19+ 971F              ;
  20+ 971F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 971F
  22+ 971F
  23+ 971F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9722 11 01 40     	LD DE,$4001
  25+ 9725 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9728 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 972A ED B0        	LDIR
  28+ 972C 01 FF 02     	LD BC,767
  29+ 972F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9730 ED B0        	LDIR
  31+ 9732 C9           	ret
  32+ 9733
# file closed: Cls.asm
1188  9733              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9733              ; ******************************************************************************************************************************************************************************************
   2+ 9733              ;
   3+ 9733              ;   20/05/23
   4+ 9733              ;
   5+ 9733              ;	Recompone_posicion_inicio
   6+ 9733              ;
   7+ 9733              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9733              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9733              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9733              ;	_ a una u otra rutina.
  11+ 9733
  12+ 9733              Recompone_posicion_inicio
  13+ 9733
  14+ 9733 2A E8 88     	ld hl,(Posicion_inicio)
  15+ 9736 7D           	ld a,l
  16+ 9737 E6 1F        	and $1f
  17+ 9739 28 08        	jr z,1F
  18+ 973B
  19+ 973B FE 1F        	cp $1f
  20+ 973D C0           	ret nz
  21+ 973E
  22+ 973E CD C7 98     	call Mov_left
  23+ 9741 18 03        	jr 2F
  24+ 9743
  25+ 9743
  26+ 9743 CD A9 97     1 call Mov_right
  27+ 9746 21 00 F0     2 ld hl,Sprite_vacio
  28+ 9749 22 DA 88     	ld (Puntero_objeto),hl
  29+ 974C C9           	ret
  30+ 974D
  31+ 974D              ; ******************************************************************************************************************************************************************************************
  32+ 974D              ;
  33+ 974D              ;   22/01/23
  34+ 974D              ;
  35+ 974D              ;	Mov_down
  36+ 974D              ;
  37+ 974D              ; 	Mueve el Sprite X px hacia abajo.
  38+ 974D              ;
  39+ 974D              ;
  40+ 974D 21 04 89     Mov_down ld hl,Ctrl_0
  41+ 9750 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  42+ 9752              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  43+ 9752              ; 																	; _ en el caso de que no lo haya.
  44+ 9752 3A EE 88     	ld a,(Vel_down)
  45+ 9755 47           	ld b,a
  46+ 9756 2A D8 88         ld hl,(Posicion_actual)
  47+ 9759 CD 15 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  48+ 975C E6 02        	and 2
  49+ 975E 28 0F        	jr z,1F
  50+ 9760
  51+ 9760              ; Nos encontramos en el último tercio de pantalla.
  52+ 9760              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  53+ 9760
  54+ 9760 7C           	ld a,h
  55+ 9761 FE 57        	cp $57
  56+ 9763 20 0A        	jr nz,1F
  57+ 9765 7D           	ld a,l
  58+ 9766 C6 20        	add $20
  59+ 9768 30 05        	jr nc,1F
  60+ 976A
  61+ 976A              ; ------------------------------
  62+ 976A CD 45 9A     	call Reaparece_arriba
  63+ 976D              ;	call Reinicio
  64+ 976D              ; ------------------------------
  65+ 976D
  66+ 976D 18 08        	jr 3F
  67+ 976F CD 55 94     1 call NextScan
  68+ 9772 22 D8 88     	ld (Posicion_actual),hl
  69+ 9775 10 E2            djnz 2B
  70+ 9777 CD 5B 9A     3 call Genera_coordenadas
  71+ 977A C9           	ret
  72+ 977B
  73+ 977B              ; ******************************************************************************************************************************************************************************************
  74+ 977B              ;
  75+ 977B              ;   22/01/23
  76+ 977B              ;
  77+ 977B              ;	Mov_up
  78+ 977B              ;
  79+ 977B              ; 	Mueve el Sprite hacia arriba.
  80+ 977B              ;
  81+ 977B              ;
  82+ 977B 21 04 89     Mov_up ld hl,Ctrl_0
  83+ 977E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  84+ 9780              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  85+ 9780              ; 																		; _ en el caso de que no lo haya.
  86+ 9780 3A ED 88     	ld a,(Vel_up)
  87+ 9783 47           	ld b,a
  88+ 9784 2A D8 88     	ld hl,(Posicion_actual)
  89+ 9787 CD 15 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  90+ 978A A7           	and a
  91+ 978B 20 10        	jr nz,1F
  92+ 978D
  93+ 978D              ; Nos encontramos en el 1er tercio de pantalla.
  94+ 978D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  95+ 978D
  96+ 978D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  97+ 978E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  98+ 9790 20 0B            jr nz,1F
  99+ 9792 7D               ld a,l
 100+ 9793 D6 20            sub $20
 101+ 9795 30 06            jr nc,1F
 102+ 9797 25               dec h
 103+ 9798
 104+ 9798              ; -----------------------------
 105+ 9798 CD 35 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 106+ 979B              ;	call Reinicio
 107+ 979B              ; -----------------------------
 108+ 979B
 109+ 979B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 110+ 979D CD 64 94     1 call PreviousScan
 111+ 97A0 22 D8 88     	ld (Posicion_actual),hl
 112+ 97A3 10 E2            djnz 3B
 113+ 97A5 CD 5B 9A     2 call Genera_coordenadas
 114+ 97A8 C9           	ret
 115+ 97A9
 116+ 97A9              ; ******************************************************************************************************************************************************************************************
 117+ 97A9              ;
 118+ 97A9              ;	19/10/22
 119+ 97A9              ;
 120+ 97A9              ;	Mov_right.
 121+ 97A9              ;
 122+ 97A9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 123+ 97A9              ;
 124+ 97A9
 125+ 97A9 21 04 89     Mov_right ld hl,Ctrl_0
 126+ 97AC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 127+ 97AE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 128+ 97AE              ; 																	; _ en el caso de que no lo haya.
 129+ 97AE 3A 04 89     	ld a,(Ctrl_0)
 130+ 97B1 CB 77        	bit 6,a
 131+ 97B3 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 132+ 97B5
 133+ 97B5 CD E3 99     	call Stop_Amadeus_right
 134+ 97B8 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 135+ 97B9 18 4D        	jr 8F
 136+ 97BB
 137+ 97BB 3A DC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 138+ 97BE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 139+ 97C0 20 46        	jr nz,8F
 140+ 97C2
 141+ 97C2 3A DE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 142+ 97C5 A7           	and a 															; _[3] para continuar con el DESPLZ.
 143+ 97C6 28 40        	jr z,8F
 144+ 97C8
 145+ 97C8              ; ---------- ---------- ----------
 146+ 97C8              ;
 147+ 97C8              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 148+ 97C8
 149+ 97C8 3A EC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 150+ 97CB FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 151+ 97CD 28 11        	jr z,1F
 152+ 97CF 38 06        	jr c,6F
 153+ 97D1 FE 04        	cp 4
 154+ 97D3 28 14        	jr z,7F
 155+ 97D5 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 156+ 97D7
 157+ 97D7              ; ---------- ---------- ----------
 158+ 97D7              ;
 159+ 97D7              ; Perfiles de velocidad
 160+ 97D7              ;
 161+ 97D7
 162+ 97D7 3A DE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 163+ 97DA FE FE        	cp $fe
 164+ 97DC 20 2A        	jr nz,8F
 165+ 97DE 18 10        	jr 3F
 166+ 97E0 3A DE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 167+ 97E3 FE FD        	cp $fd
 168+ 97E5 20 21        	jr nz,8F
 169+ 97E7 18 07        	jr 3F
 170+ 97E9 3A DE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 171+ 97EC FE FB        	cp $fb
 172+ 97EE 20 18        	jr nz,8F
 173+ 97F0
 174+ 97F0              ; ---------- ---------- ----------
 175+ 97F0
 176+ 97F0              3
 177+ 97F0 CD 23 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 178+ 97F3              ;	call Reinicio
 179+ 97F3
 180+ 97F3              ; ---------- ---------- ----------
 181+ 97F3              ;
 182+ 97F3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 183+ 97F3
 184+ 97F3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 185+ 97F5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 186+ 97F6 CD 0F 98     	call DESPLZ_DER
 187+ 97F9 C1           	pop bc
 188+ 97FA 10 F9        	djnz 5B
 189+ 97FC 2A D8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 190+ 97FF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 191+ 9800 22 D8 88     	ld (Posicion_actual),hl
 192+ 9803 CD 5B 9A     	call Genera_coordenadas
 193+ 9806 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 194+ 9808
 195+ 9808              ; ---------- ---------- ----------
 196+ 9808
 197+ 9808 2A D8 88     8 ld hl,(Posicion_actual)
 198+ 980B CD 0F 98     	call DESPLZ_DER
 199+ 980E C9           2 ret
 200+ 980F
 201+ 980F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 202+ 980F              ;
 203+ 980F              ;	22/9/22
 204+ 980F              ;
 205+ 980F
 206+ 980F CD 1E 98     DESPLZ_DER call Desplaza_derecha
 207+ 9812 CD 6A 98         call modifica_parametros_1er_DESPLZ_2
 208+ 9815 CD 93 98         call Ciclo_completo
 209+ 9818 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 210+ 981B CB FE        	set 7,(hl)
 211+ 981D C9           	ret
 212+ 981E
 213+ 981E              ; ******************************************************************************************************************************************************************************************
 214+ 981E              ;	15/02/23
 215+ 981E              ;
 216+ 981E
 217+ 981E 3A EC 88     Desplaza_derecha ld a,(Vel_right)
 218+ 9821 47           	ld b,a
 219+ 9822 2A E4 88     	ld hl,(Puntero_DESPLZ_der)
 220+ 9825 23           1 inc hl
 221+ 9826 23           	inc hl
 222+ 9827 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 223+ 9829 22 E4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 224+ 982C CD F0 8B     	call Extrae_address
 225+ 982F 22 DA 88     	ld (Puntero_objeto),hl
 226+ 9832
 227+ 9832              ; Modifica (Puntero_DESPLZ_izq).
 228+ 9832
 229+ 9832              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 230+ 9832              ; Cuántos movimientos hemos hecho ??
 231+ 9832              ; DE contiene (Puntero_DESPLZ_der).
 232+ 9832
 233+ 9832 2A E0 88     7 ld hl,(Indice_Sprite_der)
 234+ 9835 EB           	ex de,hl
 235+ 9836 A7           	and a
 236+ 9837 ED 52        	sbc hl,de
 237+ 9839 CB 3D        	srl l
 238+ 983B 3E 08        6 ld a,8
 239+ 983D 95           	sub l
 240+ 983E 30 1E        	jr nc,3F
 241+ 9840
 242+ 9840              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 243+ 9840              ; B="0".
 244+ 9840
 245+ 9840 04           4 inc b
 246+ 9841 3C           	inc a
 247+ 9842 20 FC        	jr nz,4B
 248+ 9844 78           	ld a,b
 249+ 9845 08           	ex af,af
 250+ 9846 2A E0 88     	ld hl,(Indice_Sprite_der)
 251+ 9849 23           5 inc hl
 252+ 984A 23           	inc hl
 253+ 984B 10 FC        	djnz 5B
 254+ 984D 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 255+ 9850 CD F0 8B     	call Extrae_address
 256+ 9853 22 DA 88     	ld (Puntero_objeto),hl
 257+ 9856
 258+ 9856              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 259+ 9856              ; _(Posicion_actual).
 260+ 9856
 261+ 9856 21 D8 88     	ld hl,Posicion_actual
 262+ 9859 34           	inc (hl)
 263+ 985A 08               ex af,af
 264+ 985B 6F           	ld l,a
 265+ 985C 18 DD        	jr 6B
 266+ 985E
 267+ 985E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 268+ 985E
 269+ 985E 47           3 ld b,a
 270+ 985F 2A E2 88     	ld hl,(Indice_Sprite_izq)
 271+ 9862 23           2 inc hl
 272+ 9863 23           	inc hl
 273+ 9864 10 FC        	djnz 2B
 274+ 9866 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 275+ 9869 C9           8 ret
 276+ 986A
 277+ 986A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 986A              ;
 279+ 986A              ;	24/7/22
 280+ 986A              ;
 281+ 986A              ;	modifica_parametros_1er_DESPLZ_2
 282+ 986A              ;
 283+ 986A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 284+ 986A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 285+ 986A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 286+ 986A
 287+ 986A 3A DE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 288+ 986D A7           	and a
 289+ 986E 20 1F        	jr nz,1F
 290+ 9870 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 291+ 9872 32 DE 88         ld (CTRL_DESPLZ),a
 292+ 9875
 293+ 9875 21 D7 88     	ld hl,Columns
 294+ 9878 34           	inc (hl)
 295+ 9879 3A EA 88     	ld a,(Cuad_objeto)
 296+ 987C E6 01        	and 1
 297+ 987E 28 0F        	jr z,1F
 298+ 9880 2A D8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 299+ 9883 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 300+ 9884 22 D8 88     	ld (Posicion_actual),hl
 301+ 9887 CD 5B 9A     	call Genera_coordenadas
 302+ 988A CD EF 99     	call Inc_CTRL_DESPLZ
 303+ 988D 18 03        	jr 2F
 304+ 988F CD EF 99     1 call Inc_CTRL_DESPLZ
 305+ 9892 C9           2 ret
 306+ 9893
 307+ 9893              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 308+ 9893              ;
 309+ 9893              ;	24/7/22
 310+ 9893              ;
 311+ 9893              ;	Ciclo_completo.
 312+ 9893              ;
 313+ 9893              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 314+ 9893              ;
 315+ 9893              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 316+ 9893              ; 	Decrementamos (Columns).
 317+ 9893              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 318+ 9893              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 319+ 9893
 320+ 9893
 321+ 9893 3A DE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 322+ 9896 FE FF        	cp $ff
 323+ 9898 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 324+ 989A E6 F0        	and $f0
 325+ 989C 20 28        	jr nz,3F
 326+ 989E
 327+ 989E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 328+ 989E
 329+ 989E 3A DE 88     	ld a,(CTRL_DESPLZ)
 330+ 98A1 47           	ld b,a
 331+ 98A2 3E F8        	ld a,$f8
 332+ 98A4 80           	add b
 333+ 98A5 32 DE 88     	ld (CTRL_DESPLZ),a
 334+ 98A8 18 1C        	jr 3F
 335+ 98AA 21 D7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 336+ 98AD 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 337+ 98AE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 338+ 98AF 32 DE 88     	ld (CTRL_DESPLZ),a
 339+ 98B2 3A EA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 340+ 98B5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 341+ 98B7 20 0A        	jr nz,2F
 342+ 98B9 2A D8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 343+ 98BC 23           	inc hl
 344+ 98BD 22 D8 88     	ld (Posicion_actual),hl
 345+ 98C0 CD 5B 9A     	call Genera_coordenadas
 346+ 98C3
 347+ 98C3              ; Inicia el puntero de Sprite.
 348+ 98C3
 349+ 98C3 CD 07 8C     2 call Inicia_puntero_objeto_der
 350+ 98C6 C9           3 ret
 351+ 98C7
 352+ 98C7              ; ******************************************************************************************************************************************************************************************
 353+ 98C7              ;
 354+ 98C7              ;	15/02/23
 355+ 98C7              ;
 356+ 98C7              ;	Mov_left.
 357+ 98C7              ;
 358+ 98C7              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 359+ 98C7              ;
 360+ 98C7 21 04 89     Mov_left ld hl,Ctrl_0
 361+ 98CA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 362+ 98CC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 363+ 98CC              ; 																	; _ en el caso de que no lo haya.
 364+ 98CC 3A 04 89     	ld a,(Ctrl_0)
 365+ 98CF CB 77        	bit 6,a
 366+ 98D1 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 367+ 98D3
 368+ 98D3 CD E9 99     	call Stop_Amadeus_left
 369+ 98D6 C8           	ret z
 370+ 98D7 20 4A        	jr nz,8F
 371+ 98D9
 372+ 98D9 3A DC 88     11 ld a,(Coordenada_X)
 373+ 98DC A7           	and a
 374+ 98DD 20 44        	jr nz,8F
 375+ 98DF
 376+ 98DF 3A DE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 377+ 98E2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 378+ 98E3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 379+ 98E5
 380+ 98E5              ; ---------- ---------- ----------
 381+ 98E5
 382+ 98E5 3A EB 88     	ld a,(Vel_left)
 383+ 98E8 FE 02        	cp 2
 384+ 98EA 28 0F        	jr z,1F
 385+ 98EC 38 04        	jr c,6F
 386+ 98EE FE 04        	cp 4
 387+ 98F0 28 12        	jr z,7F
 388+ 98F2
 389+ 98F2              ; ---------- ---------- ----------
 390+ 98F2
 391+ 98F2 3A DE 88     6 ld a,(CTRL_DESPLZ)
 392+ 98F5 FE F8        	cp $f8
 393+ 98F7 20 2A        	jr nz,8F
 394+ 98F9 18 10        	jr 4F
 395+ 98FB 3A DE 88     1 ld a,(CTRL_DESPLZ)
 396+ 98FE FE F9        	cp $f9
 397+ 9900 20 21        	jr nz,8F
 398+ 9902 18 07        	jr 4F
 399+ 9904 3A DE 88     7 ld a,(CTRL_DESPLZ)
 400+ 9907 FE FB        	cp $fb
 401+ 9909 20 18        	jr nz,8F
 402+ 990B
 403+ 990B              ; ---------- ---------- ----------
 404+ 990B
 405+ 990B              4
 406+ 990B CD 11 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 407+ 990E              ;	call Reinicio
 408+ 990E
 409+ 990E              ; ---------- ---------- ----------
 410+ 990E
 411+ 990E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 412+ 9910 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 413+ 9911
 414+ 9911              ;	ld hl,(Indice_Sprite_izq)
 415+ 9911              ;	ld (Puntero_DESPLZ_izq),hl
 416+ 9911
 417+ 9911 CD 2A 99     	call DESPLZ_IZQ
 418+ 9914 C1           	pop bc
 419+ 9915 10 F9        	djnz 5B
 420+ 9917 2A D8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 421+ 991A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 422+ 991B 22 D8 88     	ld (Posicion_actual),hl
 423+ 991E CD 5B 9A     	call Genera_coordenadas
 424+ 9921 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 425+ 9923
 426+ 9923              ; ---------- ---------- ----------
 427+ 9923
 428+ 9923              ; Movemos, no hay recolocación.
 429+ 9923
 430+ 9923 2A D8 88     8 ld hl,(Posicion_actual)
 431+ 9926 CD 2A 99     	call DESPLZ_IZQ
 432+ 9929 C9           2 ret
 433+ 992A
 434+ 992A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 435+ 992A              ;
 436+ 992A              ;	22/9/22
 437+ 992A
 438+ 992A              DESPLZ_IZQ
 439+ 992A
 440+ 992A CD 39 99     	call Desplaza_izquierda
 441+ 992D CD 85 99         call modifica_parametros_1er_DESPLZ
 442+ 9930 CD AD 99     	call Ciclo_completo_2
 443+ 9933 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 444+ 9936 CB BE        	res 7,(hl)
 445+ 9938 C9           	ret
 446+ 9939
 447+ 9939              Desplaza_izquierda
 448+ 9939
 449+ 9939 3A EB 88     	ld a,(Vel_left)
 450+ 993C 47           	ld b,a
 451+ 993D 2A E6 88     	ld hl,(Puntero_DESPLZ_izq)
 452+ 9940 23           1 inc hl
 453+ 9941 23           	inc hl
 454+ 9942 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 455+ 9944 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 456+ 9947 CD F0 8B     	call Extrae_address
 457+ 994A 22 DA 88     	ld (Puntero_objeto),hl
 458+ 994D
 459+ 994D              ; Modifica (Puntero_DESPLZ_der).
 460+ 994D
 461+ 994D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 462+ 994D              ; Cuántos movimientos hemos hecho ??
 463+ 994D              ; DE contiene (Puntero_DESPLZ_izq).
 464+ 994D
 465+ 994D 2A E2 88     7 ld hl,(Indice_Sprite_izq)
 466+ 9950 EB           	ex de,hl
 467+ 9951 A7           	and a
 468+ 9952 ED 52        	sbc hl,de
 469+ 9954 CB 3D        	srl l
 470+ 9956 3E 08        6 ld a,8
 471+ 9958 95           	sub l
 472+ 9959 30 1E        	jr nc,3F
 473+ 995B
 474+ 995B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 475+ 995B              ; B="0".
 476+ 995B
 477+ 995B 04           4 inc b
 478+ 995C 3C           	inc a
 479+ 995D 20 FC        	jr nz,4B
 480+ 995F 78           	ld a,b
 481+ 9960 08           	ex af,af
 482+ 9961 2A E2 88     	ld hl,(Indice_Sprite_izq)
 483+ 9964 23           5 inc hl
 484+ 9965 23           	inc hl
 485+ 9966 10 FC        	djnz 5B
 486+ 9968 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 487+ 996B CD F0 8B     	call Extrae_address
 488+ 996E 22 DA 88     	ld (Puntero_objeto),hl
 489+ 9971
 490+ 9971              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 491+ 9971              ; _(Posicion_actual).
 492+ 9971
 493+ 9971 21 D8 88     	ld hl,Posicion_actual
 494+ 9974 35           	dec (hl)
 495+ 9975 08           	ex af,af
 496+ 9976 6F           	ld l,a
 497+ 9977 18 DD        	jr 6B
 498+ 9979
 499+ 9979              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 500+ 9979
 501+ 9979 47           3 ld b,a
 502+ 997A 2A E0 88     	ld hl,(Indice_Sprite_der)
 503+ 997D 23           2 inc hl
 504+ 997E 23           	inc hl
 505+ 997F 10 FC        	djnz 2B
 506+ 9981 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 507+ 9984 C9           8 ret
 508+ 9985
 509+ 9985              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 510+ 9985              ;
 511+ 9985              ;	modifica_parametros_1er_DESPLZ
 512+ 9985              ;
 513+ 9985              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 514+ 9985              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 515+ 9985              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 516+ 9985
 517+ 9985 3A DE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 518+ 9988 A7           	and a
 519+ 9989 20 1E        	jr nz,1F
 520+ 998B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 521+ 998C 32 DE 88         ld (CTRL_DESPLZ),a
 522+ 998F 21 D7 88     	ld hl,Columns
 523+ 9992 34           	inc (hl)
 524+ 9993 3A EA 88     	ld a,(Cuad_objeto)
 525+ 9996 E6 01        	and 1
 526+ 9998 20 0F        	jr nz,1F
 527+ 999A 2A D8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 528+ 999D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 529+ 999E 22 D8 88     	ld (Posicion_actual),hl
 530+ 99A1 CD 5B 9A     	call Genera_coordenadas
 531+ 99A4 CD 00 9A     	call Dec_CTRL_DESPLZ
 532+ 99A7 18 03        	jr 2F
 533+ 99A9 CD 00 9A     1 call Dec_CTRL_DESPLZ
 534+ 99AC C9           2 ret
 535+ 99AD
 536+ 99AD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 537+ 99AD
 538+ 99AD 3A DE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 539+ 99B0 FE F7        	cp $f7
 540+ 99B2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 541+ 99B4 30 2C        	jr nc,3F
 542+ 99B6
 543+ 99B6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 544+ 99B6
 545+ 99B6 06 00        	ld b,0
 546+ 99B8 04           4 inc b
 547+ 99B9 3C           	inc a
 548+ 99BA FE F7        	cp $f7
 549+ 99BC 20 FA        	jr nz,4B
 550+ 99BE 3E FF        	ld a,$ff
 551+ 99C0 90           	sub b
 552+ 99C1 32 DE 88     	ld (CTRL_DESPLZ),a
 553+ 99C4 18 1C        	jr 3F
 554+ 99C6
 555+ 99C6              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 556+ 99C6
 557+ 99C6 21 D7 88     1 ld hl,Columns
 558+ 99C9 35           	dec (hl)
 559+ 99CA AF           	xor a
 560+ 99CB 32 DE 88     	ld (CTRL_DESPLZ),a
 561+ 99CE 3A EA 88     	ld a,(Cuad_objeto)
 562+ 99D1 E6 01        	and 1
 563+ 99D3 28 0A        	jr z,2F
 564+ 99D5 2A D8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 565+ 99D8 2B           	dec hl
 566+ 99D9 22 D8 88     	ld (Posicion_actual),hl
 567+ 99DC CD 5B 9A     	call Genera_coordenadas
 568+ 99DF
 569+ 99DF              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 570+ 99DF
 571+ 99DF CD 1A 8C     2 call Inicia_puntero_objeto_izq
 572+ 99E2 C9           3 ret
 573+ 99E3
 574+ 99E3              ; ---------- ---------- ---------- ---------- ---------- ----------
 575+ 99E3              ;
 576+ 99E3              ;	19/10/22
 577+ 99E3              ;
 578+ 99E3              ;	(cp 29) para un Amadeus de 3 Columns.
 579+ 99E3              ;	(cp 30)   ""  ""    ""     2 Columns.
 580+ 99E3
 581+ 99E3 3A DC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 582+ 99E6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 583+ 99E8 C9           	ret
 584+ 99E9
 585+ 99E9              ; ---------- ---------- ---------- ---------- ---------- ----------
 586+ 99E9              ;
 587+ 99E9              ;	19/10/22
 588+ 99E9              ;
 589+ 99E9              ;	(cp 2) para un Amadeus de 3 Columns.
 590+ 99E9              ;	(cp 1)   ""  ""    ""     2 Columns.
 591+ 99E9
 592+ 99E9 3A DC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 593+ 99EC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 594+ 99EE C9           	ret
 595+ 99EF
 596+ 99EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 597+ 99EF              ;
 598+ 99EF              ;	24/7/22
 599+ 99EF              ;
 600+ 99EF              ;	Inc_CTRL_DESPLZ
 601+ 99EF              ;
 602+ 99EF              ;
 603+ 99EF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 604+ 99EF
 605+ 99EF 21 DE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 606+ 99F2 3A EC 88     	ld a,(Vel_right)
 607+ 99F5 A7           	and a
 608+ 99F6 28 06        	jr z,1F
 609+ 99F8 47           	ld b,a
 610+ 99F9 34           3 inc (hl)
 611+ 99FA 10 FD        	djnz 3B
 612+ 99FC 18 01        	jr 2F
 613+ 99FE 34           1 inc (hl)
 614+ 99FF C9           2 ret
 615+ 9A00
 616+ 9A00              ; ---------- ---------- ---------- ---------- ---------- ----------
 617+ 9A00              ;
 618+ 9A00              ;	5/2/23
 619+ 9A00              ;
 620+ 9A00              ;	Dec_CTRL_DESPLZ
 621+ 9A00              ;
 622+ 9A00              ;
 623+ 9A00              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 624+ 9A00
 625+ 9A00 21 DE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 626+ 9A03 3A EB 88     	ld a,(Vel_left)
 627+ 9A06 A7           	and a
 628+ 9A07 28 06        	jr z,1F
 629+ 9A09 47           	ld b,a
 630+ 9A0A 35           3 dec (hl)
 631+ 9A0B 10 FD        	djnz 3B
 632+ 9A0D 18 01        	jr 2F
 633+ 9A0F 35           1 dec (hl)
 634+ 9A10 C9           2 ret
 635+ 9A11
 636+ 9A11              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9A11
 638+ 9A11 2A D8 88     Reaparece_derecha ld hl,(Posicion_actual)
 639+ 9A14 01 1F 00     	ld bc,31
 640+ 9A17 A7           	and a
 641+ 9A18 ED 4A        	adc hl,bc
 642+ 9A1A 22 D8 88     	ld (Posicion_actual),hl
 643+ 9A1D 21 04 89     	ld hl,Ctrl_0														; $xxx1
 644+ 9A20 CB C6        	set 0,(hl)
 645+ 9A22 C9           	ret
 646+ 9A23
 647+ 9A23              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9A23
 649+ 9A23 2A D8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 650+ 9A26 01 1F 00     	ld bc,31
 651+ 9A29 A7           	and a
 652+ 9A2A ED 42        	sbc hl,bc
 653+ 9A2C 22 D8 88     	ld (Posicion_actual),hl 											; $xx1x
 654+ 9A2F 21 04 89     	ld hl,Ctrl_0
 655+ 9A32 CB CE        	set 1,(hl)
 656+ 9A34 C9           	ret
 657+ 9A35
 658+ 9A35              ; ---------- ---------- ---------- ---------- ---------- ----------
 659+ 9A35
 660+ 9A35 24           Reaparece_abajo inc h
 661+ 9A36 01 E0 17     	ld bc,$17e0
 662+ 9A39 A7           	and a
 663+ 9A3A ED 4A        	adc hl,bc
 664+ 9A3C 22 D8 88     	ld (Posicion_actual),hl
 665+ 9A3F 21 04 89     	ld hl,Ctrl_0
 666+ 9A42 CB D6        	set 2,(hl)
 667+ 9A44 C9           	ret
 668+ 9A45
 669+ 9A45              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9A45
 671+ 9A45 01 E0 17     Reaparece_arriba ld bc,$17e0
 672+ 9A48 A7           	and a
 673+ 9A49 ED 42        	sbc hl,bc
 674+ 9A4B 22 D8 88     	ld (Posicion_actual),hl
 675+ 9A4E 21 04 89     	ld hl,Ctrl_0
 676+ 9A51 CB DE        	set 3,(hl)
 677+ 9A53 C9           	ret
 678+ 9A54
 679+ 9A54              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 680+ 9A54
 681+ 9A54 2A E8 88     Reinicio ld hl,(Posicion_inicio)
 682+ 9A57 22 D8 88     	ld (Posicion_actual),hl
 683+ 9A5A C9           	ret
# file closed: Direcciones.asm
1189  9A5B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A5B              ; ------------------------------------------------------------------------
   2+ 9A5B              ;
   3+ 9A5B              ;	02/04/23
   4+ 9A5B              ;
   5+ 9A5B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A5B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A5B              ;
   8+ 9A5B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A5B              ;
  10+ 9A5B              ;	Modifica: A,BC y DE.
  11+ 9A5B
  12+ 9A5B C5           Genera_coordenadas push bc
  13+ 9A5C E5           	push hl
  14+ 9A5D D5           	push de
  15+ 9A5E
  16+ 9A5E 2A D8 88     	ld hl,(Posicion_actual)
  17+ 9A61
  18+ 9A61 7D           	ld a,l
  19+ 9A62 E6 1F        	and $1f
  20+ 9A64 32 DC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9A67
  22+ 9A67 CD 15 97     	call calcula_tercio
  23+ 9A6A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9A6B
  25+ 9A6B 1E 00        	ld e,0
  26+ 9A6D 7D           	ld a,l
  27+ 9A6E E6 E0        	and $e0
  28+ 9A70 28 01        	jr z,1F
  29+ 9A72 04           	inc b
  30+ 9A73
  31+ 9A73 04           1 inc b
  32+ 9A74 05           	dec b
  33+ 9A75 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9A77              ;														; _ , salimos.
  35+ 9A77 1C           3 inc e
  36+ 9A78 D6 20        	sub 32
  37+ 9A7A 20 FB        	jr nz,3B
  38+ 9A7C 10 F5        	djnz 1B
  39+ 9A7E
  40+ 9A7E 7B           2 ld a,e
  41+ 9A7F 32 DD 88     	ld (Coordenada_y),a
  42+ 9A82
  43+ 9A82 D1           	pop de
  44+ 9A83 E1           	pop hl
  45+ 9A84 C1           	pop bc
  46+ 9A85
  47+ 9A85 C9           	ret
  48+ 9A86
  49+ 9A86              ; ------------------------------------------------------------------------
  50+ 9A86              ;	28/03/23
  51+ 9A86              ;
  52+ 9A86              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9A86              ;	Fila superior "0", Columna izquierda "0".
  54+ 9A86              ;
  55+ 9A86              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9A86              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9A86              ;
  58+ 9A86              ;		DE="$120d"
  59+ 9A86              ;
  60+ 9A86              ;		D, (Coordenada_X), Columnas, $12
  61+ 9A86              ;		E, (Coordenada_y), Filas, $0d
  62+ 9A86              ;
  63+ 9A86              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9A86
  65+ 9A86              ;	Modifica: A,BC y DE.
  66+ 9A86
  67+ 9A86
  68+ 9A86              Genera_coordenadas_disparo
  69+ 9A86
  70+ 9A86              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9A86
  72+ 9A86 7D           	ld a,l
  73+ 9A87 E6 1F        	and $1f
  74+ 9A89 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9A8A CD 15 97     	call calcula_tercio
  76+ 9A8D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9A8E 1E 00        	ld e,0
  78+ 9A90 7D           	ld a,l
  79+ 9A91 E6 E0        	and $e0
  80+ 9A93 28 01        	jr z,1F
  81+ 9A95 04           	inc b
  82+ 9A96 1C           1 inc e
  83+ 9A97 D6 20        	sub 32
  84+ 9A99 20 FB        	jr nz,1B
  85+ 9A9B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9A9D C9           	ret
  87+ 9A9E
# file closed: Genera_coordenadas.asm
1190  9A9E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9A9E
   2+ 9A9E
   3+ 9A9E              ;   11/8/22
   4+ 9A9E              ;
   5+ 9A9E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9A9E              ;
   7+ 9A9E              ;   Mov_obj.asm
   8+ 9A9E              ;
   9+ 9A9E              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9A9E              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9A9E              ;
  12+ 9A9E              ;   Codificación:
  13+ 9A9E              ;
  14+ 9A9E              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9A9E
  16+ 9A9E              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9A9E
  18+ 9A9E 02 40 00     Arriba db 2,%01000000,0
  19+ 9AA1 02 80 00     Abajo db 2,%10000000,0
  20+ 9AA4 02 20 00     Derecha db 2,%00100000,0
  21+ 9AA7 02 10 00     Izquierda db 2,%00010000,0
  22+ 9AAA 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9AAE 60 42 60 40
  22+ 9AB2 63
  23+ 9AB3 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9AB7 22 A3 80 A0
  24+ 9ABB 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9ABF 84 A0 83 A0
  25+ 9AC3 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9AC7 80 A3 22 A0
  26+ 9ACB 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9ACF 40 60 42 60
  27+ 9AD3 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9AD7
  29+ 9AD7 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9ADB 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9ADF 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9AE3 84 00
  32+ 9AE5 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9AE9 84 00
  33+ 9AEB 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9AEF 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9AF3 1F 1F 1F 1F
  35+ 9AF7 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9AFB 1F 1F 1F 1F
  35+ 9AFF 1F
  36+ 9B00 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9B04 2F 2F 2F 2F
  36+ 9B08 2F 2F
  37+ 9B0A 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9B0E 2F 2F 00
  38+ 9B11
  39+ 9B11              ; ----- ----- ----- ----- -----
  40+ 9B11
  41+ 9B11 EF 9A        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9B13 EB 9A        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9B15 A7 9A        Indice_mov_Izquierda defw Izquierda
  44+ 9B17 A4 9A        Indice_mov_Derecha defw Derecha
  45+ 9B19 A1 9A        Indice_mov_Abajo defw Abajo
  46+ 9B1B 9E 9A        Indice_mov_Arriba defw Arriba
  47+ 9B1D DB 9A        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9B1F DF 9A        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9B21 D7 9A        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9B23 E5 9A        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9B25 AA 9A        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9B27              ; ----- ----- ----- ----- -----
  53+ 9B27
  54+ 9B27 3A 0B 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9B2A A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9B2B 28 02            jr z,1F
  57+ 9B2D 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9B2F 3A 0C 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9B32 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9B34 32 0C 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9B37              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9B37 2A 09 89         ld hl,(Puntero_mov)
  63+ 9B3A 7E               ld a,(hl)
  64+ 9B3B 32 0B 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9B3E 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9B3F 22 09 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9B42
  68+ 9B42 3A 0D 89     Decoder ld a,(Repetimos_db)
  69+ 9B45 A7               and a
  70+ 9B46 20 0C            jr nz,12F
  71+ 9B48 2A 09 89         ld hl,(Puntero_mov)
  72+ 9B4B 7E               ld a,(hl)
  73+ 9B4C A7               and a
  74+ 9B4D 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9B4F E6 0F            and $0f
  76+ 9B51 32 0D 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9B54              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9B54 2A 09 89     12 ld hl,(Puntero_mov)
  79+ 9B57 CB 7E            bit 7,(hl)
  80+ 9B59 28 03            jr z,2F
  81+ 9B5B CD 4D 97         call Mov_down
  82+ 9B5E 2A 09 89     2 ld hl, (Puntero_mov)
  83+ 9B61 CB 76            bit 6,(hl)
  84+ 9B63 28 03            jr z,3F
  85+ 9B65 CD 7B 97         call Mov_up
  86+ 9B68 2A 09 89     3 ld hl, (Puntero_mov)
  87+ 9B6B CB 6E            bit 5,(hl)
  88+ 9B6D 28 03            jr z,4F
  89+ 9B6F CD A9 97         call Mov_right
  90+ 9B72 2A 09 89     4 ld hl, (Puntero_mov)
  91+ 9B75 CB 66            bit 4,(hl)
  92+ 9B77 28 03            jr z,5F
  93+ 9B79 CD C7 98         call Mov_left
  94+ 9B7C
  95+ 9B7C              ; ---------- --------- --------- ---------- ----------
  96+ 9B7C
  97+ 9B7C 3A 0D 89     5 ld a,(Repetimos_db)
  98+ 9B7F A7               and a
  99+ 9B80 28 07            jr z,6F
 100+ 9B82 3D               dec a
 101+ 9B83 32 0D 89         ld (Repetimos_db),a
 102+ 9B86 28 01            jr z,6f
 103+ 9B88 C9           11 ret
 104+ 9B89 21 0B 89     6 ld hl,Contador_db_mov
 105+ 9B8C 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9B8D 2A 09 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9B90 23               inc hl
 108+ 9B91 22 09 89         ld (Puntero_mov),hl
 109+ 9B94 18 F2            jr 11B
 110+ 9B96 2A 07 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9B99 3A 0C 89         ld a,(Incrementa_puntero)
 112+ 9B9C 47               ld b,a
 113+ 9B9D 23           8 inc hl
 114+ 9B9E 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9BA0 5E               ld e,(hl)
 116+ 9BA1 23               inc hl
 117+ 9BA2 56               ld d,(hl)
 118+ 9BA3 EB               ex de,hl
 119+ 9BA4 22 09 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9BA7 18 DF            jr 11B
 121+ 9BA9
 122+ 9BA9              ; ---------- --------- --------- ---------- ----------
 123+ 9BA9              ;
 124+ 9BA9              ;   11/8/22
 125+ 9BA9              ;
 126+ 9BA9              ;   Prepara_Puntero_mov
 127+ 9BA9
 128+ 9BA9 E5           Prepara_Puntero_mov push hl
 129+ 9BAA D5               push de
 130+ 9BAB 2A 07 89         ld hl,(Puntero_indice_mov)
 131+ 9BAE 5E               ld e,(hl)
 132+ 9BAF 23               inc hl
 133+ 9BB0 56               ld d,(hl)
 134+ 9BB1 EB               ex de,hl
 135+ 9BB2 22 09 89         ld (Puntero_mov),hl
 136+ 9BB5 D1               pop de
 137+ 9BB6 E1               pop hl
 138+ 9BB7 C9               ret
 139+ 9BB8
 140+ 9BB8              ; ---------- --------- --------- ---------- ----------
 141+ 9BB8              ;
 142+ 9BB8              ;   11/8/22
 143+ 9BB8              ;
 144+ 9BB8              ;   Reinicia_el_movimiento
 145+ 9BB8
 146+ 9BB8 CD A9 9B     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9BBB AF               xor a
 148+ 9BBC 32 0B 89         ld (Contador_db_mov),a
 149+ 9BBF 32 0C 89         ld (Incrementa_puntero),a
 150+ 9BC2 C3 27 9B         jp Movimiento
 151+ 9BC5 C9               ret
 152+ 9BC6              ; ---------- --------- --------- ---------- ----------
 153+ 9BC6
 154+ 9BC6
 155+ 9BC6
 156+ 9BC6
 157+ 9BC6
 158+ 9BC6
 159+ 9BC6
 160+ 9BC6
 161+ 9BC6
 162+ 9BC6
 163+ 9BC6
 164+ 9BC6
 165+ 9BC6
 166+ 9BC6
 167+ 9BC6
 168+ 9BC6
 169+ 9BC6
 170+ 9BC6
# file closed: Patrones_de_mov.asm
1191  9BC6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9BC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9BC6              ;
   3+ 9BC6              ;	3/1/23
   4+ 9BC6              ;
   5+ 9BC6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9BC6
   7+ 9BC6              ;	ADC HL,SP	LD (addr),SP
   8+ 9BC6              ;	ADD HL,SP	LD SP,(addr)
   9+ 9BC6              ;	ADD IX,SP	LD SP,nn
  10+ 9BC6              ; 	ADD IY,SP	LD SP,HL
  11+ 9BC6              ;				LD SP,IX
  12+ 9BC6              ;	DEC SP		LD SP,IY
  13+ 9BC6
  14+ 9BC6              ;	EX (SP),HL
  15+ 9BC6              ;	EX (SP),IX
  16+ 9BC6              ;	EX (SP),IY
  17+ 9BC6
  18+ 9BC6              ;	INC SP
  19+ 9BC6
  20+ 9BC6
  21+ 9BC6                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 22 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 28 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 26 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 28 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 26 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 22 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1192  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1193  7FE6
1194  7FE6              	SAVESNA "Pruebas.sna", START
1195  7FE6
1196  7FE6
1197  7FE6
1198  7FE6
# file closed: Banco_de_pruebas.asm
