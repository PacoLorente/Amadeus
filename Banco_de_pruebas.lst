# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 14 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 04 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD C1 47        Posicion_inicio defw $47c1								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 0E 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 28 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 57 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 50 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD AA 87      	call Inicia_Puntero_objeto
 250  8617 CD 78 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD F2 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 33 88     3 call Restore_Amadeus
 259  8626 CD AA 87     	call Inicia_Puntero_objeto
 260  8629 CD 78 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 45 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 66 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 6D 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 50 87     	call Inicia_punteros_de_entidades
 272  863B CD 21 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 7C 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 291  864F CD B5 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 03        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865C
 307  865C CD 56 8C     	call Selector_de_impactos
 308  865F
 309  865F CD 50 87     5 call Inicia_punteros_de_entidades
 310  8662 CD 21 88     	call Restore_Primera_entidad
 311  8665
 312  8665 AF           	xor a
 313  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 314  8669
 315  8669 CD DC 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 316  866C 21 00 70     	ld hl,Album_de_fotos
 317  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 318  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 319  8672 3A DD 85         ld a,(Numero_de_entidades)
 320  8675 47               ld b,a
 321  8676 A7           	and a
 322  8677 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 323  8679
 324  8679 C5           2 push bc
 325  867A CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 326  867D
 327  867D 3A C9 85     	ld a,(Ctrl_0)
 328  8680 CB 67        	bit 4,a
 329  8682 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 330  8684
 331  8684              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 332  8684              ; Las entidades sólo generan disparo cuando se mueven.
 333  8684              ; 16/02/23.
 334  8684              ; [[[
 335  8684 CD 8E 88     	call Detecta_disparo_entidad
 336  8687              ; ]]]
 337  8687 CD 17 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 338  868A
 339  868A 21 C9 85     1 ld hl,Ctrl_0
 340  868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 341  868F AF           	xor a
 342  8690 32 CA 85     	ld (Obj_dibujado),a
 343  8693
 344  8693 CD F2 87     6 call Store_Restore_entidades
 345  8696 C1           	pop bc
 346  8697 10 E0        	djnz 2B
 347  8699
 348  8699              ; Tras la gestión de las entidades, ... AMADEUS.
 349  8699
 350  8699 CD 33 88     4 call Restore_Amadeus
 351  869C CD E8 86     	call Mov_Amadeus
 352  869F
 353  869F 3A C9 85     	ld a,(Ctrl_0)
 354  86A2 CB 67        	bit 4,a
 355  86A4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 356  86A6
 357  86A6 CD 17 87     	call Guarda_foto_entidad_a_pintar
 358  86A9
 359  86A9 21 C9 85     3 ld hl,Ctrl_0
 360  86AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 361  86AE AF           	xor a
 362  86AF 32 CA 85     	ld (Obj_dibujado),a
 363  86B2 CD 45 88     	call Store_Amadeus
 364  86B5
 365  86B5 CD FA 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 366  86B8
 367  86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 368  86B8
 369  86B8 CD 74 87     	call Calcula_numero_de_malotes
 370  86BB CD 8C 87     	call Calcula_numero_de_disparotes
 371  86BE
 372  86BE 3E 04        	ld a,4
 373  86C0 D3 FE        	out ($fe),a
 374  86C2 C9           	ret
 375  86C3
 376  86C3              ; --------------------------------------------------------------------------------------------------------------
 377  86C3              ;
 378  86C3              ;	27/03/23
 379  86C3
 380  86C3              Mov_obj
 381  86C3
 382  86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 383  86C3
 384  86C3 AF           	xor a
 385  86C4 32 CA 85     	ld (Obj_dibujado),a
 386  86C7 CD 21 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 387  86CA              ;														; Obj_dibujado="0".
 388  86CA              ; Movemos Entidades malignas.
 389  86CA
 390  86CA 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 391  86CD 24           	inc h                                               ; Salimos de la rutina.
 392  86CE 25           	dec h
 393  86CF C8           	ret z
 394  86D0
 395  86D0 CD 16 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 396  86D3
 397  86D3 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 398  86D6 CB 67        	bit 4,a
 399  86D8 C8           	ret z
 400  86D9
 401  86D9              ; Ha habido desplazamiento de la entidad maligna.
 402  86D9              ; Ha llegado a zona de AMADEUS ???
 403  86D9
 404  86D9              ;	ld a,(Coordenada_y)
 405  86D9              ;	cp $14
 406  86D9              ;	call nc, Compara_coordenadas_X
 407  86D9
 408  86D9              ; ---------
 409  86D9
 410  86D9 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 411  86DB 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 412  86DE CD 21 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 413  86E1 CD 38 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 414  86E4 CD 07 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 415  86E7 C9           	ret													; _de la misma.
 416  86E8
 417  86E8              ; --------------------------------------------------------------------------------------------------------------
 418  86E8              ;
 419  86E8              ;	29/1/23
 420  86E8
 421  86E8              Mov_Amadeus
 422  86E8
 423  86E8 AF           	xor a
 424  86E9 32 CA 85     	ld (Obj_dibujado),a
 425  86EC CD 21 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 426  86EF              ;														; Obj_dibujado="0".
 427  86EF              ; Movemos Amadeus.
 428  86EF
 429  86EF CD 6B 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 430  86F2 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 431  86F5 CB 67        	bit 4,a
 432  86F7 C8           	ret z
 433  86F8
 434  86F8              ; ---------
 435  86F8
 436  86F8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 437  86FA 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 438  86FD CD 21 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 439  8700 CD 38 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 440  8703 CD 07 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 441  8706 C9           	ret													; _de la nave.
 442  8707
 443  8707              ; --------------------------------------------------------------------------------------------------------------
 444  8707              ;
 445  8707              ;	31/01/23
 446  8707              ;
 447  8707              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 448  8707
 449  8707              Guarda_foto_entidad_a_borrar
 450  8707
 451  8707 CD 52 8F     	call Prepara_draw
 452  870A CD 8C 8E     	call calcula_CColumnass
 453  870D CD C3 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 454  8710 CD 18 8F     	call Define_rutina_de_impresion
 455  8713 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 456  8716 C9           	ret
 457  8717
 458  8717              ; --------------------------------------------------------------------------------------------------------------
 459  8717              ;
 460  8717              ;	31/01/23
 461  8717              ;
 462  8717              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 463  8717              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 464  8717
 465  8717              Guarda_foto_entidad_a_pintar
 466  8717
 467  8717 CD 44 87     	call Repone_pintar
 468  871A CD 78 8C     	call Draw
 469  871D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 470  8720 C9           	ret
 471  8721
 472  8721              ; --------------------------------------------------------------------------------------------------------------
 473  8721              ;
 474  8721              ;
 475  8721
 476  8721 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 477  8724 3A CA 85     	ld a,(Obj_dibujado)
 478  8727 A7           	and a
 479  8728 28 05        	jr z,1F
 480  872A 11 BF 85     	ld de,Variables_de_pintado
 481  872D 18 03        	jr 2F
 482  872F 11 B5 85     1 ld de,Variables_de_borrado
 483  8732 01 08 00     2 ld bc,8
 484  8735 ED B0        	ldir
 485  8737 C9           	ret
 486  8738
 487  8738              ; --------------------------------------------------------------------------------------------------------------
 488  8738
 489  8738 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 490  873B 11 9B 85     	ld de,Filas
 491  873E 01 08 00     	ld bc,8
 492  8741 ED B0        	ldir
 493  8743 C9           	ret
 494  8744
 495  8744 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 496  8747 11 9B 85     	ld de,Filas
 497  874A 01 08 00     	ld bc,8
 498  874D ED B0        	ldir
 499  874F C9           	ret
 500  8750
 501  8750              ; *************************************************************************************************************************************************************
 502  8750              ;
 503  8750              ; 8/1/23
 504  8750              ;
 505  8750              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 506  8750              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 507  8750              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 508  8750
 509  8750              ; Destruye HL y DE !!!!!
 510  8750
 511  8750              Inicia_punteros_de_entidades
 512  8750
 513  8750 21 68 84     	ld hl,Indice_de_entidades
 514  8753 CD A4 87         call Extrae_address
 515  8756 22 D7 85         ld (Puntero_store_entidades),hl
 516  8759 21 6A 84     	ld hl,Indice_de_entidades+2
 517  875C 22 DB 85     	ld (Indice_restore),hl
 518  875F CD A4 87     	call Extrae_address
 519  8762 22 D9 85     	ld (Puntero_restore_entidades),hl
 520  8765 C9               ret
 521  8766
 522  8766              ; *************************************************************************************************************************************************************
 523  8766              ;
 524  8766              ; 8/1/23
 525  8766              ;
 526  8766              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 527  8766
 528  8766 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 529  8769 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 530  876C C9           	ret
 531  876D 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 532  8770 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 533  8773 C9           	ret
 534  8774
 535  8774              ; -------------------------------------------------------------------------------------------------------------
 536  8774              ;
 537  8774              ; 28/2/23
 538  8774              ;
 539  8774
 540  8774              Calcula_numero_de_malotes
 541  8774
 542  8774 21 00 70     	ld hl,Album_de_fotos
 543  8777 EB           	ex de,hl
 544  8778 2A E3 85     	ld hl,(Stack_snapshot)
 545  877B
 546  877B 06 00        	ld b,0
 547  877D 7D           	ld a,l
 548  877E 93           	sub e
 549  877F 28 07        	jr z,1F
 550  8781
 551  8781              ; Nº de malotes no es "0".
 552  8781
 553  8781 D6 06        2 sub 6
 554  8783 04           	inc b
 555  8784 A7           	and a
 556  8785 20 FA        	jr nz,2B
 557  8787 78           	ld a,b
 558  8788
 559  8788 32 DE 85     1 ld (Numero_de_malotes),a
 560  878B C9           	ret
 561  878C
 562  878C              ; -------------------------------------------------------------------------------------------------------------
 563  878C              ;
 564  878C              ; 28/2/23
 565  878C              ;
 566  878C
 567  878C              Calcula_numero_de_disparotes
 568  878C
 569  878C 21 60 70     	ld hl,Album_de_fotos_disparos
 570  878F EB           	ex de,hl
 571  8790 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 572  8793
 573  8793 06 00        	ld b,0
 574  8795 7D           	ld a,l
 575  8796 93           	sub e
 576  8797 28 07        	jr z,1F
 577  8799
 578  8799              ; Nº de malotes no es "0".
 579  8799
 580  8799 D6 06        2 sub 6
 581  879B 04           	inc b
 582  879C A7           	and a
 583  879D 20 FA        	jr nz,2B
 584  879F 78           	ld a,b
 585  87A0
 586  87A0 32 E7 85     1 ld (Numero_de_disparotes),a
 587  87A3 C9           	ret
 588  87A4              ; *************************************************************************************************************************************************************
 589  87A4              ;
 590  87A4              ; 20/10/22
 591  87A4              ;
 592  87A4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 593  87A4              ;
 594  87A4              ; Destruye el puntero y DE !!!!!
 595  87A4
 596  87A4 5E           Extrae_address ld e,(hl)
 597  87A5 23           	inc hl
 598  87A6 56           	ld d,(hl)
 599  87A7 2B           	dec hl
 600  87A8 EB           	ex de,hl
 601  87A9 C9           	ret
 602  87AA
 603  87AA              ; *************************************************************************************************************************************************************
 604  87AA              ;
 605  87AA              ;	7/2/23
 606  87AA              ;
 607  87AA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 608  87AA              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 609  87AA              ;
 610  87AA              ;   Destruye HL y BC !!!!!,
 611  87AA              ;
 612  87AA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 613  87AA              ;					"0" ..... Izquierda.
 614  87AA
 615  87AA              Inicia_Puntero_objeto
 616  87AA
 617  87AA 3A AF 85     	ld a,(Cuad_objeto)
 618  87AD E6 01        	and 1
 619  87AF F5           	push af
 620  87B0 CC CE 87     	call z,Inicia_puntero_objeto_izq
 621  87B3 F1           	pop af
 622  87B4 28 2B        	jr z,1F
 623  87B6 CD BB 87     	call Inicia_puntero_objeto_der
 624  87B9 18 26        	jr 1F
 625  87BB
 626  87BB              ; Arrancamos desde la parte izquierda de la pantalla.
 627  87BB              ; Iniciamos (Indice_Sprite_der).
 628  87BB
 629  87BB 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 630  87BE 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 631  87C1 CD A4 87     	call Extrae_address
 632  87C4 22 9F 85     	ld (Puntero_objeto),hl
 633  87C7
 634  87C7 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 635  87CA              ;	call Extrae_address
 636  87CA 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 637  87CD C9           	ret
 638  87CE
 639  87CE              ; Arrancamos desde la parte derecha de la pantalla.
 640  87CE              ; Iniciamos (Indice_Sprite_izq).
 641  87CE
 642  87CE 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 643  87D1 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 644  87D4 CD A4 87     	call Extrae_address
 645  87D7 22 9F 85     	ld (Puntero_objeto),hl
 646  87DA
 647  87DA 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 648  87DD              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 649  87DD 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 650  87E0 C9           	ret
 651  87E1
 652  87E1              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 653  87E1
 654  87E1 21 38 83     1 ld hl,Amadeus
 655  87E4 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 656  87E8 B7 ED 42     	sub hl,bc
 657  87EB C0           	ret nz
 658  87EC 21 C9 85     	ld hl,Ctrl_0
 659  87EF CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 660  87F1 C9           	ret 												; _de nuestra nave en los extremos.
 661  87F2
 662  87F2              ; *************************************************************************************************************************************************************
 663  87F2              ;
 664  87F2              ;	8/1/23
 665  87F2              ;
 666  87F2              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 667  87F2              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 668  87F2
 669  87F2              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 670  87F2              ;	_de la 2ª y 3ª entidad respectivamente.
 671  87F2
 672  87F2              Store_Restore_entidades
 673  87F2
 674  87F2 E5           	push hl
 675  87F3 D5           	push de
 676  87F4 C5            	push bc
 677  87F5
 678  87F5              ;	STORE !!!!!
 679  87F5              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 680  87F5
 681  87F5 21 9B 85     	ld hl,Filas
 682  87F8 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 683  87FC 01 3B 00     	ld bc,59
 684  87FF ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 685  8801
 686  8801              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 687  8801
 688  8801 2A D9 85     	ld hl,(Puntero_restore_entidades)
 689  8804 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 690  8807 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 691  880A 01 3B 00     	ld bc,59
 692  880D ED B0        	ldir
 693  880F
 694  880F              ;	Incrementa RESTORE !!!!!
 695  880F
 696  880F 2A DB 85         ld hl,(Indice_restore)
 697  8812 23           	inc hl
 698  8813 23           	inc hl
 699  8814 22 DB 85     	ld (Indice_restore),hl
 700  8817 CD A4 87         call Extrae_address
 701  881A 22 D9 85         ld (Puntero_restore_entidades),hl
 702  881D C1           	pop bc
 703  881E D1           	pop de
 704  881F E1           	pop hl
 705  8820 C9           	ret
 706  8821
 707  8821              ; **************************************************************************************************
 708  8821              ;
 709  8821              ;	29/10/22
 710  8821              ;
 711  8821              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 712  8821
 713  8821 E5           Restore_Primera_entidad push hl
 714  8822 D5           	push de
 715  8823 C5            	push bc
 716  8824 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 717  8827 11 9B 85     	ld de,Filas
 718  882A 01 3B 00     	ld bc,59
 719  882D ED B0        	ldir
 720  882F C1           	pop bc
 721  8830 D1           	pop de
 722  8831 E1           	pop hl
 723  8832 C9           	ret
 724  8833
 725  8833              ; **************************************************************************************************
 726  8833              ;
 727  8833              ;	25/01/23
 728  8833              ;
 729  8833              ;	Restore_Amadeus
 730  8833              ;
 731  8833              ;	Cargamos en DRAW los parámetros de Amadeus.
 732  8833              ;
 733  8833
 734  8833 E5           Restore_Amadeus	push hl
 735  8834 D5           	push de
 736  8835 C5            	push bc
 737  8836 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 738  8839 11 9B 85     	ld de,Filas
 739  883C 01 3B 00     	ld bc,59
 740  883F ED B0        	ldir
 741  8841 C1           	pop bc
 742  8842 D1           	pop de
 743  8843 E1           	pop hl
 744  8844 C9           	ret
 745  8845
 746  8845              ; *************************************************************************************************************************************************************
 747  8845              ;
 748  8845              ;	29/01/23
 749  8845              ;
 750  8845              ;	Store_Amadeus
 751  8845              ;
 752  8845              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 753  8845              ;
 754  8845
 755  8845 E5           Store_Amadeus push hl
 756  8846 D5           	push de
 757  8847 C5            	push bc
 758  8848 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 759  884B 11 74 84     	ld de,Amadeus_db
 760  884E 01 3B 00     	ld bc,59
 761  8851 ED B0        	ldir
 762  8853 C1           	pop bc
 763  8854 D1           	pop de
 764  8855 E1           	pop hl
 765  8856 C9           	ret
 766  8857
 767  8857              ; **************************************************************************************************
 768  8857
 769  8857              ; Teclado.
 770  8857
 771  8857 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 772  8859 DB FE        	in a,($fe)
 773  885B E6 01        	and $01
 774  885D 28 02        	jr z,1f
 775  885F 18 F6        	jr Pulsa_ENTER
 776  8861 C9           1 ret
 777  8862
 778  8862              ; **************************************************************************************************
 779  8862              ;
 780  8862              ; Temporización.
 781  8862
 782  8862              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 783  8862              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 784  8862              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 785  8862              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 786  8862
 787  8862              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 788  8862              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 789  8862              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 790  8862
 791  8862              ; A partir de $4f61 no hace falta DELAY.
 792  8862
 793  8862              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 794  8862
 795  8862 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 796  8865 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 797  8866 78           	LD A,B
 798  8867 A7           	AND A
 799  8868 20 FB        	JR NZ,wait
 800  886A C9           	RET
 801  886B
 802  886B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 803  886B              ;
 804  886B              ;	5/3/23
 805  886B              ;
 806  886B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 807  886B
 808  886B              Movimiento_Amadeus
 809  886B
 810  886B              ; Disparo.
 811  886B
 812  886B 3E F7        	ld a,$f7												; "5" para disparar.
 813  886D DB FE        	in a,($fe)
 814  886F E6 10        	and $10
 815  8871 CC CB 88     	call z,Genera_disparo
 816  8874
 817  8874 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 818  8876 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 819  8878 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 820  887A CC B6 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 821  887D 3E F7        	ld a,$f7
 822  887F DB FE        	in a,($fe)
 823  8881 E6 01        	and $01
 824  8883 C8           	ret z
 825  8884
 826  8884 3E F7        	ld a,$f7
 827  8886 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 828  8888 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 829  888A CC 98 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 830  888D C9           	ret
 831  888E
 832  888E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  888E              ;
 834  888E              ;	Rutina provisional para que los malotes cagen balas.
 835  888E
 836  888E 3E 7F        Detecta_disparo_entidad ld a,$7f
 837  8890 DB FE        	in a,($fe)
 838  8892 E6 01        	and 1
 839  8894 C0           	ret nz
 840  8895 CD CB 88     	call Genera_disparo
 841  8898 C9           	ret
 842  8899
 843  8899              ; Pinta indicadores de FILAS. ------------------------------------------------------
 844  8899
 845  8899 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 846  889C
 847  889C              ; ----------
 848  889C 06 20        	ld b,32
 849  889E E5           2 push hl
 850  889F C5           	push bc
 851  88A0              ; ----------
 852  88A0
 853  88A0 06 BF        	ld b,$bf
 854  88A2 36 80        1 ld (hl),%10000000
 855  88A4 CD 5E 8F     	call NextScan
 856  88A7 10 F9        	djnz 1B
 857  88A9
 858  88A9              ; ----------
 859  88A9 C1           	pop bc
 860  88AA E1           	pop hl
 861  88AB 2C           	inc l
 862  88AC 10 F0        	djnz 2B
 863  88AE              ; ----------
 864  88AE
 865  88AE 06 03        	ld b,3
 866  88B0 21 00 47         ld hl,$4700
 867  88B3 CD B9 88     3 call Bucle_1
 868  88B6 10 FB            djnz 3B
 869  88B8 C9               ret
 870  88B9
 871  88B9 C5           Bucle_1 push bc
 872  88BA E5                   push hl
 873  88BB D1                   pop de
 874  88BC 13                   inc de
 875  88BD 01 FF 00             ld bc,255
 876  88C0 36 FF                ld (hl),255
 877  88C2 ED B0                ldir
 878  88C4 23                   inc hl
 879  88C5 3E 07                ld a,7
 880  88C7 84                   add a,h
 881  88C8 67                   ld h,a
 882  88C9 C1                   pop bc
 883  88CA C9                   ret
 884  88CB
 885  88CB              ; ---------------------------------------------------------------
 886  88CB
 887  88CB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88CB              ; ******************************************************************************************************************************************************************************************
   2+ 88CB              ;
   3+ 88CB              ;   27/03/23
   4+ 88CB              ;
   5+ 88CB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88CB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88CB              ;
   8+ 88CB              ;
   9+ 88CB              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88CB              ;
  11+ 88CB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88CB              ;               _ hacen las entidades hacia abajo.
  13+ 88CB              ;
  14+ 88CB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88CB              ;
  16+ 88CB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88CB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88CB              ;
  19+ 88CB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88CB              ;           _ la bala.
  21+ 88CB              ;
  22+ 88CB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88CB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88CB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88CB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88CB              ;           _ en el momento de generarse la bala)).
  27+ 88CB
  28+ 88CB              Genera_disparo
  29+ 88CB
  30+ 88CB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88CB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88CB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88CB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88CB              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88CB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88CB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88CB
  38+ 88CB              ; Exclusiones:
  39+ 88CB
  40+ 88CB 3A D2 85         ld a,(Columnas)
  41+ 88CE 47               ld b,a
  42+ 88CF 3A 9C 85         ld a,(Columns)
  43+ 88D2 B8               cp b
  44+ 88D3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88D4
  46+ 88D4              ; ----- ----- -----
  47+ 88D4
  48+ 88D4 3A C9 85         ld a,(Ctrl_0)
  49+ 88D7 CB 77            bit 6,a
  50+ 88D9 20 08            jr nz,16F
  51+ 88DB
  52+ 88DB 3A A2 85         ld a,(Coordenada_y)
  53+ 88DE FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 88E0 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 88E1 18 11            jr 14F
  56+ 88E3
  57+ 88E3              ; ----- ----- -----
  58+ 88E3
  59+ 88E3              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 88E3
  61+ 88E3 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 88E6 CD A4 87         call Extrae_address
  63+ 88E9 24               inc h
  64+ 88EA 25               dec h
  65+ 88EB 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 88ED
  67+ 88ED 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 88F0 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 88F1 ED 52            sbc hl,de
  70+ 88F3 D0               ret nc
  71+ 88F4
  72+ 88F4              ; ----- ----- -----
  73+ 88F4
  74+ 88F4 21 00 80     14 ld hl,Indice_disparo
  75+ 88F7 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 88FA 4F               ld c,a
  77+ 88FB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 88FD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 88FD              ;                                            ""        ""       "f9", B="1"
  80+ 88FD              ;                                            ""        ""       "fb", B="2"
  81+ 88FD              ;                                            ""        ""       "fb", B="3"
  82+ 88FD A7               and a
  83+ 88FE 28 10            jr z,1F
  84+ 8900 E6 01            and 1
  85+ 8902 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8903
  87+ 8903 79               ld a,c
  88+ 8904 16 F9            ld d,$f9
  89+ 8906 23           2 inc hl
  90+ 8907 23               inc hl
  91+ 8908 04               inc b
  92+ 8909 BA               cp d
  93+ 890A 28 04            jr z,1F
  94+ 890C 14               inc d
  95+ 890D 14               inc d
  96+ 890E 18 F6            jr 2B
  97+ 8910
  98+ 8910 CD A4 87     1 call Extrae_address
  99+ 8913 E5               push hl
 100+ 8914 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 8916 DD 21 F1 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 891A
 103+ 891A              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 891A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 891A
 106+ 891A 3A AF 85     	ld a,(Cuad_objeto)
 107+ 891D FE 02            cp 2
 108+ 891F 38 5A            jr c,3F
 109+ 8921 28 58            jr z,3F
 110+ 8923
 111+ 8923              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8923
 113+ 8923 E6 01            and 1
 114+ 8925 28 2A            jr z,4F
 115+ 8927
 116+ 8927              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 8927              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 8927              ;
 119+ 8927              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 8927              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 8927              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 8927
 123+ 8927 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 892A
 125+ 892A              ;   Amadeus o entidad ???.
 126+ 892A
 127+ 892A 3A C9 85         ld a,(Ctrl_0)
 128+ 892D CB 77            bit 6,a
 129+ 892F 28 0A            jr z,8F
 130+ 8931
 131+ 8931              ; 	Dispara Amadeus.
 132+ 8931
 133+ 8931 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8933 CD 6D 8F         call PreviousScan
 135+ 8936 CD 6D 8F         call PreviousScan
 136+ 8939
 137+ 8939              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8939              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8939              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8939              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8939
 142+ 8939 18 0B            jr 10F
 143+ 893B
 144+ 893B              ; 	Dispara Entidad.
 145+ 893B
 146+ 893B 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 147+ 893D
 148+ 893D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 149+ 893D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 150+ 893D
 151+ 893D C5               push bc
 152+ 893E 06 10            ld b,16
 153+ 8940 CD 5E 8F     9 call NextScan
 154+ 8943 10 FB            djnz 9B
 155+ 8945 C1               pop bc
 156+ 8946
 157+ 8946              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 158+ 8946              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 159+ 8946              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 160+ 8946              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 161+ 8946
 162+ 8946 CD A5 89     10 call Ajusta_disparo_parte_izquierda
 163+ 8949 CD 1A 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 164+ 894C              ;                                                     ; _al generar el disparo.
 165+ 894C
 166+ 894C              ; 	LLegados a este punto tendremos:
 167+ 894C              ;
 168+ 894C              ;       Puntero_objeto_disparo en IY.
 169+ 894C              ;       Rutinas_de_impresion en IX.
 170+ 894C              ;       Puntero_de_impresion en HL.
 171+ 894C              ;       Impacto/Dirección en BC.
 172+ 894C
 173+ 894C CD AD 89         call Almacena_disparo
 174+ 894F 18 4C            jr 6F                                             ; RET.
 175+ 8951
 176+ 8951              ; 	Estamos en el 4º cuadrante de pantalla.
 177+ 8951              ; 	4º CUAD. ----- ----- ----- ----- -----
 178+ 8951              ;
 179+ 8951              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 180+ 8951              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 181+ 8951              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 182+ 8951
 183+ 8951 2A 9D 85     4 ld hl,(Posicion_actual)
 184+ 8954
 185+ 8954              ;   Amadeus o entidad ???.
 186+ 8954
 187+ 8954 3A C9 85         ld a,(Ctrl_0)
 188+ 8957 CB 77            bit 6,a
 189+ 8959 28 0A            jr z,11F
 190+ 895B
 191+ 895B              ; 	Dispara Amadeus.
 192+ 895B
 193+ 895B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 194+ 895D CD 6D 8F         call PreviousScan
 195+ 8960 CD 6D 8F         call PreviousScan
 196+ 8963
 197+ 8963              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 198+ 8963              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 199+ 8963              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 200+ 8963              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 201+ 8963
 202+ 8963 18 0B            jr 13F
 203+ 8965
 204+ 8965              ; 	Dispara Entidad.
 205+ 8965
 206+ 8965 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 207+ 8967
 208+ 8967              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 209+ 8967              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 210+ 8967
 211+ 8967 C5               push bc
 212+ 8968
 213+ 8968 06 10            ld b,16
 214+ 896A CD 5E 8F     12 call NextScan
 215+ 896D 10 FB            djnz 12B
 216+ 896F
 217+ 896F C1               pop bc
 218+ 8970
 219+ 8970              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 220+ 8970              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 221+ 8970              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 222+ 8970              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 223+ 8970
 224+ 8970 CD 9E 89     13 call Ajusta_disparo_parte_derecha
 225+ 8973 CD 1A 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 226+ 8976              ;                                                     ; _al generar el disparo.
 227+ 8976
 228+ 8976              ; LLegados a este punto tendremos:
 229+ 8976              ;
 230+ 8976              ;       Puntero_objeto_disparo en IY.
 231+ 8976              ;       Rutinas_de_impresion en IX.
 232+ 8976              ;       Puntero_de_impresion en HL.
 233+ 8976              ;       Impacto/Dirección en BC.
 234+ 8976
 235+ 8976 CD AD 89         call Almacena_disparo
 236+ 8979 18 22            jr 6F                                             ; RET.
 237+ 897B
 238+ 897B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 239+ 897B
 240+ 897B 28 11        3 jr z,5F
 241+ 897D
 242+ 897D              ; 	1er CUAD. ----- ----- ----- ----- -----
 243+ 897D              ;
 244+ 897D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 245+ 897D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 246+ 897D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 247+ 897D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 248+ 897D
 249+ 897D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 250+ 897D              ;	   ""        ""       "f9", B="1"
 251+ 897D              ;	   ""        ""       "fb", B="2"
 252+ 897D              ; 	   ""        ""       "fb", B="3"
 253+ 897D
 254+ 897D 2A 9D 85     	ld hl,(Posicion_actual)
 255+ 8980 CD 5E 8F     	call NextScan
 256+ 8983
 257+ 8983              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 258+ 8983              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 259+ 8983              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 260+ 8983              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 261+ 8983
 262+ 8983 CD A5 89         call Ajusta_disparo_parte_izquierda
 263+ 8986
 264+ 8986              ; 	No se produce impacto. B="$80"
 265+ 8986              ; 	Dirección del proyectil hacia abajo. C="$80"
 266+ 8986
 267+ 8986 01 80 80         ld bc,$8080
 268+ 8989
 269+ 8989              ; 	LLegados a este punto tendremos:
 270+ 8989              ;
 271+ 8989              ;       Puntero_objeto_disparo en IY.
 272+ 8989              ;       Rutinas_de_impresion en IX.
 273+ 8989              ;       Puntero_de_impresion en HL.
 274+ 8989              ;       Impacto/Dirección en BC.
 275+ 8989
 276+ 8989 CD AD 89         call Almacena_disparo
 277+ 898C 18 0F            jr 6F                                           ; RET.
 278+ 898E
 279+ 898E              ; 	Estamos en el 2º cuadrante de pantalla.
 280+ 898E              ; 	2º CUAD. ----- ----- ----- ----- -----
 281+ 898E              ;
 282+ 898E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 283+ 898E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 284+ 898E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 285+ 898E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 286+ 898E
 287+ 898E 2A 9D 85     5 ld hl,(Posicion_actual)
 288+ 8991 CD 5E 8F     	call NextScan
 289+ 8994
 290+ 8994              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 291+ 8994              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 292+ 8994              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 293+ 8994              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 294+ 8994
 295+ 8994 CD 9E 89         call Ajusta_disparo_parte_derecha
 296+ 8997
 297+ 8997              ; 	No se produce impacto. B="$80"
 298+ 8997              ; 	Dirección del proyectil hacia abajo. C="80"
 299+ 8997
 300+ 8997 01 80 80     15 ld bc,$8080
 301+ 899A
 302+ 899A              ; 	LLegados a este punto tendremos:
 303+ 899A              ;
 304+ 899A              ;       Puntero_objeto_disparo en IY.
 305+ 899A              ;       Rutinas_de_impresion en IX.
 306+ 899A              ;       Puntero_de_impresion en HL.
 307+ 899A              ;       Impacto/Dirección en BC.
 308+ 899A
 309+ 899A CD AD 89         call Almacena_disparo
 310+ 899D
 311+ 899D C9           6 ret
 312+ 899E
 313+ 899E              ; ----------------------------------------------------------------
 314+ 899E              ;
 315+ 899E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 316+ 899E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 317+ 899E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 318+ 899E
 319+ 899E 78           Ajusta_disparo_parte_derecha ld a,b
 320+ 899F FE 02            cp 2
 321+ 89A1 38 01            jr c,1F
 322+ 89A3 23               inc hl
 323+ 89A4 C9           1 ret
 324+ 89A5
 325+ 89A5 78           Ajusta_disparo_parte_izquierda ld a,b
 326+ 89A6 FE 01        	cp 1
 327+ 89A8 20 01        	jr nz,1F
 328+ 89AA 2B           	dec hl
 329+ 89AB 2B           1 dec hl
 330+ 89AC C9               ret
 331+ 89AD
 332+ 89AD              ; ----------------------------------------------------------------
 333+ 89AD              ;
 334+ 89AD              ;   25/02/23
 335+ 89AD              ;
 336+ 89AD              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 337+ 89AD              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 338+ 89AD
 339+ 89AD              Almacena_disparo
 340+ 89AD
 341+ 89AD E5               push hl  										; HL contiene el puntero de impresión.
 342+ 89AE F1               pop af
 343+ 89AF 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 344+ 89B0
 345+ 89B0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 346+ 89B1 E6 01            and 1
 347+ 89B3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 348+ 89B5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 349+ 89B5              ; 	Dispara AMADEUS.
 350+ 89B5
 351+ 89B5              ;	Comprobamos que a Amadeus aún le quedan disparos.
 352+ 89B5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 353+ 89B5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 354+ 89B5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 355+ 89B5
 356+ 89B5 C5               push bc
 357+ 89B6 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 358+ 89B9 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 359+ 89BC A7               and a
 360+ 89BD ED 42            sbc hl,bc
 361+ 89BF CC 6D 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 362+ 89C2 C1               pop bc
 363+ 89C3 28 54            jr z,4F
 364+ 89C5
 365+ 89C5 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 366+ 89C8 23               inc hl
 367+ 89C9 23               inc hl
 368+ 89CA 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 369+ 89CD              ;                                                   ; _ Disparo_(+1).
 370+ 89CD 18 18            jr 2F
 371+ 89CF
 372+ 89CF              ; Dispara una entidad.
 373+ 89CF
 374+ 89CF C5           1 push bc
 375+ 89D0 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 376+ 89D3 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 377+ 89D6 A7               and a
 378+ 89D7 ED 42            sbc hl,bc
 379+ 89D9 CC 66 87         call z,Inicia_Puntero_Disparo_Entidades
 380+ 89DC C1               pop bc
 381+ 89DD 28 3A            jr z,4F
 382+ 89DF
 383+ 89DF 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 384+ 89E2 23               inc hl
 385+ 89E3 23               inc hl
 386+ 89E4 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 387+ 89E7              ;                                                   ; _ Disparo_(+1).
 388+ 89E7 CD A4 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 389+ 89EA              ;                                                   ; _ los 8 bytes que definen el disparo:
 390+ 89EA              ;
 391+ 89EA              ;                                                     Puntero_objeto_disparo en IY.
 392+ 89EA              ;                                                     Rutinas_de_impresion en IX.
 393+ 89EA              ;                                                     Puntero_de_impresion en HL.
 394+ 89EA              ;                                                     Impacto/Dirección en BC.
 395+ 89EA
 396+ 89EA 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 397+ 89EB 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 398+ 89EC 23               inc hl                                          ; _ al siguiente.
 399+ 89ED A7               and a
 400+ 89EE 20 C0            jr nz,3B
 401+ 89F0
 402+ 89F0 08               ex af,af
 403+ 89F1 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 404+ 89F5 F9               ld sp,hl
 405+ 89F6
 406+ 89F6 DD E5            push ix                                         ; Rutina de impresión.
 407+ 89F8 F5               push af                                         ; Puntero de impresión.
 408+ 89F9 FD E5            push iy                                         ; Puntero objeto.
 409+ 89FB C5               push bc                                         ; Control.
 410+ 89FC
 411+ 89FC ED 7B DF 85      ld sp,(Stack)
 412+ 8A00
 413+ 8A00              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 414+ 8A00
 415+ 8A00 21 D6 85     	ld hl,Ctrl_1
 416+ 8A03 CB C6        	set 0,(hl)
 417+ 8A05
 418+ 8A05 DD E5        	push ix
 419+ 8A07 E1               pop hl
 420+ 8A08 F5               push af
 421+ 8A09 DD E1            pop ix
 422+ 8A0B
 423+ 8A0B CD A0 7F     	call Guarda_foto_registros
 424+ 8A0E
 425+ 8A0E 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 426+ 8A11 CB 86        	res 0,(hl)
 427+ 8A13
 428+ 8A13              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 429+ 8A13              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 430+ 8A13
 431+ 8A13 CD 6D 87         call Inicia_Puntero_Disparo_Amadeus
 432+ 8A16 CD 66 87         call Inicia_Puntero_Disparo_Entidades
 433+ 8A19
 434+ 8A19 C9           4 ret
 435+ 8A1A
 436+ 8A1A              ; ----------------------------------------------------------------
 437+ 8A1A              ;
 438+ 8A1A              ;   4/3/23
 439+ 8A1A              ;
 440+ 8A1A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 441+ 8A1A              ;   _ al generarse el disparo.
 442+ 8A1A              ;
 443+ 8A1A              ;       "$80" ..... No se produce colisión.
 444+ 8A1A              ;       "$81" ..... Se produce colisión.
 445+ 8A1A
 446+ 8A1A              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 447+ 8A1A              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 448+ 8A1A
 449+ 8A1A
 450+ 8A1A FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 451+ 8A1C E5               push hl                                        ; Puntero de impresión.
 452+ 8A1D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 453+ 8A1F CD 36 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 454+ 8A22 E1               pop hl
 455+ 8A23 E5               push hl
 456+ 8A24 CD 5E 8F         call NextScan
 457+ 8A27
 458+ 8A27 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 459+ 8A28 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 460+ 8A2A 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 461+ 8A2C              ;                                                  ; _ 2º scanline si esto es así.
 462+ 8A2C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 463+ 8A2E CD 36 8A         call Bucle_2
 464+ 8A31
 465+ 8A31 43           2 ld b,e
 466+ 8A32 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 467+ 8A33 FD E1            pop iy
 468+ 8A35 C9               ret
 469+ 8A36
 470+ 8A36               ; ---------- ----------
 471+ 8A36
 472+ 8A36 06 02        Bucle_2 ld b,2
 473+ 8A38 FD 7E 00     2 ld a,(iy)
 474+ 8A3B A6               and (hl)
 475+ 8A3C 28 02            jr z,1F
 476+ 8A3E 1E 81            ld e,$81
 477+ 8A40 23           1 inc hl
 478+ 8A41 FD 23            inc iy
 479+ 8A43 10 F3            djnz 2B
 480+ 8A45 C9               ret
 481+ 8A46
 482+ 8A46              ; -------------------------------------------------------------------------------------------------------------
 483+ 8A46              ;
 484+ 8A46              ;   11/04/23
 485+ 8A46              ;
 486+ 8A46              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 487+ 8A46              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 488+ 8A46              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 489+ 8A46              ;
 490+ 8A46              ;   MODIFICA: HL,DE,BC,A y AF´.
 491+ 8A46
 492+ 8A46              Compara_coordenadas_X
 493+ 8A46
 494+ 8A46              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 495+ 8A46
 496+ 8A46              ; Preparamos registros:
 497+ 8A46
 498+ 8A46 21 A1 85         ld hl,Filas+6
 499+ 8A49 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 500+ 8A4A 23               inc hl
 501+ 8A4B 23               inc hl
 502+ 8A4C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 503+ 8A4D 43               ld b,e
 504+ 8A4E 21 AF 85         ld hl,Filas+20
 505+ 8A51 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 506+ 8A52 21 F0 85         ld hl,Coordenadas_X_Entidad
 507+ 8A55 CD 43 8C         call Guarda_coordenadas_X
 508+ 8A58
 509+ 8A58              ; Preparamos registros:
 510+ 8A58
 511+ 8A58 21 7A 84         ld hl,Amadeus_db+6
 512+ 8A5B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 513+ 8A5C 23               inc hl
 514+ 8A5D 23               inc hl
 515+ 8A5E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 516+ 8A5F 7B               ld a,e
 517+ 8A60 08               ex af,af'
 518+ 8A61 21 88 84         ld hl,Amadeus_db+20
 519+ 8A64 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 520+ 8A65 21 ED 85         ld hl,Coordenadas_X_Amadeus
 521+ 8A68 CD 43 8C         call Guarda_coordenadas_X
 522+ 8A6B
 523+ 8A6B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 524+ 8A6B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 525+ 8A6B
 526+ 8A6B 04               inc b
 527+ 8A6C 05               dec b
 528+ 8A6D 28 04            jr z,1F
 529+ 8A6F 06 03            ld b,3
 530+ 8A71 18 02            jr 2F
 531+ 8A73 06 02        1 ld b,2
 532+ 8A75 08           2 ex af,af'
 533+ 8A76 3C               inc a
 534+ 8A77 3D               dec a
 535+ 8A78 28 04            jr z,5F
 536+ 8A7A 0E 03            ld c,3
 537+ 8A7C 18 02            jr 6F
 538+ 8A7E 0E 02        5 ld c,2
 539+ 8A80 79           6 ld a,c
 540+ 8A81 08               ex af,af'
 541+ 8A82 11 F0 85         ld de,Coordenadas_X_Entidad
 542+ 8A85 1A           4 ld a,(de)
 543+ 8A86 21 ED 85         ld hl,Coordenadas_X_Amadeus
 544+ 8A89 BE           3 cp (hl)
 545+ 8A8A 28 0B            jr z,7F
 546+ 8A8C 23               inc hl
 547+ 8A8D 0D               dec c
 548+ 8A8E 20 F9            jr nz,3B
 549+ 8A90 13               inc de
 550+ 8A91 08               ex af,af'
 551+ 8A92 4F               ld c,a
 552+ 8A93 08               ex af,af'
 553+ 8A94 10 EF            djnz 4B
 554+ 8A96 C9           8 ret
 555+ 8A97 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 556+ 8A99 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 557+ 8A9C              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 558+ 8A9C 21 EC 85         ld hl,Impacto2
 559+ 8A9F CB D6            set 2,(hl)
 560+ 8AA1 18 F3            jr 8B
 561+ 8AA3
 562+ 8AA3              ; -----------------------------------------------------------------------
 563+ 8AA3              ;
 564+ 8AA3              ;   11/04/23
 565+ 8AA3              ;
 566+ 8AA3
 567+ 8AA3              Detecta_colision_nave_entidad
 568+ 8AA3
 569+ 8AA3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 570+ 8AA3
 571+ 8AA3 2A 9D 85         ld hl,(Posicion_actual)
 572+ 8AA6 CD C3 8E         call Calcula_puntero_de_impresion
 573+ 8AA9
 574+ 8AA9              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 575+ 8AA9              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 576+ 8AA9
 577+ 8AA9
 578+ 8AA9              ;    jr $
 579+ 8AA9
 580+ 8AA9 DD E5            push ix
 581+ 8AAB E1               pop hl
 582+ 8AAC E5               push hl
 583+ 8AAD
 584+ 8AAD              ; ----- ----- -----
 585+ 8AAD 1E 00            ld e,0                                        ; Indica impacto.
 586+ 8AAF 06 0A            ld b,10
 587+ 8AB1 CD C9 8A     2 call Bucle_3                                    ; Comprobamos el 1er scanline.
 588+ 8AB4 7B               ld a,e
 589+ 8AB5 FE 05            cp 5
 590+ 8AB7 38 00            jr c,3F
 591+ 8AB9
 592+ 8AB9              ;    ld hl,Impacto2
 593+ 8AB9              ;    set 2,(hl)
 594+ 8AB9              ;    jr 1F
 595+ 8AB9
 596+ 8AB9 E1           3 pop hl
 597+ 8ABA CD 5E 8F         call NextScan
 598+ 8ABD E5               push hl
 599+ 8ABE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 600+ 8ABF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 601+ 8AC1 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 602+ 8AC3 30 02            jr nc,1F
 603+ 8AC5              ;                                                  ; _ 2º scanline si esto es así.
 604+ 8AC5 10 EA            djnz 2B
 605+ 8AC7
 606+ 8AC7 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 607+ 8AC8 C9               ret
 608+ 8AC9
 609+ 8AC9               ; ---------- ----------
 610+ 8AC9
 611+ 8AC9 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 612+ 8ACA 3A 9C 85         ld a,(Columns)
 613+ 8ACD 47               ld b,a
 614+ 8ACE FD 7E 00     2 ld a,(iy)
 615+ 8AD1 BE               cp (hl)
 616+ 8AD2 28 01            jr z,1F
 617+ 8AD4
 618+ 8AD4 1C               inc e
 619+ 8AD5
 620+ 8AD5 23           1 inc hl
 621+ 8AD6 FD 23            inc iy
 622+ 8AD8 10 F4            djnz 2B
 623+ 8ADA C1               pop bc
 624+ 8ADB C9               ret
 625+ 8ADC
 626+ 8ADC              ; -------------------------------------------------------------------------------------------------------------
 627+ 8ADC              ;
 628+ 8ADC              ;   13/03/23
 629+ 8ADC              ;
 630+ 8ADC              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 631+ 8ADC              ;
 632+ 8ADC              ;   DESTRUYE: HL,BC,DE y A.
 633+ 8ADC
 634+ 8ADC 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 635+ 8ADF 7E               ld a,(hl)
 636+ 8AE0 A7               and a
 637+ 8AE1 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 638+ 8AE2
 639+ 8AE2 44               ld b,h
 640+ 8AE3 4D               ld c,l
 641+ 8AE4 2A E5 85         ld hl,(Stack_snapshot_disparos)
 642+ 8AE7 E5               push hl
 643+ 8AE8 A7               and a
 644+ 8AE9 ED 42            sbc hl,bc
 645+ 8AEB E5               push hl
 646+ 8AEC C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 647+ 8AED
 648+ 8AED E1               pop hl
 649+ 8AEE 54               ld d,h
 650+ 8AEF 5D               ld e,l
 651+ 8AF0 1B               dec de
 652+ 8AF1 ED B8            lddr                                                ; Limpiamos.
 653+ 8AF3
 654+ 8AF3 21 60 70         ld hl,Album_de_fotos_disparos
 655+ 8AF6 22 E5 85         ld (Stack_snapshot_disparos),hl
 656+ 8AF9
 657+ 8AF9 C9               ret
 658+ 8AFA
 659+ 8AFA              ; -------------------------------------------------------------------------------------------------------------
 660+ 8AFA              ;
 661+ 8AFA              ;   28/03/23
 662+ 8AFA              ;
 663+ 8AFA
 664+ 8AFA 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 665+ 8AFD 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 666+ 8B00
 667+ 8B00 CD A4 87     2 call Extrae_address
 668+ 8B03 7E               ld a,(hl)
 669+ 8B04 A7               and a
 670+ 8B05 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 671+ 8B07
 672+ 8B07              ; ----- ----- ----- ----- ----- -----
 673+ 8B07
 674+ 8B07 C5               push bc
 675+ 8B08 CD BE 8B         call foto_disparo_a_borrar
 676+ 8B0B
 677+ 8B0B              ; Existe colisión con este disparo???
 678+ 8B0B
 679+ 8B0B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 680+ 8B0C 7E               ld a,(hl)
 681+ 8B0D 2B               dec hl
 682+ 8B0E E6 01            and 1
 683+ 8B10 28 0C            jr z,9F
 684+ 8B12
 685+ 8B12              ; Elimino el disparo de la base de datos.
 686+ 8B12
 687+ 8B12 E5               push hl
 688+ 8B13 CD 38 8C         call Elimina_disparo_de_base_de_datos
 689+ 8B16 21 EC 85         ld hl,Impacto2
 690+ 8B19 CB C6            set 0,(hl)
 691+ 8B1B E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 692+ 8B1C 18 06            jr 11F
 693+ 8B1E
 694+ 8B1E CD E7 8B     9 call Mueve_disparo
 695+ 8B21 CD BE 8B         call foto_disparo_a_borrar
 696+ 8B24
 697+ 8B24 C1           11 pop bc
 698+ 8B25 18 04            jr 7F
 699+ 8B27
 700+ 8B27              ; ----- ----- ----- ----- ----- -----
 701+ 8B27
 702+ 8B27 ED 42        1 sbc hl,bc
 703+ 8B29 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 704+ 8B2B
 705+ 8B2B 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 706+ 8B2E 23               inc hl
 707+ 8B2F 23               inc hl
 708+ 8B30 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 709+ 8B33 18 CB            jr 2B
 710+ 8B35
 711+ 8B35 CD 6D 87     3 call Inicia_Puntero_Disparo_Amadeus
 712+ 8B38 01 66 84         ld bc,Disparo_11
 713+ 8B3B 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 714+ 8B3E
 715+ 8B3E CD A4 87     5 call Extrae_address
 716+ 8B41 7E               ld a,(hl)
 717+ 8B42 A7               and a
 718+ 8B43 28 67            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 719+ 8B45
 720+ 8B45              ; ----- ----- ----- ----- ----- -----
 721+ 8B45
 722+ 8B45 C5               push bc
 723+ 8B46 CD BE 8B         call foto_disparo_a_borrar
 724+ 8B49
 725+ 8B49              ; Existe colisión con este disparo???
 726+ 8B49
 727+ 8B49 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 728+ 8B4A 7E               ld a,(hl)
 729+ 8B4B 2B               dec hl
 730+ 8B4C E6 01            and 1
 731+ 8B4E 28 53            jr z,10F
 732+ 8B50
 733+ 8B50              ; La colisión se produce con Amadeus???
 734+ 8B50              ; Amadeus siempre tiene (Coordenada_y)="$16".
 735+ 8B50
 736+ 8B50 18 FE            jr $
 737+ 8B52
 738+ 8B52 E5               push hl
 739+ 8B53
 740+ 8B53 06 04            ld b,4
 741+ 8B55 23           16 inc hl
 742+ 8B56 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 743+ 8B58 CD A4 87         call Extrae_address
 744+ 8B5B CD 75 95         call Genera_coordenadas_disparo
 745+ 8B5E
 746+ 8B5E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 747+ 8B5F FE 16            cp $16
 748+ 8B61 38 2E            jr c,15F
 749+ 8B63
 750+ 8B63              ; (Colisiones en filas 16 y 17).
 751+ 8B63
 752+ 8B63
 753+ 8B63 18 FE            jr $
 754+ 8B65
 755+ 8B65
 756+ 8B65 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 757+ 8B66
 758+ 8B66              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 759+ 8B66
 760+ 8B66 21 7A 84         ld hl,Amadeus_db+6
 761+ 8B69 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 762+ 8B6A 23               inc hl
 763+ 8B6B 23               inc hl
 764+ 8B6C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 765+ 8B6D 21 88 84         ld hl,Amadeus_db+20
 766+ 8B70 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 767+ 8B71 21 ED 85         ld hl,Coordenadas_X_Amadeus
 768+ 8B74 CD 43 8C         call Guarda_coordenadas_X
 769+ 8B77
 770+ 8B77 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 771+ 8B78
 772+ 8B78              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 773+ 8B78
 774+ 8B78
 775+ 8B78 18 FE            jr $
 776+ 8B7A
 777+ 8B7A 21 ED 85         ld hl,Coordenadas_X_Amadeus
 778+ 8B7D 7E               ld a,(hl)
 779+ 8B7E BA           18 cp d
 780+ 8B7F 20 03            jr nz,17F
 781+ 8B81
 782+ 8B81              ; Colisión Amadeus !!!!!!!!!!
 783+ 8B81 E1               pop hl
 784+ 8B82 18 13            jr 14F
 785+ 8B84
 786+ 8B84 23           17 inc hl
 787+ 8B85 7E               ld a,(hl)
 788+ 8B86 A7               and a
 789+ 8B87 F5               push af                                            ; No hay colisión con Amadeus.
 790+ 8B88 CC 6D 8C         call z,Limpia_Coordenadas_X_Amadeus
 791+ 8B8B F1               pop af
 792+ 8B8C A7               and a
 793+ 8B8D 28 02            jr z,15F                                           ; No hay colisión con Amadeus.
 794+ 8B8F
 795+ 8B8F 18 ED            jr 18B
 796+ 8B91
 797+ 8B91              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 798+ 8B91              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 799+ 8B91
 800+ 8B91 E1           15 pop hl
 801+ 8B92 23               inc hl
 802+ 8B93 35               dec (hl)
 803+ 8B94 2B               dec hl
 804+ 8B95 18 0C            jr 10F
 805+ 8B97
 806+ 8B97              ; -----------------------debug
 807+ 8B97
 808+ 8B97              ; Elimino el disparo de la base de datos.
 809+ 8B97
 810+ 8B97 E5           14 push hl
 811+ 8B98 CD 38 8C         call Elimina_disparo_de_base_de_datos
 812+ 8B9B 21 EC 85         ld hl,Impacto2
 813+ 8B9E CB CE            set 1,(hl)
 814+ 8BA0 E1               pop hl
 815+ 8BA1 18 06            jr 12F
 816+ 8BA3
 817+ 8BA3 CD E7 8B     10 call Mueve_disparo
 818+ 8BA6 CD BE 8B         call foto_disparo_a_borrar
 819+ 8BA9 C1           12 pop bc
 820+ 8BAA
 821+ 8BAA 18 04            jr 8F
 822+ 8BAC
 823+ 8BAC              ; ----- ----- ----- ----- ----- -----
 824+ 8BAC
 825+ 8BAC ED 42        4 sbc hl,bc
 826+ 8BAE 28 0A            jr z,6F
 827+ 8BB0
 828+ 8BB0 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 829+ 8BB3 23               inc hl
 830+ 8BB4 23               inc hl
 831+ 8BB5 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 832+ 8BB8 18 84            jr 5B
 833+ 8BBA
 834+ 8BBA CD 66 87     6 call Inicia_Puntero_Disparo_Entidades
 835+ 8BBD C9               ret
 836+ 8BBE
 837+ 8BBE              ; ------------------------------------------------------------------
 838+ 8BBE
 839+ 8BBE              foto_disparo_a_borrar
 840+ 8BBE
 841+ 8BBE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 842+ 8BBF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 843+ 8BC0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 844+ 8BC1
 845+ 8BC1 E5               push hl
 846+ 8BC2 23               inc hl
 847+ 8BC3 23               inc hl
 848+ 8BC4 ED 73 DF 85      ld (Stack),sp
 849+ 8BC8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 850+ 8BC9 FD E1            pop iy
 851+ 8BCB DD E1            pop ix
 852+ 8BCD E1               pop hl
 853+ 8BCE ED 7B DF 85      ld sp,(Stack)
 854+ 8BD2 3A D6 85         ld a,(Ctrl_1)
 855+ 8BD5 CB C7            set 0,a
 856+ 8BD7 32 D6 85         ld (Ctrl_1),a
 857+ 8BDA CD A0 7F         call Guarda_foto_registros
 858+ 8BDD 3A D6 85         ld a,(Ctrl_1)
 859+ 8BE0 CB 87            res 0,a
 860+ 8BE2 32 D6 85         ld (Ctrl_1),a
 861+ 8BE5 E1               pop hl
 862+ 8BE6 C9               ret
 863+ 8BE7
 864+ 8BE7 E5           Mueve_disparo push hl
 865+ 8BE8 7E               ld a,(hl)
 866+ 8BE9 06 04            ld b,4
 867+ 8BEB 23           1 inc hl
 868+ 8BEC 10 FD            djnz 1B
 869+ 8BEE
 870+ 8BEE              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 871+ 8BEE
 872+ 8BEE CD A4 87         call Extrae_address
 873+ 8BF1
 874+ 8BF1 E6 01            and 1
 875+ 8BF3 28 2A            jr z,2F
 876+ 8BF5
 877+ 8BF5              ; Disparo hacia arriba, (Amadeus).
 878+ 8BF5
 879+ 8BF5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 880+ 8BF5              ; _ de la dificultad.
 881+ 8BF5
 882+ 8BF5 CD 6D 8F         call PreviousScan
 883+ 8BF8 CD 6D 8F         call PreviousScan
 884+ 8BFB CD 6D 8F         call PreviousScan
 885+ 8BFE
 886+ 8BFE              ; Detecta si el disparo de Amadeus sale de pantalla:
 887+ 8BFE
 888+ 8BFE 7C               ld a,h
 889+ 8BFF FE 40            cp $40
 890+ 8C01 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 891+ 8C03
 892+ 8C03              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 893+ 8C03
 894+ 8C03 EB               ex de,hl
 895+ 8C04 06 04            ld b,4
 896+ 8C06 2B           6 dec hl
 897+ 8C07 10 FD            djnz 6B
 898+ 8C09
 899+ 8C09 CD 38 8C         call Elimina_disparo_de_base_de_datos
 900+ 8C0C
 901+ 8C0C 18 0C            jr 4F
 902+ 8C0E
 903+ 8C0E              ; Se ha desplazado la bala, compruebo colisión.
 904+ 8C0E
 905+ 8C0E D5           3 push de
 906+ 8C0F C5               push bc
 907+ 8C10 CD 1A 8A         call Comprueba_Colision
 908+ 8C13 78               ld a,b
 909+ 8C14 C1               pop bc
 910+ 8C15 D1               pop de
 911+ 8C16
 912+ 8C16 EB               ex de,hl
 913+ 8C17
 914+ 8C17 73               ld (hl),e
 915+ 8C18 23               inc hl
 916+ 8C19 72               ld (hl),d
 917+ 8C1A
 918+ 8C1A E1           4 pop hl
 919+ 8C1B 23               inc hl
 920+ 8C1C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 921+ 8C1D 2B               dec hl
 922+ 8C1E C9               ret
 923+ 8C1F
 924+ 8C1F              ; Disparo hacia abajo, (Entidad).
 925+ 8C1F
 926+ 8C1F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 927+ 8C1F              ; _ de la dificultad.
 928+ 8C1F
 929+ 8C1F CD 5E 8F     2 call NextScan
 930+ 8C22 CD 5E 8F         call NextScan
 931+ 8C25 CD 5E 8F         call NextScan
 932+ 8C28
 933+ 8C28              ; Detecta si el disparo de la entidad sale de la pantalla.
 934+ 8C28
 935+ 8C28 7C               ld a,h
 936+ 8C29 FE 58            cp $58
 937+ 8C2B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 938+ 8C2D
 939+ 8C2D EB               ex de,hl
 940+ 8C2E 06 04            ld b,4
 941+ 8C30 2B           5 dec hl
 942+ 8C31 10 FD            djnz 5B
 943+ 8C33
 944+ 8C33 CD 38 8C         call Elimina_disparo_de_base_de_datos
 945+ 8C36
 946+ 8C36 18 E2            jr 4B
 947+ 8C38
 948+ 8C38              ; HL apunta al primer byte de la base de datos del disparo.
 949+ 8C38 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 950+ 8C3B AF               xor a
 951+ 8C3C 77               ld (hl),a
 952+ 8C3D 54               ld d,h
 953+ 8C3E 5D               ld e,l
 954+ 8C3F 13               inc de
 955+ 8C40 ED B0            ldir
 956+ 8C42 C9               ret
 957+ 8C43
 958+ 8C43              ; -----------------------------------------------------------------
 959+ 8C43              ;
 960+ 8C43              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 961+ 8C43              ;
 962+ 8C43              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 963+ 8C43              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 964+ 8C43              ;
 965+ 8C43              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 966+ 8C43              ;
 967+ 8C43              ;   INPUTS:
 968+ 8C43              ;
 969+ 8C43              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 970+ 8C43              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 971+ 8C43              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 972+ 8C43
 973+ 8C43              ;   MODIFICA: A, HL, DE y C
 974+ 8C43
 975+ 8C43 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 976+ 8C44 79               ld a,c
 977+ 8C45 E6 01            and 1
 978+ 8C47 20 03            jr nz,1F
 979+ 8C49 14               inc d
 980+ 8C4A 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 981+ 8C4C
 982+ 8C4C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 983+ 8C4C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 984+ 8C4C
 985+ 8C4C 15           1 dec d
 986+ 8C4D 23           2 inc hl
 987+ 8C4E 72               ld (hl),d
 988+ 8C4F
 989+ 8C4F 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 990+ 8C50 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 991+ 8C51 C8               ret z
 992+ 8C52
 993+ 8C52 AF               xor a
 994+ 8C53 5F               ld e,a
 995+ 8C54 18 ED            jr Guarda_coordenadas_X
 996+ 8C56
 997+ 8C56              ; -----------------------------------------------------------------
 998+ 8C56              ;
 999+ 8C56              ;   12/04/23
1000+ 8C56              ;
1001+ 8C56
1002+ 8C56 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1003+ 8C59 FE 04            cp 4
1004+ 8C5B 20 FE            jr nz,$
1005+ 8C5D CD A3 8A         call Detecta_colision_nave_entidad
1006+ 8C60
1007+ 8C60 7B               ld a,e
1008+ 8C61 C8               ret z
1009+ 8C62 FE 05            cp 5
1010+ 8C64 D8               ret c
1011+ 8C65
1012+ 8C65 21 B4 85         ld hl,Impacto
1013+ 8C68 36 01            ld (hl),1
1014+ 8C6A 18 FE            jr $
1015+ 8C6C
1016+ 8C6C C9               ret
1017+ 8C6D
1018+ 8C6D              ; -----------------------------------------------------------------
1019+ 8C6D              ;
1020+ 8C6D              ;   16/04/23
1021+ 8C6D              ;
1022+ 8C6D
1023+ 8C6D AF           Limpia_Coordenadas_X_Amadeus xor a
1024+ 8C6E 06 03            ld b,3
1025+ 8C70 21 ED 85         ld hl,Coordenadas_X_Amadeus
1026+ 8C73 77           1 ld (hl),a
1027+ 8C74 23               inc hl
1028+ 8C75 10 FC            djnz 1B
1029+ 8C77 C9               ret
# file closed: Disparo.asm
 888  8C78              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C78              ; ******************************************************************************************************************************************************************************************
   2+ 8C78              ;
   3+ 8C78              ; 01/23
   4+ 8C78              ;
   5+ 8C78              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C78
   7+ 8C78 CD 52 8F     Draw call Prepara_draw
   8+ 8C7B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C7C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C7D 28 05        	jr z,2F
  11+ 8C7F
  12+ 8C7F 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C82 18 0C        	jr 1F
  14+ 8C84 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C87 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C8A CD 19 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C8D              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C8D CD 98 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C90 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C93 CB 6F        	bit 5,a
  21+ 8C95 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8C97
  23+ 8C97 CD AF 8C     	call Comprueba_limite_horizontal
  24+ 8C9A CD 3F 8D     	call Comprueba_limite_vertical
  25+ 8C9D
  26+ 8C9D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8C9D
  28+ 8C9D CD 8C 8E     3 call calcula_CColumnass
  29+ 8CA0 CD C3 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CA3 CD 18 8F     	call Define_rutina_de_impresion
  31+ 8CA6
  32+ 8CA6 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CA9 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CAB 32 C9 85     	ld (Ctrl_0),a
  35+ 8CAE
  36+ 8CAE C9           	ret
  37+ 8CAF
  38+ 8CAF              ; *******************************************************************************************************************************************************************************************
  39+ 8CAF              ;	21/01/23
  40+ 8CAF              ;
  41+ 8CAF              ; 	Comprueba_limite_horizontal.
  42+ 8CAF              ;
  43+ 8CAF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CAF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CAF              ;
  46+ 8CAF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CAF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CAF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CAF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CAF
  51+ 8CAF
  52+ 8CAF
  53+ 8CAF 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CB2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CB4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CB6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CB8 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CBB 18 09            jr 6F
  59+ 8CBD CB 5F        1 bit 3,a
  60+ 8CBF 28 0A            jr z,2F
  61+ 8CC1 E6 F7            and $f7
  62+ 8CC3 32 C9 85         ld (Ctrl_0),a
  63+ 8CC6 CD 19 8E     6 call Inicializacion
  64+ 8CC9 18 5B            jr 5F
  65+ 8CCB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CCC
  67+ 8CCC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CCC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CCC
  70+ 8CCC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CCD 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CD0 CD 1E 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CD3 67           	ld h,a
  74+ 8CD4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CD5 CD 1E 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CD8 67           	ld h,a
  77+ 8CD9 A7           	and a
  78+ 8CDA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CDC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CDD 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CE0 FE 02        	cp 2
  82+ 8CE2 38 1E        	jr c,3F
  83+ 8CE4 28 1C        	jr z,3F
  84+ 8CE6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CE7 28 23            jr z,7F
  86+ 8CE9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CEB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CED E1           	pop hl
  89+ 8CEE
  90+ 8CEE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CEE              ; _para indicar con E="2" en caso necesario.
  92+ 8CEE
  93+ 8CEE E5               push hl
  94+ 8CEF C5               push bc
  95+ 8CF0 CD 1E 92     	call calcula_tercio
  96+ 8CF3 FE 01        	cp 1
  97+ 8CF5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8CF7 CD 27 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8CFA 28 26            jr z,9F
 100+ 8CFC 38 24            jr c,9F
 101+ 8CFE 1E 00        11 ld e,0
 102+ 8D00 18 22            jr 8F
 103+ 8D02 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D03 28 07        	jr z, 7F
 105+ 8D05 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D07 1E 00         	ld e,0
 107+ 8D09 E1           	pop hl
 108+ 8D0A 18 04        	jr 4F
 109+ 8D0C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D0E 18 15            jr 10F
 111+ 8D10
 112+ 8D10              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D10              ; _para indicar con E="2" en caso necesario.
 114+ 8D10
 115+ 8D10 E5           4 push hl
 116+ 8D11 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D12 CD 1E 92     	call calcula_tercio
 118+ 8D15 FE 01        	cp 1
 119+ 8D17 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D19 CD 27 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D1C 28 04            jr z,9F
 122+ 8D1E 30 02            jr nc,9F
 123+ 8D20 18 02        	jr 8F
 124+ 8D22 1E 02        9 ld e,2
 125+ 8D24 C1           8 pop bc
 126+ 8D25 E1           10 pop hl
 127+ 8D26 C9           5 ret
 128+ 8D27
 129+ 8D27              ; --------------------
 130+ 8D27              ;
 131+ 8D27              ; 25/08/22
 132+ 8D27
 133+ 8D27 CD 1E 92     Comprueba_centro call calcula_tercio
 134+ 8D2A 67               ld h,a
 135+ 8D2B 08           	ex af,af
 136+ 8D2C FE 02        	cp 2
 137+ 8D2E 38 07        	jr c,1F
 138+ 8D30 28 05        	jr z,1F
 139+ 8D32 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D35 18 03        	jr 2F
 141+ 8D37 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D3A 08           2 ex af,af
 143+ 8D3B A7               and a
 144+ 8D3C ED 42            sbc hl,bc
 145+ 8D3E C9               ret
 146+ 8D3F
 147+ 8D3F              ; *********************************************************************************************************************************************************************************************
 148+ 8D3F              ;
 149+ 8D3F              ;   16/8/22
 150+ 8D3F              ;
 151+ 8D3F              ;	Comprueba_limite_vertical
 152+ 8D3F              ;
 153+ 8D3F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D3F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D3F              ;
 156+ 8D3F
 157+ 8D3F 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D42 7D           	ld a,l
 159+ 8D43 E6 1F        	and $1F
 160+ 8D45 57           	ld d,a
 161+ 8D46 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D49 BA           	cp d 											; Límite - Posición.
 163+ 8D4A 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D4B 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D4E CB 47        	bit 0,a
 166+ 8D50 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D52
 168+ 8D52              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D52
 170+ 8D52 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D53 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D55
 173+ 8D55              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D55              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D55
 176+ 8D55 3A A1 85         ld a,(Coordenada_X)
 177+ 8D58 16 0F            ld d,Centro_izquierda
 178+ 8D5A A7               and a
 179+ 8D5B 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D5C 28 1E            jr z,3F
 181+ 8D5E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D60              ;                                                    ; _salimos sin modificar nada.
 183+ 8D60 18 0E            jr 2F
 184+ 8D62 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D63 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D65
 187+ 8D65              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D65              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D65
 190+ 8D65 3A A1 85         ld a,(Coordenada_X)
 191+ 8D68 16 10            ld d,Centro_derecha
 192+ 8D6A A7               and a
 193+ 8D6B 92               sub d
 194+ 8D6C 28 0E            jr z,3F
 195+ 8D6E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D70              ;                                                    ; _salimos sin modificar nada.
 197+ 8D70 CB 43        2 bit 0,e
 198+ 8D72 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D74 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D75 CD 09 8E         call Modificaccionne
 201+ 8D78 C1           	pop bc
 202+ 8D79 CD 19 8E         call Inicializacion
 203+ 8D7C C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D7D
 205+ 8D7D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D7D
 207+ 8D7D C5           4 push bc
 208+ 8D7E 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D81 0A           	ld a,(bc)
 210+ 8D82 3D           	dec a
 211+ 8D83 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D84 7D           	ld a,l
 213+ 8D85 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D86 CB 47        	bit 0,a
 215+ 8D88 28 03        	jr z,5F
 216+ 8D8A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D8B 18 2E        	jr 7F
 218+ 8D8D
 219+ 8D8D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D8D
 221+ 8D8D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D8E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D8F 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D92 CB 4F        	bit 1,a
 225+ 8D94 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8D96 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8D97
 228+ 8D97              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8D97
 230+ 8D97 1C               inc e
 231+ 8D98 1D               dec e
 232+ 8D99 20 07            jr nz,12F
 233+ 8D9B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8D9C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8D9D 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DA0 18 44        13 jr 9F
 237+ 8DA2 CB 43        12 bit 0,e
 238+ 8DA4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DA6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DA6 C1           	pop bc
 241+ 8DA7 18 D3        	jr 3B
 242+ 8DA9 80           14 add b
 243+ 8DAA 6F               ld l,a
 244+ 8DAB 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DAE CD 09 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DB1 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DB3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DB5 32 C9 85         ld (Ctrl_0),a
 249+ 8DB8 F1           	pop af
 250+ 8DB9 18 2B        	jr 9F
 251+ 8DBB
 252+ 8DBB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DBB
 254+ 8DBB F5           7 push af
 255+ 8DBC 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DBF CB 47        	bit 0,a
 257+ 8DC1 20 1D        	jr nz,8F
 258+ 8DC3 F1           	pop af
 259+ 8DC4
 260+ 8DC4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DC4
 262+ 8DC4 1C           	inc e
 263+ 8DC5 1D               dec e
 264+ 8DC6 20 07            jr nz,10F
 265+ 8DC8 90           	sub b
 266+ 8DC9 6F               ld l,a
 267+ 8DCA 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DCD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DCF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DCF CB 43        10 bit 0,e
 271+ 8DD1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DD3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DD3 C1           	pop bc
 274+ 8DD4 18 A6        	jr 3B
 275+ 8DD6 90           16 sub b
 276+ 8DD7 6F               ld l,a
 277+ 8DD8 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DDB CD 09 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DDE 18 06            jr 9F
 280+ 8DE0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DE2 32 C9 85         ld (Ctrl_0),a
 282+ 8DE5 F1           	pop af
 283+ 8DE6 C1           9 pop bc
 284+ 8DE7 1E 00        	ld e,0
 285+ 8DE9 CD 19 8E         call Inicializacion
 286+ 8DEC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DED 08           	ex af,af
 288+ 8DEE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DEF 18 8B            jr 3B
 290+ 8DF1
 291+ 8DF1              ; --------------------
 292+ 8DF1
 293+ 8DF1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DF3 CD 6D 8F     1 call PreviousScan
 295+ 8DF6 10 FB            djnz 1B
 296+ 8DF8 22 9D 85     	ld (Posicion_actual),hl
 297+ 8DFB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8DFC C9           	ret
 299+ 8DFD
 300+ 8DFD              ; --------------------
 301+ 8DFD
 302+ 8DFD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8DFF CD 5E 8F     1 call NextScan
 304+ 8E02 10 FB            djnz 1B
 305+ 8E04 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E07 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E08 C9           	ret
 308+ 8E09
 309+ 8E09              ; --------------------
 310+ 8E09              ;
 311+ 8E09              ;	22/01/23
 312+ 8E09              ;
 313+ 8E09              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E09              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E09              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E09
 317+ 8E09
 318+ 8E09              Modificaccionne
 319+ 8E09
 320+ 8E09 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E0C FE 02        	cp 2
 322+ 8E0E CC F1 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E11 DC F1 8D         call c,Modifica_Pos_actual
 324+ 8E14 C8           	ret z
 325+ 8E15 CD FD 8D         call Modifica_Pos_actual2
 326+ 8E18 C9               ret
 327+ 8E19
 328+ 8E19              ; *************************************************************************************************************************************************************************************************
 329+ 8E19              ;
 330+ 8E19              ;	13/8/22
 331+ 8E19              ;
 332+ 8E19              ;	Inicializacion
 333+ 8E19              ;
 334+ 8E19              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E19              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E19              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E19              ;
 338+ 8E19              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E19              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E19              ;	_ desaparece/aparece.
 341+ 8E19
 342+ 8E19              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E19              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E19              ;
 345+ 8E19              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E19              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E19              ; 		   [E] ="0"
 348+ 8E19
 349+ 8E19              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E19
 351+ 8E19 CD 1E 92     Inicializacion call calcula_tercio
 352+ 8E1C 28 36        	jr z,primit
 353+ 8E1E E6 02        	and 2
 354+ 8E20 20 07        	jr nz,segmit
 355+ 8E22 7D           	ld a,l
 356+ 8E23 FE 7F        	cp $7f
 357+ 8E25 38 2D        	jr c,primit
 358+ 8E27 28 2B        	jr z,primit
 359+ 8E29 CD 86 8E     segmit call column
 360+ 8E2C 38 13        	jr c,tercuad
 361+ 8E2E 3E 04        cuarcuad ld a,4
 362+ 8E30 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E33 21 20 48     	ld hl,$4820
 364+ 8E36 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E39 21 D5 85     	ld hl,Limite_vertical
 366+ 8E3C 36 0D        	ld (hl),$0d
 367+ 8E3E 08           	ex af,af
 368+ 8E3F 18 3C        	jr 1F
 369+ 8E41              tercuad
 370+ 8E41 3E 03        	ld a,3
 371+ 8E43 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E46 21 20 48     	ld hl,$4820
 373+ 8E49 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E4C 21 D5 85     	ld hl,Limite_vertical
 375+ 8E4F 36 12        	ld (hl),$12
 376+ 8E51 08           	ex af,af
 377+ 8E52 18 29        	jr 1F
 378+ 8E54 CD 86 8E     primit call column
 379+ 8E57 38 13        	jr c, primcuad
 380+ 8E59              segcuad
 381+ 8E59 3E 02        	ld a,2
 382+ 8E5B 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E5E 21 C0 4F     	ld hl,$4fc0
 384+ 8E61 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E64 21 D5 85     	ld hl,Limite_vertical
 386+ 8E67 36 0D        	ld (hl),$0d
 387+ 8E69 08           	ex af,af
 388+ 8E6A 18 11        	jr 1F
 389+ 8E6C              primcuad
 390+ 8E6C 3E 01        	ld a,1
 391+ 8E6E 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E71 21 C0 4F     	ld hl,$4fc0
 393+ 8E74 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E77 21 D5 85     	ld hl,Limite_vertical
 395+ 8E7A 36 12        	ld (hl),$12
 396+ 8E7C 08           	ex af,af
 397+ 8E7D CD 4A 95     1 call Genera_coordenadas
 398+ 8E80 21 C9 85     	ld hl,Ctrl_0
 399+ 8E83 CB EE        	set 5,(hl)
 400+ 8E85 C9           	ret
 401+ 8E86
 402+ 8E86              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E86
 404+ 8E86              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E86              ;
 406+ 8E86              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E86
 408+ 8E86 7D           column ld a,l
 409+ 8E87 E6 1F        	and $1f
 410+ 8E89 FE 10         	cp $10
 411+ 8E8B C9            	ret
 412+ 8E8C
 413+ 8E8C              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E8C              ;
 415+ 8E8C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E8C              ;
 417+ 8E8C              ; 14/12/22
 418+ 8E8C              ;
 419+ 8E8C              ;	Modifica: A y BC.
 420+ 8E8C
 421+ 8E8C 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E8F E6 01        	and 1
 423+ 8E91 28 17        	jr z,1F
 424+ 8E93
 425+ 8E93              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E93
 427+ 8E93 3A A1 85     	ld a,(Coordenada_X)
 428+ 8E96 47           	ld b,a
 429+ 8E97 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8E98 79           	ld a,c
 431+ 8E99 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8E9A 38 08        	jr c,2F
 433+ 8E9C 47           	ld b,a
 434+ 8E9D 79           	ld a,c
 435+ 8E9E 90           	sub b
 436+ 8E9F 32 D2 85     	ld (Columnas),a
 437+ 8EA2 18 1B        	jr 4F
 438+ 8EA4 79           2 ld a,c
 439+ 8EA5 32 D2 85     	ld (Columnas),a
 440+ 8EA8 18 15        	jr 4F
 441+ 8EAA
 442+ 8EAA              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EAA
 444+ 8EAA 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EAD 81           	add c
 446+ 8EAE 3D           	dec a
 447+ 8EAF D6 1F        	sub $1f
 448+ 8EB1 38 08        	jr c,3F
 449+ 8EB3 47           	ld b,a
 450+ 8EB4 79           	ld a,c
 451+ 8EB5 90           	sub b
 452+ 8EB6 32 D2 85     	ld (Columnas),a
 453+ 8EB9 18 04        	jr 4F
 454+ 8EBB 79           3 ld a,c
 455+ 8EBC 32 D2 85     	ld (Columnas),a
 456+ 8EBF D9           4 exx
 457+ 8EC0 4F           	ld c,a
 458+ 8EC1 D9           	exx
 459+ 8EC2 C9            ret
 460+ 8EC3
 461+ 8EC3              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8EC3              ;
 463+ 8EC3              ; 7/1/23
 464+ 8EC3              ;
 465+ 8EC3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8EC3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8EC3              ;
 468+ 8EC3              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8EC3              ;	DESTRUYE: HL,B Y A.
 470+ 8EC3
 471+ 8EC3 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8EC6 FE 02        	cp 2
 473+ 8EC8 38 18        	jr c,1F
 474+ 8ECA 28 16        	jr z,1F
 475+ 8ECC E6 01        	and 1
 476+ 8ECE 28 0D        	jr z,3F
 477+ 8ED0
 478+ 8ED0              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8ED0
 480+ 8ED0 CD 0C 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8ED3
 482+ 8ED3 7D           9 ld a,l
 483+ 8ED4 E6 1F        	and $1f
 484+ 8ED6 28 2A        	jr z,7F
 485+ 8ED8 2B           	dec hl
 486+ 8ED9 10 F8        	djnz 9B
 487+ 8EDB 18 25        	jr 7F
 488+ 8EDD
 489+ 8EDD              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EDD
 491+ 8EDD 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EE0 18 20        	jr 7F
 493+ 8EE2
 494+ 8EE2 28 14        1 jr z,2F
 495+ 8EE4
 496+ 8EE4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EE4
 498+ 8EE4 CD 0C 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EE7 7D           4 ld a,l
 500+ 8EE8 E6 1F        	and $1f
 501+ 8EEA 28 03        	jr z,6F
 502+ 8EEC 2B           	dec hl
 503+ 8EED 10 F8        	djnz 4B
 504+ 8EEF 06 0F        6 ld b,15
 505+ 8EF1 CD 6D 8F     5 call PreviousScan
 506+ 8EF4 10 FB        	djnz 5B
 507+ 8EF6 18 0A        	jr 7F
 508+ 8EF8
 509+ 8EF8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8EF8
 511+ 8EF8 CD 0C 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8EFB 06 0F        	ld b,15
 513+ 8EFD CD 6D 8F     8 call PreviousScan
 514+ 8F00 10 FB        	djnz 8B
 515+ 8F02
 516+ 8F02 E5           7 push hl
 517+ 8F03 DD E1        	pop ix
 518+ 8F05
 519+ 8F05 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F08 E5           	push hl
 521+ 8F09 FD E1        	pop iy
 522+ 8F0B
 523+ 8F0B C9           	ret
 524+ 8F0C
 525+ 8F0C              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F0C              ;
 527+ 8F0C              ;	2/1/23
 528+ 8F0C              ;
 529+ 8F0C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F0C              ;
 531+ 8F0C              ;	Tras esta rutina tenemos:
 532+ 8F0C              ;
 533+ 8F0C              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F0C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F0C              ;
 536+ 8F0C              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F0C
 538+ 8F0C 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F0F 3A D2 85     	ld a,(Columnas)
 540+ 8F12 3D           	dec a
 541+ 8F13 20 01        	jr nz,1F
 542+ 8F15 3C           	inc a
 543+ 8F16 47           1 ld b,a
 544+ 8F17 C9           	ret
 545+ 8F18
 546+ 8F18              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F18              ;
 548+ 8F18              ;	3/1/23
 549+ 8F18              ;
 550+ 8F18              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F18              ;
 552+ 8F18              ;	Destruye: A,B,HL y DE.
 553+ 8F18
 554+ 8F18              Define_rutina_de_impresion
 555+ 8F18
 556+ 8F18 3A 9C 85     	ld a,(Columns)
 557+ 8F1B 47           	ld b,a
 558+ 8F1C 3A D2 85     	ld a,(Columnas)
 559+ 8F1F B8           	cp b
 560+ 8F20 20 0D        	jr nz,2f
 561+ 8F22
 562+ 8F22              ;	La entidad se imprime entera.
 563+ 8F22
 564+ 8F22 21 EE 8F     	ld hl, Indice_entidades_completas
 565+ 8F25 E6 01        	and 1
 566+ 8F27 28 02        	jr z,1F
 567+ 8F29
 568+ 8F29 23           	inc hl
 569+ 8F2A 23           	inc hl
 570+ 8F2B
 571+ 8F2B CD A4 87     1 call Extrae_address
 572+ 8F2E C9           	ret		;	ret
 573+ 8F2F
 574+ 8F2F              ;	La entidad no se imprime entera en pantalla.
 575+ 8F2F
 576+ 8F2F 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F32 E6 01        	and 1
 578+ 8F34 28 17        	jr z,3F
 579+ 8F36
 580+ 8F36              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F36
 582+ 8F36 21 F2 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F39 3A 9C 85     4 ld a,(Columns)
 584+ 8F3C E6 01        	and 1
 585+ 8F3E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F40
 587+ 8F40 23           	inc hl
 588+ 8F41 23           	inc hl
 589+ 8F42
 590+ 8F42 3A D2 85     	ld a,(Columnas)
 591+ 8F45 E6 01        	and 1
 592+ 8F47 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F49
 594+ 8F49 23           	inc hl
 595+ 8F4A 23           	inc hl
 596+ 8F4B
 597+ 8F4B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F4D
 599+ 8F4D 21 F8 8F     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F50 18 E7        	jr 4B
 601+ 8F52
 602+ 8F52              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F52              ;
 604+ 8F52              ;	Prepara_draw
 605+ 8F52              ;
 606+ 8F52              ;	Es una rutina de carga.
 607+ 8F52              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F52              ;
 609+ 8F52              ;	FUNCIONAMIENTO:
 610+ 8F52              ;
 611+ 8F52              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F52              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F52              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F52              ;
 615+ 8F52              ;	DESTRUYE:
 616+ 8F52              ;
 617+ 8F52              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F52
 619+ 8F52 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F55 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F56 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F57 4E           	ld c,(hl)
 623+ 8F58 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F5B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F5D C9           	ret
 626+ 8F5E
 627+ 8F5E              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F5E              ;
 629+ 8F5E              ;	5/08/22
 630+ 8F5E              ;
 631+ 8F5E              ;   NextScan.
 632+ 8F5E              ;
 633+ 8F5E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F5E              ;
 635+ 8F5E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F5E              ;
 637+ 8F5E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F5E              ;
 639+ 8F5E              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F5E              ;
 641+ 8F5E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F5E              ;
 643+ 8F5E
 644+ 8F5E 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F5F 7C               ld a,h
 646+ 8F60 E6 07            and 7
 647+ 8F62 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F63
 649+ 8F63 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F64 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F66 6F               ld l,a
 652+ 8F67 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F68
 654+ 8F68 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F69 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F6B 67               ld h,a
 657+ 8F6C C9               ret
 658+ 8F6D
 659+ 8F6D              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F6D              ;
 661+ 8F6D              ;	5/08/22
 662+ 8F6D              ;
 663+ 8F6D              ;   PreviousScan.
 664+ 8F6D              ;
 665+ 8F6D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F6D              ;
 667+ 8F6D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F6D              ;
 669+ 8F6D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F6D              ;
 671+ 8F6D              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F6D              ;
 673+ 8F6D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F6D              ;
 675+ 8F6D
 676+ 8F6D 7C           PreviousScan ld a,h
 677+ 8F6E 25               dec h               ; Dec H.
 678+ 8F6F E6 07            and 7
 679+ 8F71 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F72
 681+ 8F72 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F73 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F75 6F               ld l,a
 684+ 8F76 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F77
 686+ 8F77 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F78 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F7A 67               ld h,a
 689+ 8F7B C9               ret
 690+ 8F7C
 691+ 8F7C              ; -----------------------------------------------------------------------------------
 692+ 8F7C              ;
 693+ 8F7C              ;	28/2/23
 694+ 8F7C              ;
 695+ 8F7C              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F7C              ;	Extrae fotos de Album_de_fotos.
 697+ 8F7C
 698+ 8F7C 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F7F A7           	and a
 700+ 8F80 C8           	ret z
 701+ 8F81 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F85 31 00 70     	ld sp,Album_de_fotos
 703+ 8F88
 704+ 8F88 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F8A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F8B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F8C
 708+ 8F8C ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F90 ED 7B DF 85  	ld sp,(Stack)
 710+ 8F94
 711+ 8F94              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F94
 713+ 8F94 3E CD        	ld a,$cd
 714+ 8F96 32 9E 8F     	ld (Imprime),a
 715+ 8F99 EB           	ex de,hl
 716+ 8F9A 22 9F 8F     	ld (Imprime+1),hl
 717+ 8F9D EB           	ex de,hl
 718+ 8F9E
 719+ 8F9E              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8F9E
 721+ 8F9E 00 00 00     Imprime db 0,0,0
 722+ 8FA1
 723+ 8FA1 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FA4 3D           	dec a
 725+ 8FA5 28 09        	jr z,1F
 726+ 8FA7 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FAA
 728+ 8FAA ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FAE 18 D8        	jr 2B
 730+ 8FB0
 731+ 8FB0 AF           1 xor a
 732+ 8FB1 32 E1 85     	ld (Stack_2),a
 733+ 8FB4 C9           	ret
 734+ 8FB5
 735+ 8FB5              ; -----------------------------------------------------------------------------------
 736+ 8FB5              ;
 737+ 8FB5              ;	28/2/23
 738+ 8FB5              ;
 739+ 8FB5              ;	Pinta los disparos generados.
 740+ 8FB5
 741+ 8FB5              Extrae_foto_disparos
 742+ 8FB5
 743+ 8FB5 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FB8 A7           	and a
 745+ 8FB9 C8           	ret z
 746+ 8FBA ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FBE 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FC1
 749+ 8FC1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FC3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FC4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FC5
 753+ 8FC5 ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FC9 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FCD
 756+ 8FCD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FCD
 758+ 8FCD 3E CD        	ld a,$cd
 759+ 8FCF 32 D7 8F     	ld (Imprime2),a
 760+ 8FD2 EB           	ex de,hl
 761+ 8FD3 22 D8 8F     	ld (Imprime2+1),hl
 762+ 8FD6 EB           	ex de,hl
 763+ 8FD7
 764+ 8FD7              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FD7
 766+ 8FD7 00 00 00     Imprime2 db 0,0,0
 767+ 8FDA
 768+ 8FDA 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FDD 3D           	dec a
 770+ 8FDE 28 09        	jr z,1F
 771+ 8FE0 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FE3
 773+ 8FE3 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FE7 18 D8        	jr 2B
 775+ 8FE9
 776+ 8FE9 AF           1 xor a
 777+ 8FEA 32 E1 85     	ld (Stack_2),a
 778+ 8FED C9           	ret
 779+ 8FEE
# file closed: Draw_XOR.asm
 889  8FEE              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FEE              ;   índices de Rutinas de impresión.
   2+ 8FEE
   3+ 8FEE FE 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FF0 2B 90            defw Pinta_Amadeus_3x2
   5+ 8FF2
   6+ 8FF2 81 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FF4 21 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 8FF6 D5 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 8FF8
  10+ 8FF8 AB 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 8FFA AF 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 8FFC 63 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 8FFE
  14+ 8FFE
  15+ 8FFE              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 8FFE              ;
  17+ 8FFE              ;   12/12/22
  18+ 8FFE              ;
  19+ 8FFE              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 8FFE              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 8FFE              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 8FFE              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 8FFE              ;
  24+ 8FFE              ;   Modifica: DE y HL.
  25+ 8FFE
  26+ 8FFE ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9002 FD F9        	ld sp,iy
  28+ 9004 06 10            ld b,16
  29+ 9006 D1           1 pop de
  30+ 9007 7B               ld a,e
  31+ 9008 AE               xor (hl)
  32+ 9009 77           	ld (hl),a
  33+ 900A 23           	inc hl
  34+ 900B 7A               ld a,d
  35+ 900C AE               xor (hl)
  36+ 900D 77           	ld (hl),a
  37+ 900E 2B           	dec hl
  38+ 900F 24           	inc h
  39+ 9010 7C               ld a,h
  40+ 9011 E6 07            and 7
  41+ 9013 20 0A            jr nz,2F
  42+ 9015 7D               ld a,l
  43+ 9016 C6 20            add a,$20
  44+ 9018 6F               ld l,a
  45+ 9019 38 04            jr c,2F
  46+ 901B 7C               ld a,h
  47+ 901C D6 08            sub 8
  48+ 901E 67               ld h,a
  49+ 901F 7C           2 ld a,h
  50+ 9020 FE 58            cp $58
  51+ 9022 28 02            jr z,3F
  52+ 9024 10 E0            djnz 1B
  53+ 9026 ED 7B DF 85  3 ld sp,(Stack)
  54+ 902A C9           	ret
  55+ 902B
  56+ 902B ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 902F FD F9        	ld sp,iy
  58+ 9031 06 08            ld b,8
  59+ 9033 D1           1 pop de
  60+ 9034 7B               ld a,e
  61+ 9035 AE               xor (hl)
  62+ 9036 77           	ld (hl),a
  63+ 9037 23           	inc hl
  64+ 9038 7A               ld a,d
  65+ 9039 AE               xor (hl)
  66+ 903A 77           	ld (hl),a
  67+ 903B 23           	inc hl
  68+ 903C D1           	pop de
  69+ 903D 7B               ld a,e
  70+ 903E AE               xor (hl)
  71+ 903F 77           	ld (hl),a
  72+ 9040 2B           	dec hl
  73+ 9041 2B           	dec hl
  74+ 9042 24           	inc h
  75+ 9043 7C               ld a,h
  76+ 9044 E6 07            and 7
  77+ 9046 20 0A            jr nz,2F
  78+ 9048 7D               ld a,l
  79+ 9049 C6 20            add a,$20
  80+ 904B 6F               ld l,a
  81+ 904C 38 04            jr c,2F
  82+ 904E 7C               ld a,h
  83+ 904F D6 08            sub 8
  84+ 9051 67               ld h,a
  85+ 9052 7C           2 ld a,h
  86+ 9053 FE 58            cp $58
  87+ 9055 28 25            jr z,4F
  88+ 9057 7A               ld a,d
  89+ 9058 AE               xor (hl)
  90+ 9059 77               ld (hl),a
  91+ 905A D1           	pop de
  92+ 905B 23           	inc hl
  93+ 905C 7B               ld a,e
  94+ 905D AE               xor (hl)
  95+ 905E 77           	ld (hl),a
  96+ 905F 23           	inc hl
  97+ 9060 7A               ld a,d
  98+ 9061 AE               xor (hl)
  99+ 9062 77           	ld (hl),a
 100+ 9063 2B           	dec hl
 101+ 9064 2B           	dec hl
 102+ 9065 24           	inc h
 103+ 9066 7C               ld a,h
 104+ 9067 E6 07            and 7
 105+ 9069 20 0A            jr nz,3F
 106+ 906B 7D               ld a,l
 107+ 906C C6 20            add a,$20
 108+ 906E 6F               ld l,a
 109+ 906F 38 04            jr c,3F
 110+ 9071 7C               ld a,h
 111+ 9072 D6 08            sub 8
 112+ 9074 67               ld h,a
 113+ 9075 7C           3 ld a,h
 114+ 9076 FE 58            cp $58
 115+ 9078 28 02            jr z,4F
 116+ 907A 10 B7            djnz 1B
 117+ 907C ED 7B DF 85  4 ld sp,(Stack)
 118+ 9080 C9           	ret
 119+ 9081
 120+ 9081              ; ---------------------------------------------------
 121+ 9081
 122+ 9081 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9085 FD F9        	ld sp,iy
 124+ 9087
 125+ 9087              ; >>>
 126+ 9087
 127+ 9087 06 10            ld b,16
 128+ 9089 D1           1 pop de
 129+ 908A 7A           	ld a,d
 130+ 908B AE           	xor (hl)
 131+ 908C 77           	ld (hl),a
 132+ 908D 24           	inc h
 133+ 908E 7C               ld a,h
 134+ 908F E6 07            and 7
 135+ 9091 20 0C            jr nz,2F
 136+ 9093 7D               ld a,l
 137+ 9094 C6 20            add a,$20
 138+ 9096 6F               ld l,a
 139+ 9097 38 06            jr c,2F
 140+ 9099 7C               ld a,h
 141+ 909A D6 08            sub 8
 142+ 909C 67               ld h,a
 143+ 909D 18 00            jr 2F
 144+ 909F 7C           2 ld a,h
 145+ 90A0 FE 58            cp $58
 146+ 90A2 28 02            jr z,3F
 147+ 90A4 10 E3            djnz 1B
 148+ 90A6 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90AA C9           	ret
 150+ 90AB
 151+ 90AB ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90AF FD F9        	ld sp,iy
 153+ 90B1
 154+ 90B1              ; >>>
 155+ 90B1
 156+ 90B1 06 10            ld b,16
 157+ 90B3 D1           1 pop de
 158+ 90B4 7B           	ld a,e
 159+ 90B5 AE           	xor (hl)
 160+ 90B6 77           	ld (hl),a
 161+ 90B7 24           	inc h
 162+ 90B8 7C               ld a,h
 163+ 90B9 E6 07            and 7
 164+ 90BB 20 0C            jr nz,2F
 165+ 90BD 7D               ld a,l
 166+ 90BE C6 20            add a,$20
 167+ 90C0 6F               ld l,a
 168+ 90C1 38 06            jr c,2F
 169+ 90C3 7C               ld a,h
 170+ 90C4 D6 08            sub 8
 171+ 90C6 67               ld h,a
 172+ 90C7 18 00            jr 2F
 173+ 90C9 7C           2 ld a,h
 174+ 90CA FE 58            cp $58
 175+ 90CC 28 02            jr z,3F
 176+ 90CE 10 E3            djnz 1B
 177+ 90D0 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90D4 C9           	ret
 179+ 90D5
 180+ 90D5              ; ---------------------------------------------------
 181+ 90D5
 182+ 90D5 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90D9 FD F9        	ld sp,iy
 184+ 90DB 06 08            ld b,8
 185+ 90DD D1           1 pop de
 186+ 90DE 7A           	ld a,d
 187+ 90DF AE           	xor (hl)
 188+ 90E0 77           	ld (hl),a
 189+ 90E1 23           	inc hl
 190+ 90E2 D1           	pop de
 191+ 90E3 7B           	ld a,e
 192+ 90E4 AE           	xor (hl)
 193+ 90E5 77           	ld (hl),a
 194+ 90E6 2B           	dec hl
 195+ 90E7 24            	inc h
 196+ 90E8 7C               ld a,h
 197+ 90E9 E6 07            and 7
 198+ 90EB 20 0A            jr nz,2F
 199+ 90ED 7D               ld a,l
 200+ 90EE C6 20            add a,$20
 201+ 90F0 6F               ld l,a
 202+ 90F1 38 04            jr c,2F
 203+ 90F3 7C               ld a,h
 204+ 90F4 D6 08            sub 8
 205+ 90F6 67               ld h,a
 206+ 90F7 7C           2 ld a,h
 207+ 90F8 FE 58            cp $58
 208+ 90FA 28 20            jr z,4F
 209+ 90FC D1               pop de
 210+ 90FD 7B           	ld a,e
 211+ 90FE AE           	xor (hl)
 212+ 90FF 77           	ld (hl),a
 213+ 9100 23           	inc hl
 214+ 9101 7A           	ld a,d
 215+ 9102 AE           	xor (hl)
 216+ 9103 77           	ld (hl),a
 217+ 9104 2B           	dec hl
 218+ 9105 24           	inc h
 219+ 9106 7C               ld a,h
 220+ 9107 E6 07            and 7
 221+ 9109 20 0A            jr nz,3F
 222+ 910B 7D               ld a,l
 223+ 910C C6 20            add a,$20
 224+ 910E 6F               ld l,a
 225+ 910F 38 04            jr c,3F
 226+ 9111 7C               ld a,h
 227+ 9112 D6 08            sub 8
 228+ 9114 67               ld h,a
 229+ 9115 7C           3 ld a,h
 230+ 9116 FE 58            cp $58
 231+ 9118 28 02            jr z,4F
 232+ 911A 10 C1            djnz 1B
 233+ 911C ED 7B DF 85  4 ld sp,(Stack)
 234+ 9120 C9           	ret
 235+ 9121
 236+ 9121 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9125 FD F9        	ld sp,iy
 238+ 9127 06 08            ld b,8
 239+ 9129 D1           1 pop de
 240+ 912A D1           	pop de
 241+ 912B 7B           	ld a,e
 242+ 912C AE           	xor (hl)
 243+ 912D 77           	ld (hl),a
 244+ 912E 24            	inc h
 245+ 912F 7C               ld a,h
 246+ 9130 E6 07            and 7
 247+ 9132 20 0A            jr nz,2F
 248+ 9134 7D               ld a,l
 249+ 9135 C6 20            add a,$20
 250+ 9137 6F               ld l,a
 251+ 9138 38 04            jr c,2F
 252+ 913A 7C               ld a,h
 253+ 913B D6 08            sub 8
 254+ 913D 67               ld h,a
 255+ 913E 7C           2 ld a,h
 256+ 913F FE 58            cp $58
 257+ 9141 28 1B            jr z,4F
 258+ 9143 D1               pop de
 259+ 9144 7A           	ld a,d
 260+ 9145 AE           	xor (hl)
 261+ 9146 77           	ld (hl),a
 262+ 9147 24           	inc h
 263+ 9148 7C               ld a,h
 264+ 9149 E6 07            and 7
 265+ 914B 20 0A            jr nz,3F
 266+ 914D 7D               ld a,l
 267+ 914E C6 20            add a,$20
 268+ 9150 6F               ld l,a
 269+ 9151 38 04            jr c,3F
 270+ 9153 7C               ld a,h
 271+ 9154 D6 08            sub 8
 272+ 9156 67               ld h,a
 273+ 9157 7C           3 ld a,h
 274+ 9158 FE 58            cp $58
 275+ 915A 28 02            jr z,4F
 276+ 915C 10 CB            djnz 1B
 277+ 915E ED 7B DF 85  4 ld sp,(Stack)
 278+ 9162 C9           	ret
 279+ 9163
 280+ 9163 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9167 FD F9        	ld sp,iy
 282+ 9169 06 08            ld b,8
 283+ 916B D1           1 pop de
 284+ 916C 7B           	ld a,e
 285+ 916D AE           	xor (hl)
 286+ 916E 77           	ld (hl),a
 287+ 916F 23           	inc hl
 288+ 9170 7A           	ld a,d
 289+ 9171 AE           	xor (hl)
 290+ 9172 77           	ld (hl),a
 291+ 9173 2B           	dec hl
 292+ 9174 24             	inc h
 293+ 9175 7C               ld a,h
 294+ 9176 E6 07            and 7
 295+ 9178 20 0A            jr nz,2F
 296+ 917A 7D               ld a,l
 297+ 917B C6 20            add a,$20
 298+ 917D 6F               ld l,a
 299+ 917E 38 04            jr c,2F
 300+ 9180 7C               ld a,h
 301+ 9181 D6 08            sub 8
 302+ 9183 67               ld h,a
 303+ 9184 7C           2 ld a,h
 304+ 9185 FE 58            cp $58
 305+ 9187 28 21            jr z,4F
 306+ 9189 D1               pop de
 307+ 918A 7A           	ld a,d
 308+ 918B AE           	xor (hl)
 309+ 918C 77           	ld (hl),a
 310+ 918D 23           	inc hl
 311+ 918E D1               pop de
 312+ 918F 7B           	ld a,e
 313+ 9190 AE           	xor (hl)
 314+ 9191 77           	ld (hl),a
 315+ 9192 2B           	dec hl
 316+ 9193 24           	inc h
 317+ 9194 7C               ld a,h
 318+ 9195 E6 07            and 7
 319+ 9197 20 0A            jr nz,3F
 320+ 9199 7D               ld a,l
 321+ 919A C6 20            add a,$20
 322+ 919C 6F               ld l,a
 323+ 919D 38 04            jr c,3F
 324+ 919F 7C               ld a,h
 325+ 91A0 D6 08            sub 8
 326+ 91A2 67               ld h,a
 327+ 91A3 7C           3 ld a,h
 328+ 91A4 FE 58            cp $58
 329+ 91A6 28 02            jr z,4F
 330+ 91A8 10 C1            djnz 1B
 331+ 91AA ED 7B DF 85  4 ld sp,(Stack)
 332+ 91AE C9           	ret
 333+ 91AF
 334+ 91AF ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91B3 FD F9        	ld sp,iy
 336+ 91B5 06 08            ld b,8
 337+ 91B7 D1           1 pop de
 338+ 91B8 7B           	ld a,e
 339+ 91B9 AE           	xor (hl)
 340+ 91BA 77           	ld (hl),a
 341+ 91BB 24            	inc h
 342+ 91BC 7C               ld a,h
 343+ 91BD E6 07            and 7
 344+ 91BF 20 0A            jr nz,2F
 345+ 91C1 7D               ld a,l
 346+ 91C2 C6 20            add a,$20
 347+ 91C4 6F               ld l,a
 348+ 91C5 38 04            jr c,2F
 349+ 91C7 7C               ld a,h
 350+ 91C8 D6 08            sub 8
 351+ 91CA 67               ld h,a
 352+ 91CB 7C           2 ld a,h
 353+ 91CC FE 58            cp $58
 354+ 91CE 28 1C            jr z,4F
 355+ 91D0 D1               pop de
 356+ 91D1 7A           	ld a,d
 357+ 91D2 AE           	xor (hl)
 358+ 91D3 77           	ld (hl),a
 359+ 91D4 24           	inc h
 360+ 91D5 7C               ld a,h
 361+ 91D6 E6 07            and 7
 362+ 91D8 20 0A            jr nz,3F
 363+ 91DA 7D               ld a,l
 364+ 91DB C6 20            add a,$20
 365+ 91DD 6F               ld l,a
 366+ 91DE 38 04            jr c,3F
 367+ 91E0 7C               ld a,h
 368+ 91E1 D6 08            sub 8
 369+ 91E3 67               ld h,a
 370+ 91E4 7C           3 ld a,h
 371+ 91E5 FE 58            cp $58
 372+ 91E7 28 03            jr z,4F
 373+ 91E9 D1               pop de
 374+ 91EA 10 CB            djnz 1B
 375+ 91EC ED 7B DF 85  4 ld sp,(Stack)
 376+ 91F0 C9           	ret
 377+ 91F1
 378+ 91F1              ; ---------------------------------------------------
 379+ 91F1              ;
 380+ 91F1              ;   27/02/23
 381+ 91F1              ;
 382+ 91F1              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91F1              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91F1              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91F1
 386+ 91F1 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91F5 FD F9            ld sp,iy
 388+ 91F7 06 02            ld b,2
 389+ 91F9 D1           1 pop de
 390+ 91FA 7B               ld a,e
 391+ 91FB AE               xor (hl)
 392+ 91FC 77               ld (hl),a
 393+ 91FD 23               inc hl
 394+ 91FE 7A               ld a,d
 395+ 91FF AE               xor (hl)
 396+ 9200 77               ld (hl),a
 397+ 9201 2B               dec hl
 398+ 9202
 399+ 9202 24               inc h
 400+ 9203 7C               ld a,h
 401+ 9204 E6 07            and 7
 402+ 9206 20 0A            jr nz,2F
 403+ 9208 7D               ld a,l
 404+ 9209 C6 20            add a,$20
 405+ 920B 6F               ld l,a
 406+ 920C 38 04            jr c,2F
 407+ 920E 7C               ld a,h
 408+ 920F D6 08            sub 8
 409+ 9211 67               ld h,a
 410+ 9212 7C           2 ld a,h
 411+ 9213 FE 58            cp $58
 412+ 9215 28 02            jr z,3F
 413+ 9217
 414+ 9217 10 E0            djnz 1B
 415+ 9219 ED 7B DF 85  3 ld sp,(Stack)
 416+ 921D C9               ret
 417+ 921E
# file closed: Rutinas_de_impresion_sprites.asm
 890  921E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 921E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 921E              ;
   3+ 921E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 921E              ;
   5+ 921E              ; *****************************************************************************************************************************************************************************************
   6+ 921E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 921E
   8+ 921E 7C           calcula_tercio ld a,h
   9+ 921F E6 18        	and $18
  10+ 9221 CB 2F        	sra a
  11+ 9223 CB 2F        	sra a
  12+ 9225 CB 2F        	sra a
  13+ 9227 C9           	ret
  14+ 9228
# file closed: calcula_tercio.asm
 891  9228              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9228              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9228              ;
   3+ 9228              ;
   4+ 9228              ;	CLS.
   5+ 9228              ;
   6+ 9228              ;	Limpia la pantalla y define sus atributos.
   7+ 9228              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9228              ;
   9+ 9228              ;	COLORES: 0 ..... NEGRO
  10+ 9228              ;    		 1 ..... AZUL
  11+ 9228              ; 			 2 ..... ROJO
  12+ 9228              ;			 3 ..... MAGENTA
  13+ 9228              ; 			 4 ..... VERDE
  14+ 9228              ; 			 5 ..... CIAN
  15+ 9228              ;			 6 ..... AMARILLO
  16+ 9228              ; 			 7 ..... BLANCO
  17+ 9228              ;
  18+ 9228              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9228              ;
  20+ 9228              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9228
  22+ 9228
  23+ 9228 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 922B 11 01 40     	LD DE,$4001
  25+ 922E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9231 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9233 ED B0        	LDIR
  28+ 9235 01 FF 02     	LD BC,767
  29+ 9238 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9239 ED B0        	LDIR
  31+ 923B C9           	ret
  32+ 923C
# file closed: Cls.asm
 892  923C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ;   22/01/23
   4+ 923C              ;
   5+ 923C              ;	Mov_down
   6+ 923C              ;
   7+ 923C              ; 	Mueve el Sprite X px hacia abajo.
   8+ 923C              ;
   9+ 923C              ;
  10+ 923C 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 923F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9241              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9241              ; 																	; _ en el caso de que no lo haya.
  14+ 9241 3A B3 85     	ld a,(Vel_down)
  15+ 9244 47           	ld b,a
  16+ 9245 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9248 CD 1E 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 924B E6 02        	and 2
  19+ 924D 28 0F        	jr z,1F
  20+ 924F
  21+ 924F              ; Nos encontramos en el último tercio de pantalla.
  22+ 924F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 924F
  24+ 924F 7C           	ld a,h
  25+ 9250 FE 57        	cp $57
  26+ 9252 20 0A        	jr nz,1F
  27+ 9254 7D           	ld a,l
  28+ 9255 C6 20        	add $20
  29+ 9257 30 05        	jr nc,1F
  30+ 9259
  31+ 9259              ; ------------------------------
  32+ 9259 CD 34 95     	call Reaparece_arriba
  33+ 925C              ;	call Reinicio
  34+ 925C              ; ------------------------------
  35+ 925C
  36+ 925C 18 08        	jr 3F
  37+ 925E CD 5E 8F     1 call NextScan
  38+ 9261 22 9D 85     	ld (Posicion_actual),hl
  39+ 9264 10 E2            djnz 2B
  40+ 9266 CD 4A 95     3 call Genera_coordenadas
  41+ 9269 C9           	ret
  42+ 926A
  43+ 926A              ; ******************************************************************************************************************************************************************************************
  44+ 926A              ;
  45+ 926A              ;   22/01/23
  46+ 926A              ;
  47+ 926A              ;	Mov_up
  48+ 926A              ;
  49+ 926A              ; 	Mueve el Sprite hacia arriba.
  50+ 926A              ;
  51+ 926A              ;
  52+ 926A 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 926D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 926F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 926F              ; 																		; _ en el caso de que no lo haya.
  56+ 926F 3A B2 85     	ld a,(Vel_up)
  57+ 9272 47           	ld b,a
  58+ 9273 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9276 CD 1E 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9279 A7           	and a
  61+ 927A 20 10        	jr nz,1F
  62+ 927C
  63+ 927C              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 927C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 927C
  66+ 927C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 927D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 927F 20 0B            jr nz,1F
  69+ 9281 7D               ld a,l
  70+ 9282 D6 20            sub $20
  71+ 9284 30 06            jr nc,1F
  72+ 9286 25               dec h
  73+ 9287
  74+ 9287              ; -----------------------------
  75+ 9287 CD 24 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 928A              ;	call Reinicio
  77+ 928A              ; -----------------------------
  78+ 928A
  79+ 928A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 928C CD 6D 8F     1 call PreviousScan
  81+ 928F 22 9D 85     	ld (Posicion_actual),hl
  82+ 9292 10 E2            djnz 3B
  83+ 9294 CD 4A 95     2 call Genera_coordenadas
  84+ 9297 C9           	ret
  85+ 9298
  86+ 9298              ; ******************************************************************************************************************************************************************************************
  87+ 9298              ;
  88+ 9298              ;	19/10/22
  89+ 9298              ;
  90+ 9298              ;	Mov_right.
  91+ 9298              ;
  92+ 9298              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9298              ;
  94+ 9298
  95+ 9298 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 929B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 929D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 929D              ; 																	; _ en el caso de que no lo haya.
  99+ 929D 3A C9 85     	ld a,(Ctrl_0)
 100+ 92A0 CB 77        	bit 6,a
 101+ 92A2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92A4
 103+ 92A4 CD D2 94     	call Stop_Amadeus_right
 104+ 92A7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92A8 18 4D        	jr 8F
 106+ 92AA
 107+ 92AA 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92AD FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92AF 20 46        	jr nz,8F
 110+ 92B1
 111+ 92B1 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92B4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92B5 28 40        	jr z,8F
 114+ 92B7
 115+ 92B7              ; ---------- ---------- ----------
 116+ 92B7              ;
 117+ 92B7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92B7
 119+ 92B7 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92BA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92BC 28 11        	jr z,1F
 122+ 92BE 38 06        	jr c,6F
 123+ 92C0 FE 04        	cp 4
 124+ 92C2 28 14        	jr z,7F
 125+ 92C4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92C6
 127+ 92C6              ; ---------- ---------- ----------
 128+ 92C6              ;
 129+ 92C6              ; Perfiles de velocidad
 130+ 92C6              ;
 131+ 92C6
 132+ 92C6 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92C9 FE FE        	cp $fe
 134+ 92CB 20 2A        	jr nz,8F
 135+ 92CD 18 10        	jr 3F
 136+ 92CF 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92D2 FE FD        	cp $fd
 138+ 92D4 20 21        	jr nz,8F
 139+ 92D6 18 07        	jr 3F
 140+ 92D8 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92DB FE FB        	cp $fb
 142+ 92DD 20 18        	jr nz,8F
 143+ 92DF
 144+ 92DF              ; ---------- ---------- ----------
 145+ 92DF
 146+ 92DF              3
 147+ 92DF CD 12 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92E2              ;	call Reinicio
 149+ 92E2
 150+ 92E2              ; ---------- ---------- ----------
 151+ 92E2              ;
 152+ 92E2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92E2
 154+ 92E2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92E4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92E5 CD FE 92     	call DESPLZ_DER
 157+ 92E8 C1           	pop bc
 158+ 92E9 10 F9        	djnz 5B
 159+ 92EB 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92EE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92EF 22 9D 85     	ld (Posicion_actual),hl
 162+ 92F2 CD 4A 95     	call Genera_coordenadas
 163+ 92F5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 92F7
 165+ 92F7              ; ---------- ---------- ----------
 166+ 92F7
 167+ 92F7 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 92FA CD FE 92     	call DESPLZ_DER
 169+ 92FD C9           2 ret
 170+ 92FE
 171+ 92FE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 92FE              ;
 173+ 92FE              ;	22/9/22
 174+ 92FE              ;
 175+ 92FE
 176+ 92FE CD 0D 93     DESPLZ_DER call Desplaza_derecha
 177+ 9301 CD 59 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9304 CD 82 93         call Ciclo_completo
 179+ 9307 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 930A CB FE        	set 7,(hl)
 181+ 930C C9           	ret
 182+ 930D
 183+ 930D              ; ******************************************************************************************************************************************************************************************
 184+ 930D              ;	15/02/23
 185+ 930D              ;
 186+ 930D
 187+ 930D 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9310 47           	ld b,a
 189+ 9311 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9314 23           1 inc hl
 191+ 9315 23           	inc hl
 192+ 9316 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9318 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 931B CD A4 87     	call Extrae_address
 195+ 931E 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9321
 197+ 9321              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9321
 199+ 9321              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9321              ; Cuántos movimientos hemos hecho ??
 201+ 9321              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9321
 203+ 9321 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9324 EB           	ex de,hl
 205+ 9325 A7           	and a
 206+ 9326 ED 52        	sbc hl,de
 207+ 9328 CB 3D        	srl l
 208+ 932A 3E 08        6 ld a,8
 209+ 932C 95           	sub l
 210+ 932D 30 1E        	jr nc,3F
 211+ 932F
 212+ 932F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 932F              ; B="0".
 214+ 932F
 215+ 932F 04           4 inc b
 216+ 9330 3C           	inc a
 217+ 9331 20 FC        	jr nz,4B
 218+ 9333 78           	ld a,b
 219+ 9334 08           	ex af,af
 220+ 9335 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9338 23           5 inc hl
 222+ 9339 23           	inc hl
 223+ 933A 10 FC        	djnz 5B
 224+ 933C 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 933F CD A4 87     	call Extrae_address
 226+ 9342 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9345
 228+ 9345              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9345              ; _(Posicion_actual).
 230+ 9345
 231+ 9345 21 9D 85     	ld hl,Posicion_actual
 232+ 9348 34           	inc (hl)
 233+ 9349 08               ex af,af
 234+ 934A 6F           	ld l,a
 235+ 934B 18 DD        	jr 6B
 236+ 934D
 237+ 934D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 934D
 239+ 934D 47           3 ld b,a
 240+ 934E 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9351 23           2 inc hl
 242+ 9352 23           	inc hl
 243+ 9353 10 FC        	djnz 2B
 244+ 9355 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9358 C9           8 ret
 246+ 9359
 247+ 9359              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9359              ;
 249+ 9359              ;	24/7/22
 250+ 9359              ;
 251+ 9359              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9359              ;
 253+ 9359              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9359              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9359              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9359
 257+ 9359 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 935C A7           	and a
 259+ 935D 20 1F        	jr nz,1F
 260+ 935F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9361 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9364
 263+ 9364 21 9C 85     	ld hl,Columns
 264+ 9367 34           	inc (hl)
 265+ 9368 3A AF 85     	ld a,(Cuad_objeto)
 266+ 936B E6 01        	and 1
 267+ 936D 28 0F        	jr z,1F
 268+ 936F 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9372 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9373 22 9D 85     	ld (Posicion_actual),hl
 271+ 9376 CD 4A 95     	call Genera_coordenadas
 272+ 9379 CD DE 94     	call Inc_CTRL_DESPLZ
 273+ 937C 18 03        	jr 2F
 274+ 937E CD DE 94     1 call Inc_CTRL_DESPLZ
 275+ 9381 C9           2 ret
 276+ 9382
 277+ 9382              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9382              ;
 279+ 9382              ;	24/7/22
 280+ 9382              ;
 281+ 9382              ;	Ciclo_completo.
 282+ 9382              ;
 283+ 9382              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9382              ;
 285+ 9382              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9382              ; 	Decrementamos (Columns).
 287+ 9382              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9382              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9382
 290+ 9382
 291+ 9382 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9385 FE FF        	cp $ff
 293+ 9387 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9389 E6 F0        	and $f0
 295+ 938B 20 28        	jr nz,3F
 296+ 938D
 297+ 938D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 938D
 299+ 938D 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9390 47           	ld b,a
 301+ 9391 3E F8        	ld a,$f8
 302+ 9393 80           	add b
 303+ 9394 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9397 18 1C        	jr 3F
 305+ 9399 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 939C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 939D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 939E 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93A1 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93A4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93A6 20 0A        	jr nz,2F
 312+ 93A8 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93AB 23           	inc hl
 314+ 93AC 22 9D 85     	ld (Posicion_actual),hl
 315+ 93AF CD 4A 95     	call Genera_coordenadas
 316+ 93B2
 317+ 93B2              ; Inicia el puntero de Sprite.
 318+ 93B2
 319+ 93B2 CD BB 87     2 call Inicia_puntero_objeto_der
 320+ 93B5 C9           3 ret
 321+ 93B6
 322+ 93B6              ; ******************************************************************************************************************************************************************************************
 323+ 93B6              ;
 324+ 93B6              ;	15/02/23
 325+ 93B6              ;
 326+ 93B6              ;	Mov_left.
 327+ 93B6              ;
 328+ 93B6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93B6              ;
 330+ 93B6              Mov_left
 331+ 93B6
 332+ 93B6 21 C9 85     	ld hl,Ctrl_0
 333+ 93B9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93BB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93BB              ; 																	; _ en el caso de que no lo haya.
 336+ 93BB 3A C9 85     	ld a,(Ctrl_0)
 337+ 93BE CB 77        	bit 6,a
 338+ 93C0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93C2
 340+ 93C2 CD D8 94     	call Stop_Amadeus_left
 341+ 93C5 C8           	ret z
 342+ 93C6 20 4A        	jr nz,8F
 343+ 93C8
 344+ 93C8 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93CB A7           	and a
 346+ 93CC 20 44        	jr nz,8F
 347+ 93CE
 348+ 93CE 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93D1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93D2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93D4
 352+ 93D4              ; ---------- ---------- ----------
 353+ 93D4
 354+ 93D4 3A B0 85     	ld a,(Vel_left)
 355+ 93D7 FE 02        	cp 2
 356+ 93D9 28 0F        	jr z,1F
 357+ 93DB 38 04        	jr c,6F
 358+ 93DD FE 04        	cp 4
 359+ 93DF 28 12        	jr z,7F
 360+ 93E1
 361+ 93E1              ; ---------- ---------- ----------
 362+ 93E1
 363+ 93E1 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93E4 FE F8        	cp $f8
 365+ 93E6 20 2A        	jr nz,8F
 366+ 93E8 18 10        	jr 4F
 367+ 93EA 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93ED FE F9        	cp $f9
 369+ 93EF 20 21        	jr nz,8F
 370+ 93F1 18 07        	jr 4F
 371+ 93F3 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 93F6 FE FB        	cp $fb
 373+ 93F8 20 18        	jr nz,8F
 374+ 93FA
 375+ 93FA              ; ---------- ---------- ----------
 376+ 93FA
 377+ 93FA              4
 378+ 93FA CD 00 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 93FD              ;	call Reinicio
 380+ 93FD
 381+ 93FD              ; ---------- ---------- ----------
 382+ 93FD
 383+ 93FD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 93FF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9400
 386+ 9400              ;	ld hl,(Indice_Sprite_izq)
 387+ 9400              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9400
 389+ 9400 CD 19 94     	call DESPLZ_IZQ
 390+ 9403 C1           	pop bc
 391+ 9404 10 F9        	djnz 5B
 392+ 9406 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9409 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 940A 22 9D 85     	ld (Posicion_actual),hl
 395+ 940D CD 4A 95     	call Genera_coordenadas
 396+ 9410 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9412
 398+ 9412              ; ---------- ---------- ----------
 399+ 9412
 400+ 9412              ; Movemos, no hay recolocación.
 401+ 9412
 402+ 9412 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9415 CD 19 94     	call DESPLZ_IZQ
 404+ 9418 C9           2 ret
 405+ 9419
 406+ 9419              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9419              ;
 408+ 9419              ;	22/9/22
 409+ 9419
 410+ 9419              DESPLZ_IZQ
 411+ 9419
 412+ 9419 CD 28 94     	call Desplaza_izquierda
 413+ 941C CD 74 94         call modifica_parametros_1er_DESPLZ
 414+ 941F CD 9C 94     	call Ciclo_completo_2
 415+ 9422 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9425 CB BE        	res 7,(hl)
 417+ 9427 C9           	ret
 418+ 9428
 419+ 9428              Desplaza_izquierda
 420+ 9428
 421+ 9428 3A B0 85     	ld a,(Vel_left)
 422+ 942B 47           	ld b,a
 423+ 942C 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 942F 23           1 inc hl
 425+ 9430 23           	inc hl
 426+ 9431 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9433 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9436 CD A4 87     	call Extrae_address
 429+ 9439 22 9F 85     	ld (Puntero_objeto),hl
 430+ 943C
 431+ 943C              ; Modifica (Puntero_DESPLZ_der).
 432+ 943C
 433+ 943C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 943C              ; Cuántos movimientos hemos hecho ??
 435+ 943C              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 943C
 437+ 943C 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 943F EB           	ex de,hl
 439+ 9440 A7           	and a
 440+ 9441 ED 52        	sbc hl,de
 441+ 9443 CB 3D        	srl l
 442+ 9445 3E 08        6 ld a,8
 443+ 9447 95           	sub l
 444+ 9448 30 1E        	jr nc,3F
 445+ 944A
 446+ 944A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 944A              ; B="0".
 448+ 944A
 449+ 944A 04           4 inc b
 450+ 944B 3C           	inc a
 451+ 944C 20 FC        	jr nz,4B
 452+ 944E 78           	ld a,b
 453+ 944F 08           	ex af,af
 454+ 9450 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9453 23           5 inc hl
 456+ 9454 23           	inc hl
 457+ 9455 10 FC        	djnz 5B
 458+ 9457 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 945A CD A4 87     	call Extrae_address
 460+ 945D 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9460
 462+ 9460              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9460              ; _(Posicion_actual).
 464+ 9460
 465+ 9460 21 9D 85     	ld hl,Posicion_actual
 466+ 9463 35           	dec (hl)
 467+ 9464 08           	ex af,af
 468+ 9465 6F           	ld l,a
 469+ 9466 18 DD        	jr 6B
 470+ 9468
 471+ 9468              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9468
 473+ 9468 47           3 ld b,a
 474+ 9469 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 946C 23           2 inc hl
 476+ 946D 23           	inc hl
 477+ 946E 10 FC        	djnz 2B
 478+ 9470 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9473 C9           8 ret
 480+ 9474
 481+ 9474              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9474              ;
 483+ 9474              ;	modifica_parametros_1er_DESPLZ
 484+ 9474              ;
 485+ 9474              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9474              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9474              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9474
 489+ 9474 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9477 A7           	and a
 491+ 9478 20 1E        	jr nz,1F
 492+ 947A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 947B 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 947E 21 9C 85     	ld hl,Columns
 495+ 9481 34           	inc (hl)
 496+ 9482 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9485 E6 01        	and 1
 498+ 9487 20 0F        	jr nz,1F
 499+ 9489 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 948C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 948D 22 9D 85     	ld (Posicion_actual),hl
 502+ 9490 CD 4A 95     	call Genera_coordenadas
 503+ 9493 CD EF 94     	call Dec_CTRL_DESPLZ
 504+ 9496 18 03        	jr 2F
 505+ 9498 CD EF 94     1 call Dec_CTRL_DESPLZ
 506+ 949B C9           2 ret
 507+ 949C
 508+ 949C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 949C
 510+ 949C 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 949F FE F7        	cp $f7
 512+ 94A1 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94A3 30 2C        	jr nc,3F
 514+ 94A5
 515+ 94A5              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94A5
 517+ 94A5 06 00        	ld b,0
 518+ 94A7 04           4 inc b
 519+ 94A8 3C           	inc a
 520+ 94A9 FE F7        	cp $f7
 521+ 94AB 20 FA        	jr nz,4B
 522+ 94AD 3E FF        	ld a,$ff
 523+ 94AF 90           	sub b
 524+ 94B0 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94B3 18 1C        	jr 3F
 526+ 94B5
 527+ 94B5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94B5
 529+ 94B5 21 9C 85     1 ld hl,Columns
 530+ 94B8 35           	dec (hl)
 531+ 94B9 AF           	xor a
 532+ 94BA 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94BD 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94C0 E6 01        	and 1
 535+ 94C2 28 0A        	jr z,2F
 536+ 94C4 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94C7 2B           	dec hl
 538+ 94C8 22 9D 85     	ld (Posicion_actual),hl
 539+ 94CB CD 4A 95     	call Genera_coordenadas
 540+ 94CE
 541+ 94CE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94CE
 543+ 94CE CD CE 87     2 call Inicia_puntero_objeto_izq
 544+ 94D1 C9           3 ret
 545+ 94D2
 546+ 94D2              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94D2              ;
 548+ 94D2              ;	19/10/22
 549+ 94D2              ;
 550+ 94D2              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94D2              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94D2
 553+ 94D2 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94D5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94D7 C9           	ret
 556+ 94D8
 557+ 94D8              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94D8              ;
 559+ 94D8              ;	19/10/22
 560+ 94D8              ;
 561+ 94D8              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94D8              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94D8
 564+ 94D8 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94DB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94DD C9           	ret
 567+ 94DE
 568+ 94DE              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94DE              ;
 570+ 94DE              ;	24/7/22
 571+ 94DE              ;
 572+ 94DE              ;	Inc_CTRL_DESPLZ
 573+ 94DE              ;
 574+ 94DE              ;
 575+ 94DE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94DE
 577+ 94DE 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94E1 3A B1 85     	ld a,(Vel_right)
 579+ 94E4 A7           	and a
 580+ 94E5 28 06        	jr z,1F
 581+ 94E7 47           	ld b,a
 582+ 94E8 34           3 inc (hl)
 583+ 94E9 10 FD        	djnz 3B
 584+ 94EB 18 01        	jr 2F
 585+ 94ED 34           1 inc (hl)
 586+ 94EE C9           2 ret
 587+ 94EF
 588+ 94EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94EF              ;
 590+ 94EF              ;	5/2/23
 591+ 94EF              ;
 592+ 94EF              ;	Dec_CTRL_DESPLZ
 593+ 94EF              ;
 594+ 94EF              ;
 595+ 94EF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94EF
 597+ 94EF 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94F2 3A B0 85     	ld a,(Vel_left)
 599+ 94F5 A7           	and a
 600+ 94F6 28 06        	jr z,1F
 601+ 94F8 47           	ld b,a
 602+ 94F9 35           3 dec (hl)
 603+ 94FA 10 FD        	djnz 3B
 604+ 94FC 18 01        	jr 2F
 605+ 94FE 35           1 dec (hl)
 606+ 94FF C9           2 ret
 607+ 9500
 608+ 9500              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9500
 610+ 9500 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9503 01 1F 00     	ld bc,31
 612+ 9506 A7           	and a
 613+ 9507 ED 4A        	adc hl,bc
 614+ 9509 22 9D 85     	ld (Posicion_actual),hl
 615+ 950C 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 950F CB C6        	set 0,(hl)
 617+ 9511 C9           	ret
 618+ 9512
 619+ 9512              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9512
 621+ 9512 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9515 01 1F 00     	ld bc,31
 623+ 9518 A7           	and a
 624+ 9519 ED 42        	sbc hl,bc
 625+ 951B 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 951E 21 C9 85     	ld hl,Ctrl_0
 627+ 9521 CB CE        	set 1,(hl)
 628+ 9523 C9           	ret
 629+ 9524
 630+ 9524              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9524
 632+ 9524 24           Reaparece_abajo inc h
 633+ 9525 01 E0 17     	ld bc,$17e0
 634+ 9528 A7           	and a
 635+ 9529 ED 4A        	adc hl,bc
 636+ 952B 22 9D 85     	ld (Posicion_actual),hl
 637+ 952E 21 C9 85     	ld hl,Ctrl_0
 638+ 9531 CB D6        	set 2,(hl)
 639+ 9533 C9           	ret
 640+ 9534
 641+ 9534              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9534
 643+ 9534 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9537 A7           	and a
 645+ 9538 ED 42        	sbc hl,bc
 646+ 953A 22 9D 85     	ld (Posicion_actual),hl
 647+ 953D 21 C9 85     	ld hl,Ctrl_0
 648+ 9540 CB DE        	set 3,(hl)
 649+ 9542 C9           	ret
 650+ 9543
 651+ 9543              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9543
 653+ 9543 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9546 22 9D 85     	ld (Posicion_actual),hl
 655+ 9549 C9           	ret
# file closed: Direcciones.asm
 893  954A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 954A              ; ------------------------------------------------------------------------
   2+ 954A              ;
   3+ 954A              ;	02/04/23
   4+ 954A              ;
   5+ 954A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 954A              ;	Fila superior "0", Columna izquierda "0".
   7+ 954A              ;
   8+ 954A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 954A              ;
  10+ 954A              ;	Modifica: A,BC y DE.
  11+ 954A
  12+ 954A C5           Genera_coordenadas push bc
  13+ 954B E5           	push hl
  14+ 954C D5           	push de
  15+ 954D
  16+ 954D 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9550
  18+ 9550 7D           	ld a,l
  19+ 9551 E6 1F        	and $1f
  20+ 9553 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9556
  22+ 9556 CD 1E 92     	call calcula_tercio
  23+ 9559 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 955A
  25+ 955A 1E 00        	ld e,0
  26+ 955C 7D           	ld a,l
  27+ 955D E6 E0        	and $e0
  28+ 955F 28 01        	jr z,1F
  29+ 9561 04           	inc b
  30+ 9562
  31+ 9562 04           1 inc b
  32+ 9563 05           	dec b
  33+ 9564 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9566              ;														; _ , salimos.
  35+ 9566 1C           3 inc e
  36+ 9567 D6 20        	sub 32
  37+ 9569 20 FB        	jr nz,3B
  38+ 956B 10 F5        	djnz 1B
  39+ 956D
  40+ 956D 7B           2 ld a,e
  41+ 956E 32 A2 85     	ld (Coordenada_y),a
  42+ 9571
  43+ 9571 D1           	pop de
  44+ 9572 E1           	pop hl
  45+ 9573 C1           	pop bc
  46+ 9574
  47+ 9574 C9           	ret
  48+ 9575
  49+ 9575              ; ------------------------------------------------------------------------
  50+ 9575              ;	28/03/23
  51+ 9575              ;
  52+ 9575              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9575              ;	Fila superior "0", Columna izquierda "0".
  54+ 9575              ;
  55+ 9575              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9575              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9575              ;
  58+ 9575              ;		DE="$120d"
  59+ 9575              ;
  60+ 9575              ;		D, (Coordenada_X), Columnas, $12
  61+ 9575              ;		E, (Coordenada_y), Filas, $0d
  62+ 9575              ;
  63+ 9575              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9575
  65+ 9575              ;	Modifica: A,BC y DE.
  66+ 9575
  67+ 9575
  68+ 9575              Genera_coordenadas_disparo
  69+ 9575
  70+ 9575              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9575
  72+ 9575 7D           	ld a,l
  73+ 9576 E6 1F        	and $1f
  74+ 9578 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9579 CD 1E 92     	call calcula_tercio
  76+ 957C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 957D 1E 00        	ld e,0
  78+ 957F 7D           	ld a,l
  79+ 9580 E6 E0        	and $e0
  80+ 9582 28 01        	jr z,1F
  81+ 9584 04           	inc b
  82+ 9585 1C           1 inc e
  83+ 9586 D6 20        	sub 32
  84+ 9588 20 FB        	jr nz,1B
  85+ 958A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 958C C9           	ret
  87+ 958D
# file closed: Genera_coordenadas.asm
 894  958D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 958D
   2+ 958D
   3+ 958D              ;   11/8/22
   4+ 958D              ;
   5+ 958D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 958D              ;
   7+ 958D              ;   Mov_obj.asm
   8+ 958D              ;
   9+ 958D              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 958D              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 958D              ;
  12+ 958D              ;   Codificación:
  13+ 958D              ;
  14+ 958D              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 958D
  16+ 958D              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 958D
  18+ 958D 02 40 00     Arriba db 2,%01000000,0
  19+ 9590 02 80 00     Abajo db 2,%10000000,0
  20+ 9593 02 20 00     Derecha db 2,%00100000,0
  21+ 9596 02 10 00     Izquierda db 2,%00010000,0
  22+ 9599 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 959D 60 42 60 40
  22+ 95A1 63
  23+ 95A2 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95A6 22 A3 80 A0
  24+ 95AA 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95AE 84 A0 83 A0
  25+ 95B2 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95B6 80 A3 22 A0
  26+ 95BA 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95BE 40 60 42 60
  27+ 95C2 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95C6
  29+ 95C6 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95CA 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95CE 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95D2 84 00
  32+ 95D4 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95D8 84 00
  33+ 95DA 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95DE 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95E2 1F 1F 1F 1F
  35+ 95E6 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95EA 1F 1F 1F 1F
  35+ 95EE 1F
  36+ 95EF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95F3 2F 2F 2F 2F
  36+ 95F7 2F 2F
  37+ 95F9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 95FD 2F 2F 00
  38+ 9600
  39+ 9600              ; ----- ----- ----- ----- -----
  40+ 9600
  41+ 9600 DE 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9602 DA 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9604 96 95        Indice_mov_Izquierda defw Izquierda
  44+ 9606 93 95        Indice_mov_Derecha defw Derecha
  45+ 9608 90 95        Indice_mov_Abajo defw Abajo
  46+ 960A 8D 95        Indice_mov_Arriba defw Arriba
  47+ 960C CA 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 960E CE 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9610 C6 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9612 D4 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9614 99 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9616              ; ----- ----- ----- ----- -----
  53+ 9616
  54+ 9616 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9619 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 961A 28 02            jr z,1F
  57+ 961C 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 961E 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9621 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9623 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9626              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9626 2A CD 85         ld hl,(Puntero_mov)
  63+ 9629 7E               ld a,(hl)
  64+ 962A 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 962D 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 962E 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9631
  68+ 9631 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9634 A7               and a
  70+ 9635 20 0C            jr nz,12F
  71+ 9637 2A CD 85         ld hl,(Puntero_mov)
  72+ 963A 7E               ld a,(hl)
  73+ 963B A7               and a
  74+ 963C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 963E E6 0F            and $0f
  76+ 9640 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9643              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9643 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9646 CB 7E            bit 7,(hl)
  80+ 9648 28 03            jr z,2F
  81+ 964A CD 3C 92         call Mov_down
  82+ 964D 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9650 CB 76            bit 6,(hl)
  84+ 9652 28 03            jr z,3F
  85+ 9654 CD 6A 92         call Mov_up
  86+ 9657 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 965A CB 6E            bit 5,(hl)
  88+ 965C 28 03            jr z,4F
  89+ 965E CD 98 92         call Mov_right
  90+ 9661 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9664 CB 66            bit 4,(hl)
  92+ 9666 28 03            jr z,5F
  93+ 9668 CD B6 93         call Mov_left
  94+ 966B
  95+ 966B              ; ---------- --------- --------- ---------- ----------
  96+ 966B
  97+ 966B 3A D1 85     5 ld a,(Repetimos_db)
  98+ 966E A7               and a
  99+ 966F 28 07            jr z,6F
 100+ 9671 3D               dec a
 101+ 9672 32 D1 85         ld (Repetimos_db),a
 102+ 9675 28 01            jr z,6f
 103+ 9677 C9           11 ret
 104+ 9678 21 CF 85     6 ld hl,Contador_db_mov
 105+ 967B 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 967C 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 967F 23               inc hl
 108+ 9680 22 CD 85         ld (Puntero_mov),hl
 109+ 9683 18 F2            jr 11B
 110+ 9685 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9688 3A D0 85         ld a,(Incrementa_puntero)
 112+ 968B 47               ld b,a
 113+ 968C 23           8 inc hl
 114+ 968D 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 968F 5E               ld e,(hl)
 116+ 9690 23               inc hl
 117+ 9691 56               ld d,(hl)
 118+ 9692 EB               ex de,hl
 119+ 9693 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9696 18 DF            jr 11B
 121+ 9698
 122+ 9698              ; ---------- --------- --------- ---------- ----------
 123+ 9698              ;
 124+ 9698              ;   11/8/22
 125+ 9698              ;
 126+ 9698              ;   Prepara_Puntero_mov
 127+ 9698
 128+ 9698 E5           Prepara_Puntero_mov push hl
 129+ 9699 D5               push de
 130+ 969A 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 969D 5E               ld e,(hl)
 132+ 969E 23               inc hl
 133+ 969F 56               ld d,(hl)
 134+ 96A0 EB               ex de,hl
 135+ 96A1 22 CD 85         ld (Puntero_mov),hl
 136+ 96A4 D1               pop de
 137+ 96A5 E1               pop hl
 138+ 96A6 C9               ret
 139+ 96A7
 140+ 96A7              ; ---------- --------- --------- ---------- ----------
 141+ 96A7              ;
 142+ 96A7              ;   11/8/22
 143+ 96A7              ;
 144+ 96A7              ;   Reinicia_el_movimiento
 145+ 96A7
 146+ 96A7 CD 98 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96AA AF               xor a
 148+ 96AB 32 CF 85         ld (Contador_db_mov),a
 149+ 96AE 32 D0 85         ld (Incrementa_puntero),a
 150+ 96B1 C3 16 96         jp Movimiento
 151+ 96B4 C9               ret
 152+ 96B5              ; ---------- --------- --------- ---------- ----------
 153+ 96B5
 154+ 96B5
 155+ 96B5
 156+ 96B5
 157+ 96B5
 158+ 96B5
 159+ 96B5
 160+ 96B5
 161+ 96B5
 162+ 96B5
 163+ 96B5
 164+ 96B5
 165+ 96B5
 166+ 96B5
 167+ 96B5
 168+ 96B5
 169+ 96B5
 170+ 96B5
# file closed: Patrones_de_mov.asm
 895  96B5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96B5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96B5              ;
   3+ 96B5              ;	3/1/23
   4+ 96B5              ;
   5+ 96B5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96B5
   7+ 96B5              ;	ADC HL,SP	LD (addr),SP
   8+ 96B5              ;	ADD HL,SP	LD SP,(addr)
   9+ 96B5              ;	ADD IX,SP	LD SP,nn
  10+ 96B5              ; 	ADD IY,SP	LD SP,HL
  11+ 96B5              ;				LD SP,IX
  12+ 96B5              ;	DEC SP		LD SP,IY
  13+ 96B5
  14+ 96B5              ;	EX (SP),HL
  15+ 96B5              ;	EX (SP),IX
  16+ 96B5              ;	EX (SP),IY
  17+ 96B5
  18+ 96B5              ;	INC SP
  19+ 96B5
  20+ 96B5
  21+ 96B5                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 896  7FD4
 897  7FD4              	SAVESNA "Pruebas.sna", START
 898  7FD4
 899  7FD4
 900  7FD4
# file closed: Banco_de_pruebas.asm
