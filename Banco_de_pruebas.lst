# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD D7 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 54 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD DF 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 52 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 52 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 55 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD EF 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4
 183  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC6
 186  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC6
 188  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC7
 194  8BC7 00           Ctrl_2 db 0
 195  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC8              ;
 203  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC8              ;														BIT 4, ???
 209  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC8
 211  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC9              ;
 217  8BC9              ; 														DESCRIPCIÖN:
 218  8BC9              ;
 219  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC9              ;
 233  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC9
 237  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC9
 239  8BC9 00           Filas db 0												; Filas. [DRAW]
 240  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCF
 244  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCF
 246  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BD0
 250  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BD0
 252  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BD0              ;
 254  8BD0              ;	COLORES: 0 ..... NEGRO
 255  8BD0              ;    		 1 ..... AZUL
 256  8BD0              ; 			 2 ..... ROJO
 257  8BD0              ;			 3 ..... MAGENTA
 258  8BD0              ; 			 4 ..... VERDE
 259  8BD0              ; 			 5 ..... CIAN
 260  8BD0              ;			 6 ..... AMARILLO
 261  8BD0              ; 			 7 ..... BLANCO
 262  8BD0
 263  8BD0 00 00        Indice_Sprite_der defw 0
 264  8BD2 00 00        Indice_Sprite_izq defw 0
 265  8BD4 00 00        Puntero_DESPLZ_der defw 0
 266  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD8
 268  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BDB 00           Columnas db 0
 271  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDF
 275  8BDF              ; variables de control general.
 276  8BDF
 277  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BE0
 279  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BE0
 281  8BE0              Perfiles_de_velocidad
 282  8BE0
 283  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE4
 288  8BE4              ; Contadores de 16 bits.
 289  8BE4
 290  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BEC
 295  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BEC
 297  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF2              ;
 301  8BF2              ;
 302  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF3 00           Incrementa_puntero_backup db 0
 306  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF8              ;
 312  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF8              ;
 316  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF8              ;
 321  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF8
 325  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF9
 327  8BF9              ;														DESCRIPCIÓN:
 328  8BF9              ;
 329  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF9
 336  8BF9              ;														BIT 3, Recarga de nueva oleada.
 337  8BF9              ;														BIT 4, Recarga de nueva oleada.
 338  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF9              ;														BIT 6, **** Frame completo.
 340  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF9
 342  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BFB
 347  8BFB              ; Gestión de ENTIDADES y CAJAS.
 348  8BFB
 349  8BFB 00 00        Puntero_store_caja defw 0
 350  8BFD 00 00        Puntero_restore_caja defw 0
 351  8BFF 00 00        Indice_restore_caja defw 0
 352  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C04
 356  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C08              ;														; _ puntero (Indice_entidades).
 359  8C08
 360  8C08              ;---------------------------------------------------------------------------------------------------------------
 361  8C08              ;
 362  8C08              ;	31/08/24
 363  8C08              ;
 364  8C08              ;	Álbumes.
 365  8C08
 366  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C0A              ;														; _variable para almacenar lo posición del puntero_
 368  8C0A              ; 														; _de pila, SP.
 369  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0C
 372  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0C
 374  8C0C 00 00        Album_de_pintado defw 0
 375  8C0E 00 00        Album_de_borrado defw 0
 376  8C10 00 00        Album_de_pintado_Amadeus defw 0
 377  8C12 00 00        Album_de_borrado_Amadeus defw 0
 378  8C14 00 00        Album_de_pintado_disparos defw 0
 379  8C16 00 00        Album_de_borrado_disparos defw 0
 380  8C18
 381  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C1A 00           Num_de_bytes_album_de_disparos db 0
 383  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C1C
 385  8C1C 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 386  8C1D 00           Numero_de_disparos_de_entidades db 0
 387  8C1E
 388  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 390  8C1F
 391  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 392  8C21
 393  8C21 00 00        Techo_Scanlines_album defw 0
 394  8C23 00 00        Techo_Scanlines_album_2 defw 0
 395  8C25 00           Switch db 0
 396  8C26 00 00        Techo defw 0
 397  8C28 00 00        Scanlines_album_SP defw 0
 398  8C2A 00 89        India_SP defw Tabla_de_pintado
 399  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2E
 401  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2F              ;
 403  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2F              ;																Habilita el borrado/pintado de sprites.
 408  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2F              ;																_ a la baja.
 410  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2F
 417  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C30              ;
 419  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C30              ;
 421  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C30              ;
 426  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C30              ;															_ masticados ya generados.
 428  8C30              ;
 429  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C30
 434  8C30 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 435  8C31              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C31              ; Gestión de Disparos.
 437  8C31
 438  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 440  8C35
 441  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 442  8C36
 443  8C36              ;
 444  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 445  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 446  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 447  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 448  8C36
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 456  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 457  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 458  8C38
 459  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 460  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 461  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 463  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 465  8C40
 466  8C40              ;---------------------------------------------------------------------------------------------------------------
 467  8C40
 468  8C40              ; Relojes y temporizaciones.
 469  8C40
 470  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 471  8C41 05           Clock_explosion_Amadeus db 5
 472  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 473  8C43
 474  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 475  8C45
 476  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C48              ;														; Repite la oleada de entidades.
 479  8C48
 480  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 481  8C48 1E           CLOCK_repone_disparo_Amadeus db 30	 					; Reloj, decreciente.
 482  8C49              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8C49              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8C49
 485  8C49              ;---------------------------------------------------------------------------------------------------------------
 486  8C49
 487  8C49              ; Gestión de NIVELES.
 488  8C49
 489  8C49 00           Nivel db 0												; Nivel actual del juego.
 490  8C4A 00 00        Puntero_indice_NIVELES defw 0
 491  8C4C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C4E              ; 														; _ que definen el NIVEL.
 493  8C4E
 494  8C4E              ; ---------------------------------------------------------------------------------------------------------------
 495  8C4E
 496  8C4E              ; Temporizaciones Shield.
 497  8C4E
 498  8C4E 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C52 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C54 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C55 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C56 00           Shield_3 db 0
 503  8C57
 504  8C57 06           Lives db 6
 505  8C58
 506  8C58              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C58              ;
 508  8C58              ;	5/1/24
 509  8C58
 510  8C58              START
 511  8C58
 512  8C58 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C5B 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C5D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C61 F3           	DI
 517  8C62
 518  8C62              ; Limpiamos pantalla.
 519  8C62
 520  8C62 3E 07        	ld a,%00000111
 521  8C64              ;	call Cls
 522  8C64 CD D4 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C67
 524  8C67              ; INICIALIZACIÓN.
 525  8C67
 526  8C67 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C69 CD 21 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C6C CD 64 8E     	call Extrae_numero_aleatorio_y_avanza
 529  8C6F
 530  8C6F 6F           	ld l,a
 531  8C70 26 00        	ld h,0
 532  8C72 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C75
 534  8C75              ;	Inicializa 1er Nivel.
 535  8C75
 536  8C75 21 97 8B     	ld hl,Indice_de_niveles
 537  8C78 22 4A 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 538  8C7B CD 51 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 539  8C7E              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 540  8C7E              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 541  8C7E              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 542  8C7E
 543  8C7E              ;	Inicia los álbumes de líneas.
 544  8C7E
 545  8C7E CD 1D 90     	call Inicia_albumes_de_lineas
 546  8C81              ;
 547  8C81 CD 2D 90     	call Inicia_albumes_de_lineas_Amadeus
 548  8C84 CD 3A 90     	call Inicia_albumes_de_disparos
 549  8C87
 550  8C87
 551  8C87 CD 96 92     4 call Inicia_Entidades
 552  8C8A CD F9 92     	call Inicia_Amadeus
 553  8C8D
 554  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8C8D
 558  8C8D 11 70 89     	ld de,Amadeus_BOX
 559  8C90 CD 4C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8C93 CD 3C 93     	call Limpiamos_bandeja_DRAW
 561  8C96
 562  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 563  8C96
 564  8C96 06 3C        	ld b,60
 565  8C98 CD 1E 9D     2 call Amadeus_a_izquierda
 566  8C9B 10 FB        	djnz 2B
 567  8C9D
 568  8C9D CD FB 8F     	call Genera_datos_de_impresion_Amadeus
 569  8CA0
 570  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 571  8CA0
 572  8CA0 CD 4D 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 573  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 574  8CA3
 575  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 576  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 577  8CA3
 578  8CA3              ;	ld a,(Ctrl_1)
 579  8CA3              ;	bit 3,a
 580  8CA3              ;	jr nz,5F											 ; Loop
 581  8CA3
 582  8CA3              ;	ld de,Amadeus_db
 583  8CA3              ;	call Store_Amadeus
 584  8CA3
 585  8CA3              ; 	INICIA DISPAROS !!!!!
 586  8CA3
 587  8CA3 CD 63 90     	call Inicia_Puntero_Disparo_Entidades
 588  8CA6 CD 6A 90     	call Inicia_Puntero_Disparo_Amadeus
 589  8CA9
 590  8CA9              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA9
 592  8CA9              ;5 call Inicia_punteros_de_cajas
 593  8CA9              ;	call Restore_entidad
 594  8CA9
 595  8CA9              ;	ld a,(Ctrl_1)
 596  8CA9              ;	bit 3,a
 597  8CA9              ;	jr z,6F
 598  8CA9
 599  8CA9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA9
 601  8CA9              ;	ld hl,Ctrl_1
 602  8CA9              ;	res 3,(hl)
 603  8CA9              ;	jr Main
 604  8CA9
 605  8CA9              ; Damos por concluida la construcción del FRAME.
 606  8CA9              ;
 607  8CA9
 608  8CA9 CD DF 90     	call Inicia_Shield
 609  8CAC
 610  8CAC
 611  8CAC 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 612  8CAF 22 21 8C     	ld (Techo_Scanlines_album),hl
 613  8CB2
 614  8CB2 2A 0E 8C     	ld hl,(Album_de_borrado)
 615  8CB5 22 28 8C     	ld (Scanlines_album_SP),hl
 616  8CB8
 617  8CB8 21 00 89     	ld hl,Tabla_de_pintado
 618  8CBB 22 2A 8C     	ld (India_SP),hl
 619  8CBE
 620  8CBE 21 2E 8C     	ld hl,Ctrl_3
 621  8CC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CC3 CB D6        	set 2,(hl)
 623  8CC5 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC7
 625  8CC7 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC8
 627  8CC8 76           	halt
 628  8CC9
 629  8CC9              ; ------------------------------------
 630  8CC9
 631  8CC9              Main
 632  8CC9              ;
 633  8CC9              ; 22/08/24
 634  8CC9
 635  8CC9              ; Gestión de disparos.
 636  8CC9
 637  8CC9 CD 05 9F     	call Limpia_album_de_borrado_disparos
 638  8CCC CD 46 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CCF CD 48 9F     	call Motor_Disparos
 640  8CD2
 641  8CD2              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CD2              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CD2              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CD2
 645  8CD2 CD 54 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD5
 647  8CD5              ;	TEMPORIZACIONES !!!!!!!!!!!!!!!!
 648  8CD5
 649  8CD5 2A 45 8C     	ld hl,(Clock_next_entity)
 650  8CD8 ED 4B 78 5C  	ld bc,(FRAMES)
 651  8CDC A7           	and a
 652  8CDD ED 42        	sbc hl,bc
 653  8CDF 20 16        	jr nz,1F
 654  8CE1
 655  8CE1              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 656  8CE1              ; _ (Clock_next_entity) para la siguiente entidad.
 657  8CE1
 658  8CE1 3A 02 8C     	ld a,(Numero_parcial_de_entidades)
 659  8CE4 47           	ld b,a
 660  8CE5 3A 03 8C     	ld a,(Entidades_en_curso)
 661  8CE8 B8           	cp b
 662  8CE9 28 0C        	jr z,1F
 663  8CEB 30 0A        	jr nc,1F
 664  8CED
 665  8CED 3C           	inc a
 666  8CEE 32 03 8C     	ld (Entidades_en_curso),a
 667  8CF1
 668  8CF1              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 669  8CF1
 670  8CF1 CD 64 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 671  8CF4 CD 80 8E     	call Define_Clock_next_entity
 672  8CF7
 673  8CF7 3A 03 8C     1 ld a,(Entidades_en_curso)
 674  8CFA A7           	and a
 675  8CFB CA 6E 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 676  8CFE 47           	ld b,a												; No hay entidades que gestionar.
 677  8CFF
 678  8CFF              ; ( Código que ejecutamos con cada entidad: ).
 679  8CFF
 680  8CFF              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 681  8CFF              ;
 682  8CFF              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 683  8CFF
 684  8CFF 21 00 89     	ld hl,Tabla_de_pintado
 685  8D02 22 2A 8C     	ld (India_SP),hl
 686  8D05
 687  8D05 21 2E 8C     	ld hl,Ctrl_3
 688  8D08 CB D6        	set 2,(hl)
 689  8D0A CD 1B 8E     	call Change
 690  8D0D
 691  8D0D C5           2 push bc 												; Nº de entidades en curso.
 692  8D0E
 693  8D0E CD AC 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 694  8D11 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 695  8D15
 696  8D15              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 697  8D15
 698  8D15              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 699  8D15              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 700  8D15
 701  8D15 3A 35 8C     	ld a,(Impacto2)
 702  8D18 CB 5F        	bit 3,a
 703  8D1A C4 CB 9E     	call nz,Compara_con_coordenadas_de_disparo
 704  8D1D
 705  8D1D 3A BF 8B     	ld a,(Impacto)
 706  8D20 CB 4F        	bit 1,a
 707  8D22 C4 BC 91     	call nz,Genera_explosion
 708  8D25 20 2A        	jr nz,Gestiona_siguiente_entidad
 709  8D27
 710  8D27 3A BF 8B     	ld a,(Impacto)
 711  8D2A A7           	and a
 712  8D2B 28 0C        	jr z,3F
 713  8D2D
 714  8D2D              ; IMPACTO en entidad por colisión con Amadeus.
 715  8D2D
 716  8D2D              ; 5/7/24
 717  8D2D              ; Nota importante:
 718  8D2D              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 719  8D2D              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 720  8D2D              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 721  8D2D
 722  8D2D 3A 74 89     	ld a,(Impacto_Amadeus)
 723  8D30 A7           	and a
 724  8D31 C4 BC 91     	call nz,Genera_explosion
 725  8D34 20 1B        	jr nz,Gestiona_siguiente_entidad
 726  8D36
 727  8D36              ; Falsa colisión !!!
 728  8D36
 729  8D36 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 730  8D39
 731  8D39              ; -------------------------------------------
 732  8D39
 733  8D39 CD C4 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 734  8D3C CD FB 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 735  8D3F CD B4 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 736  8D42 CD BC 94     	call Genera_datos_de_impresion
 737  8D45 CD 5F 93     	call Decrementa_Contador_de_mov_masticados
 738  8D48
 739  8D48              ; -------------------------------------------
 740  8D48
 741  8D48              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 742  8D48
 743  8D48 2A C0 8B     	ld hl,(Puntero_de_impresion)
 744  8D4B CD 90 94     	call Genera_coordenadas
 745  8D4E
 746  8D4E CD D2 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 747  8D51
 748  8D51              Gestiona_siguiente_entidad
 749  8D51
 750  8D51 CD 31 93      	call Store_Restore_cajas
 751  8D54 C1           	pop bc
 752  8D55 10 B6        	djnz 2B
 753  8D57
 754  8D57              ; Hemos gestionado todas las entidades.
 755  8D57
 756  8D57              ; ----- ----- -----
 757  8D57
 758  8D57 CD D8 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 759  8D5A CD EF 8E     	call Ordena_tabla_de_impresion
 760  8D5D CD 4D 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 761  8D60
 762  8D60              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 763  8D60              ; Hemos gestionado todas las unidades.
 764  8D60              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 765  8D60
 766  8D60              ;	ld hl,Ctrl_1
 767  8D60              ;	res 2,(hl)
 768  8D60
 769  8D60 CD 95 8E     	call Borra_diferencia
 770  8D63
 771  8D63 3A 2E 8C     	ld a,(Ctrl_3)
 772  8D66 CB 5F        	bit 3,a
 773  8D68 20 04        	jr nz,Gestion_de_Amadeus
 774  8D6A
 775  8D6A EB           	ex de,hl
 776  8D6B 71           	ld (hl),c
 777  8D6C 2C           	inc l
 778  8D6D 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 779  8D6E
 780  8D6E
 781  8D6E              ;! GESTIONA AMADEUS !!!!!!!!!!
 782  8D6E
 783  8D6E              Gestion_de_Amadeus
 784  8D6E
 785  8D6E 21 2E 8C     	ld hl,Ctrl_3
 786  8D71 CB 76        	bit 6,(hl)
 787  8D73 28 13        	jr z,Amadeus_vivo
 788  8D75
 789  8D75              ; Amadeus ha sido destruido.
 790  8D75              ; Decrementa (Temp_new_live).
 791  8D75
 792  8D75 21 42 8C     	ld hl,Temp_new_live
 793  8D78 35           	dec (hl)
 794  8D79 20 26        	jr nz,End_frame
 795  8D7B
 796  8D7B              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 797  8D7B
 798  8D7B 21 57 8C     	ld hl,Lives
 799  8D7E 35           	dec (hl)
 800  8D7F
 801  8D7F              ;! Fin del juego
 802  8D7F
 803  8D7F F3           	di
 804  8D80 28 FE        	jr z,$
 805  8D82 FB           	ei
 806  8D83
 807  8D83              ; Nueva nave.
 808  8D83
 809  8D83 CD C1 8D     	call Reinicia_Amadeus
 810  8D86 18 19        	jr End_frame
 811  8D88
 812  8D88              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 813  8D88
 814  8D88              Amadeus_vivo
 815  8D88
 816  8D88 3A 74 89     	ld a,(Impacto_Amadeus)
 817  8D8B A7           	and a
 818  8D8C C4 EC 91     	call nz, Genera_explosion_Amadeus
 819  8D8F 20 10        	jr nz, End_frame
 820  8D91
 821  8D91 CD 99 91     	call Teclado
 822  8D94
 823  8D94 21 2E 8C     	ld hl,Ctrl_3
 824  8D97 CB 6E        	bit 5,(hl)
 825  8D99 28 06        	jr z,End_frame
 826  8D9B
 827  8D9B              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 828  8D9B
 829  8D9B CD 36 8E     	call Change_Amadeus
 830  8D9E CD FB 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 831  8DA1
 832  8DA1              End_frame
 833  8DA1
 834  8DA1              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 835  8DA1              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 836  8DA1
 837  8DA1 CD 08 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 838  8DA4 CD 21 9F     	call Calcula_bytes_pintado_disparos
 839  8DA7 CD 2E 9F     	call Limpia_album_de_pintado_disparos
 840  8DAA
 841  8DAA              ; ------------ ------------- --------------
 842  8DAA
 843  8DAA 2A 0E 8C     	ld hl,(Album_de_borrado)
 844  8DAD 22 28 8C     	ld (Scanlines_album_SP),hl
 845  8DB0
 846  8DB0 21 2E 8C     	ld hl,Ctrl_3
 847  8DB3 CB C6        	set 0,(hl) 											; Indica Frame completo.
 848  8DB5 CB 9E        	res 3,(hl)
 849  8DB7 CB A6        	res 4,(hl)
 850  8DB9
 851  8DB9 AF           	xor a
 852  8DBA D3 FE        	out ($fe),a
 853  8DBC
 854  8DBC 76           	halt
 855  8DBD
 856  8DBD              ; ----------------------------------------
 857  8DBD
 858  8DBD              ;	ld a,(Ctrl_1) 										; Existe Loop?
 859  8DBD              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 860  8DBD CA C9 8C     	jp z,Main
 861  8DC0
 862  8DC0              ; RECARGA DE NUEVA OLEADA.
 863  8DC0
 864  8DC0              ;	ld a,(Contador_de_frames)
 865  8DC0              ;	ld b,a
 866  8DC0              ;	ld a,(Activa_recarga_cajas)
 867  8DC0              ;	cp b
 868  8DC0              ;	jr z,20F
 869  8DC0
 870  8DC0              ;	ld hl,Ctrl_1
 871  8DC0              ;	set 4,(hl)
 872  8DC0              ;	jp Main
 873  8DC0
 874  8DC0              ;20 ld hl,Ctrl_1
 875  8DC0              ;	res 4,(hl)
 876  8DC0
 877  8DC0              ;	ld a,(Contador_de_frames)
 878  8DC0
 879  8DC0              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 880  8DC0              ;! _ IMPREDECIBLE !!!!
 881  8DC0
 882  8DC0              ;	add 10
 883  8DC0              ;	ld (Clock_next_entity),a
 884  8DC0
 885  8DC0              ;	jp 4B
 886  8DC0
 887  8DC0 C9           	ret
 888  8DC1
 889  8DC1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 890  8DC1              ;
 891  8DC1              ;	16/11/23
 892  8DC1
 893  8DC1              ;;Gestiona_Amadeus
 894  8DC1
 895  8DC1              ;! Activa/desactiva impacto con Amadeus.
 896  8DC1
 897  8DC1              ;	ld a,(Impacto)
 898  8DC1              ;	and a
 899  8DC1              ;	jr nz,2F
 900  8DC1
 901  8DC1              ;;	call Mov_Amadeus
 902  8DC1
 903  8DC1              ;;2 ld a,(Ctrl_0)
 904  8DC1              ;;	bit 4,a
 905  8DC1              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 906  8DC1
 907  8DC1              ;;	call Guarda_foto_entidad_a_pintar
 908  8DC1              ;;	call Guarda_datos_de_borrado_Amadeus
 909  8DC1
 910  8DC1              ;;1 ld hl,Ctrl_0
 911  8DC1              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 912  8DC1
 913  8DC1              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 914  8DC1
 915  8DC1              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 916  8DC1
 917  8DC1              ;	call Calcula_numero_de_disparotes
 918  8DC1
 919  8DC1              ;;	ret
 920  8DC1
 921  8DC1              ; -----------------------------
 922  8DC1              ;
 923  8DC1              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 924  8DC1              ;
 925  8DC1              ;	INPUTS: B a de estar a "0".
 926  8DC1
 927  8DC1              ;Prepara_Borra_sprites
 928  8DC1
 929  8DC1              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 930  8DC1              ;	ld a,l
 931  8DC1              ;	ret z
 932  8DC1
 933  8DC1              ;	srl a
 934  8DC1
 935  8DC1              ;2 sub 16
 936  8DC1              ;	jr z,1F
 937  8DC1              ;	inc b
 938  8DC1              ;	jr 2B
 939  8DC1
 940  8DC1              ;1 inc b
 941  8DC1
 942  8DC1              ;	exx
 943  8DC1              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 944  8DC1              ;	exx
 945  8DC1
 946  8DC1              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 947  8DC1              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 948  8DC1
 949  8DC1              ;	ret
 950  8DC1
 951  8DC1              ; --------------------------------------------------------------------------------------------------------------
 952  8DC1              ;
 953  8DC1              ;	15/12/23
 954  8DC1
 955  8DC1              ;Mov_obj
 956  8DC1
 957  8DC1              ;	ld a,(Ctrl_2)
 958  8DC1              ;	bit 1,a
 959  8DC1              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 960  8DC1
 961  8DC1              ; Explosión:
 962  8DC1
 963  8DC1              ;	ld a,(Frames_explosion)
 964  8DC1              ;	and a
 965  8DC1              ;	jr nz,4F
 966  8DC1
 967  8DC1              ;!  Una alimaña menos!!!!!!!!!1
 968  8DC1
 969  8DC1              ; Se trataba de una Entidad_guía ???
 970  8DC1
 971  8DC1              ;	ld a,(Ctrl_2)
 972  8DC1              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 973  8DC1              ;	jr z,5F
 974  8DC1
 975  8DC1              ;	ld hl,Ctrl_3
 976  8DC1              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 977  8DC1
 978  8DC1              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 979  8DC1              ;!! _generado puede ser distinto, (aletoriedad).
 980  8DC1
 981  8DC1              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 982  8DC1              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 983  8DC1              ;	dec (hl)
 984  8DC1              ;	ld hl,Entidades_en_curso
 985  8DC1              ;	dec (hl)
 986  8DC1              ;	ld hl,Numero_de_entidades
 987  8DC1              ;	dec (hl)
 988  8DC1              ;	jr 3F
 989  8DC1
 990  8DC1              ; -----
 991  8DC1
 992  8DC1              ;	`Movemos´ la explosión.
 993  8DC1
 994  8DC1              ;4 ld hl,(Puntero_DESPLZ_der)
 995  8DC1              ;	inc hl
 996  8DC1              ;	inc hl
 997  8DC1              ;	call Extrae_address
 998  8DC1              ;;	ld (Puntero_objeto),hl
 999  8DC1
1000  8DC1              ;;	ld hl,Frames_explosion
1001  8DC1              ;;	dec (hl)
1002  8DC1
1003  8DC1              ;;	ld hl,Ctrl_0
1004  8DC1              ;;	set 4,(hl);;
1005  8DC1
1006  8DC1              ;;	jr 3F
1007  8DC1
1008  8DC1              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1009  8DC1
1010  8DC1              ;2 xor a
1011  8DC1              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1012  8DC1
1013  8DC1              ; Movemos Entidades malignas.
1014  8DC1              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1015  8DC1
1016  8DC1              ;	ld a,(Ctrl_2)
1017  8DC1              ;	bit 5,a
1018  8DC1              ;	jr nz,8F
1019  8DC1
1020  8DC1              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1021  8DC1              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1022  8DC1              ;	jr 7F
1023  8DC1
1024  8DC1              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1025  8DC1
1026  8DC1              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1027  8DC1              ;	bit 4,a
1028  8DC1              ;	ret z
1029  8DC1
1030  8DC1              ; Ha habido desplazamiento de la entidad maligna.
1031  8DC1              ; Ha llegado a zona de AMADEUS ???
1032  8DC1
1033  8DC1              ;7 ld a,(Coordenada_y)
1034  8DC1              ;	cp $14
1035  8DC1              ;	jr c,1F
1036  8DC1
1037  8DC1              ; ---------
1038  8DC1
1039  8DC1              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1040  8DC1              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1041  8DC1
1042  8DC1              ;	di
1043  8DC1              ;	call Genera_coordenadas_X
1044  8DC1              ;	call Compara_coordenadas_X
1045  8DC1              ;	ei
1046  8DC1
1047  8DC1              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1048  8DC1
1049  8DC1              ; ---------
1050  8DC1
1051  8DC1              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1052  8DC1              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1053  8DC1              ;	call Limpia_Variables_de_borrado
1054  8DC1
1055  8DC1              ;3 ret
1056  8DC1
1057  8DC1              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1058  8DC1              ;
1059  8DC1              ;	24/07/24
1060  8DC1
1061  8DC1              Reinicia_Amadeus
1062  8DC1
1063  8DC1              ;	Reinicia posición y estado.
1064  8DC1
1065  8DC1 21 CF 50     	ld hl,$50cf
1066  8DC4 22 75 89     	ld (p.imp.amadeus),hl
1067  8DC7 21 F0 E0     	ld hl,$e0f0
1068  8DCA 22 77 89     	ld (Pamm_Amadeus),hl
1069  8DCD 21 3D 00     	ld hl,$003d
1070  8DD0 22 79 89     	ld (Comm_Amadeus),hl
1071  8DD3
1072  8DD3              ;	limpiamos el álbum de borrado.
1073  8DD3
1074  8DD3 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1075  8DD6
1076  8DD6 AF           	xor a
1077  8DD7 77           	ld (hl),a
1078  8DD8
1079  8DD8 E5           	push hl
1080  8DD9 D1           	pop de
1081  8DDA 13           	inc de
1082  8DDB
1083  8DDB 01 23 00     	ld bc,35
1084  8DDE ED B0        	ldir
1085  8DE0
1086  8DE0 CD FB 8F     	call Genera_datos_de_impresion_Amadeus
1087  8DE3
1088  8DE3              ;	Reinicia temporizaciones.
1089  8DE3
1090  8DE3 CD DF 90     	call Inicia_Shield
1091  8DE6
1092  8DE6 3E 5A        	ld a,90
1093  8DE8 32 54 8C     	ld (Shield),a
1094  8DEB
1095  8DEB 3E 64        	ld a,100
1096  8DED 32 42 8C     	ld (Temp_new_live),a
1097  8DF0
1098  8DF0              ; 	Restauramos el FLAG: Amadeus vivo.
1099  8DF0
1100  8DF0 21 2E 8C     	ld hl,Ctrl_3
1101  8DF3 CB B6        	res 6,(hl)
1102  8DF5
1103  8DF5              ;	Fuerza la impresión de la nave en el siguiente frame.
1104  8DF5
1105  8DF5 21 2E 8C      	ld hl,Ctrl_3
1106  8DF8 CB EE        	set 5,(hl)
1107  8DFA
1108  8DFA C9           	ret
1109  8DFB
1110  8DFB              ; --------------------------------------------------------------------------------------------------------------
1111  8DFB              ;
1112  8DFB              ;	12/05/24
1113  8DFB
1114  8DFB 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1115  8DFE CB 27        	sla a
1116  8E00 32 C6 8B     	ld (Velocidad),a
1117  8E03 E6 10        	and $10
1118  8E05 C8           	ret z
1119  8E06
1120  8E06              ; Restaura (Velocidad) a razón del nº de vueltas.
1121  8E06
1122  8E06 3A BE 8B     	ld a,(Contador_de_vueltas)
1123  8E09 CB 2F        	sra a
1124  8E0B CB 2F        	sra a
1125  8E0D 32 C6 8B     	ld (Velocidad),a
1126  8E10
1127  8E10 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1128  8E13 23           	inc hl
1129  8E14 23           	inc hl
1130  8E15 23           	inc hl
1131  8E16 23           	inc hl
1132  8E17 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1133  8E1A
1134  8E1A C9           	ret
1135  8E1B
1136  8E1B              ; --------------------------------------------------------------------------------------------------------------
1137  8E1B              ;
1138  8E1B              ;	25/08/24
1139  8E1B
1140  8E1B              Change
1141  8E1B
1142  8E1B 3A 25 8C     	ld a,(Switch)
1143  8E1E EE 01        	xor 1
1144  8E20 32 25 8C     	ld (Switch),a
1145  8E23 2A 0C 8C     	ld hl,(Album_de_pintado)
1146  8E26 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1147  8E2A EB           	ex de,hl
1148  8E2B 22 0C 8C     	ld (Album_de_pintado),hl
1149  8E2E 22 28 8C     	ld (Scanlines_album_SP),hl
1150  8E31 ED 53 0E 8C  	ld (Album_de_borrado),de
1151  8E35 C9           	ret
1152  8E36
1153  8E36              Change_Amadeus
1154  8E36
1155  8E36 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1156  8E39 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1157  8E3D EB           	ex de,hl
1158  8E3E 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1159  8E41 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1160  8E45 C9           	ret
1161  8E46
1162  8E46              Change_Disparos
1163  8E46
1164  8E46              ;	Exclusiones:
1165  8E46
1166  8E46 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1167  8E49 A7           	and a
1168  8E4A C8           	ret z
1169  8E4B
1170  8E4B              ; -----
1171  8E4B
1172  8E4B 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1173  8E4E ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1174  8E52 EB           	ex de,hl
1175  8E53 22 14 8C     	ld (Album_de_pintado_disparos),hl
1176  8E56 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1177  8E5A 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1178  8E5D
1179  8E5D 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1180  8E60 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1181  8E63
1182  8E63 C9           	ret
1183  8E64
1184  8E64              ; ------------------------------------
1185  8E64              ;
1186  8E64              ; 1/05/24
1187  8E64
1188  8E64              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1189  8E64              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1190  8E64
1191  8E64              ;	DESTRUYE: HL,DE,A
1192  8E64              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1193  8E64
1194  8E64              ;	Variables implicadas: (RND_SP).
1195  8E64
1196  8E64              Extrae_numero_aleatorio_y_avanza
1197  8E64
1198  8E64 21 00 89     	ld hl,Tabla_de_pintado
1199  8E67 EB           	ex de,hl
1200  8E68 2A 43 8C     	ld hl,(RND_SP)
1201  8E6B EB           	ex de,hl
1202  8E6C A7           	and a
1203  8E6D ED 52        	sbc hl,de
1204  8E6F
1205  8E6F 2A 43 8C     	ld hl,(RND_SP)
1206  8E72 20 06        	jr nz,1F
1207  8E74
1208  8E74              ; Sitúa HL al principio de la tabla de nº aleatorios.
1209  8E74
1210  8E74 21 F6 88     	ld hl,Numeros_aleatorios
1211  8E77 22 43 8C     	ld (RND_SP),HL
1212  8E7A
1213  8E7A              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1214  8E7A
1215  8E7A 7E           1 ld a,(hl)
1216  8E7B 23           	inc hl
1217  8E7C 22 43 8C     	ld (RND_SP),hl
1218  8E7F C9           	ret
1219  8E80
1220  8E80              ; ------------------------------------
1221  8E80              ;
1222  8E80              ; 1/05/24
1223  8E80
1224  8E80              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1225  8E80              ; (1 a 4 segundos).
1226  8E80              ; Actualizamos (Clock_next_entity) con A.
1227  8E80
1228  8E80              ;	DESTRUYE: A y B.
1229  8E80              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1230  8E80              ;			 Actualiza (Clock_next_entity) con A.
1231  8E80
1232  8E80              ;	Variables implicadas: (Clock_next_entity).
1233  8E80
1234  8E80              ; Notas:
1235  8E80
1236  8E80              ; 	$32 1 seg.
1237  8E80              ; 	$64 2 seg.
1238  8E80              ; 	$96 3 seg.
1239  8E80              ; 	$c8 4 seg.
1240  8E80              ; 	$fa 5 seg.
1241  8E80
1242  8E80              ; $ffff 1310,7 seg, 22 minutos.
1243  8E80
1244  8E80              ;	$0100  5 seg. aproximadamente.
1245  8E80              ;	$0200 10 seg. aproximadamente.
1246  8E80              ;	$0300 15 seg. aproximadamente.
1247  8E80              ;	$0400 20 seg. aproximadamente.
1248  8E80              ;	$0500 25 seg. aproximadamente.
1249  8E80              ;	$0600 30 seg. aproximadamente.
1250  8E80
1251  8E80              Define_Clock_next_entity
1252  8E80
1253  8E80 FE 34        	cp $34
1254  8E82 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1255  8E84
1256  8E84              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1257  8E84
1258  8E84 4F           3 ld c,a
1259  8E85 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1260  8E87 2A 78 5C     	ld hl,(FRAMES)
1261  8E8A A7           	and a
1262  8E8B ED 4A        	adc hl,bc
1263  8E8D 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1264  8E90 C9           	ret
1265  8E91
1266  8E91 3E 34        1 ld a,$34
1267  8E93 18 EF        	jr 3B
1268  8E95
1269  8E95              ; ------------------------------------
1270  8E95              ;
1271  8E95              ; 18/03/24
1272  8E95
1273  8E95              Borra_diferencia
1274  8E95
1275  8E95 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1276  8E99
1277  8E99 3A 25 8C     	ld a,(Switch)
1278  8E9C A7           	and a
1279  8E9D 28 08        	jr z,2F
1280  8E9F
1281  8E9F 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1282  8EA2 11 23 8C     	ld de,Techo_Scanlines_album_2
1283  8EA5 18 06        	jr 3F
1284  8EA7
1285  8EA7 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1286  8EAA 11 21 8C     	ld de,Techo_Scanlines_album
1287  8EAD
1288  8EAD              ; Diferencia.
1289  8EAD
1290  8EAD ED 42        3 sbc hl,bc
1291  8EAF
1292  8EAF C8           	ret z
1293  8EB0 D8           	ret c
1294  8EB1
1295  8EB1              ; Nuevo techo, (más bajo que el anterior).
1296  8EB1              ; Fijamos nuevo techo y borramos bytes sobrantes.
1297  8EB1
1298  8EB1 EB           	ex de,hl
1299  8EB2
1300  8EB2 71           	ld (hl),c
1301  8EB3 2C           	inc l
1302  8EB4 70           	ld (hl),b
1303  8EB5
1304  8EB5 AF           	xor a
1305  8EB6 43           	ld b,e
1306  8EB7
1307  8EB7 2A 28 8C     	ld hl,(Scanlines_album_SP)
1308  8EBA
1309  8EBA 77           1 ld (hl),a
1310  8EBB 23           	inc hl
1311  8EBC 10 FC        	djnz 1B
1312  8EBE
1313  8EBE              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1314  8EBE
1315  8EBE 21 2E 8C     	ld hl,Ctrl_3
1316  8EC1 CB DE        	set 3,(hl)
1317  8EC3
1318  8EC3 C9           	ret
1319  8EC4
1320  8EC4              ; --------------------------------------------------------------------------------------------------------------
1321  8EC4              ;
1322  8EC4              ;	26/3/24
1323  8EC4
1324  8EC4              Recauda_informacion_de_entidad_en_curso
1325  8EC4
1326  8EC4              ; Almacena la Coordenada Y de la entidad en curso.
1327  8EC4
1328  8EC4              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1329  8EC4
1330  8EC4 3A BD 8B     	ld a,(Coordenada_y)
1331  8EC7 2A 2A 8C     	ld hl,(India_SP)
1332  8ECA 77           	ld (hl),a
1333  8ECB 2C           	inc l
1334  8ECC
1335  8ECC              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1336  8ECC
1337  8ECC ED 5B 28 8C  	ld de,(Scanlines_album_SP)
1338  8ED0
1339  8ED0 73           	ld (hl),e
1340  8ED1 2C           	inc l
1341  8ED2 72           	ld (hl),d
1342  8ED3 2C           	inc l
1343  8ED4
1344  8ED4 22 2A 8C     	ld (India_SP),hl
1345  8ED7
1346  8ED7 C9           	ret
1347  8ED8
1348  8ED8              ; --------------------------------------------------------------------------------------------------------------
1349  8ED8              ;
1350  8ED8              ;	27/03/24
1351  8ED8              ;
1352  8ED8
1353  8ED8              Inicializa_India_y_limpia_Tabla_de_impresion
1354  8ED8
1355  8ED8 2A 2A 8C     	ld hl,(India_SP)
1356  8EDB 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1357  8EDE
1358  8EDE 79           	ld a,c
1359  8EDF 95           	sub l
1360  8EE0 28 06        	jr z,2F
1361  8EE2 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1362  8EE3              ;														; _ y pasamos a inicializar (India_SP).
1363  8EE3 AF           	xor a
1364  8EE4
1365  8EE4 77           1 ld (hl),a
1366  8EE5 2C           	inc l
1367  8EE6 10 FC        	djnz 1B												; Limpia Tabla.
1368  8EE8
1369  8EE8 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1370  8EEB 22 2A 8C     	ld (India_SP),hl
1371  8EEE
1372  8EEE C9           	ret
1373  8EEF
1374  8EEF              ; --------------------------------------------------------------------------------------------------------------
1375  8EEF              ;
1376  8EEF              ;	31/3/24
1377  8EEF
1378  8EEF              Ordena_tabla_de_impresion
1379  8EEF
1380  8EEF              ; 5794 T/states.
1381  8EEF              ; 6278 T/states.
1382  8EEF              ; 5310 T/states.
1383  8EEF
1384  8EEF              ; Inicializamos punteros (India_SP) e (India_2_SP).
1385  8EEF              ; Inicializamos contador de comparaciones, [C].
1386  8EEF              ; Cargamos los registros A y B para efectuar comparación.
1387  8EEF
1388  8EEF FD 2E 00     	ld iyl,0
1389  8EF2
1390  8EF2 3A 03 8C     	ld a,(Entidades_en_curso)
1391  8EF5 FE 04        	cp 4 	;	4
1392  8EF7 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1393  8EF8
1394  8EF8 3D           	dec a
1395  8EF9 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1396  8EFA 51           	ld d,c 										; Copia de respaldo.
1397  8EFB
1398  8EFB 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1399  8EFC
1400  8EFC 21 03 89     	ld hl,Tabla_de_pintado+3
1401  8EFF 46           	ld b,(hl)
1402  8F00 22 2C 8C     	ld (India_2_SP),hl
1403  8F03
1404  8F03 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1405  8F04 DC 2C 8F     	call c, Avanza_India_2_SP
1406  8F07 CC 2C 8F     	call z, Avanza_India_2_SP
1407  8F0A
1408  8F0A FD 2D        	dec iyl
1409  8F0C 28 18        	jr z,2F
1410  8F0E
1411  8F0E
1412  8F0E              ; --------------------------------------------------------------------------------------------------------------
1413  8F0E              ;
1414  8F0E              ;	7/4/24
1415  8F0E
1416  8F0E              Trueque
1417  8F0E
1418  8F0E              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1419  8F0E              ;  			A contiene en nº de fila de (India_SP).
1420  8F0E              ;			HL contiene (India_2_SP).
1421  8F0E
1422  8F0E D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1423  8F0F E5           	push hl										; Preservo (India_2_SP).
1424  8F10
1425  8F10 ED 5B 2A 8C  	ld de,(India_SP)
1426  8F14 EB           	ex de,hl
1427  8F15 70           	ld (hl),b
1428  8F16 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1429  8F17
1430  8F17 CD 58 8F     	call Intercambia_1_byte
1431  8F1A CD 58 8F     	call Intercambia_1_byte
1432  8F1D
1433  8F1D
1434  8F1D              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1435  8F1D              ; Recuperamos (India_2_SP) en HL.
1436  8F1D
1437  8F1D 2A 2A 8C     	ld hl,(India_SP)
1438  8F20 7E           	ld a,(hl)
1439  8F21
1440  8F21 E1           	pop hl
1441  8F22 D1           	pop de
1442  8F23
1443  8F23              ; --------------------------------------------------------------------------------------------------------------
1444  8F23
1445  8F23 CD 2C 8F     	call Avanza_India_2_SP
1446  8F26
1447  8F26 14           2 inc d
1448  8F27 15           	dec d
1449  8F28 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1450  8F29 18 D8        	jr 1B
1451  8F2B
1452  8F2B C9           	ret
1453  8F2C
1454  8F2C              ; ----- ----- ----- ----- -----
1455  8F2C
1456  8F2C              Avanza_India_2_SP
1457  8F2C
1458  8F2C 0D           	dec c
1459  8F2D 28 0A        	jr z,Avanza_punteros_indios
1460  8F2F
1461  8F2F FD 2C        	inc iyl
1462  8F31
1463  8F31 2C           	inc l
1464  8F32 2C           	inc l
1465  8F33 2C           	inc l
1466  8F34
1467  8F34 46           	ld b,(hl)
1468  8F35 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1469  8F38
1470  8F38 C9           	ret
1471  8F39
1472  8F39              ; ----- ----- ----- ----- -----
1473  8F39
1474  8F39              Avanza_punteros_indios
1475  8F39
1476  8F39 15           	dec d
1477  8F3A 28 15        	jr z,Prepara_salida
1478  8F3C
1479  8F3C 4A           	ld c,d
1480  8F3D
1481  8F3D 2A 2A 8C     	ld hl,(India_SP)
1482  8F40 2C           	inc l
1483  8F41 2C           	inc l
1484  8F42 2C           	inc l
1485  8F43 7E           	ld a,(hl)
1486  8F44 22 2A 8C     	ld (India_SP),hl
1487  8F47
1488  8F47 2C           	inc l
1489  8F48 2C           	inc l
1490  8F49 2C           	inc l
1491  8F4A 46           	ld b,(hl)
1492  8F4B 22 2C 8C     	ld (India_2_SP),hl
1493  8F4E
1494  8F4E FD 2C        	inc iyl
1495  8F50
1496  8F50 C9           	ret
1497  8F51
1498  8F51              Prepara_salida
1499  8F51
1500  8F51 21 00 89     	ld hl,Tabla_de_pintado
1501  8F54 22 2A 8C     	ld (India_SP),hl
1502  8F57 C9           	ret
1503  8F58
1504  8F58
1505  8F58 2C           Intercambia_1_byte inc l
1506  8F59 1C           	inc e
1507  8F5A 46           	ld b,(hl)
1508  8F5B 1A           	ld a,(de)
1509  8F5C EB           	ex de,hl
1510  8F5D 70           	ld (hl),b
1511  8F5E 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1512  8F5F C9           	ret
1513  8F60
1514  8F60              ; -----------------------------------------------------------------------------------
1515  8F60              ;
1516  8F60              ;	20/01/24
1517  8F60              ;
1518  8F60              ;
1519  8F60
1520  8F60              Construye_movimientos_masticados_entidad
1521  8F60
1522  8F60 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1523  8F63 E5           	push hl
1524  8F64 CD A7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1525  8F67              ;															; _ el (Contador_de_mov_masticados).
1526  8F67 CD 77 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1527  8F6A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1528  8F6A CD A4 99     	call Recompone_posicion_inicio
1529  8F6D
1530  8F6D CD D4 96     1 call Draw
1531  8F70 CD 8C 8F     	call Guarda_movimiento_masticado
1532  8F73
1533  8F73 CD 51 9D     	call Movimiento
1534  8F76
1535  8F76 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1536  8F79 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1537  8F7B 28 F0        	jr z,1B
1538  8F7D
1539  8F7D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1540  8F7D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1541  8F7D
1542  8F7D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1543  8F7E 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1544  8F81
1545  8F81              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1546  8F81
1547  8F81 CD B5 9E     	call Situa_en_contador_general_de_mov_masticados
1548  8F84
1549  8F84              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1550  8F84              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1551  8F84
1552  8F84 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1553  8F88
1554  8F88 71           	ld (hl),c
1555  8F89 23           	inc hl
1556  8F8A 70           	ld (hl),b
1557  8F8B
1558  8F8B C9           	ret
1559  8F8C
1560  8F8C              ; -----------------------------------------------------------------------------------
1561  8F8C              ;
1562  8F8C              ;	28/12/23
1563  8F8C              ;
1564  8F8C              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1565  8F8C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1566  8F8C
1567  8F8C              Guarda_movimiento_masticado
1568  8F8C
1569  8F8C ED 73 08 8C  	ld (Stack),sp
1570  8F90 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1571  8F94
1572  8F94 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1573  8F96 FD E5            push iy 												; Pushea Puntero_objeto.
1574  8F98
1575  8F98 ED 7B 08 8C      ld sp,(Stack)
1576  8F9C
1577  8F9C 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1578  8F9F 23           	inc hl
1579  8FA0 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1580  8FA3
1581  8FA3 CD A7 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1582  8FA6              ;															; _ el (Contador_de_mov_masticados).
1583  8FA6 C9               ret
1584  8FA7
1585  8FA7              ; --------------------------------------------------------------------------------------------------------------
1586  8FA7              ;
1587  8FA7              ;	12/1/24
1588  8FA7              ;
1589  8FA7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1590  8FA7
1591  8FA7              Actualiza_Puntero_de_almacen_de_mov_masticados
1592  8FA7
1593  8FA7 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1594  8FAA 01 04 00     	ld bc,4
1595  8FAD A7           	and a
1596  8FAE ED 4A        	adc hl,bc
1597  8FB0 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1598  8FB3 C9           	ret
1599  8FB4
1600  8FB4              ; --------------------------------------------------------------------------------------------------------------
1601  8FB4              ;
1602  8FB4              ;	24/03/24
1603  8FB4              ;
1604  8FB4              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1605  8FB4              ;
1606  8FB4              ;	IX contiene el puntero de impresión.
1607  8FB4              ;	DE contiene (Puntero_objeto).
1608  8FB4
1609  8FB4
1610  8FB4              Cargamos_registros_con_mov_masticado
1611  8FB4
1612  8FB4 ED 73 08 8C  	ld (Stack),sp
1613  8FB8 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1614  8FBC
1615  8FBC D1           	pop de 															; DE contiene Puntero_objeto
1616  8FBD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1617  8FBF
1618  8FBF ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1619  8FC3 ED 7B 08 8C  	ld sp,(Stack)
1620  8FC7
1621  8FC7 7B           	ld a,e
1622  8FC8 82           	add d															; Comprueba si ya no hay datos en el almacén.
1623  8FC9
1624  8FC9 CC 67 93     	call z,Reinicia_entidad_maliciosa
1625  8FCC
1626  8FCC C9           	ret
1627  8FCD
1628  8FCD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1629  8FCD              ;
1630  8FCD              ;	22/7/24
1631  8FCD
1632  8FCD              Cargamos_registros_con_explosion
1633  8FCD
1634  8FCD
1635  8FCD 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1636  8FD0 CD 71 90     	call Extrae_address
1637  8FD3
1638  8FD3 5D           	ld e,l
1639  8FD4 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1640  8FD5
1641  8FD5 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1642  8FD9
1643  8FD9 C9           	ret
1644  8FDA
1645  8FDA
1646  8FDA              Cargamos_registros_con_explosion_Amadeus
1647  8FDA
1648  8FDA 2A 77 89     	ld hl,(Pamm_Amadeus)
1649  8FDD CD 71 90     	call Extrae_address
1650  8FE0
1651  8FE0 5D           	ld e,l
1652  8FE1 54           	ld d,h
1653  8FE2
1654  8FE2 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1655  8FE6
1656  8FE6 C9           	ret
1657  8FE7
1658  8FE7              ; --------------------------------------------------------------------------------------------------------------
1659  8FE7              ;
1660  8FE7              ;	17/06/24
1661  8FE7              ;
1662  8FE7              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1663  8FE7              ;
1664  8FE7              ;	IX contiene el puntero de impresión.
1665  8FE7              ;	DE contiene (Puntero_objeto).
1666  8FE7
1667  8FE7
1668  8FE7              Cargamos_registros_con_mov_masticado_Amadeus
1669  8FE7
1670  8FE7 ED 73 08 8C  	ld (Stack),sp
1671  8FEB ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1672  8FEF D1           	pop de 															; DE contiene Puntero_objeto
1673  8FF0 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1674  8FF2 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1675  8FF6 ED 7B 08 8C  	ld sp,(Stack)
1676  8FFA C9           	ret
1677  8FFB
1678  8FFB              ; ---------------------------------------------------------------------------------------------------------------------
1679  8FFB              ;
1680  8FFB              ;	18/6/24
1681  8FFB              ;
1682  8FFB              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1683  8FFB
1684  8FFB              Genera_datos_de_impresion_Amadeus
1685  8FFB
1686  8FFB 3A 74 89     	ld a,(Impacto_Amadeus)
1687  8FFE A7           	and a
1688  8FFF 20 03        	jr nz,1F
1689  9001
1690  9001              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1691  9001              ; _apuntando a la correspondiente explosión.
1692  9001
1693  9001 CD E7 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1694  9004
1695  9004 DD 7D        1 ld a,ixl
1696  9006 E6 1F        	and $1f
1697  9008 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1698  900B
1699  900B 2A 28 8C     	ld hl,(Scanlines_album_SP)
1700  900E E5           	push hl
1701  900F
1702  900F 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1703  9012 22 28 8C     	ld (Scanlines_album_SP),hl
1704  9015
1705  9015 CD BC 94     	call Genera_datos_de_impresion
1706  9018
1707  9018 E1           	pop hl
1708  9019 22 28 8C     	ld (Scanlines_album_SP),hl
1709  901C
1710  901C C9           	ret
1711  901D
1712  901D              ; ---------------------------------------------------------------------------------------------------------------------
1713  901D              ;
1714  901D              ;	13/03/24
1715  901D              ;
1716  901D              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1717  901D
1718  901D              Inicia_albumes_de_lineas
1719  901D
1720  901D 21 00 80     	ld hl,Scanlines_album
1721  9020 22 0C 8C     	ld (Album_de_pintado),hl
1722  9023 22 28 8C     	ld (Scanlines_album_SP),hl
1723  9026
1724  9026 21 1A 81     	ld hl,Scanlines_album_2
1725  9029 22 0E 8C     	ld (Album_de_borrado),hl
1726  902C
1727  902C C9           	ret
1728  902D
1729  902D              Inicia_albumes_de_lineas_Amadeus
1730  902D
1731  902D 21 34 82     	ld hl,Amadeus_scanlines_album
1732  9030 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1733  9033 21 58 82     	ld hl,Amadeus_scanlines_album_2
1734  9036 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1735  9039
1736  9039 C9           	ret
1737  903A
1738  903A              Inicia_albumes_de_disparos
1739  903A
1740  903A 21 7C 82     	ld hl,Disparos_scanlines_album
1741  903D 22 14 8C     	ld (Album_de_pintado_disparos),hl
1742  9040 21 8E 82     	ld hl,Disparos_scanlines_album_2
1743  9043 22 16 8C     	ld (Album_de_borrado_disparos),hl
1744  9046
1745  9046 21 7C 82     	ld hl,Disparos_scanlines_album
1746  9049 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1747  904C
1748  904C C9           	ret
1749  904D
1750  904D              ; ---------------------------------------------------------------------------------------------------------------------
1751  904D              ;
1752  904D              ; 8/1/23
1753  904D              ;
1754  904D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1755  904D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1756  904D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1757  904D
1758  904D              ; Destruye HL y DE !!!!!
1759  904D
1760  904D              Inicia_punteros_de_cajas
1761  904D
1762  904D 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1763  9050 CD 71 90         call Extrae_address
1764  9053 22 FB 8B         ld (Puntero_store_caja),hl
1765  9056 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1766  9059 22 FF 8B     	ld (Indice_restore_caja),hl
1767  905C CD 71 90     	call Extrae_address
1768  905F 22 FD 8B     	ld (Puntero_restore_caja),hl
1769  9062 C9               ret
1770  9063
1771  9063              ; *************************************************************************************************************************************************************
1772  9063              ;
1773  9063              ; 8/1/23
1774  9063              ;
1775  9063              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1776  9063
1777  9063 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1778  9066 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1779  9069 C9           	ret
1780  906A 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1781  906D 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1782  9070 C9           	ret
1783  9071
1784  9071              ; *************************************************************************************************************************************************************
1785  9071              ;
1786  9071              ; 20/10/22
1787  9071              ;
1788  9071              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1789  9071              ;
1790  9071              ; Destruye el puntero y DE !!!!!
1791  9071
1792  9071 5E           Extrae_address ld e,(hl)
1793  9072 23           	inc hl
1794  9073 56           	ld d,(hl)
1795  9074 2B           	dec hl
1796  9075 EB           	ex de,hl
1797  9076 C9           	ret
1798  9077
1799  9077              ; *************************************************************************************************************************************************************
1800  9077              ;
1801  9077              ;	20/1/24
1802  9077              ;
1803  9077              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1804  9077              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1805  9077              ;
1806  9077              ;   Destruye HL y BC !!!!!,
1807  9077              ;
1808  9077              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1809  9077              ;					"0" ..... Izquierda.
1810  9077
1811  9077              Inicia_Puntero_objeto
1812  9077
1813  9077 3A DA 8B     	ld a,(Cuad_objeto)
1814  907A E6 01        	and 1
1815  907C F5           	push af
1816  907D CC 99 90     	call z,Inicia_puntero_objeto_izq
1817  9080 F1           	pop af
1818  9081 C8           	ret z
1819  9082 CD 86 90     	call Inicia_puntero_objeto_der
1820  9085 C9           	ret
1821  9086
1822  9086              ; Arrancamos desde la parte izquierda de la pantalla.
1823  9086              ; Iniciamos (Indice_Sprite_der).
1824  9086
1825  9086 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1826  9089 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1827  908C CD 71 90     	call Extrae_address
1828  908F 22 CD 8B     	ld (Puntero_objeto),hl
1829  9092
1830  9092 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1831  9095 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1832  9098 C9           	ret
1833  9099
1834  9099              ; Arrancamos desde la parte derecha de la pantalla.
1835  9099              ; Iniciamos (Indice_Sprite_izq).
1836  9099
1837  9099 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1838  909C 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1839  909F CD 71 90     	call Extrae_address
1840  90A2 22 CD 8B     	ld (Puntero_objeto),hl
1841  90A5
1842  90A5 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1843  90A8 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1844  90AB C9           	ret
1845  90AC
1846  90AC              ; **************************************************************************************************
1847  90AC              ;
1848  90AC              ;	06/07/24
1849  90AC              ;
1850  90AC              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1851  90AC
1852  90AC              Restore_entidad
1853  90AC
1854  90AC 2A FB 8B     	ld hl,(Puntero_store_caja)
1855  90AF 7E           	ld a,(hl)
1856  90B0 A7           	and a
1857  90B1 CC BF 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1858  90B4 28 F6        	jr z,Restore_entidad
1859  90B6
1860  90B6 11 BB 8B     	ld de,Bandeja_DRAW
1861  90B9 01 0C 00     	ld bc,12
1862  90BC ED B0        	ldir
1863  90BE C9           	ret
1864  90BF
1865  90BF              ; **************************************************************************************************
1866  90BF              ;
1867  90BF              ;	08/05/23
1868  90BF              ;
1869  90BF              ;	Incrementamos los dos punteros de entidades. (+1).
1870  90BF
1871  90BF              Incrementa_punteros_de_cajas
1872  90BF
1873  90BF 2A FD 8B     	ld hl,(Puntero_restore_caja)
1874  90C2 22 FB 8B     	ld (Puntero_store_caja),hl
1875  90C5 2A FF 8B     	ld hl,(Indice_restore_caja)
1876  90C8 23           	inc hl
1877  90C9 23           	inc hl
1878  90CA 22 FF 8B     	ld (Indice_restore_caja),hl
1879  90CD CD 71 90         call Extrae_address
1880  90D0 22 FD 8B         ld (Puntero_restore_caja),hl
1881  90D3 C9               ret
1882  90D4
1883  90D4              ; -----------------------------------------------------------
1884  90D4
1885  90D4              ; Teclado.
1886  90D4
1887  90D4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1888  90D6 DB FE        	in a,($fe)
1889  90D8 E6 01        	and $01
1890  90DA 28 02        	jr z,1f
1891  90DC 18 F6        	jr Pulsa_ENTER
1892  90DE C9           1 ret
1893  90DF
1894  90DF              ; **************************************************************************************************
1895  90DF              ;
1896  90DF              ; Temporización.
1897  90DF
1898  90DF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1899  90DF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1900  90DF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1901  90DF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1902  90DF
1903  90DF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1904  90DF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1905  90DF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1906  90DF
1907  90DF              ; A partir de $4f61 no hace falta DELAY.
1908  90DF
1909  90DF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1910  90DF
1911  90DF              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1912  90DF              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1913  90DF              ;	LD A,B
1914  90DF              ;	AND A
1915  90DF              ;	JR NZ,wait
1916  90DF              ;	RET
1917  90DF
1918  90DF              ; ---------------------------------------------------------------------------------------------------------------
1919  90DF              ;
1920  90DF              ;	13/07/24
1921  90DF              ;
1922  90DF
1923  90DF              Inicia_Shield
1924  90DF
1925  90DF 21 4E 8C     	ld hl,Datos_Shield
1926  90E2 22 52 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1927  90E5
1928  90E5 7E           	ld a,(hl)
1929  90E6 32 55 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1930  90E9
1931  90E9 3E 01        	ld a,1
1932  90EB 32 56 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1933  90EE
1934  90EE C9           	ret
1935  90EF
1936  90EF              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1937  90EF              ;
1938  90EF              ;	4/6/24
1939  90EF              ;
1940  90EF              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1941  90EF              ;
1942  90EF              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1943  90EF              ;
1944  90EF
1945  90EF              Actualiza_pantalla
1946  90EF
1947  90EF 3E 02        	ld a,2
1948  90F1 D3 FE        	out ($fe),a
1949  90F3
1950  90F3 3A 2E 8C     	ld a,(Ctrl_3)
1951  90F6 CB 57        	bit 2,a
1952  90F8 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1953  90FA
1954  90FA              Borrando_entidades
1955  90FA
1956  90FA 2A 28 8C     	ld hl,(Scanlines_album_SP)
1957  90FD CD 71 90     	call Extrae_address
1958  9100 24           	inc h
1959  9101 25           	dec h
1960  9102 28 05        	jr z,Pintando_entidades
1961  9104 CD B1 95     	call Pinta_Sprites
1962  9107 18 F1        	jr Borrando_entidades
1963  9109
1964  9109              Pintando_entidades
1965  9109
1966  9109 2A 2A 8C     	ld hl,(India_SP)
1967  910C 2C           	inc l
1968  910D CD 71 90     	call Extrae_address
1969  9110 24           	inc h
1970  9111 25           	dec h
1971  9112 28 0E        	jr z,Ejecuta_escudo
1972  9114 1C           	inc e
1973  9115 1C           	inc e
1974  9116 ED 53 2A 8C  	ld (India_SP),de
1975  911A CD 71 90     	call Extrae_address
1976  911D CD B1 95     	call Pinta_Sprites
1977  9120 18 E7        	jr Pintando_entidades
1978  9122
1979  9122              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1980  9122
1981  9122              Ejecuta_escudo
1982  9122
1983  9122 3A 54 8C     	ld a,(Shield)
1984  9125 A7           	and a
1985  9126 20 2F        	jr nz,Aplica_Shield
1986  9128
1987  9128              Borrando_Amadeus
1988  9128
1989  9128 21 2E 8C     	ld hl,Ctrl_3
1990  912B CB 6E        	bit 5,(hl)
1991  912D 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1992  912F
1993  912F 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1994  9132 CD 71 90     	call Extrae_address
1995  9135 24           	inc h
1996  9136 25           	dec h
1997  9137 28 03        	jr z,Pintando_Amadeus
1998  9139 CD B1 95     	call Pinta_Sprites
1999  913C
2000  913C              Pintando_Amadeus
2001  913C
2002  913C 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2003  913F CD 71 90     	call Extrae_address
2004  9142 24           	inc h
2005  9143 25           	dec h
2006  9144 28 03        	jr z,1F
2007  9146 CD B1 95     	call Pinta_Sprites
2008  9149
2009  9149              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2010  9149
2011  9149 21 2E 8C     1 ld hl,Ctrl_3
2012  914C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2013  914E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2014  9150 CB AE        	res 5,(hl)
2015  9152
2016  9152 3E 01        	ld a,1												; Borde azul.
2017  9154 D3 FE        	out ($fe),a
2018  9156
2019  9156 C9           	ret
2020  9157
2021  9157              Aplica_Shield
2022  9157
2023  9157              ;	Bit 1 "1" (Shield_3) Sólo borra.
2024  9157              ;		  "0"     ""     Borra/Pinta.
2025  9157              ;	Bit 2    ""  RET.	 No borra, no pinta.
2026  9157
2027  9157 21 56 8C     	ld hl,Shield_3
2028  915A
2029  915A CB 5E        	bit 3,(hl)
2030  915C 20 DE        	jr nz,Pintando_Amadeus
2031  915E
2032  915E CB 56        	bit 2,(hl)
2033  9160 20 E7        	jr nz,1B
2034  9162
2035  9162 CB 4E        	bit 1,(hl)
2036  9164 C4 6B 91     	call nz,Borra_Amadeus_shield
2037  9167
2038  9167 28 BF        	jr z,Borrando_Amadeus
2039  9169 18 DE        	jr 1B
2040  916B
2041  916B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2042  916B
2043  916B              Borra_Amadeus_shield
2044  916B
2045  916B 3A 2E 8C     	ld a,(Ctrl_3)
2046  916E CB 6F        	bit 5,a
2047  9170 28 08        	jr z,1F
2048  9172
2049  9172 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2050  9175 CD 71 90     	call Extrae_address
2051  9178 18 06        	jr 2F
2052  917A
2053  917A 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2054  917D CD 71 90     	call Extrae_address
2055  9180
2056  9180 CD B1 95     2 call Pinta_Sprites
2057  9183
2058  9183 AF           	xor a
2059  9184 3C           	inc a											; Asegura NZ en la salida de la rutina.
2060  9185
2061  9185 C9           	ret
2062  9186
2063  9186              Pinta_Amadeus_shield
2064  9186
2065  9186 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2066  9189 CD 71 90     	call Extrae_address
2067  918C CD B1 95     	call Pinta_Sprites
2068  918F
2069  918F AF           	xor a
2070  9190 3C           	inc a											; Asegura NZ en la salida de la rutina.
2071  9191
2072  9191 C9           	ret
2073  9192
2074  9192              Borra_Pinta_Amadeus_shield
2075  9192
2076  9192 CD 6B 91     	call Borra_Amadeus_shield
2077  9195 CD 86 91     	call Pinta_Amadeus_shield
2078  9198 C9           	ret
2079  9199
2080  9199              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2081  9199              ;
2082  9199              ;	19/6/24
2083  9199              ;
2084  9199
2085  9199              Teclado
2086  9199
2087  9199              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2088  9199
2089  9199 3E F7        	ld a,$f7												; "5" para disparar.
2090  919B DB FE        	in a,($fe)
2091  919D E6 10        	and $10
2092  919F
2093  919F CC 47 A0     	call z,Genera_disparo_Amadeus
2094  91A2
2095  91A2 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2096  91A4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2097  91A6 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2098  91A8 CC 1E 9D         call z,Amadeus_a_izquierda
2099  91AB
2100  91AB 3E F7        	ld a,$f7
2101  91AD DB FE        	in a,($fe)
2102  91AF E6 01        	and $01
2103  91B1 C8           	ret z
2104  91B2
2105  91B2 3E F7        	ld a,$f7
2106  91B4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2107  91B6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2108  91B8 CC 36 9D     	call z,Amadeus_a_derecha
2109  91BB
2110  91BB C9           	ret
2111  91BC
2112  91BC              ; ------------------------------------------------------------------------------------------------------------------------
2113  91BC              ;
2114  91BC              ;	06/07/24
2115  91BC              ;
2116  91BC
2117  91BC              Genera_explosion
2118  91BC
2119  91BC 21 40 8C     	ld hl,Clock_explosion
2120  91BF 35           	dec (hl)
2121  91C0 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2122  91C2
2123  91C2              Borra_entidad_colisionada
2124  91C2
2125  91C2 CD C4 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2126  91C5 CD CD 8F     	call Cargamos_registros_con_explosion
2127  91C8 CD BC 94     	call Genera_datos_de_impresion
2128  91CB
2129  91CB AF           	xor a
2130  91CC 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2131  91CD
2132  91CD C9           	ret
2133  91CE
2134  91CE              Siguiente_frame_explosion
2135  91CE
2136  91CE 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2137  91D0
2138  91D0              ; Avanza Frame de explosión.
2139  91D0
2140  91D0 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2141  91D3 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2142  91D6
2143  91D6 79           	ld a,c
2144  91D7 95           	sub l
2145  91D8 20 0B        	jr nz,1F
2146  91DA
2147  91DA              ; Fín de la entidad !!!!!!!!!!!!!
2148  91DA
2149  91DA 21 02 8C     	ld hl,Numero_parcial_de_entidades
2150  91DD 35           	dec (hl)
2151  91DE 23           	inc hl
2152  91DF 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2153  91E0
2154  91E0 CD 3C 93     	call Limpiamos_bandeja_DRAW
2155  91E3 18 DD        	jr Borra_entidad_colisionada
2156  91E5
2157  91E5 23           1 inc hl
2158  91E6 23           	inc hl
2159  91E7 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2160  91EA 18 D6        	jr Borra_entidad_colisionada
2161  91EC
2162  91EC              ; ----- ----- ----- ----- -----
2163  91EC
2164  91EC              Genera_explosion_Amadeus
2165  91EC
2166  91EC 21 41 8C     	ld hl,Clock_explosion_Amadeus
2167  91EF 35           	dec (hl)
2168  91F0 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2169  91F2
2170  91F2              Borra_Amadeus_impactado
2171  91F2
2172  91F2 CD 36 8E     	call Change_Amadeus
2173  91F5 CD DA 8F     	call Cargamos_registros_con_explosion_Amadeus
2174  91F8 CD FB 8F     	call Genera_datos_de_impresion_Amadeus
2175  91FB
2176  91FB 21 2E 8C     	ld hl,Ctrl_3
2177  91FE CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2178  9200
2179  9200 AF           	xor a
2180  9201 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2181  9202
2182  9202 C9           	ret
2183  9203
2184  9203              Siguiente_frame_explosion_Amadeus
2185  9203
2186  9203 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2187  9205
2188  9205              ; Avanza Frame de explosión.
2189  9205
2190  9205 2A 77 89     	ld hl,(Pamm_Amadeus)
2191  9208 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2192  920B
2193  920B 79           	ld a,c
2194  920C 95           	sub l
2195  920D 20 0B        	jr nz,1F
2196  920F
2197  920F              ; Fín de Amadeus !!!!!!!!!!!!!
2198  920F              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2199  920F
2200  920F AF           	xor a
2201  9210 32 74 89     	ld (Impacto_Amadeus),a
2202  9213 21 2E 8C     	ld hl,Ctrl_3
2203  9216 CB F6        	set 6,(hl)
2204  9218
2205  9218 18 D8        	jr Borra_Amadeus_impactado
2206  921A
2207  921A 23           1 inc hl
2208  921B 23           	inc hl
2209  921C 22 77 89     	ld (Pamm_Amadeus),hl
2210  921F 18 D1        	jr Borra_Amadeus_impactado
2211  9221
2212  9221              ; ---------------------------------------------------------------
2213  9221
2214  9221              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9221              ; ******************************************************************************************************************************************************************************************
   2+ 9221              ;
   3+ 9221              ;   21/04/24
   4+ 9221              ;
   5+ 9221              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9221              ;   (XOR) bit a bit.
   7+ 9221              ;
   8+ 9221              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9221
  10+ 9221              Derivando_RND
  11+ 9221
  12+ 9221 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9224
  14+ 9224 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9226 C5               push bc
  16+ 9227              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9227 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 922A              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 922A
  20+ 922A A7           6 and a                                 ; Carry a "0".
  21+ 922B CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 922D 30 02            jr nc,1F
  23+ 922F
  24+ 922F CB C1            set 0,c
  25+ 9231
  26+ 9231 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9232 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9234 5F               ld e,a
  29+ 9235
  30+ 9235 7A               ld a,d
  31+ 9236 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9238 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 923A
  34+ 923A CB 3F            srl a
  35+ 923C
  36+ 923C AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 923D
  38+ 923D 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 923E 28 04            jr z,4F
  40+ 9240
  41+ 9240 CB FF            set 7,a
  42+ 9242 18 02            jr 5F
  43+ 9244
  44+ 9244 CB BF        4 res 7,a
  45+ 9246
  46+ 9246 CB 21        5 sla c
  47+ 9248 10 E0            djnz 6B
  48+ 924A
  49+ 924A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 924B
  51+ 924B 77               ld (hl),a
  52+ 924C 23               inc hl
  53+ 924D C1               pop bc
  54+ 924E 10 D4            djnz 3B
  55+ 9250
  56+ 9250 C9               ret
  57+ 9251
  58+ 9251
  59+ 9251
# file closed: RND_Derivando.asm
2215  9251              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9251              ;---------------------------------------------------------------------------------------------------------------
   2+ 9251              ;
   3+ 9251              ;   8/3/24
   4+ 9251              ;
   5+ 9251              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9251              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9251              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9251              ;	_ de la 1ª entidad del Nivel.
   9+ 9251              ;
  10+ 9251              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9251
  12+ 9251              ;	MODIFICA: HL,DE y A.
  13+ 9251              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9251
  15+ 9251              Inicializa_Nivel
  16+ 9251
  17+ 9251 2A 4A 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9254 CD 71 90     	call Extrae_address
  19+ 9257 7E           	ld a,(hl)
  20+ 9258 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 925B 23           	inc hl
  22+ 925C CD 69 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 925F 22 4C 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9262 CD 72 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9265
  26+ 9265 CD 83 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9268 C9           	ret
  28+ 9269
  29+ 9269              ; ----------------------
  30+ 9269
  31+ 9269 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 926C 01 04 00     	ld bc,4
  33+ 926F ED B0        	ldir
  34+ 9271 C9           	ret
  35+ 9272
  36+ 9272 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9273 CD 0D 94         call Calcula_salto_en_BC
  38+ 9276 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9279 A7               and a
  40+ 927A ED 4A            adc hl,bc
  41+ 927C CD 71 90         call Extrae_address
  42+ 927F 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9282 C9               ret
  44+ 9283
  45+ 9283 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9286 CD 0D 94     	call Calcula_salto_en_BC
  47+ 9289 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 928C A7               and a
  49+ 928D ED 4A            adc hl,bc
  50+ 928F CD 71 90         call Extrae_address
  51+ 9292 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9295 C9           	ret
  53+ 9296
  54+ 9296              ;---------------------------------------------------------------------------------------------------------------
  55+ 9296              ;
  56+ 9296              ;   5/1/24
  57+ 9296              ;
  58+ 9296              ;	Destruye A,BC,HL,DE
  59+ 9296
  60+ 9296              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9296              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9296
  63+ 9296              Inicia_Entidades
  64+ 9296
  65+ 9296              ; Preparamos los punteros de las cajas de entidades:
  66+ 9296
  67+ 9296 CD 4D 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9299              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9299 CD 55 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 929C
  71+ 929C 2A 4C 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 929F
  73+ 929F 22 4C 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92A2
  75+ 92A2 CD BB 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92A5
  77+ 92A5 2A 4C 8C     	ld hl,(Datos_de_nivel)
  78+ 92A8
  79+ 92A8              ; En este punto:
  80+ 92A8              ;
  81+ 92A8              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92A8              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92A8
  84+ 92A8 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92A9
  86+ 92A9 7E           	ld a,(hl)
  87+ 92AA CD 27 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92AD
  89+ 92AD CD 1F 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92B0
  91+ 92B0              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92B0
  93+ 92B0 CD DD 93     	call Busca_mov_masticados_segun_tipo
  94+ 92B3
  95+ 92B3 A7           	and a
  96+ 92B4 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92B6
  98+ 92B6              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92B6
 100+ 92B6              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92B6              ;	_ de este tipo de entidad.
 102+ 92B6
 103+ 92B6 CD B5 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92B9 CD C2 9E     	call Transfiere_datos_de_contadores
 105+ 92BC
 106+ 92BC 18 06        	jr 4F
 107+ 92BE
 108+ 92BE CD 60 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C1
 110+ 92C1              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C1              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C1              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C1              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C1              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C1
 116+ 92C1 CD 9B 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92C4              ;																; _ Mov_masticados ya generados.
 118+ 92C4
 119+ 92C4 CD B4 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92C7
 121+ 92C7 DD E5        	push ix
 122+ 92C9 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92CA
 124+ 92CA D5           	push de
 125+ 92CB CD 90 94     	call Genera_coordenadas
 126+ 92CE
 127+ 92CE ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92D2 CD C4 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92D5 D1           	pop de
 130+ 92D6
 131+ 92D6 CD BC 94     	call Genera_datos_de_impresion
 132+ 92D9              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92D9              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92D9              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92D9              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92D9
 137+ 92D9 CD 5F 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92DC
 139+ 92DC              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92DC
 141+ 92DC ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92E0 CD 4C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92E3
 144+ 92E3 CD 3C 93     	call Limpiamos_bandeja_DRAW
 145+ 92E6 CD BF 90     	call Incrementa_punteros_de_cajas
 146+ 92E9
 147+ 92E9              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92E9              ; _ entidad del Nivel.
 149+ 92E9
 150+ 92E9 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92EC E6 F0        	and $f0
 152+ 92EE 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F1
 154+ 92F1              ; Siguiente entidad del Nivel.
 155+ 92F1
 156+ 92F1 2A 4C 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92F4 23           	inc hl 														; _ entidad del Nivel.
 158+ 92F5
 159+ 92F5 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92F6
 161+ 92F6 10 A7        	djnz 2B
 162+ 92F8
 163+ 92F8 C9           	ret
 164+ 92F9
 165+ 92F9              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92F9              ;
 167+ 92F9              ;	27/5/24
 168+ 92F9              ;
 169+ 92F9              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92F9              ;
 171+ 92F9
 172+ 92F9              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92F9              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92F9
 175+ 92F9 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92FC CD 1F 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92FF
 178+ 92FF
 179+ 92FF              Construye_movimientos_masticados_Amadeus
 180+ 92FF
 181+ 92FF 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9302 CD A7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9305              ;															; _ el (Contador_de_mov_masticados).
 184+ 9305 CD 77 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9308              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9308
 187+ 9308              ; Generamos movimientos masticados de Amadeus.
 188+ 9308
 189+ 9308 06 79        	ld b,121												; $0079, 121d.
 190+ 930A
 191+ 930A C5           1 push bc
 192+ 930B CD D4 96     	call Draw
 193+ 930E CD 8C 8F     	call Guarda_movimiento_masticado
 194+ 9311
 195+ 9311 CD 48 9A     	call Mov_right
 196+ 9314 CD 48 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9317
 198+ 9317 C1           	pop bc
 199+ 9318 10 F0        	djnz 1B
 200+ 931A
 201+ 931A              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 931A
 203+ 931A              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 931A              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 931A
 206+ 931A 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 931D 01 08 00     	ld bc,8
 208+ 9320 A7           	and a
 209+ 9321 ED 42        	sbc hl,bc
 210+ 9323 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9326
 212+ 9326 C9           	ret
 213+ 9327
 214+ 9327              ; ---------------------------------------------------------------------
 215+ 9327              ;
 216+ 9327              ;	10/02/24
 217+ 9327              ;
 218+ 9327              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9327              ;
 220+ 9327              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9327
 222+ 9327              Definicion_segun_tipo
 223+ 9327
 224+ 9327 CD 0D 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 932A 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 932D CD 15 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9330 C9           	ret
 228+ 9331
 229+ 9331              ; ---------------------------------------------------------------------
 230+ 9331              ;
 231+ 9331              ;	6/7/24
 232+ 9331
 233+ 9331
 234+ 9331              Store_Restore_cajas
 235+ 9331
 236+ 9331 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 9335 CD 4C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9338 CD BF 90     	call Incrementa_punteros_de_cajas
 239+ 933B C9           	ret
 240+ 933C
 241+ 933C              ; ---------------------------------------------------------------------
 242+ 933C              ;
 243+ 933C              ;	23/6/24
 244+ 933C              ;
 245+ 933C              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 933C              ;
 247+ 933C              ;	MODIFY: HL
 248+ 933C
 249+ 933C              Limpiamos_bandeja_DRAW
 250+ 933C
 251+ 933C ED 73 08 8C  	ld (Stack),sp
 252+ 9340 31 E0 8B     	ld sp,Vel_left
 253+ 9343
 254+ 9343 AF           	xor a
 255+ 9344 67           	ld h,a
 256+ 9345 6F           	ld l,a
 257+ 9346
 258+ 9346 E5           	push hl
 259+ 9347 E5           	push hl
 260+ 9348 E5           	push hl
 261+ 9349 E5           	push hl
 262+ 934A E5           	push hl
 263+ 934B E5           	push hl
 264+ 934C E5           	push hl
 265+ 934D E5           	push hl
 266+ 934E E5           	push hl
 267+ 934F E5           	push hl
 268+ 9350 E5           	push hl
 269+ 9351 E5           	push hl
 270+ 9352 E5           	push hl
 271+ 9353 E5           	push hl
 272+ 9354 E5           	push hl
 273+ 9355 E5           	push hl
 274+ 9356 E5           	push hl
 275+ 9357 E5           	push hl
 276+ 9358
 277+ 9358 33           	inc sp
 278+ 9359
 279+ 9359 E5           	push hl
 280+ 935A ED 7B 08 8C  	ld sp,(Stack)
 281+ 935E
 282+ 935E C9           	ret
 283+ 935F
 284+ 935F              ; ---------------------------------------------------------------------
 285+ 935F              ;
 286+ 935F              ;	24/03/24
 287+ 935F
 288+ 935F 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9362 2B           	dec hl
 290+ 9363 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9366 C9           	ret
 292+ 9367
 293+ 9367              ; ---------------------------------------------------------------------
 294+ 9367              ;
 295+ 9367              ;	8/5/24
 296+ 9367
 297+ 9367              Reinicia_entidad_maliciosa
 298+ 9367
 299+ 9367              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9367
 301+ 9367 CD B5 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 936A CD C2 9E     	call Transfiere_datos_de_contadores
 303+ 936D
 304+ 936D              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 936D
 306+ 936D 3A BB 8B     	ld a,(Tipo)
 307+ 9370 CD 27 93     	call Definicion_segun_tipo
 308+ 9373
 309+ 9373 E5           	push hl
 310+ 9374 DD E1        	pop ix
 311+ 9376
 312+ 9376 DD 6E 0B     	ld l,(ix+11)
 313+ 9379 DD 66 0C     	ld h,(ix+12)
 314+ 937C
 315+ 937C 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 937F
 317+ 937F CD B4 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9382
 319+ 9382              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9382              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9382              ; Ejemplos.
 322+ 9382
 323+ 9382              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9382              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9382              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9382              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9382              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9382
 329+ 9382 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9385 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9387
 332+ 9387 7E           	ld a,(hl)
 333+ 9388 CB 2F        	sra a
 334+ 938A CB 2F        	sra a
 335+ 938C
 336+ 938C 32 C6 8B     	ld (Velocidad),a
 337+ 938F
 338+ 938F 3E 40        	ld a,$40
 339+ 9391 BE           	cp (hl)
 340+ 9392 C0           	ret nz
 341+ 9393
 342+ 9393              ; Límitador.
 343+ 9393
 344+ 9393              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9393
 346+ 9393 CB 2E        	sra (hl)
 347+ 9395 21 C6 8B     	ld hl,Velocidad
 348+ 9398 CB 2E        	sra (hl)
 349+ 939A
 350+ 939A C9           	ret
 351+ 939B
 352+ 939B              ; ---------------------------------------------------------------------
 353+ 939B              ;
 354+ 939B              ;	22/01/24
 355+ 939B
 356+ 939B 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 939E CB 46        	bit 0,(hl)
 358+ 93A0 20 0D        	jr nz,1F
 359+ 93A2 CB 4E        	bit 1,(hl)
 360+ 93A4 20 0C        	jr nz,2F
 361+ 93A6 CB 56        	bit 2,(hl)
 362+ 93A8 20 0B        	jr nz,3F
 363+ 93AA CB 5E        	bit 3,(hl)
 364+ 93AC 20 0A        	jr nz,4F
 365+ 93AE C9           	ret
 366+ 93AF
 367+ 93AF CB E6        1 set 4,(hl)
 368+ 93B1 C9           	ret
 369+ 93B2 CB EE        2 set 5,(hl)
 370+ 93B4 C9           	ret
 371+ 93B5 CB F6        3 set 6,(hl)
 372+ 93B7 C9           	ret
 373+ 93B8 CB FE        4 set 7,(hl)
 374+ 93BA C9           	ret
 375+ 93BB
 376+ 93BB              ; ---------------------------------------------------------------------
 377+ 93BB              ;
 378+ 93BB              ;	23/01/24
 379+ 93BB              ;
 380+ 93BB              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93BB              ;
 382+ 93BB              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93BB              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93BB              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93BB              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93BB
 387+ 93BB              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93BB
 389+ 93BB 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93BC 3D           	dec a
 391+ 93BD 20 06        	jr nz,1F
 392+ 93BF
 393+ 93BF              ; --- Tipo_1
 394+ 93BF
 395+ 93BF 21 2F 8C     	ld hl,Ctrl_4
 396+ 93C2 CB C6        	set 0,(hl)
 397+ 93C4 C9           	ret
 398+ 93C5
 399+ 93C5 3D           1 dec a
 400+ 93C6 20 06        	jr nz,2F
 401+ 93C8
 402+ 93C8              ; --- Tipo_2
 403+ 93C8
 404+ 93C8 21 2F 8C     	ld hl,Ctrl_4
 405+ 93CB CB CE        	set 1,(hl)
 406+ 93CD C9           	ret
 407+ 93CE
 408+ 93CE 3D           2 dec a
 409+ 93CF 20 06        	jr nz,3F
 410+ 93D1
 411+ 93D1              ; --- Tipo_3
 412+ 93D1
 413+ 93D1 21 2F 8C     	ld hl,Ctrl_4
 414+ 93D4 CB D6        	set 2,(hl)
 415+ 93D6 C9           	ret
 416+ 93D7
 417+ 93D7              ; --- Tipo_3
 418+ 93D7
 419+ 93D7 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93DA CB D6        	set 2,(hl)
 421+ 93DC C9           	ret
 422+ 93DD
 423+ 93DD              ; ---------------------------------------------------------------------
 424+ 93DD              ;
 425+ 93DD              ;	22/01/24
 426+ 93DD
 427+ 93DD 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93E0 CB 46        	bit 0,(hl)
 429+ 93E2 20 0E        	jr nz,1F
 430+ 93E4
 431+ 93E4 CB 4E        	bit 1,(hl)
 432+ 93E6 20 10        	jr nz,2F
 433+ 93E8
 434+ 93E8 CB 56        	bit 2,(hl)
 435+ 93EA 20 12        	jr nz,3F
 436+ 93EC
 437+ 93EC CB 5E        	bit 3,(hl)
 438+ 93EE 20 14        	jr nz,4F
 439+ 93F0 18 19        	jr 6F
 440+ 93F2
 441+ 93F2              ; Entidad_de_Tipo_1.
 442+ 93F2
 443+ 93F2 CB 66        1 bit 4,(hl)
 444+ 93F4 28 15        	jr z,6F
 445+ 93F6 18 10        	jr 5F
 446+ 93F8
 447+ 93F8              ; Entidad_de_Tipo_2.
 448+ 93F8
 449+ 93F8 CB 6E        2 bit 5,(hl)
 450+ 93FA 28 0F        	jr z,6F
 451+ 93FC 18 0A        	jr 5F
 452+ 93FE
 453+ 93FE              ; Entidad_de_Tipo_3.
 454+ 93FE
 455+ 93FE CB 76        3 bit 6,(hl)
 456+ 9400 28 09        	jr z,6F
 457+ 9402 18 04        	jr 5F
 458+ 9404
 459+ 9404              ; Entidad_de_Tipo_4.
 460+ 9404
 461+ 9404 CB 7E        4 bit 7,(hl)
 462+ 9406 28 03        	jr z,6F
 463+ 9408
 464+ 9408              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9408
 466+ 9408 AF           5 xor a
 467+ 9409 3C           	inc a
 468+ 940A C9           	ret
 469+ 940B
 470+ 940B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 940B
 472+ 940B AF           6 xor a
 473+ 940C C9           	ret
 474+ 940D
 475+ 940D              ;	------------------------------------------------------------------------------------
 476+ 940D              ;
 477+ 940D              ;	12/01/24
 478+ 940D              ;
 479+ 940D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 940D              ;
 481+ 940D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 940D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 940D
 484+ 940D CB 27        Calcula_salto_en_BC sla a
 485+ 940F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9411 4F           	ld c,a
 487+ 9412 06 00        	ld b,0
 488+ 9414 C9           	ret
 489+ 9415
 490+ 9415              ; ------------------------------------------------------------------
 491+ 9415              ;
 492+ 9415              ;	19/1/24
 493+ 9415              ;
 494+ 9415              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9415              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9415
 497+ 9415 A7           Situa_en_datos_de_definicion and a
 498+ 9416 ED 4A        	adc hl,bc
 499+ 9418 CD 71 90     	call Extrae_address
 500+ 941B 22 06 8C         ld (Datos_de_entidad),hl
 501+ 941E C9           	ret
 502+ 941F
 503+ 941F              ; ------------------------------------------------------------------
 504+ 941F
 505+ 941F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 941F              ; 	inc de
 507+ 941F              ; 	inc de
 508+ 941F              ; 	ex de,hl
 509+ 941F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 941F              ; 	ret
 511+ 941F
 512+ 941F              ; ----------------------------------------------------------------------------------------------------------
 513+ 941F              ;
 514+ 941F              ;	24/6/24
 515+ 941F              ;
 516+ 941F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 941F              ;	_ de entidad.
 518+ 941F              ;
 519+ 941F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 941F              ;
 521+ 941F              ;
 522+ 941F              ;	MODIFICA: HL,DE y BC
 523+ 941F
 524+ 941F
 525+ 941F              Definicion_de_entidad_a_bandeja_DRAW
 526+ 941F
 527+ 941F 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9422 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9423 12           	ld (de),a
 530+ 9424 23           	inc hl
 531+ 9425              ;
 532+ 9425 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9428 01 02 00     	ld bc,2
 534+ 942B ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 942D              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 942D 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9430 7E           	ld a,(hl)
 538+ 9431 12           	ld (de),a
 539+ 9432 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9433
 541+ 9433 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9436 01 04 00     	ld bc,4
 543+ 9439 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 943B
 545+ 943B 11 D8 8B     	ld de,Posicion_inicio
 546+ 943E 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9441 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9443
 549+ 9443 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9446 01 02 00     	ld bc,2
 551+ 9449 ED B0        	ldir
 552+ 944B
 553+ 944B C9           	ret
 554+ 944C
 555+ 944C              ; ----------------------------------------------------------------------------------------------------------
 556+ 944C              ;
 557+ 944C              ;	1/8/24
 558+ 944C              ;
 559+ 944C
 560+ 944C              Parametros_de_bandeja_DRAW_a_caja
 561+ 944C
 562+ 944C 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 944F 01 0C 00     	ld bc,12
 564+ 9452 ED B0        	ldir
 565+ 9454 C9           	ret
 566+ 9455
 567+ 9455              ;---------------------------------------------------------------------------------------------------------------
 568+ 9455              ;
 569+ 9455              ;	5/1/24
 570+ 9455              ;
 571+ 9455              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9455              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9455              ;
 574+ 9455              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9455              ;
 576+ 9455              ;	(Numero_parcial_de_entidades)="7".
 577+ 9455              ;
 578+ 9455              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9455              ;
 580+ 9455              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9455              ;
 582+ 9455              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9455              ;	MODIFICA: A y B.
 584+ 9455              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9455
 586+ 9455              Inicializa_Numero_parcial_de_entidades
 587+ 9455
 588+ 9455              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9455
 590+ 9455 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9458 A7           	and a
 592+ 9459
 593+ 9459              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9459              ;	jr z,$
 595+ 9459              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9459
 597+ 9459 20 03        	jr nz,3F
 598+ 945B
 599+ 945B              ; ---------- ---------- ----------
 600+ 945B
 601+ 945B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 945B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 945B
 604+ 945B CD 51 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 945E
 606+ 945E              ; ---------- ---------- ----------
 607+ 945E
 608+ 945E 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9461 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9463 38 08        	jr c,1F
 611+ 9465
 612+ 9465              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9465              ; Actualizamos variables.
 614+ 9465
 615+ 9465 3E 07        	ld a,7
 616+ 9467 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 946A 47           	ld b,a
 618+ 946B 18 04        	jr 2F
 619+ 946D
 620+ 946D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 946D              ; (Numero_de_entidades)="0".
 622+ 946D
 623+ 946D 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9470 47           	ld b,a
 625+ 9471 C9           2 ret
 626+ 9472
# file closed: Rutinas_de_inicio_y_niveles.asm
2216  9472              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9472              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9472              ;
   3+ 9472              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9472              ;
   5+ 9472              ; *****************************************************************************************************************************************************************************************
   6+ 9472              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9472
   8+ 9472 7C           calcula_tercio ld a,h
   9+ 9473 E6 18        	and $18
  10+ 9475 CB 2F        	sra a
  11+ 9477 CB 2F        	sra a
  12+ 9479 CB 2F        	sra a
  13+ 947B C9           	ret
  14+ 947C
# file closed: calcula_tercio.asm
2217  947C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 947C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 947C              ;
   3+ 947C              ;
   4+ 947C              ;	CLS.
   5+ 947C              ;
   6+ 947C              ;	Limpia la pantalla y define sus atributos.
   7+ 947C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 947C              ;
   9+ 947C              ;	COLORES: 0 ..... NEGRO
  10+ 947C              ;    		 1 ..... AZUL
  11+ 947C              ; 			 2 ..... ROJO
  12+ 947C              ;			 3 ..... MAGENTA
  13+ 947C              ; 			 4 ..... VERDE
  14+ 947C              ; 			 5 ..... CIAN
  15+ 947C              ;			 6 ..... AMARILLO
  16+ 947C              ; 			 7 ..... BLANCO
  17+ 947C              ;
  18+ 947C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 947C              ;
  20+ 947C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 947C
  22+ 947C
  23+ 947C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 947F 11 01 40     	LD DE,$4001
  25+ 9482 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9485 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9487 ED B0        	LDIR
  28+ 9489 01 FF 02     	LD BC,767
  29+ 948C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 948D ED B0        	LDIR
  31+ 948F C9           	ret
  32+ 9490
# file closed: Cls.asm
2218  9490              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9490              ; ------------------------------------------------------------------------
   2+ 9490              ;
   3+ 9490              ;	30/1/24
   4+ 9490              ;
   5+ 9490              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9490              ;	Fila superior "0", Columna izquierda "0".
   7+ 9490              ;
   8+ 9490              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9490              ;
  10+ 9490              ;	Modifica: A,BC y DE.
  11+ 9490
  12+ 9490 7D           Genera_coordenadas ld a,l
  13+ 9491 E6 1F        	and $1f
  14+ 9493 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9496
  16+ 9496 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9497 FE 40        	cp $40
  18+ 9499 38 1C        	jr c,4F
  19+ 949B
  20+ 949B CD 72 94     	call calcula_tercio
  21+ 949E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 949F
  23+ 949F 1E 00        	ld e,0
  24+ 94A1 7D           	ld a,l
  25+ 94A2 E6 E0        	and $e0
  26+ 94A4 28 01        	jr z,1F
  27+ 94A6 04           	inc b
  28+ 94A7
  29+ 94A7 04           1 inc b
  30+ 94A8 05           	dec b
  31+ 94A9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94AB              ;														; _ , salimos.
  33+ 94AB 1C           3 inc e
  34+ 94AC D6 20        	sub 32
  35+ 94AE 20 FB        	jr nz,3B
  36+ 94B0 10 F5        	djnz 1B
  37+ 94B2
  38+ 94B2 7B           2 ld a,e
  39+ 94B3 32 BD 8B     	ld (Coordenada_y),a
  40+ 94B6 C9           	ret
  41+ 94B7
  42+ 94B7 AF           4 xor a
  43+ 94B8 32 BD 8B     	ld (Coordenada_y),a
  44+ 94BB C9           	ret
  45+ 94BC
# file closed: Genera_coordenadas.asm
2219  94BC              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94BC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94BC              ;
   3+ 94BC              ;	11/03/24
   4+ 94BC              ;
   5+ 94BC              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94BC              ;   DE contiene Puntero_objeto.
   7+ 94BC              ;   IX contiene el Puntero de impresión.
   8+ 94BC
   9+ 94BC              Genera_datos_de_impresion
  10+ 94BC
  11+ 94BC ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94C0
  13+ 94C0 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94C3 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94C5
  16+ 94C5 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94C8
  18+ 94C8 3E 05            ld a,5
  19+ 94CA 85               add l
  20+ 94CB 6F               ld l,a
  21+ 94CC
  22+ 94CC F9               ld sp,hl
  23+ 94CD 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94D0
  25+ 94D0 21 00 00         ld hl,0
  26+ 94D3
  27+ 94D3 DD E5            push ix
  28+ 94D5 3B               dec sp
  29+ 94D6 ED 7A            adc hl,sp
  30+ 94D8 D5               push de
  31+ 94D9
  32+ 94D9              ; Recuperamos SP.
  33+ 94D9
  34+ 94D9 ED 7B 08 8C      ld sp,(Stack)
  35+ 94DD
  36+ 94DD E5               push hl
  37+ 94DE F1               pop af
  38+ 94DF 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94E0
  40+ 94E0              ; Tenemos el encabezado listo.
  41+ 94E0              ; Preparamos registros para generar los scanlines.
  42+ 94E0
  43+ 94E0 DD E5            push ix
  44+ 94E2 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94E3
  46+ 94E3 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94E7
  48+ 94E7              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94E7              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94E7
  51+ 94E7 7C               ld a,h
  52+ 94E8 FE 50            cp $50
  53+ 94EA 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94EC
  55+ 94EC 20 05            jr nz,2F
  56+ 94EE
  57+ 94EE 7D               ld a,l
  58+ 94EF FE E0            cp $e0
  59+ 94F1 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94F3
  61+ 94F3 7D           2 ld a,l
  62+ 94F4 FE C0            cp $c0
  63+ 94F6 D2 88 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94F9
  65+ 94F9              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94F9
  67+ 94F9 CD 86 99         call NextScan
  68+ 94FC EB               ex de,hl
  69+ 94FD
  70+ 94FD 73               ld (hl),e
  71+ 94FE 23               inc hl
  72+ 94FF 72               ld (hl),d
  73+ 9500 23               inc hl
  74+ 9501
  75+ 9501 EB               ex de,hl
  76+ 9502
  77+ 9502 CD 86 99         call NextScan
  78+ 9505 EB               ex de,hl
  79+ 9506
  80+ 9506 73               ld (hl),e
  81+ 9507 23               inc hl
  82+ 9508 72               ld (hl),d
  83+ 9509 23               inc hl
  84+ 950A
  85+ 950A EB               ex de,hl
  86+ 950B
  87+ 950B CD 86 99         call NextScan
  88+ 950E EB               ex de,hl
  89+ 950F
  90+ 950F 73               ld (hl),e
  91+ 9510 23               inc hl
  92+ 9511 72               ld (hl),d
  93+ 9512 23               inc hl
  94+ 9513
  95+ 9513 EB               ex de,hl
  96+ 9514
  97+ 9514 CD 86 99         call NextScan
  98+ 9517 EB               ex de,hl
  99+ 9518
 100+ 9518 73               ld (hl),e
 101+ 9519 23               inc hl
 102+ 951A 72               ld (hl),d
 103+ 951B 23               inc hl
 104+ 951C
 105+ 951C EB               ex de,hl
 106+ 951D
 107+ 951D CD 86 99         call NextScan
 108+ 9520 EB               ex de,hl
 109+ 9521
 110+ 9521 73               ld (hl),e
 111+ 9522 23               inc hl
 112+ 9523 72               ld (hl),d
 113+ 9524 23               inc hl
 114+ 9525
 115+ 9525 EB               ex de,hl
 116+ 9526
 117+ 9526 CD 86 99         call NextScan
 118+ 9529 EB               ex de,hl
 119+ 952A
 120+ 952A 73               ld (hl),e
 121+ 952B 23               inc hl
 122+ 952C 72               ld (hl),d
 123+ 952D 23               inc hl
 124+ 952E
 125+ 952E EB               ex de,hl
 126+ 952F
 127+ 952F CD 86 99         call NextScan
 128+ 9532 EB               ex de,hl
 129+ 9533
 130+ 9533 73               ld (hl),e
 131+ 9534 23               inc hl
 132+ 9535 72               ld (hl),d
 133+ 9536 23               inc hl
 134+ 9537
 135+ 9537 EB               ex de,hl
 136+ 9538
 137+ 9538 CD 86 99         call NextScan
 138+ 953B EB               ex de,hl
 139+ 953C
 140+ 953C 73               ld (hl),e
 141+ 953D 23               inc hl
 142+ 953E 72               ld (hl),d
 143+ 953F 23               inc hl
 144+ 9540
 145+ 9540 EB               ex de,hl
 146+ 9541
 147+ 9541 CD 86 99         call NextScan
 148+ 9544 EB               ex de,hl
 149+ 9545
 150+ 9545 73               ld (hl),e
 151+ 9546 23               inc hl
 152+ 9547 72               ld (hl),d
 153+ 9548 23               inc hl
 154+ 9549
 155+ 9549 EB               ex de,hl
 156+ 954A
 157+ 954A CD 86 99         call NextScan
 158+ 954D EB               ex de,hl
 159+ 954E
 160+ 954E 73               ld (hl),e
 161+ 954F 23               inc hl
 162+ 9550 72               ld (hl),d
 163+ 9551 23               inc hl
 164+ 9552
 165+ 9552 EB               ex de,hl
 166+ 9553
 167+ 9553 CD 86 99         call NextScan
 168+ 9556 EB               ex de,hl
 169+ 9557
 170+ 9557 73               ld (hl),e
 171+ 9558 23               inc hl
 172+ 9559 72               ld (hl),d
 173+ 955A 23               inc hl
 174+ 955B
 175+ 955B EB               ex de,hl
 176+ 955C
 177+ 955C CD 86 99         call NextScan
 178+ 955F EB               ex de,hl
 179+ 9560
 180+ 9560 73               ld (hl),e
 181+ 9561 23               inc hl
 182+ 9562 72               ld (hl),d
 183+ 9563 23               inc hl
 184+ 9564
 185+ 9564 EB               ex de,hl
 186+ 9565
 187+ 9565 CD 86 99         call NextScan
 188+ 9568 EB               ex de,hl
 189+ 9569
 190+ 9569 73               ld (hl),e
 191+ 956A 23               inc hl
 192+ 956B 72               ld (hl),d
 193+ 956C 23               inc hl
 194+ 956D
 195+ 956D EB               ex de,hl
 196+ 956E
 197+ 956E CD 86 99         call NextScan
 198+ 9571 EB               ex de,hl
 199+ 9572
 200+ 9572 73               ld (hl),e
 201+ 9573 23               inc hl
 202+ 9574 72               ld (hl),d
 203+ 9575 23               inc hl
 204+ 9576
 205+ 9576 EB               ex de,hl
 206+ 9577
 207+ 9577 CD 86 99         call NextScan
 208+ 957A EB               ex de,hl
 209+ 957B
 210+ 957B 73               ld (hl),e
 211+ 957C 23               inc hl
 212+ 957D 72               ld (hl),d
 213+ 957E 23               inc hl
 214+ 957F
 215+ 957F              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 957F
 217+ 957F 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 9582
 219+ 9582              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9582
 221+ 9582 08               ex af,af
 222+ 9583
 223+ 9583 F5               push af
 224+ 9584 E1               pop hl
 225+ 9585
 226+ 9585 36 10            ld (hl),16
 227+ 9587
 228+ 9587 C9               ret
 229+ 9588
 230+ 9588              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9588
 232+ 9588              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9588
 234+ 9588 3E 57            ld a,$57
 235+ 958A 94               sub h
 236+ 958B 47               ld b,a
 237+ 958C
 238+ 958C 3E DF            ld a,$df
 239+ 958E BD               cp l
 240+ 958F 38 04            jr c,1F
 241+ 9591
 242+ 9591 3E 08            ld a,8
 243+ 9593 80               add b
 244+ 9594 47               ld b,a
 245+ 9595
 246+ 9595              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9595              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9595
 249+ 9595 48           1 ld c,b
 250+ 9596 0C               inc c
 251+ 9597
 252+ 9597 04               inc b
 253+ 9598 05               dec b
 254+ 9599 20 02            jr nz,3F
 255+ 959B
 256+ 959B 18 0B            jr 6F
 257+ 959D
 258+ 959D CD 86 99     3 call NextScan
 259+ 95A0 EB               ex de,hl
 260+ 95A1
 261+ 95A1 73               ld (hl),e
 262+ 95A2 23               inc hl
 263+ 95A3 72               ld (hl),d
 264+ 95A4 23               inc hl
 265+ 95A5
 266+ 95A5 EB               ex de,hl
 267+ 95A6 10 F5            djnz 3B
 268+ 95A8
 269+ 95A8 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 95AC
 271+ 95AC 08           5 ex af,af
 272+ 95AD F5               push af
 273+ 95AE E1               pop hl
 274+ 95AF
 275+ 95AF 71               ld (hl),c
 276+ 95B0
 277+ 95B0 C9               ret
 278+ 95B1
# file closed: Genera_datos_de_impresion.asm
2220  95B1              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95B1              ; -----------------------------------------------------------------------------
   2+ 95B1              ;
   3+ 95B1              ;   11/03/24
   4+ 95B1              ;
   5+ 95B1
   6+ 95B1              Pinta_Sprites
   7+ 95B1
   8+ 95B1              ;    ld hl,(Scanlines_album_SP)
   9+ 95B1              ;    call Extrae_address
  10+ 95B1
  11+ 95B1              ;    inc h
  12+ 95B1              ;    dec h
  13+ 95B1              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95B1
  15+ 95B1 ED 73 08 8C      ld (Stack),sp
  16+ 95B5
  17+ 95B5 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95B6              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95B6 2C               inc l
  20+ 95B7 2C               inc l
  21+ 95B8
  22+ 95B8 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95B9
  24+ 95B9 2C               inc l
  25+ 95BA F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95BB
  27+ 95BB              ;   Seleccionamos rutina de impresión:
  28+ 95BB
  29+ 95BB 3E 10            ld a,16
  30+ 95BD B8               cp b
  31+ 95BE C2 BA 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95C1
  33+ 95C1              ;   Rutinas:
  34+ 95C1
  35+ 95C1              Pinta_rapido    ;   1520 t/states.
  36+ 95C1
  37+ 95C1 E1               pop hl
  38+ 95C2
  39+ 95C2 1A               ld a,(de)
  40+ 95C3 AE               xor (hl)
  41+ 95C4 77               ld (hl),a
  42+ 95C5 2C               inc l
  43+ 95C6 1C               inc e
  44+ 95C7 1A               ld a,(de)
  45+ 95C8 AE               xor (hl)
  46+ 95C9 77               ld (hl),a
  47+ 95CA 2C               inc l
  48+ 95CB 1C               inc e
  49+ 95CC 1A               ld a,(de)
  50+ 95CD AE               xor (hl)
  51+ 95CE 77               ld (hl),a
  52+ 95CF 13               inc de
  53+ 95D0
  54+ 95D0 E1               pop hl
  55+ 95D1
  56+ 95D1 1A               ld a,(de)
  57+ 95D2 AE               xor (hl)
  58+ 95D3 77               ld (hl),a
  59+ 95D4 2C               inc l
  60+ 95D5 1C               inc e
  61+ 95D6 1A               ld a,(de)
  62+ 95D7 AE               xor (hl)
  63+ 95D8 77               ld (hl),a
  64+ 95D9 2C               inc l
  65+ 95DA 1C               inc e
  66+ 95DB 1A               ld a,(de)
  67+ 95DC AE               xor (hl)
  68+ 95DD 77               ld (hl),a
  69+ 95DE 13               inc de
  70+ 95DF
  71+ 95DF E1               pop hl
  72+ 95E0
  73+ 95E0 1A               ld a,(de)
  74+ 95E1 AE               xor (hl)
  75+ 95E2 77               ld (hl),a
  76+ 95E3 2C               inc l
  77+ 95E4 1C               inc e
  78+ 95E5 1A               ld a,(de)
  79+ 95E6 AE               xor (hl)
  80+ 95E7 77               ld (hl),a
  81+ 95E8 2C               inc l
  82+ 95E9 1C               inc e
  83+ 95EA 1A               ld a,(de)
  84+ 95EB AE               xor (hl)
  85+ 95EC 77               ld (hl),a
  86+ 95ED 13               inc de
  87+ 95EE
  88+ 95EE E1               pop hl
  89+ 95EF
  90+ 95EF 1A               ld a,(de)
  91+ 95F0 AE               xor (hl)
  92+ 95F1 77               ld (hl),a
  93+ 95F2 2C               inc l
  94+ 95F3 1C               inc e
  95+ 95F4 1A               ld a,(de)
  96+ 95F5 AE               xor (hl)
  97+ 95F6 77               ld (hl),a
  98+ 95F7 2C               inc l
  99+ 95F8 1C               inc e
 100+ 95F9 1A               ld a,(de)
 101+ 95FA AE               xor (hl)
 102+ 95FB 77               ld (hl),a
 103+ 95FC 13               inc de
 104+ 95FD
 105+ 95FD E1               pop hl
 106+ 95FE
 107+ 95FE 1A               ld a,(de)
 108+ 95FF AE               xor (hl)
 109+ 9600 77               ld (hl),a
 110+ 9601 2C               inc l
 111+ 9602 1C               inc e
 112+ 9603 1A               ld a,(de)
 113+ 9604 AE               xor (hl)
 114+ 9605 77               ld (hl),a
 115+ 9606 2C               inc l
 116+ 9607 1C               inc e
 117+ 9608 1A               ld a,(de)
 118+ 9609 AE               xor (hl)
 119+ 960A 77               ld (hl),a
 120+ 960B 13               inc de
 121+ 960C
 122+ 960C E1               pop hl
 123+ 960D
 124+ 960D 1A               ld a,(de)
 125+ 960E AE               xor (hl)
 126+ 960F 77               ld (hl),a
 127+ 9610 2C               inc l
 128+ 9611 1C               inc e
 129+ 9612 1A               ld a,(de)
 130+ 9613 AE               xor (hl)
 131+ 9614 77               ld (hl),a
 132+ 9615 2C               inc l
 133+ 9616 1C               inc e
 134+ 9617 1A               ld a,(de)
 135+ 9618 AE               xor (hl)
 136+ 9619 77               ld (hl),a
 137+ 961A 13               inc de
 138+ 961B
 139+ 961B E1               pop hl
 140+ 961C
 141+ 961C 1A               ld a,(de)
 142+ 961D AE               xor (hl)
 143+ 961E 77               ld (hl),a
 144+ 961F 2C               inc l
 145+ 9620 1C               inc e
 146+ 9621 1A               ld a,(de)
 147+ 9622 AE               xor (hl)
 148+ 9623 77               ld (hl),a
 149+ 9624 2C               inc l
 150+ 9625 1C               inc e
 151+ 9626 1A               ld a,(de)
 152+ 9627 AE               xor (hl)
 153+ 9628 77               ld (hl),a
 154+ 9629 13               inc de
 155+ 962A
 156+ 962A E1               pop hl
 157+ 962B
 158+ 962B 1A               ld a,(de)
 159+ 962C AE               xor (hl)
 160+ 962D 77               ld (hl),a
 161+ 962E 2C               inc l
 162+ 962F 1C               inc e
 163+ 9630 1A               ld a,(de)
 164+ 9631 AE               xor (hl)
 165+ 9632 77               ld (hl),a
 166+ 9633 2C               inc l
 167+ 9634 1C               inc e
 168+ 9635 1A               ld a,(de)
 169+ 9636 AE               xor (hl)
 170+ 9637 77               ld (hl),a
 171+ 9638 13               inc de
 172+ 9639
 173+ 9639 E1               pop hl
 174+ 963A
 175+ 963A 1A               ld a,(de)
 176+ 963B AE               xor (hl)
 177+ 963C 77               ld (hl),a
 178+ 963D 2C               inc l
 179+ 963E 1C               inc e
 180+ 963F 1A               ld a,(de)
 181+ 9640 AE               xor (hl)
 182+ 9641 77               ld (hl),a
 183+ 9642 2C               inc l
 184+ 9643 1C               inc e
 185+ 9644 1A               ld a,(de)
 186+ 9645 AE               xor (hl)
 187+ 9646 77               ld (hl),a
 188+ 9647 13               inc de
 189+ 9648
 190+ 9648 E1               pop hl
 191+ 9649
 192+ 9649 1A               ld a,(de)
 193+ 964A AE               xor (hl)
 194+ 964B 77               ld (hl),a
 195+ 964C 2C               inc l
 196+ 964D 1C               inc e
 197+ 964E 1A               ld a,(de)
 198+ 964F AE               xor (hl)
 199+ 9650 77               ld (hl),a
 200+ 9651 2C               inc l
 201+ 9652 1C               inc e
 202+ 9653 1A               ld a,(de)
 203+ 9654 AE               xor (hl)
 204+ 9655 77               ld (hl),a
 205+ 9656 13               inc de
 206+ 9657
 207+ 9657 E1               pop hl
 208+ 9658
 209+ 9658 1A               ld a,(de)
 210+ 9659 AE               xor (hl)
 211+ 965A 77               ld (hl),a
 212+ 965B 2C               inc l
 213+ 965C 1C               inc e
 214+ 965D 1A               ld a,(de)
 215+ 965E AE               xor (hl)
 216+ 965F 77               ld (hl),a
 217+ 9660 2C               inc l
 218+ 9661 1C               inc e
 219+ 9662 1A               ld a,(de)
 220+ 9663 AE               xor (hl)
 221+ 9664 77               ld (hl),a
 222+ 9665 13               inc de
 223+ 9666
 224+ 9666 E1               pop hl
 225+ 9667
 226+ 9667 1A               ld a,(de)
 227+ 9668 AE               xor (hl)
 228+ 9669 77               ld (hl),a
 229+ 966A 2C               inc l
 230+ 966B 1C               inc e
 231+ 966C 1A               ld a,(de)
 232+ 966D AE               xor (hl)
 233+ 966E 77               ld (hl),a
 234+ 966F 2C               inc l
 235+ 9670 1C               inc e
 236+ 9671 1A               ld a,(de)
 237+ 9672 AE               xor (hl)
 238+ 9673 77               ld (hl),a
 239+ 9674 13               inc de
 240+ 9675
 241+ 9675 E1               pop hl
 242+ 9676
 243+ 9676 1A               ld a,(de)
 244+ 9677 AE               xor (hl)
 245+ 9678 77               ld (hl),a
 246+ 9679 2C               inc l
 247+ 967A 1C               inc e
 248+ 967B 1A               ld a,(de)
 249+ 967C AE               xor (hl)
 250+ 967D 77               ld (hl),a
 251+ 967E 2C               inc l
 252+ 967F 1C               inc e
 253+ 9680 1A               ld a,(de)
 254+ 9681 AE               xor (hl)
 255+ 9682 77               ld (hl),a
 256+ 9683 13               inc de
 257+ 9684
 258+ 9684 E1               pop hl
 259+ 9685
 260+ 9685 1A               ld a,(de)
 261+ 9686 AE               xor (hl)
 262+ 9687 77               ld (hl),a
 263+ 9688 2C               inc l
 264+ 9689 1C               inc e
 265+ 968A 1A               ld a,(de)
 266+ 968B AE               xor (hl)
 267+ 968C 77               ld (hl),a
 268+ 968D 2C               inc l
 269+ 968E 1C               inc e
 270+ 968F 1A               ld a,(de)
 271+ 9690 AE               xor (hl)
 272+ 9691 77               ld (hl),a
 273+ 9692 13               inc de
 274+ 9693
 275+ 9693 E1               pop hl
 276+ 9694
 277+ 9694 1A               ld a,(de)
 278+ 9695 AE               xor (hl)
 279+ 9696 77               ld (hl),a
 280+ 9697 2C               inc l
 281+ 9698 1C               inc e
 282+ 9699 1A               ld a,(de)
 283+ 969A AE               xor (hl)
 284+ 969B 77               ld (hl),a
 285+ 969C 2C               inc l
 286+ 969D 1C               inc e
 287+ 969E 1A               ld a,(de)
 288+ 969F AE               xor (hl)
 289+ 96A0 77               ld (hl),a
 290+ 96A1 13               inc de
 291+ 96A2
 292+ 96A2 E1               pop hl
 293+ 96A3
 294+ 96A3 1A               ld a,(de)
 295+ 96A4 AE               xor (hl)
 296+ 96A5 77               ld (hl),a
 297+ 96A6 2C               inc l
 298+ 96A7 1C               inc e
 299+ 96A8 1A               ld a,(de)
 300+ 96A9 AE               xor (hl)
 301+ 96AA 77               ld (hl),a
 302+ 96AB 2C               inc l
 303+ 96AC 1C               inc e
 304+ 96AD 1A               ld a,(de)
 305+ 96AE AE               xor (hl)
 306+ 96AF 77               ld (hl),a
 307+ 96B0 13               inc de
 308+ 96B1
 309+ 96B1 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96B5 ED 7B 08 8C      ld sp,(Stack)
 311+ 96B9 C9               ret
 312+ 96BA
 313+ 96BA              Pinta_lento
 314+ 96BA
 315+ 96BA E1           1 pop hl
 316+ 96BB
 317+ 96BB 1A               ld a,(de)
 318+ 96BC AE               xor (hl)
 319+ 96BD 77               ld (hl),a
 320+ 96BE 2C               inc l
 321+ 96BF 1C               inc e
 322+ 96C0 1A               ld a,(de)
 323+ 96C1 AE               xor (hl)
 324+ 96C2 77               ld (hl),a
 325+ 96C3 2C               inc l
 326+ 96C4 1C               inc e
 327+ 96C5 1A               ld a,(de)
 328+ 96C6 AE               xor (hl)
 329+ 96C7 77               ld (hl),a
 330+ 96C8 13               inc de
 331+ 96C9
 332+ 96C9 10 EF            djnz 1B
 333+ 96CB
 334+ 96CB ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96CF ED 7B 08 8C      ld sp,(Stack)
 336+ 96D3 C9               ret
# file closed: Pinta_Sprites.asm
2221  96D4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96D4              ; ******************************************************************************************************************************************************************************************
   2+ 96D4              ;
   3+ 96D4              ; 26/06/23
   4+ 96D4              ;
   5+ 96D4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96D4
   7+ 96D4              Draw
   8+ 96D4
   9+ 96D4 CD 7A 99     	call Prepara_draw
  10+ 96D7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96D8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96D9 28 05        	jr z,2F
  13+ 96DB
  14+ 96DB 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96DE 18 0C        	jr 1F
  16+ 96E0
  17+ 96E0 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96E3 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96E6 CD 72 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96E9              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96E9
  22+ 96E9 CD 19 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96EC
  24+ 96EC 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96EF CB 6F        	bit 5,a
  26+ 96F1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96F3
  28+ 96F3 CD 08 97     	call Comprueba_limite_horizontal
  29+ 96F6 CD 98 97     	call Comprueba_limite_vertical
  30+ 96F9
  31+ 96F9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96F9              ; -----------------------
  33+ 96F9              ; -----------------------
  34+ 96F9              ; -----------------------
  35+ 96F9
  36+ 96F9 CD EE 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96FC CD 25 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96FF
  39+ 96FF 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9702 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9704 32 C8 8B     	ld (Ctrl_0),a
  42+ 9707
  43+ 9707 C9           	ret
  44+ 9708
  45+ 9708              ; *******************************************************************************************************************************************************************************************
  46+ 9708              ;	21/01/23
  47+ 9708              ;
  48+ 9708              ; 	Comprueba_limite_horizontal.
  49+ 9708              ;
  50+ 9708              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9708              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9708              ;
  53+ 9708              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9708              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9708              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9708              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9708
  58+ 9708
  59+ 9708
  60+ 9708 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 970B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 970D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 970F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9711 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9714 18 09            jr 6F
  66+ 9716 CB 5F        1 bit 3,a
  67+ 9718 28 0A            jr z,2F
  68+ 971A E6 F7            and $f7
  69+ 971C 32 C8 8B         ld (Ctrl_0),a
  70+ 971F CD 72 98     6 call Inicializacion
  71+ 9722 18 5B            jr 5F
  72+ 9724 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9725
  74+ 9725              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9725              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9725
  77+ 9725 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9726 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9729 CD 72 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 972C 67           	ld h,a
  81+ 972D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 972E CD 72 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9731 67           	ld h,a
  84+ 9732 A7           	and a
  85+ 9733 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9735 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9736 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9739 FE 02        	cp 2
  89+ 973B 38 1E        	jr c,3F
  90+ 973D 28 1C        	jr z,3F
  91+ 973F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9740 28 23            jr z,7F
  93+ 9742 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9744 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9746 E1           	pop hl
  96+ 9747
  97+ 9747              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9747              ; _para indicar con E="2" en caso necesario.
  99+ 9747
 100+ 9747 E5               push hl
 101+ 9748 C5               push bc
 102+ 9749 CD 72 94     	call calcula_tercio
 103+ 974C FE 01        	cp 1
 104+ 974E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9750 CD 80 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9753 28 26            jr z,9F
 107+ 9755 38 24            jr c,9F
 108+ 9757 1E 00        11 ld e,0
 109+ 9759 18 22            jr 8F
 110+ 975B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 975C 28 07        	jr z, 7F
 112+ 975E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9760 1E 00         	ld e,0
 114+ 9762 E1           	pop hl
 115+ 9763 18 04        	jr 4F
 116+ 9765 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9767 18 15            jr 10F
 118+ 9769
 119+ 9769              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9769              ; _para indicar con E="2" en caso necesario.
 121+ 9769
 122+ 9769 E5           4 push hl
 123+ 976A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 976B CD 72 94     	call calcula_tercio
 125+ 976E FE 01        	cp 1
 126+ 9770 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9772 CD 80 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9775 28 04            jr z,9F
 129+ 9777 30 02            jr nc,9F
 130+ 9779 18 02        	jr 8F
 131+ 977B 1E 02        9 ld e,2
 132+ 977D C1           8 pop bc
 133+ 977E E1           10 pop hl
 134+ 977F C9           5 ret
 135+ 9780
 136+ 9780              ; --------------------
 137+ 9780              ;
 138+ 9780              ; 25/08/22
 139+ 9780
 140+ 9780 CD 72 94     Comprueba_centro call calcula_tercio
 141+ 9783 67               ld h,a
 142+ 9784 08           	ex af,af
 143+ 9785 FE 02        	cp 2
 144+ 9787 38 07        	jr c,1F
 145+ 9789 28 05        	jr z,1F
 146+ 978B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 978E 18 03        	jr 2F
 148+ 9790 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9793 08           2 ex af,af
 150+ 9794 A7               and a
 151+ 9795 ED 42            sbc hl,bc
 152+ 9797 C9               ret
 153+ 9798
 154+ 9798              ; *********************************************************************************************************************************************************************************************
 155+ 9798              ;
 156+ 9798              ;   16/8/22
 157+ 9798              ;
 158+ 9798              ;	Comprueba_limite_vertical
 159+ 9798              ;
 160+ 9798              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9798              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9798              ;
 163+ 9798
 164+ 9798 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 979B 7D           	ld a,l
 166+ 979C E6 1F        	and $1F
 167+ 979E 57           	ld d,a
 168+ 979F 3A DE 8B     	ld a,(Limite_vertical)
 169+ 97A2 BA           	cp d 											; Límite - Posición.
 170+ 97A3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97A4 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97A7 CB 47        	bit 0,a
 173+ 97A9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97AB
 175+ 97AB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97AB
 177+ 97AB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97AC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97AE
 180+ 97AE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97AE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97AE
 183+ 97AE 3A BC 8B         ld a,(Coordenada_X)
 184+ 97B1 16 0F            ld d,Centro_izquierda
 185+ 97B3 A7               and a
 186+ 97B4 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97B5 28 1E            jr z,3F
 188+ 97B7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97B9              ;                                                    ; _salimos sin modificar nada.
 190+ 97B9 18 0E            jr 2F
 191+ 97BB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97BC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97BE
 194+ 97BE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97BE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97BE
 197+ 97BE 3A BC 8B         ld a,(Coordenada_X)
 198+ 97C1 16 10            ld d,Centro_derecha
 199+ 97C3 A7               and a
 200+ 97C4 92               sub d
 201+ 97C5 28 0E            jr z,3F
 202+ 97C7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97C9              ;                                                    ; _salimos sin modificar nada.
 204+ 97C9 CB 43        2 bit 0,e
 205+ 97CB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97CD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97CE CD 62 98         call Modificaccionne
 208+ 97D1 C1           	pop bc
 209+ 97D2 CD 72 98         call Inicializacion
 210+ 97D5 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97D6
 212+ 97D6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97D6
 214+ 97D6 C5           4 push bc
 215+ 97D7 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97DA 0A           	ld a,(bc)
 217+ 97DB 3D           	dec a
 218+ 97DC 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97DD 7D           	ld a,l
 220+ 97DE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97DF CB 47        	bit 0,a
 222+ 97E1 28 03        	jr z,5F
 223+ 97E3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97E4 18 2E        	jr 7F
 225+ 97E6
 226+ 97E6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97E6
 228+ 97E6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97E7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97E8 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97EB CB 4F        	bit 1,a
 232+ 97ED 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97EF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97F0
 235+ 97F0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97F0
 237+ 97F0 1C               inc e
 238+ 97F1 1D               dec e
 239+ 97F2 20 07            jr nz,12F
 240+ 97F4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97F5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97F6 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97F9 18 44        13 jr 9F
 244+ 97FB CB 43        12 bit 0,e
 245+ 97FD 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97FF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97FF C1           	pop bc
 248+ 9800 18 D3        	jr 3B
 249+ 9802 80           14 add b
 250+ 9803 6F               ld l,a
 251+ 9804 22 CB 8B     	ld (Posicion_actual),hl
 252+ 9807 CD 62 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 980A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 980C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 980E 32 C8 8B         ld (Ctrl_0),a
 256+ 9811 F1           	pop af
 257+ 9812 18 2B        	jr 9F
 258+ 9814
 259+ 9814              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9814
 261+ 9814 F5           7 push af
 262+ 9815 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9818 CB 47        	bit 0,a
 264+ 981A 20 1D        	jr nz,8F
 265+ 981C F1           	pop af
 266+ 981D
 267+ 981D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 981D
 269+ 981D 1C           	inc e
 270+ 981E 1D               dec e
 271+ 981F 20 07            jr nz,10F
 272+ 9821 90           	sub b
 273+ 9822 6F               ld l,a
 274+ 9823 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9826 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9828              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9828 CB 43        10 bit 0,e
 278+ 982A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 982C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 982C C1           	pop bc
 281+ 982D 18 A6        	jr 3B
 282+ 982F 90           16 sub b
 283+ 9830 6F               ld l,a
 284+ 9831 22 CB 8B     	ld (Posicion_actual),hl
 285+ 9834 CD 62 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9837 18 06            jr 9F
 287+ 9839 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 983B 32 C8 8B         ld (Ctrl_0),a
 289+ 983E F1           	pop af
 290+ 983F C1           9 pop bc
 291+ 9840 1E 00        	ld e,0
 292+ 9842 CD 72 98         call Inicializacion
 293+ 9845 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9846 08           	ex af,af
 295+ 9847 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9848 18 8B            jr 3B
 297+ 984A
 298+ 984A              ; --------------------
 299+ 984A
 300+ 984A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 984C CD 95 99     1 call PreviousScan
 302+ 984F 10 FB            djnz 1B
 303+ 9851 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9854 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9855 C9           	ret
 306+ 9856
 307+ 9856              ; --------------------
 308+ 9856
 309+ 9856 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9858 CD 86 99     1 call NextScan
 311+ 985B 10 FB            djnz 1B
 312+ 985D 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9860 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9861 C9           	ret
 315+ 9862
 316+ 9862              ; --------------------
 317+ 9862              ;
 318+ 9862              ;	22/01/23
 319+ 9862              ;
 320+ 9862              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9862              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9862              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9862
 324+ 9862
 325+ 9862              Modificaccionne
 326+ 9862
 327+ 9862 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9865 FE 02        	cp 2
 329+ 9867 CC 4A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 986A DC 4A 98         call c,Modifica_Pos_actual
 331+ 986D C8           	ret z
 332+ 986E CD 56 98         call Modifica_Pos_actual2
 333+ 9871 C9               ret
 334+ 9872
 335+ 9872              ; *************************************************************************************************************************************************************************************************
 336+ 9872              ;
 337+ 9872              ;	13/8/22
 338+ 9872              ;
 339+ 9872              ;	Inicializacion
 340+ 9872              ;
 341+ 9872              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9872              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9872              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9872              ;
 345+ 9872              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9872              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9872              ;	_ desaparece/aparece.
 348+ 9872
 349+ 9872              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9872              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9872              ;
 352+ 9872              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9872              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9872              ; 		   [E] ="0"
 355+ 9872
 356+ 9872              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9872
 358+ 9872 CD 72 94     Inicializacion call calcula_tercio
 359+ 9875 28 36        	jr z,primit
 360+ 9877 E6 02        	and 2
 361+ 9879 20 07        	jr nz,segmit
 362+ 987B 7D           	ld a,l
 363+ 987C FE 7F        	cp $7f
 364+ 987E 38 2D        	jr c,primit
 365+ 9880 28 2B        	jr z,primit
 366+ 9882 CD E8 98     segmit call column
 367+ 9885 38 13        	jr c,tercuad
 368+ 9887 3E 04        cuarcuad ld a,4
 369+ 9889 32 DA 8B     	ld (Cuad_objeto),a
 370+ 988C 21 20 48     	ld hl,$4820
 371+ 988F 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9892 21 DE 8B     	ld hl,Limite_vertical
 373+ 9895 36 0D        	ld (hl),$0d
 374+ 9897 08           	ex af,af
 375+ 9898 18 3C        	jr 1F
 376+ 989A              tercuad
 377+ 989A 3E 03        	ld a,3
 378+ 989C 32 DA 8B     	ld (Cuad_objeto),a
 379+ 989F 21 20 48     	ld hl,$4820
 380+ 98A2 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 98A5 21 DE 8B     	ld hl,Limite_vertical
 382+ 98A8 36 12        	ld (hl),$12
 383+ 98AA 08           	ex af,af
 384+ 98AB 18 29        	jr 1F
 385+ 98AD CD E8 98     primit call column
 386+ 98B0 38 13        	jr c, primcuad
 387+ 98B2              segcuad
 388+ 98B2 3E 02        	ld a,2
 389+ 98B4 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98B7 21 C0 4F     	ld hl,$4fc0
 391+ 98BA 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98BD 21 DE 8B     	ld hl,Limite_vertical
 393+ 98C0 36 0D        	ld (hl),$0d
 394+ 98C2 08           	ex af,af
 395+ 98C3 18 11        	jr 1F
 396+ 98C5              primcuad
 397+ 98C5 3E 01        	ld a,1
 398+ 98C7 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98CA 21 C0 4F     	ld hl,$4fc0
 400+ 98CD 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98D0 21 DE 8B     	ld hl,Limite_vertical
 402+ 98D3 36 12        	ld (hl),$12
 403+ 98D5 08           	ex af,af
 404+ 98D6
 405+ 98D6 C5           1 push bc
 406+ 98D7 E5           	push hl
 407+ 98D8 D5           	push de
 408+ 98D9
 409+ 98D9 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98DC CD 90 94     	call Genera_coordenadas
 411+ 98DF
 412+ 98DF D1           	pop de
 413+ 98E0 E1           	pop hl
 414+ 98E1 C1           	pop bc
 415+ 98E2
 416+ 98E2 21 C8 8B     	ld hl,Ctrl_0
 417+ 98E5 CB EE        	set 5,(hl)
 418+ 98E7 C9           	ret
 419+ 98E8
 420+ 98E8              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98E8
 422+ 98E8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98E8              ;
 424+ 98E8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98E8
 426+ 98E8 7D           column ld a,l
 427+ 98E9 E6 1F        	and $1f
 428+ 98EB FE 10         	cp $10
 429+ 98ED C9            	ret
 430+ 98EE
 431+ 98EE              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98EE              ;
 433+ 98EE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98EE              ;
 435+ 98EE              ; 14/12/22
 436+ 98EE              ;
 437+ 98EE              ;	Modifica: A y BC.
 438+ 98EE
 439+ 98EE 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98F1 E6 01        	and 1
 441+ 98F3 28 17        	jr z,1F
 442+ 98F5
 443+ 98F5              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98F5
 445+ 98F5 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98F8 47           	ld b,a
 447+ 98F9 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98FA 79           	ld a,c
 449+ 98FB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98FC 38 08        	jr c,2F
 451+ 98FE 47           	ld b,a
 452+ 98FF 79           	ld a,c
 453+ 9900 90           	sub b
 454+ 9901 32 DB 8B     	ld (Columnas),a
 455+ 9904 18 1B        	jr 4F
 456+ 9906 79           2 ld a,c
 457+ 9907 32 DB 8B     	ld (Columnas),a
 458+ 990A 18 15        	jr 4F
 459+ 990C
 460+ 990C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 990C
 462+ 990C 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 990F 81           	add c
 464+ 9910 3D           	dec a
 465+ 9911 D6 1F        	sub $1f
 466+ 9913 38 08        	jr c,3F
 467+ 9915 47           	ld b,a
 468+ 9916 79           	ld a,c
 469+ 9917 90           	sub b
 470+ 9918 32 DB 8B     	ld (Columnas),a
 471+ 991B 18 04        	jr 4F
 472+ 991D 79           3 ld a,c
 473+ 991E 32 DB 8B     	ld (Columnas),a
 474+ 9921 D9           4 exx
 475+ 9922 4F           	ld c,a
 476+ 9923 D9           	exx
 477+ 9924 C9            ret
 478+ 9925
 479+ 9925              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9925              ;
 481+ 9925              ;   19/7/23
 482+ 9925              ;
 483+ 9925              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9925              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9925              ;
 486+ 9925              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9925              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9925              ;
 489+ 9925              ;	DESTRUYE: HL,B Y A.
 490+ 9925
 491+ 9925 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9928 FE 02        	cp 2
 493+ 992A 38 18        	jr c,1F
 494+ 992C 28 16        	jr z,1F
 495+ 992E E6 01        	and 1
 496+ 9930 28 0D        	jr z,3F
 497+ 9932
 498+ 9932              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9932
 500+ 9932 CD 6E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9935
 502+ 9935 7D           9 ld a,l
 503+ 9936 E6 1F        	and $1f
 504+ 9938 28 2A        	jr z,7F
 505+ 993A 2B           	dec hl
 506+ 993B 10 F8        	djnz 9B
 507+ 993D 18 25        	jr 7F
 508+ 993F
 509+ 993F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 993F
 511+ 993F 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9942 18 20        	jr 7F
 513+ 9944
 514+ 9944 28 14        1 jr z,2F
 515+ 9946
 516+ 9946              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9946
 518+ 9946 CD 6E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9949
 520+ 9949 7D           4 ld a,l
 521+ 994A E6 1F        	and $1f
 522+ 994C 28 03        	jr z,6F
 523+ 994E 2B           	dec hl
 524+ 994F 10 F8        	djnz 4B
 525+ 9951 06 0F        6 ld b,15
 526+ 9953 CD 95 99     5 call PreviousScan
 527+ 9956 10 FB        	djnz 5B
 528+ 9958 18 0A        	jr 7F
 529+ 995A
 530+ 995A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 995A
 532+ 995A CD 6E 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 995D 06 0F        	ld b,15
 534+ 995F CD 95 99     8 call PreviousScan
 535+ 9962 10 FB        	djnz 8B
 536+ 9964
 537+ 9964 E5           7 push hl
 538+ 9965 DD E1        	pop ix
 539+ 9967
 540+ 9967 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 996A E5           	push hl
 542+ 996B FD E1        	pop iy
 543+ 996D
 544+ 996D C9           	ret
 545+ 996E
 546+ 996E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 996E              ;
 548+ 996E              ;	2/1/23
 549+ 996E              ;
 550+ 996E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 996E              ;
 552+ 996E              ;	Tras esta rutina tenemos:
 553+ 996E              ;
 554+ 996E              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 996E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 996E              ;
 557+ 996E              ;	DESTRUYE!!!!! HL,B y A.
 558+ 996E
 559+ 996E 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9971 3A DB 8B     	ld a,(Columnas)
 561+ 9974 3D           	dec a
 562+ 9975 20 01        	jr nz,1F
 563+ 9977 3C           	inc a
 564+ 9978 47           1 ld b,a
 565+ 9979 C9           	ret
 566+ 997A
 567+ 997A              ; --------------------------------------------------------------------------------------------------------------------
 568+ 997A              ;
 569+ 997A              ;	Prepara_draw
 570+ 997A              ;
 571+ 997A              ;	Es una rutina de carga.
 572+ 997A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 997A              ;
 574+ 997A              ;	FUNCIONAMIENTO:
 575+ 997A              ;
 576+ 997A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 997A              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 997A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 997A              ;
 580+ 997A              ;	DESTRUYE:
 581+ 997A              ;
 582+ 997A              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 997A
 584+ 997A 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 997D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 997E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 997F 4E           	ld c,(hl)
 588+ 9980 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9983 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9985 C9           	ret
 591+ 9986
 592+ 9986              ;----------------------------------------------------------------------------------------------------------------
 593+ 9986              ;
 594+ 9986              ;	5/08/22
 595+ 9986              ;
 596+ 9986              ;   NextScan.
 597+ 9986              ;
 598+ 9986              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9986              ;
 600+ 9986              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9986              ;
 602+ 9986              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9986              ;
 604+ 9986              ;       DESTRUIDOS: AF y HL !!!
 605+ 9986              ;
 606+ 9986              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9986              ;
 608+ 9986
 609+ 9986 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9987 7C               ld a,h
 611+ 9988 E6 07            and 7
 612+ 998A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 998B
 614+ 998B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 998C C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 998E 6F               ld l,a
 617+ 998F D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9990
 619+ 9990 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9991 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9993 67               ld h,a
 622+ 9994 C9               ret
 623+ 9995
 624+ 9995              ;----------------------------------------------------------------------------------------------------------------
 625+ 9995              ;
 626+ 9995              ;	5/08/22
 627+ 9995              ;
 628+ 9995              ;   PreviousScan.
 629+ 9995              ;
 630+ 9995              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9995              ;
 632+ 9995              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9995              ;
 634+ 9995              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9995              ;
 636+ 9995              ;       DESTRUIDOS: AF y HL !!!
 637+ 9995              ;
 638+ 9995              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9995              ;
 640+ 9995
 641+ 9995 7C           PreviousScan ld a,h
 642+ 9996 25               dec h               ; Dec H.
 643+ 9997 E6 07            and 7
 644+ 9999 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 999A
 646+ 999A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 999B D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 999D 6F               ld l,a
 649+ 999E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 999F
 651+ 999F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99A0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99A2 67               ld h,a
 654+ 99A3 C9               ret
 655+ 99A4
 656+ 99A4
 657+ 99A4
 658+ 99A4
 659+ 99A4
 660+ 99A4
 661+ 99A4
 662+ 99A4
 663+ 99A4
 664+ 99A4
 665+ 99A4
 666+ 99A4
# file closed: Draw_XOR.asm
2222  99A4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99A4
   2+ 99A4              ; ******************************************************************************************************************************************************************************************
   3+ 99A4              ;
   4+ 99A4              ;   20/05/23
   5+ 99A4              ;
   6+ 99A4              ;	Recompone_posicion_inicio
   7+ 99A4              ;
   8+ 99A4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99A4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99A4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99A4              ;	_ a una u otra rutina.
  12+ 99A4
  13+ 99A4              Recompone_posicion_inicio
  14+ 99A4
  15+ 99A4 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 99A7 7D           	ld a,l
  17+ 99A8 E6 1F        	and $1f
  18+ 99AA 28 16        	jr z,1F
  19+ 99AC
  20+ 99AC FE 1F        	cp $1f
  21+ 99AE 28 0D        	jr z,3F
  22+ 99B0
  23+ 99B0 21 C7 8B     	ld hl,Ctrl_2
  24+ 99B3 CB C6        	set 0,(hl)
  25+ 99B5 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99B8 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99BB 18 08        	jr 2F
  28+ 99BD
  29+ 99BD CD 6B 9B     3 call Mov_left
  30+ 99C0 18 03        	jr 2F
  31+ 99C2
  32+ 99C2 CD 48 9A     1 call Mov_right
  33+ 99C5 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99C8 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99CB C9           	ret
  36+ 99CC
  37+ 99CC              ; ******************************************************************************************************************************************************************************************
  38+ 99CC              ;
  39+ 99CC              ;   27/05/23
  40+ 99CC              ;
  41+ 99CC              ;	Mov_down
  42+ 99CC              ;
  43+ 99CC              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99CC              ;
  45+ 99CC              ;
  46+ 99CC              Mov_down
  47+ 99CC
  48+ 99CC CD 36 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99CF              ;																	; _ repone (Puntero_objeto).
  50+ 99CF 21 C8 8B     	ld hl,Ctrl_0
  51+ 99D2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99D4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99D4              ; 																	; _ en el caso de que no lo haya.
  54+ 99D4 3A E3 8B     	ld a,(Vel_down)
  55+ 99D7 47           	ld b,a
  56+ 99D8 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99DB CD 72 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99DE E6 02        	and 2
  59+ 99E0 28 17        	jr z,1F
  60+ 99E2
  61+ 99E2              ; Nos encontramos en el último tercio de pantalla.
  62+ 99E2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99E2
  64+ 99E2 7C           	ld a,h
  65+ 99E3 FE 57        	cp $57
  66+ 99E5 20 12        	jr nz,1F
  67+ 99E7
  68+ 99E7 7D           	ld a,l
  69+ 99E8 C6 20        	add $20
  70+ 99EA 30 0D        	jr nc,1F
  71+ 99EC
  72+ 99EC              ; ------------------------------
  73+ 99EC              ;
  74+ 99EC              ;	12/01/24
  75+ 99EC
  76+ 99EC              ;	call Reaparece_arriba
  77+ 99EC CD F8 9C     	call Reinicio
  78+ 99EF
  79+ 99EF              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99EF
  81+ 99EF 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99F2 CB CF        	set 1,a
  83+ 99F4 32 2E 8C     	ld (Ctrl_3),a
  84+ 99F7
  85+ 99F7 18 08        	jr 3F
  86+ 99F9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99F9              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99F9              ; ------------------------------
  89+ 99F9
  90+ 99F9 CD 86 99     1 call NextScan
  91+ 99FC 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99FF 10 DA            djnz 2B
  93+ 9A01 CD 90 94     3 call Genera_coordenadas
  94+ 9A04 C9           	ret
  95+ 9A05
  96+ 9A05              ; ******************************************************************************************************************************************************************************************
  97+ 9A05              ;
  98+ 9A05              ;   27/05/23
  99+ 9A05              ;
 100+ 9A05              ;	Mov_up
 101+ 9A05              ;
 102+ 9A05              ; 	Mueve el Sprite hacia arriba.
 103+ 9A05              ;
 104+ 9A05              ;
 105+ 9A05              Mov_up
 106+ 9A05
 107+ 9A05 CD 36 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A08              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A08 21 C8 8B     	ld hl,Ctrl_0
 110+ 9A0B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A0D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A0D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A0D 3A E2 8B     	ld a,(Vel_up)
 114+ 9A10 47           	ld b,a
 115+ 9A11 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A14 CD 72 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A17 A7           	and a
 118+ 9A18 20 10        	jr nz,1F
 119+ 9A1A
 120+ 9A1A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A1A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A1A
 123+ 9A1A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A1B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A1D 20 0B            jr nz,1F
 126+ 9A1F 7D               ld a,l
 127+ 9A20 D6 20            sub $20
 128+ 9A22 30 06            jr nc,1F
 129+ 9A24 25               dec h
 130+ 9A25
 131+ 9A25              ; -----------------------------
 132+ 9A25 CD D9 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A28              ;	call Reinicio
 134+ 9A28              ; -----------------------------
 135+ 9A28
 136+ 9A28 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A2A CD 95 99     1 call PreviousScan
 138+ 9A2D 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A30 10 E2            djnz 3B
 140+ 9A32 CD 90 94     2 call Genera_coordenadas
 141+ 9A35 C9           	ret
 142+ 9A36
 143+ 9A36              ; -----------------------------
 144+ 9A36              ;
 145+ 9A36              ;	27/5/23
 146+ 9A36              ;
 147+ 9A36              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A36              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A36              ;
 150+ 9A36              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A36              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A36              ;
 153+ 9A36              ;	Modifica: A y (Puntero_objeto).
 154+ 9A36
 155+ 9A36 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A39 CB 47        	bit 0,a
 157+ 9A3B C8           	ret z
 158+ 9A3C CB 87        	res 0,a
 159+ 9A3E 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A41 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A44 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A47 C9           	ret
 163+ 9A48
 164+ 9A48              ; ******************************************************************************************************************************************************************************************
 165+ 9A48              ;
 166+ 9A48              ;	19/10/22
 167+ 9A48              ;
 168+ 9A48              ;	Mov_right.
 169+ 9A48              ;
 170+ 9A48              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A48              ;
 172+ 9A48
 173+ 9A48 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A4B CB 77        	bit 6,a
 175+ 9A4D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A4F
 177+ 9A4F CD 87 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A52 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A53
 180+ 9A53 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A56 CB E6        	set 4,(hl)
 182+ 9A58 18 52        	jr 8F
 183+ 9A5A
 184+ 9A5A 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A5D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A5F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A5F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A5F 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A62 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A64 20 46        	jr nz,8F
 191+ 9A66
 192+ 9A66 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A69 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A6A 28 40        	jr z,8F
 195+ 9A6C
 196+ 9A6C              ; ---------- ---------- ----------
 197+ 9A6C              ;
 198+ 9A6C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A6C
 200+ 9A6C 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A6F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A71 28 11        	jr z,1F
 203+ 9A73 38 06        	jr c,6F
 204+ 9A75 FE 04        	cp 4
 205+ 9A77 28 14        	jr z,7F
 206+ 9A79 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A7B
 208+ 9A7B              ; ---------- ---------- ----------
 209+ 9A7B              ;
 210+ 9A7B              ; Perfiles de velocidad
 211+ 9A7B              ;
 212+ 9A7B
 213+ 9A7B 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A7E FE FE        	cp $fe
 215+ 9A80 20 2A        	jr nz,8F
 216+ 9A82 18 10        	jr 3F
 217+ 9A84 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A87 FE FD        	cp $fd
 219+ 9A89 20 21        	jr nz,8F
 220+ 9A8B 18 07        	jr 3F
 221+ 9A8D 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A90 FE FB        	cp $fb
 223+ 9A92 20 18        	jr nz,8F
 224+ 9A94
 225+ 9A94              ; ---------- ---------- ----------
 226+ 9A94
 227+ 9A94              3
 228+ 9A94 CD C7 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A97              ;	call Reinicio
 230+ 9A97
 231+ 9A97              ; ---------- ---------- ----------
 232+ 9A97              ;
 233+ 9A97              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A97
 235+ 9A97 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A99 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A9A CD B3 9A     	call DESPLZ_DER
 238+ 9A9D C1           	pop bc
 239+ 9A9E 10 F9        	djnz 5B
 240+ 9AA0 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AA3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AA4 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9AA7 CD 90 94     	call Genera_coordenadas
 244+ 9AAA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AAC
 246+ 9AAC              ; ---------- ---------- ----------
 247+ 9AAC
 248+ 9AAC 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9AAF CD B3 9A     	call DESPLZ_DER
 250+ 9AB2 C9           2 ret
 251+ 9AB3
 252+ 9AB3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AB3              ;
 254+ 9AB3              ;	22/9/22
 255+ 9AB3              ;
 256+ 9AB3
 257+ 9AB3 CD C2 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AB6 CD 0E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AB9 CD 37 9B         call Ciclo_completo
 260+ 9ABC 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9ABF CB FE        	set 7,(hl)
 262+ 9AC1 C9           	ret
 263+ 9AC2
 264+ 9AC2              ; ******************************************************************************************************************************************************************************************
 265+ 9AC2              ;	15/02/23
 266+ 9AC2              ;
 267+ 9AC2
 268+ 9AC2 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AC5 47           	ld b,a
 270+ 9AC6 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AC9 23           1 inc hl
 272+ 9ACA 23           	inc hl
 273+ 9ACB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9ACD 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AD0 CD 71 90     	call Extrae_address
 276+ 9AD3 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AD6
 278+ 9AD6              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AD6
 280+ 9AD6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AD6              ; Cuántos movimientos hemos hecho ??
 282+ 9AD6              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AD6
 284+ 9AD6 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AD9 EB           	ex de,hl
 286+ 9ADA A7           	and a
 287+ 9ADB ED 52        	sbc hl,de
 288+ 9ADD CB 3D        	srl l
 289+ 9ADF 3E 08        6 ld a,8
 290+ 9AE1 95           	sub l
 291+ 9AE2 30 1E        	jr nc,3F
 292+ 9AE4
 293+ 9AE4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AE4              ; B="0".
 295+ 9AE4
 296+ 9AE4 04           4 inc b
 297+ 9AE5 3C           	inc a
 298+ 9AE6 20 FC        	jr nz,4B
 299+ 9AE8 78           	ld a,b
 300+ 9AE9 08           	ex af,af
 301+ 9AEA 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AED 23           5 inc hl
 303+ 9AEE 23           	inc hl
 304+ 9AEF 10 FC        	djnz 5B
 305+ 9AF1 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AF4 CD 71 90     	call Extrae_address
 307+ 9AF7 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AFA
 309+ 9AFA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AFA              ; _(Posicion_actual).
 311+ 9AFA
 312+ 9AFA 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AFD 34           	inc (hl)
 314+ 9AFE 08               ex af,af
 315+ 9AFF 6F           	ld l,a
 316+ 9B00 18 DD        	jr 6B
 317+ 9B02
 318+ 9B02              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B02
 320+ 9B02 47           3 ld b,a
 321+ 9B03 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B06 23           2 inc hl
 323+ 9B07 23           	inc hl
 324+ 9B08 10 FC        	djnz 2B
 325+ 9B0A 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B0D C9           8 ret
 327+ 9B0E
 328+ 9B0E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B0E              ;
 330+ 9B0E              ;	24/7/22
 331+ 9B0E              ;
 332+ 9B0E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B0E              ;
 334+ 9B0E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B0E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B0E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B0E
 338+ 9B0E 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B11 A7           	and a
 340+ 9B12 20 1F        	jr nz,1F
 341+ 9B14 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B16 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B19
 344+ 9B19 21 CA 8B     	ld hl,Columns
 345+ 9B1C 34           	inc (hl)
 346+ 9B1D 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B20 E6 01        	and 1
 348+ 9B22 28 0F        	jr z,1F
 349+ 9B24 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B27 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B28 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B2B CD 90 94     	call Genera_coordenadas
 353+ 9B2E CD 93 9C     	call Inc_CTRL_DESPLZ
 354+ 9B31 18 03        	jr 2F
 355+ 9B33 CD 93 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B36 C9           2 ret
 357+ 9B37
 358+ 9B37              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B37              ;
 360+ 9B37              ;	24/7/22
 361+ 9B37              ;
 362+ 9B37              ;	Ciclo_completo.
 363+ 9B37              ;
 364+ 9B37              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B37              ;
 366+ 9B37              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B37              ; 	Decrementamos (Columns).
 368+ 9B37              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B37              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B37
 371+ 9B37
 372+ 9B37 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B3A FE FF        	cp $ff
 374+ 9B3C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B3E E6 F0        	and $f0
 376+ 9B40 20 28        	jr nz,3F
 377+ 9B42
 378+ 9B42              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B42
 380+ 9B42 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B45 47           	ld b,a
 382+ 9B46 3E F8        	ld a,$f8
 383+ 9B48 80           	add b
 384+ 9B49 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B4C 18 1C        	jr 3F
 386+ 9B4E 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B51 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B52 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B53 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B56 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B59 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B5B 20 0A        	jr nz,2F
 393+ 9B5D 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B60 23           	inc hl
 395+ 9B61 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B64 CD 90 94     	call Genera_coordenadas
 397+ 9B67
 398+ 9B67              ; Inicia el puntero de Sprite.
 399+ 9B67
 400+ 9B67 CD 86 90     2 call Inicia_puntero_objeto_der
 401+ 9B6A C9           3 ret
 402+ 9B6B
 403+ 9B6B              ; ******************************************************************************************************************************************************************************************
 404+ 9B6B              ;
 405+ 9B6B              ;	15/02/23
 406+ 9B6B              ;
 407+ 9B6B              ;	Mov_left.
 408+ 9B6B              ;
 409+ 9B6B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B6B              ;
 411+ 9B6B              Mov_left
 412+ 9B6B
 413+ 9B6B 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B6E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B70              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B70              ; 																	; _ en el caso de que no lo haya.
 417+ 9B70 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B73 CB 77        	bit 6,a
 419+ 9B75 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B77
 421+ 9B77 CD 8D 9C     	call Stop_Amadeus_left
 422+ 9B7A C8           	ret z
 423+ 9B7B 20 4A        	jr nz,8F
 424+ 9B7D
 425+ 9B7D 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B80 A7           	and a
 427+ 9B81 20 44        	jr nz,8F
 428+ 9B83
 429+ 9B83 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B86 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B87 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B89
 433+ 9B89              ; ---------- ---------- ----------
 434+ 9B89
 435+ 9B89 3A E0 8B     	ld a,(Vel_left)
 436+ 9B8C FE 02        	cp 2
 437+ 9B8E 28 0F        	jr z,1F
 438+ 9B90 38 04        	jr c,6F
 439+ 9B92 FE 04        	cp 4
 440+ 9B94 28 12        	jr z,7F
 441+ 9B96
 442+ 9B96              ; ---------- ---------- ----------
 443+ 9B96
 444+ 9B96 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B99 FE F8        	cp $f8
 446+ 9B9B 20 2A        	jr nz,8F
 447+ 9B9D 18 10        	jr 4F
 448+ 9B9F 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BA2 FE F9        	cp $f9
 450+ 9BA4 20 21        	jr nz,8F
 451+ 9BA6 18 07        	jr 4F
 452+ 9BA8 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BAB FE FB        	cp $fb
 454+ 9BAD 20 18        	jr nz,8F
 455+ 9BAF
 456+ 9BAF              ; ---------- ---------- ----------
 457+ 9BAF
 458+ 9BAF              4
 459+ 9BAF CD B5 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BB2              ;	call Reinicio
 461+ 9BB2
 462+ 9BB2              ; ---------- ---------- ----------
 463+ 9BB2
 464+ 9BB2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BB4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BB5
 467+ 9BB5              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BB5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BB5
 470+ 9BB5 CD CE 9B     	call DESPLZ_IZQ
 471+ 9BB8 C1           	pop bc
 472+ 9BB9 10 F9        	djnz 5B
 473+ 9BBB 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BBE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BBF 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BC2 CD 90 94     	call Genera_coordenadas
 477+ 9BC5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BC7
 479+ 9BC7              ; ---------- ---------- ----------
 480+ 9BC7
 481+ 9BC7              ; Movemos, no hay recolocación.
 482+ 9BC7
 483+ 9BC7 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BCA CD CE 9B     	call DESPLZ_IZQ
 485+ 9BCD C9           2 ret
 486+ 9BCE
 487+ 9BCE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BCE              ;
 489+ 9BCE              ;	22/9/22
 490+ 9BCE
 491+ 9BCE              DESPLZ_IZQ
 492+ 9BCE
 493+ 9BCE CD DD 9B     	call Desplaza_izquierda
 494+ 9BD1 CD 29 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BD4 CD 51 9C     	call Ciclo_completo_2
 496+ 9BD7 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BDA CB BE        	res 7,(hl)
 498+ 9BDC C9           	ret
 499+ 9BDD
 500+ 9BDD              Desplaza_izquierda
 501+ 9BDD
 502+ 9BDD 3A E0 8B     	ld a,(Vel_left)
 503+ 9BE0 47           	ld b,a
 504+ 9BE1 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BE4 23           1 inc hl
 506+ 9BE5 23           	inc hl
 507+ 9BE6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BE8 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BEB CD 71 90     	call Extrae_address
 510+ 9BEE 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BF1
 512+ 9BF1              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BF1
 514+ 9BF1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BF1              ; Cuántos movimientos hemos hecho ??
 516+ 9BF1              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BF1
 518+ 9BF1 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BF4 EB           	ex de,hl
 520+ 9BF5 A7           	and a
 521+ 9BF6 ED 52        	sbc hl,de
 522+ 9BF8 CB 3D        	srl l
 523+ 9BFA 3E 08        6 ld a,8
 524+ 9BFC 95           	sub l
 525+ 9BFD 30 1E        	jr nc,3F
 526+ 9BFF
 527+ 9BFF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BFF              ; B="0".
 529+ 9BFF
 530+ 9BFF 04           4 inc b
 531+ 9C00 3C           	inc a
 532+ 9C01 20 FC        	jr nz,4B
 533+ 9C03 78           	ld a,b
 534+ 9C04 08           	ex af,af
 535+ 9C05 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C08 23           5 inc hl
 537+ 9C09 23           	inc hl
 538+ 9C0A 10 FC        	djnz 5B
 539+ 9C0C 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C0F CD 71 90     	call Extrae_address
 541+ 9C12 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C15
 543+ 9C15              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C15              ; _(Posicion_actual).
 545+ 9C15
 546+ 9C15 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C18 35           	dec (hl)
 548+ 9C19 08           	ex af,af
 549+ 9C1A 6F           	ld l,a
 550+ 9C1B 18 DD        	jr 6B
 551+ 9C1D
 552+ 9C1D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C1D
 554+ 9C1D 47           3 ld b,a
 555+ 9C1E 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C21 23           2 inc hl
 557+ 9C22 23           	inc hl
 558+ 9C23 10 FC        	djnz 2B
 559+ 9C25 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C28 C9           8 ret
 561+ 9C29
 562+ 9C29              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C29              ;
 564+ 9C29              ;	modifica_parametros_1er_DESPLZ
 565+ 9C29              ;
 566+ 9C29              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C29              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C29              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C29
 570+ 9C29 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C2C A7           	and a
 572+ 9C2D 20 1E        	jr nz,1F
 573+ 9C2F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C30 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C33 21 CA 8B     	ld hl,Columns
 576+ 9C36 34           	inc (hl)
 577+ 9C37 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C3A E6 01        	and 1
 579+ 9C3C 20 0F        	jr nz,1F
 580+ 9C3E 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C41 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C42 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C45 CD 90 94     	call Genera_coordenadas
 584+ 9C48 CD A4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C4B 18 03        	jr 2F
 586+ 9C4D CD A4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C50 C9           2 ret
 588+ 9C51
 589+ 9C51              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C51
 591+ 9C51 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C54 FE F7        	cp $f7
 593+ 9C56 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C58 30 2C        	jr nc,3F
 595+ 9C5A
 596+ 9C5A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C5A
 598+ 9C5A 06 00        	ld b,0
 599+ 9C5C 04           4 inc b
 600+ 9C5D 3C           	inc a
 601+ 9C5E FE F7        	cp $f7
 602+ 9C60 20 FA        	jr nz,4B
 603+ 9C62 3E FF        	ld a,$ff
 604+ 9C64 90           	sub b
 605+ 9C65 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C68 18 1C        	jr 3F
 607+ 9C6A
 608+ 9C6A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C6A
 610+ 9C6A 21 CA 8B     1 ld hl,Columns
 611+ 9C6D 35           	dec (hl)
 612+ 9C6E AF           	xor a
 613+ 9C6F 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C72 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C75 E6 01        	and 1
 616+ 9C77 28 0A        	jr z,2F
 617+ 9C79 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C7C 2B           	dec hl
 619+ 9C7D 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C80 CD 90 94     	call Genera_coordenadas
 621+ 9C83
 622+ 9C83              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C83
 624+ 9C83 CD 99 90     2 call Inicia_puntero_objeto_izq
 625+ 9C86 C9           3 ret
 626+ 9C87
 627+ 9C87              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C87              ;
 629+ 9C87              ;	19/10/22
 630+ 9C87              ;
 631+ 9C87              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C87              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C87
 634+ 9C87 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C8A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C8C C9           	ret
 637+ 9C8D
 638+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C8D              ;
 640+ 9C8D              ;	19/10/22
 641+ 9C8D              ;
 642+ 9C8D              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C8D              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C8D
 645+ 9C8D 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C90 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C92 C9           	ret
 648+ 9C93
 649+ 9C93              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C93              ;
 651+ 9C93              ;	24/7/22
 652+ 9C93              ;
 653+ 9C93              ;	Inc_CTRL_DESPLZ
 654+ 9C93              ;
 655+ 9C93              ;
 656+ 9C93              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C93
 658+ 9C93 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C96 3A E1 8B     	ld a,(Vel_right)
 660+ 9C99 A7           	and a
 661+ 9C9A 28 06        	jr z,1F
 662+ 9C9C 47           	ld b,a
 663+ 9C9D 34           3 inc (hl)
 664+ 9C9E 10 FD        	djnz 3B
 665+ 9CA0 18 01        	jr 2F
 666+ 9CA2 34           1 inc (hl)
 667+ 9CA3 C9           2 ret
 668+ 9CA4
 669+ 9CA4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CA4              ;
 671+ 9CA4              ;	5/2/23
 672+ 9CA4              ;
 673+ 9CA4              ;	Dec_CTRL_DESPLZ
 674+ 9CA4              ;
 675+ 9CA4              ;
 676+ 9CA4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CA4
 678+ 9CA4 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CA7 3A E0 8B     	ld a,(Vel_left)
 680+ 9CAA A7           	and a
 681+ 9CAB 28 06        	jr z,1F
 682+ 9CAD 47           	ld b,a
 683+ 9CAE 35           3 dec (hl)
 684+ 9CAF 10 FD        	djnz 3B
 685+ 9CB1 18 01        	jr 2F
 686+ 9CB3 35           1 dec (hl)
 687+ 9CB4 C9           2 ret
 688+ 9CB5
 689+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CB5
 691+ 9CB5 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CB8 01 1F 00     	ld bc,31
 693+ 9CBB A7           	and a
 694+ 9CBC ED 4A        	adc hl,bc
 695+ 9CBE 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CC1 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CC4 CB C6        	set 0,(hl)
 698+ 9CC6 C9           	ret
 699+ 9CC7
 700+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CC7
 702+ 9CC7 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CCA 01 1F 00     	ld bc,31
 704+ 9CCD A7           	and a
 705+ 9CCE ED 42        	sbc hl,bc
 706+ 9CD0 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CD3 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CD6 CB CE        	set 1,(hl)
 709+ 9CD8 C9           	ret
 710+ 9CD9
 711+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CD9
 713+ 9CD9 24           Reaparece_abajo inc h
 714+ 9CDA 01 E0 17     	ld bc,$17e0
 715+ 9CDD A7           	and a
 716+ 9CDE ED 4A        	adc hl,bc
 717+ 9CE0 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CE3 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CE6 CB D6        	set 2,(hl)
 720+ 9CE8 C9           	ret
 721+ 9CE9
 722+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CE9
 724+ 9CE9 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CEC A7           	and a
 726+ 9CED ED 42        	sbc hl,bc
 727+ 9CEF 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CF2 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CF5 CB DE        	set 3,(hl)
 730+ 9CF7 C9           	ret
 731+ 9CF8
 732+ 9CF8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CF8              ;
 734+ 9CF8              ;	15/07/23
 735+ 9CF8
 736+ 9CF8              Reinicio
 737+ 9CF8
 738+ 9CF8              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CF8
 740+ 9CF8 AF           	xor a
 741+ 9CF9 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CFC CD 1A 9D     	call Limpia_contenido_hl
 743+ 9CFF
 744+ 9CFF 21 CB 8B     	ld hl,Posicion_actual
 745+ 9D02 CD 1A 9D     	call Limpia_contenido_hl
 746+ 9D05
 747+ 9D05 CD 72 92     	call Inicializa_Puntero_indice_mov
 748+ 9D08 CD 19 9E     	call Inicia_Puntero_mov
 749+ 9D0B
 750+ 9D0B 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9D0E 06 05        	ld b,5
 752+ 9D10 77           1 ld (hl),a
 753+ 9D11 23           	inc hl
 754+ 9D12 10 FC        	djnz 1B
 755+ 9D14
 756+ 9D14 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D17 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D19
 759+ 9D19 C9           	ret
 760+ 9D1A
 761+ 9D1A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D1B 23           	inc hl
 763+ 9D1C 77           	ld (hl),a
 764+ 9D1D C9           	ret
 765+ 9D1E
 766+ 9D1E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D1E              ;
 768+ 9D1E              ;	18/6/24
 769+ 9D1E              ;
 770+ 9D1E
 771+ 9D1E              Amadeus_a_izquierda
 772+ 9D1E
 773+ 9D1E              ;	Actualiza contador de movimientos.
 774+ 9D1E
 775+ 9D1E 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D21 35           	dec (hl)
 777+ 9D22 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D24
 779+ 9D24 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D27 2B           	dec hl
 781+ 9D28 2B           	dec hl
 782+ 9D29 2B           	dec hl
 783+ 9D2A 2B           	dec hl
 784+ 9D2B 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D2E
 786+ 9D2E 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D31 CB EE        	set 5,(hl)
 788+ 9D33
 789+ 9D33 C9           	ret
 790+ 9D34
 791+ 9D34 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D35 C9           	ret
 793+ 9D36
 794+ 9D36
 795+ 9D36              Amadeus_a_derecha
 796+ 9D36
 797+ 9D36              ;	Actualiza contador de movimientos.
 798+ 9D36
 799+ 9D36 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D39 34           	inc (hl)
 801+ 9D3A 3E 7A        	ld a,$7a
 802+ 9D3C BE           	cp (hl)
 803+ 9D3D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D3F
 805+ 9D3F 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D42 23           	inc hl
 807+ 9D43 23           	inc hl
 808+ 9D44 23           	inc hl
 809+ 9D45 23           	inc hl
 810+ 9D46 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D49
 812+ 9D49 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D4C CB EE        	set 5,(hl)
 814+ 9D4E C9           	ret
 815+ 9D4F
 816+ 9D4F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D50 C9           	ret
# file closed: Direcciones.asm
2223  9D51              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D51              ; ----- ----- ----- ----- -----
   2+ 9D51              ;
   3+ 9D51              ;   28/12/23
   4+ 9D51
   5+ 9D51              Movimiento
   6+ 9D51
   7+ 9D51              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D51
   9+ 9D51 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D54 CB 57            bit 2,a
  11+ 9D56 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D58
  13+ 9D58 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D5B 7E               ld a,(hl)
  15+ 9D5C
  16+ 9D5C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D5C
  18+ 9D5C              Inicia_desplazamiento.
  19+ 9D5C
  20+ 9D5C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D5C
  22+ 9D5C CD 4F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D5F
  24+ 9D5F              ; Iniciamos (Repetimos_mov).
  25+ 9D5F
  26+ 9D5F 7E               ld a,(hl)
  27+ 9D60 E6 0F            and $0f
  28+ 9D62 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D65 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D68
  31+ 9D68              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D68
  33+ 9D68 23               inc hl
  34+ 9D69 7E               ld a,(hl)
  35+ 9D6A 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D6D 2B               dec hl
  37+ 9D6E
  38+ 9D6E 21 C7 8B         ld hl,Ctrl_2
  39+ 9D71 CB D6            set 2,(hl)
  40+ 9D73
  41+ 9D73              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D73              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D73
  44+ 9D73              Desplazamiento_iniciado
  45+ 9D73
  46+ 9D73 CD 23 9E         call Aplica_desplazamiento
  47+ 9D76
  48+ 9D76              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D76
  50+ 9D76 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D79 CB 4F            bit 1,a
  52+ 9D7B C0               ret nz
  53+ 9D7C
  54+ 9D7C 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D7F 35               dec (hl)
  56+ 9D80 C0               ret nz
  57+ 9D81
  58+ 9D81              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D81              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D81              ; Analiza (Cola_de_desplazamiento).
  61+ 9D81
  62+ 9D81 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D84 A7               and a
  64+ 9D85 CC 78 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D88 28 30            jr z,Reinicia_el_movimiento
  66+ 9D8A
  67+ 9D8A FE FF            cp $ff
  68+ 9D8C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D8E
  70+ 9D8E FE FE            cp $fe
  71+ 9D90 CC FD 9D         call z,Fijamos_bucle
  72+ 9D93 28 25            jr z,Reinicia_el_movimiento
  73+ 9D95
  74+ 9D95 FE FD            cp $fd
  75+ 9D97 20 11            jr nz,1F
  76+ 9D99
  77+ 9D99              ; ---
  78+ 9D99              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D99
  80+ 9D99 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D9C CB 5F            bit 3,a
  82+ 9D9E 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DA0
  84+ 9DA0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DA0
  86+ 9DA0 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DA3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DA5
  89+ 9DA5 CD 0E 9E         call Inicia_Repetimos_movimiento
  90+ 9DA8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DAA              ; ---
  92+ 9DAA
  93+ 9DAA FE 01        1 cp 1
  94+ 9DAC CA E7 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DAF
  96+ 9DAF 3D               dec a
  97+ 9DB0 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DB3
  99+ 9DB3 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DB6 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DB9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DB9 C9               ret
 103+ 9DBA
 104+ 9DBA              Reinicia_el_movimiento
 105+ 9DBA
 106+ 9DBA 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DBD CB 5F            bit 3,a
 108+ 9DBF 28 1B            jr z,2F
 109+ 9DC1
 110+ 9DC1              ; (Cola_de_desplazamiento)="254".
 111+ 9DC1
 112+ 9DC1 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DC4 35               dec (hl)
 114+ 9DC5 20 15            jr nz,2F
 115+ 9DC7
 116+ 9DC7              ; Fin de las repeticiones del último movimiento.
 117+ 9DC7
 118+ 9DC7 21 C7 8B         ld hl,Ctrl_2
 119+ 9DCA CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DCC
 121+ 9DCC 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DCF 23               inc hl
 123+ 9DD0 23               inc hl
 124+ 9DD1 23               inc hl
 125+ 9DD2 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DD5              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DD5 7E               ld a,(hl)
 128+ 9DD6 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DD9
 130+ 9DD9 C3 81 9D         jp Cola
 131+ 9DDC
 132+ 9DDC CD 19 9E     2 call Inicia_Puntero_mov
 133+ 9DDF
 134+ 9DDF 21 C7 8B         ld hl,Ctrl_2
 135+ 9DE2 CB 96            res 2,(hl)
 136+ 9DE4
 137+ 9DE4 C3 51 9D         jp Movimiento
 138+ 9DE7
 139+ 9DE7              Siguiente_desplazamiento
 140+ 9DE7
 141+ 9DE7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DE7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DE7
 144+ 9DE7 21 C7 8B         ld hl,Ctrl_2
 145+ 9DEA CB 96            res 2,(hl)
 146+ 9DEC
 147+ 9DEC 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DEF 23               inc hl
 149+ 9DF0 23               inc hl
 150+ 9DF1 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DF4
 152+ 9DF4 7E               ld a,(hl)
 153+ 9DF5 A7               and a
 154+ 9DF6 CC 78 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DF9 CA BA 9D         jp z,Reinicia_el_movimiento
 156+ 9DFC
 157+ 9DFC C9               ret
 158+ 9DFD
 159+ 9DFD              ; Subrutinas -----------------------------------------
 160+ 9DFD              ; ---------- --------- --------- ---------- ----------
 161+ 9DFD              ;
 162+ 9DFD              ;   24/07/23
 163+ 9DFD              ;
 164+ 9DFD              ;   Fijamos_bucle
 165+ 9DFD              ;
 166+ 9DFD              ;
 167+ 9DFD
 168+ 9DFD              Fijamos_bucle
 169+ 9DFD
 170+ 9DFD 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9E00 3C               inc a
 172+ 9E01 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9E04
 174+ 9E04 CD 78 9E         call Incrementa_Puntero_indice_mov
 175+ 9E07 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9E0A 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E0D C9               ret
 178+ 9E0E
 179+ 9E0E              ; ---------- --------- --------- ---------- ----------
 180+ 9E0E              ;
 181+ 9E0E              ;   07/7/23
 182+ 9E0E              ;
 183+ 9E0E              ;   Inicia_Repetimos_movimiento
 184+ 9E0E              ;
 185+ 9E0E              ;
 186+ 9E0E
 187+ 9E0E              Inicia_Repetimos_movimiento
 188+ 9E0E
 189+ 9E0E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E0E
 191+ 9E0E DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E12 DD 7E 02         ld a,(ix+2)
 193+ 9E15 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E18
 195+ 9E18 C9               ret
 196+ 9E19
 197+ 9E19              ; ---------- --------- --------- ---------- ----------
 198+ 9E19              ;
 199+ 9E19              ;   26/6/23
 200+ 9E19              ;
 201+ 9E19              ;   Inicia_Puntero_mov
 202+ 9E19              ;
 203+ 9E19              ;
 204+ 9E19
 205+ 9E19 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E1C CD 71 90         call Extrae_address
 207+ 9E1F 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E22 C9               ret
 209+ 9E23
 210+ 9E23              ; ---------- --------- --------- ---------- ----------
 211+ 9E23              ;
 212+ 9E23              ;   27/06/23
 213+ 9E23              ;
 214+ 9E23              ;   Aplica_movimiento.
 215+ 9E23
 216+ 9E23              Aplica_desplazamiento
 217+ 9E23
 218+ 9E23              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E23
 220+ 9E23 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E26
 222+ 9E26 7E               ld a,(hl)
 223+ 9E27 E6 F0            and $f0
 224+ 9E29 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E2A
 226+ 9E2A CB 7E            bit 7,(hl)
 227+ 9E2C 28 03            jr z,1F
 228+ 9E2E CD 05 9A         call Mov_up
 229+ 9E31 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E34 CB 76            bit 6,(hl)
 231+ 9E36 28 03            jr z,2F
 232+ 9E38 CD CC 99         call Mov_down
 233+ 9E3B
 234+ 9E3B              ; Se ha aplicado reinicio ???
 235+ 9E3B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E3B
 237+ 9E3B              ;    ld a,(Ctrl_3)
 238+ 9E3B              ;    bit 1,a
 239+ 9E3B              ;    ret nz
 240+ 9E3B
 241+ 9E3B 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E3E CB 6E            bit 5,(hl)
 243+ 9E40 28 03            jr z,3F
 244+ 9E42 CD 6B 9B         call Mov_left
 245+ 9E45 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E48 CB 66            bit 4,(hl)
 247+ 9E4A C8               ret z
 248+ 9E4B CD 48 9A         call Mov_right
 249+ 9E4E C9               ret
 250+ 9E4F
 251+ 9E4F              ; ---------- --------- --------- ---------- ----------
 252+ 9E4F              ;
 253+ 9E4F              ;   26/06/23
 254+ 9E4F              ;
 255+ 9E4F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E4F
 257+ 9E4F              Ajusta_velocidad_desplazamiento
 258+ 9E4F
 259+ 9E4F              ; 1er byte de la cadena de movimiento.
 260+ 9E4F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E4F
 262+ 9E4F CD 6D 9E         call Extrae_nibble_alto
 263+ 9E52
 264+ 9E52 32 E2 8B         ld (Vel_up),a
 265+ 9E55 79               ld a,c
 266+ 9E56 E6 0F            and $0f
 267+ 9E58 32 E3 8B         ld (Vel_down),a
 268+ 9E5B
 269+ 9E5B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E5B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E5B
 272+ 9E5B 23               inc hl
 273+ 9E5C CD 6D 9E         call Extrae_nibble_alto
 274+ 9E5F
 275+ 9E5F 32 E0 8B         ld (Vel_left),a
 276+ 9E62 79               ld a,c
 277+ 9E63 E6 0F            and $0f
 278+ 9E65 32 E1 8B         ld (Vel_right),a
 279+ 9E68
 280+ 9E68              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E68
 282+ 9E68 23               inc hl
 283+ 9E69 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E6C C9               ret
 285+ 9E6D
 286+ 9E6D 06 04        Extrae_nibble_alto ld b,4
 287+ 9E6F 7E               ld a,(hl)
 288+ 9E70 4F               ld c,a
 289+ 9E71 E6 F0            and $f0
 290+ 9E73 CB 3F        1 srl a
 291+ 9E75 10 FC            djnz 1B
 292+ 9E77 C9               ret
 293+ 9E78
 294+ 9E78              ; ---------- --------- --------- ---------- ----------
 295+ 9E78              ;
 296+ 9E78              ;   5/7/23
 297+ 9E78              ;
 298+ 9E78              ;   Incrementa_Puntero_indice_mov
 299+ 9E78
 300+ 9E78              Incrementa_Puntero_indice_mov
 301+ 9E78
 302+ 9E78 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E7B 34               inc (hl)
 304+ 9E7C
 305+ 9E7C 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E7F 01 02 00         ld bc,2
 307+ 9E82 A7               and a
 308+ 9E83 09               add hl,bc
 309+ 9E84 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E87
 311+ 9E87 7E               ld a,(hl)
 312+ 9E88 A7               and a
 313+ 9E89
 314+ 9E89              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E89
 316+ 9E89              ;    jr z,$
 317+ 9E89
 318+ 9E89              ;! Reinicia el Patrón de movimiento.
 319+ 9E89
 320+ 9E89 CC 8E 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E8C
 322+ 9E8C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E8D
 324+ 9E8D C9               ret
 325+ 9E8E
 326+ 9E8E              ; ---------- --------- --------- ---------- ----------
 327+ 9E8E              ;
 328+ 9E8E              ;   15/01/24
 329+ 9E8E              ;
 330+ 9E8E              ;   Inicializa_Puntero_indice_mov
 331+ 9E8E
 332+ 9E8E              Inicializa_Puntero_indice_mov_2
 333+ 9E8E
 334+ 9E8E              ; Existe etiqueta de bucle principal???
 335+ 9E8E
 336+ 9E8E 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E91 24               inc h
 338+ 9E92 25               dec h
 339+ 9E93 28 05            jr z,2F
 340+ 9E95
 341+ 9E95 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E98 18 14            jr 3F
 343+ 9E9A
 344+ 9E9A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E9A
 346+ 9E9A 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E9D 47               ld b,a
 348+ 9E9E
 349+ 9E9E 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9EA1 2B           1 dec hl
 351+ 9EA2 2B               dec hl
 352+ 9EA3 10 FC            djnz 1B
 353+ 9EA5 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9EA8
 355+ 9EA8 AF               xor a
 356+ 9EA9 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9EAC 18 06            jr 4F
 358+ 9EAE
 359+ 9EAE 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EB1 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EB4 C9           4 ret
 362+ 9EB5
 363+ 9EB5              ; ----------------------------------------------------------------------
 364+ 9EB5              ;
 365+ 9EB5              ;   30/01/24
 366+ 9EB5              ;
 367+ 9EB5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EB5
 369+ 9EB5 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EB8 CD 0D 94         call Calcula_salto_en_BC
 371+ 9EBB 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EBE A7               and a
 373+ 9EBF ED 4A            adc hl,bc
 374+ 9EC1 C9               ret
 375+ 9EC2
 376+ 9EC2              ; ----------------------------------------------------------------------
 377+ 9EC2              ;
 378+ 9EC2              ;   30/01/24
 379+ 9EC2              ;
 380+ 9EC2              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EC2              ;
 382+ 9EC2              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EC2
 384+ 9EC2 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EC3 23               inc hl
 386+ 9EC4 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EC5 69               ld l,c
 388+ 9EC6 60               ld h,b
 389+ 9EC7 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ECA C9               ret
 391+ 9ECB
# file closed: Movimiento.asm
2224  9ECB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ECB              ; --------------------------------------------------------------------------------------
   2+ 9ECB              ;
   3+ 9ECB              ;   31/08/24
   4+ 9ECB              ;
   5+ 9ECB
   6+ 9ECB              Compara_con_coordenadas_de_disparo
   7+ 9ECB
   8+ 9ECB 3A BD 8B         ld a,(Coordenada_y)
   9+ 9ECE 47               ld b,a
  10+ 9ECF 3A 38 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9ED2 90               sub b
  12+ 9ED3
  13+ 9ED3              ; A = "0" ok
  14+ 9ED3              ; A = "1" ok
  15+ 9ED3
  16+ 9ED3 28 08            jr z,Comprueba_coordenada_X
  17+ 9ED5 3D               dec a
  18+ 9ED6 28 05            jr z,Comprueba_coordenada_X
  19+ 9ED8
  20+ 9ED8              ; A = "$ff" ok
  21+ 9ED8
  22+ 9ED8 FE FE            cp $fe
  23+ 9EDA 28 01            jr z,Comprueba_coordenada_X
  24+ 9EDC
  25+ 9EDC C9               ret
  26+ 9EDD
  27+ 9EDD              Comprueba_coordenada_X
  28+ 9EDD
  29+ 9EDD 3A BC 8B         ld a,(Coordenada_X)
  30+ 9EE0 47               ld b,a
  31+ 9EE1 21 39 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9EE4 7E               ld a,(hl)
  33+ 9EE5 90               sub b
  34+ 9EE6
  35+ 9EE6              ; A = "0" ok
  36+ 9EE6              ; A = "1" ok
  37+ 9EE6
  38+ 9EE6 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9EE8 3D               dec a
  40+ 9EE9 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9EEB
  42+ 9EEB              ; A = "2" ok
  43+ 9EEB
  44+ 9EEB 3D               dec a
  45+ 9EEC 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9EEE
  47+ 9EEE              ; A = "$ff"
  48+ 9EEE
  49+ 9EEE FE FD            cp $fd
  50+ 9EF0 C0               ret nz
  51+ 9EF1
  52+ 9EF1              Activa_Impacto_en_entidad
  53+ 9EF1
  54+ 9EF1              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
  55+ 9EF1
  56+ 9EF1 3E 02            ld a,2
  57+ 9EF3 32 BF 8B         ld (Impacto),a
  58+ 9EF6
  59+ 9EF6              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
  60+ 9EF6
  61+ 9EF6 11 C0 87         ld de,Indice_Explosion_entidades
  62+ 9EF9 21 C2 8B         ld hl,Puntero_de_almacen_de_mov_masticados
  63+ 9EFC
  64+ 9EFC 73               ld (hl),e
  65+ 9EFD 23               inc hl
  66+ 9EFE 72               ld (hl),d
  67+ 9EFF
  68+ 9EFF              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
  69+ 9EFF
  70+ 9EFF 21 35 8C         ld hl,Impacto2
  71+ 9F02 CB 9E            res 3,(hl)
  72+ 9F04
  73+ 9F04 C9               ret
  74+ 9F05
  75+ 9F05              ; --------------------------------------------------------------------------------------
  76+ 9F05              ;
  77+ 9F05              ;   26/08/24
  78+ 9F05              ;
  79+ 9F05
  80+ 9F05              Limpia_album_de_borrado_disparos
  81+ 9F05
  82+ 9F05 21 30 8C         ld hl,Ctrl_5
  83+ 9F08 CB 46            bit 0,(hl)
  84+ 9F0A C8               ret z
  85+ 9F0B CB 86            res 0,(hl)
  86+ 9F0D
  87+ 9F0D 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  88+ 9F10 3D               dec a
  89+ 9F11 3D               dec a
  90+ 9F12 C0               ret nz
  91+ 9F13
  92+ 9F13              Limpiando
  93+ 9F13
  94+ 9F13 AF               xor a
  95+ 9F14 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  96+ 9F17 77               ld (hl),a
  97+ 9F18 5D               ld e,l
  98+ 9F19 54               ld d,h
  99+ 9F1A 1C               inc e                                           ; DE = HL+1
 100+ 9F1B 01 3A 00         ld bc,$003a
 101+ 9F1E ED B0            ldir
 102+ 9F20
 103+ 9F20 C9               ret
 104+ 9F21
 105+ 9F21
 106+ 9F21              ; --------------------------------------------------------------------------------------
 107+ 9F21              ;
 108+ 9F21              ;   26/08/24
 109+ 9F21              ;
 110+ 9F21
 111+ 9F21              Calcula_bytes_pintado_disparos
 112+ 9F21
 113+ 9F21 2A 14 8C         ld hl,(Album_de_pintado_disparos)
 114+ 9F24 45               ld b,l
 115+ 9F25 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 116+ 9F28 7D               ld a,l
 117+ 9F29
 118+ 9F29 90               sub b
 119+ 9F2A 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
 120+ 9F2D
 121+ 9F2D C9               ret
 122+ 9F2E
 123+ 9F2E              ; --------------------------------------------------------------------------------------
 124+ 9F2E              ;
 125+ 9F2E              ;   23/08/24
 126+ 9F2E              ;
 127+ 9F2E              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 128+ 9F2E              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 129+ 9F2E              ;   _disparos que el álbum del FRAME actual).
 130+ 9F2E
 131+ 9F2E              Limpia_album_de_pintado_disparos
 132+ 9F2E
 133+ 9F2E              ;   Exclusiones.
 134+ 9F2E
 135+ 9F2E 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 136+ 9F31 A7               and a
 137+ 9F32 C8               ret z
 138+ 9F33
 139+ 9F33              ; -----
 140+ 9F33
 141+ 9F33 A7               and a
 142+ 9F34
 143+ 9F34 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
 144+ 9F37 47               ld b,a
 145+ 9F38 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 146+ 9F3B
 147+ 9F3B 90               sub b
 148+ 9F3C
 149+ 9F3C C8               ret z
 150+ 9F3D D8               ret c
 151+ 9F3E
 152+ 9F3E 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 153+ 9F41 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 154+ 9F42 AF               xor a                                                               ; "0".
 155+ 9F43
 156+ 9F43 77           1 ld (hl),a
 157+ 9F44 2C               inc l
 158+ 9F45 10 FC            djnz 1B
 159+ 9F47
 160+ 9F47 C9               ret
 161+ 9F48
 162+ 9F48              ; --------------------------------------------------------------------------------------
 163+ 9F48              ;
 164+ 9F48              ;   27/08/24
 165+ 9F48              ;
 166+ 9F48
 167+ 9F48              Motor_Disparos
 168+ 9F48
 169+ 9F48              ;    Exclusiones:
 170+ 9F48
 171+ 9F48 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 172+ 9F4B 3D               dec a
 173+ 9F4C 3D               dec a
 174+ 9F4D 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 175+ 9F4F
 176+ 9F4F              ; .........................
 177+ 9F4F
 178+ 9F4F              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 179+ 9F4F
 180+ 9F4F 21 24 89         ld hl,Disparo_1A+1
 181+ 9F52
 182+ 9F52 34               inc (hl)
 183+ 9F53 35               dec (hl)
 184+ 9F54
 185+ 9F54 28 06            jr z,1F
 186+ 9F56
 187+ 9F56              ;   Esta caja contiene un disparo.
 188+ 9F56
 189+ 9F56 CD 85 9F         call Consulta_Impacto
 190+ 9F59 CC 9E 9F         call z,Mueve_disparo_Amadeus
 191+ 9F5C
 192+ 9F5C 21 29 89     1 ld hl,Disparo_2A+1
 193+ 9F5F
 194+ 9F5F 34               inc (hl)
 195+ 9F60 35               dec (hl)
 196+ 9F61 28 06            jr z,2F
 197+ 9F63
 198+ 9F63              ; Esta caja contiene un disparo.
 199+ 9F63
 200+ 9F63 CD 85 9F         call Consulta_Impacto
 201+ 9F66 CC 9E 9F         call z,Mueve_disparo_Amadeus
 202+ 9F69
 203+ 9F69              ; Disparos de entidades.
 204+ 9F69
 205+ 9F69 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 206+ 9F6C A7               and a
 207+ 9F6D C8               ret z
 208+ 9F6E
 209+ 9F6E 06 07            ld b,7                                                               ; Contador de disparos.
 210+ 9F70 21 2D 89         ld hl,Indice_de_disparos_entidades
 211+ 9F73
 212+ 9F73 CD 71 90     4 call Extrae_address
 213+ 9F76 13               inc de
 214+ 9F77 13               inc de
 215+ 9F78 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 216+ 9F7C
 217+ 9F7C 23               inc hl
 218+ 9F7D
 219+ 9F7D 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 220+ 9F7E 35               dec (hl)
 221+ 9F7F 28 00            jr z,3F
 222+ 9F81
 223+ 9F81 EB           3 ex de,hl
 224+ 9F82 10 EF            djnz 4B
 225+ 9F84
 226+ 9F84 C9               ret
 227+ 9F85
 228+ 9F85              ; ----------------------
 229+ 9F85              ;
 230+ 9F85              ;
 231+ 9F85              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 232+ 9F85              ;
 233+ 9F85              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 234+ 9F85
 235+ 9F85
 236+ 9F85              Consulta_Impacto
 237+ 9F85
 238+ 9F85              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 239+ 9F85              ;   _sea lo más coherente posible.
 240+ 9F85
 241+ 9F85 E5               push hl
 242+ 9F86 2B               dec hl
 243+ 9F87 CD BB A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 244+ 9F8A E1               pop hl
 245+ 9F8B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 246+ 9F8C
 247+ 9F8C C8               ret z
 248+ 9F8D
 249+ 9F8D              ;   IMPACTO !!!!!
 250+ 9F8D
 251+ 9F8D 3A 35 8C         ld a,(Impacto2)
 252+ 9F90 CB DF            set 3,a
 253+ 9F92 32 35 8C         ld (Impacto2),a
 254+ 9F95
 255+ 9F95 E5               push hl
 256+ 9F96 CD A8 A0         call Genera_coordenadas_de_disparo_Amadeus
 257+ 9F99 E1               pop hl
 258+ 9F9A CD B7 9F         call Elimina_disparo
 259+ 9F9D
 260+ 9F9D C9               ret
 261+ 9F9E
 262+ 9F9E              ; ----------------------
 263+ 9F9E              ;
 264+ 9F9E              ;
 265+ 9F9E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 266+ 9F9E
 267+ 9F9E              Mueve_disparo_Amadeus
 268+ 9F9E
 269+ 9F9E CD 71 90         call Extrae_address
 270+ 9FA1
 271+ 9FA1 CD 95 99         call PreviousScan
 272+ 9FA4 CD 95 99         call PreviousScan
 273+ 9FA7 CD 95 99         call PreviousScan
 274+ 9FAA CD 95 99         call PreviousScan
 275+ 9FAD
 276+ 9FAD              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 277+ 9FAD
 278+ 9FAD 7C               ld a,h
 279+ 9FAE D6 40            sub $40
 280+ 9FB0 EB               ex de,hl
 281+ 9FB1 38 04            jr c,Elimina_disparo
 282+ 9FB3
 283+ 9FB3               ; Introduce nuevo puntero_de_impresión en la caja.
 284+ 9FB3
 285+ 9FB3 73               ld (hl),e
 286+ 9FB4 23               inc hl
 287+ 9FB5 72               ld (hl),d
 288+ 9FB6
 289+ 9FB6 C9               ret
 290+ 9FB7
 291+ 9FB7              ; ----------------------
 292+ 9FB7              ;
 293+ 9FB7              ;   2/9/24
 294+ 9FB7
 295+ 9FB7              Elimina_disparo
 296+ 9FB7
 297+ 9FB7              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 298+ 9FB7              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 299+ 9FB7
 300+ 9FB7              ;   Disparo_1A defw 0									; Puntero objeto.
 301+ 9FB7              ;   	defw 0											; Puntero de impresión.
 302+ 9FB7              ;   	db 0											; Impacto.
 303+ 9FB7
 304+ 9FB7 2B               dec hl
 305+ 9FB8 2B               dec hl
 306+ 9FB9
 307+ 9FB9 AF               xor a
 308+ 9FBA 77               ld (hl),a
 309+ 9FBB 23               inc hl
 310+ 9FBC 77               ld (hl),a                                           ; Puntero_objeto borrado.
 311+ 9FBD 23               inc hl
 312+ 9FBE 77               ld (hl),a
 313+ 9FBF 23               inc hl
 314+ 9FC0 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 315+ 9FC1 23               inc hl
 316+ 9FC2 77               ld (hl),a                                           ; Impacto borrado.
 317+ 9FC3
 318+ 9FC3 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 319+ 9FC6 34               inc (hl)
 320+ 9FC7
 321+ 9FC7 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 322+ 9FCA F6 01            or 1
 323+ 9FCC 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 324+ 9FCF
 325+ 9FCF 21 30 8C         ld hl,Ctrl_5                                        ; Indica que ha desaparecido un disparo.
 326+ 9FD2 CB C6            set 0,(hl)
 327+ 9FD4
 328+ 9FD4 AF               xor a
 329+ 9FD5 3C               inc a                                               ; Siempre que eliminamos un disparo tenemos: "NZ".
 330+ 9FD6
 331+ 9FD6 C9               ret
 332+ 9FD7
 333+ 9FD7              ; --------------------------------------------------------------------------------------
 334+ 9FD7              ;
 335+ 9FD7              ;   21/8/24
 336+ 9FD7              ;
 337+ 9FD7
 338+ 9FD7              Pinta_disparos
 339+ 9FD7
 340+ 9FD7 ED 73 08 8C      ld (Stack),sp
 341+ 9FDB 06 02            ld b,2
 342+ 9FDD
 343+ 9FDD ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 344+ 9FE1
 345+ 9FE1 D1           2 pop de
 346+ 9FE2
 347+ 9FE2 14               inc d
 348+ 9FE3 15               dec d
 349+ 9FE4
 350+ 9FE4 28 1B            jr z,1F
 351+ 9FE6
 352+ 9FE6              Imprime_scanlines_de_disparo
 353+ 9FE6
 354+ 9FE6 E1               pop hl
 355+ 9FE7
 356+ 9FE7              ; Puntero objeto en DE.
 357+ 9FE7              ; Puntero_de_impresión en HL.
 358+ 9FE7
 359+ 9FE7              ; 1er scanline.
 360+ 9FE7
 361+ 9FE7 1A               ld a,(de)
 362+ 9FE8 AE               xor (hl)
 363+ 9FE9 77               ld (hl),a
 364+ 9FEA
 365+ 9FEA 13               inc de
 366+ 9FEB 2C               inc l
 367+ 9FEC
 368+ 9FEC 1A               ld a,(de)
 369+ 9FED AE               xor (hl)
 370+ 9FEE 77               ld (hl),a
 371+ 9FEF
 372+ 9FEF              ; 2º scanline.
 373+ 9FEF
 374+ 9FEF E1               pop hl
 375+ 9FF0 1B               dec de
 376+ 9FF1
 377+ 9FF1 1A               ld a,(de)
 378+ 9FF2 AE               xor (hl)
 379+ 9FF3 77               ld (hl),a
 380+ 9FF4
 381+ 9FF4 13               inc de
 382+ 9FF5 2C               inc l
 383+ 9FF6
 384+ 9FF6 1A               ld a,(de)
 385+ 9FF7 AE               xor (hl)
 386+ 9FF8 77               ld (hl),a
 387+ 9FF9
 388+ 9FF9              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 389+ 9FF9
 390+ 9FF9 18 E6            jr 2B
 391+ 9FFB
 392+ 9FFB ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 393+ 9FFF 18 E0            jr 2B
 394+ A001
 395+ A001 10 F8        1 djnz 3B
 396+ A003 ED 7B 08 8C      ld sp,(Stack)
 397+ A007 C9               ret
 398+ A008
 399+ A008              ; --------------------------------------------------------------------------------------
 400+ A008              ;
 401+ A008              ;   28/8/24
 402+ A008              ;
 403+ A008              ;   Modifica: HL y DE.
 404+ A008
 405+ A008
 406+ A008              Genera_datos_de_impresion_disparos_Amadeus
 407+ A008
 408+ A008              ;   Exclusiones:
 409+ A008
 410+ A008 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 411+ A00B 3D               dec a
 412+ A00C 3D               dec a
 413+ A00D C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 414+ A00E
 415+ A00E              ; -----
 416+ A00E
 417+ A00E ED 73 08 8C      ld (Stack),sp
 418+ A012 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 419+ A015
 420+ A015 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 421+ A018 ED 72            sbc hl,sp                                                 ; Última caja ???
 422+ A01A 28 26            jr z,Salida
 423+ A01C
 424+ A01C D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 425+ A01D
 426+ A01D 14               inc d
 427+ A01E 15               dec d
 428+ A01F
 429+ A01F 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 430+ A021
 431+ A021              Siguiente_disparo_Amadeus
 432+ A021
 433+ A021 D1               pop de
 434+ A022 33               inc sp
 435+ A023 18 F0            jr 1B
 436+ A025
 437+ A025              Genera_scanlines_de_disparo_Amadeus
 438+ A025
 439+ A025 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 440+ A026              ;                                                             ; Puntero_de_impresión del disparo en HL.
 441+ A026
 442+ A026 33               inc sp
 443+ A027 ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 444+ A02B
 445+ A02B ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 446+ A02F
 447+ A02F C1               pop bc
 448+ A030 C1               pop bc
 449+ A031 C1               pop bc
 450+ A032
 451+ A032 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 452+ A036
 453+ A036 E5               push hl                                                   ; Sube 2º scanline al álbum.
 454+ A037 CD 95 99         call PreviousScan
 455+ A03A E5               push hl                                                   ; Sube 1er scanline al álbum.
 456+ A03B D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 457+ A03C
 458+ A03C ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 459+ A040 18 D3            jr 1B
 460+ A042
 461+ A042
 462+ A042              Salida
 463+ A042
 464+ A042 ED 7B 08 8C      ld sp,(Stack)
 465+ A046 C9               ret
 466+ A047
 467+ A047              ; --------------------------------------------------------------------------------------
 468+ A047              ;
 469+ A047              ;   17/08/24
 470+ A047              ;
 471+ A047
 472+ A047              Genera_disparo_Amadeus
 473+ A047
 474+ A047              ;   Exclusiones.
 475+ A047
 476+ A047 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
 477+ A04A A7               and a
 478+ A04B C8               ret z                                                    ; Salimos si no hay permiso de disparo.
 479+ A04C 3D               dec a
 480+ A04D 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 481+ A050
 482+ A050 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 483+ A053 A7               and a
 484+ A054 C8               ret z                                                    ; Hay 2 disparos en pantalla, no hay cajas libres.
 485+ A055
 486+ A055              ; ---------------------------------------------------------------------------------------------------------------
 487+ A055
 488+ A055              ;   Dec nº de disparos de Amadeus.
 489+ A055
 490+ A055 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 491+ A058 35               dec (hl)
 492+ A059
 493+ A059              ;   Nos situamos en la 1ª caja que encontramos vacía.
 494+ A059
 495+ A059 21 24 89         ld hl,Disparo_1A+1
 496+ A05C
 497+ A05C 34               inc (hl)
 498+ A05D 35               dec (hl)
 499+ A05E 2B               dec hl
 500+ A05F
 501+ A05F 28 03            jr z,7F
 502+ A061
 503+ A061 21 28 89         ld hl,Disparo_2A
 504+ A064
 505+ A064 22 33 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 506+ A067
 507+ A067              ; ---------------------------------------------------------------------------------------------------------------
 508+ A067
 509+ A067              Define_puntero_objeto_disparo
 510+ A067
 511+ A067              ;   Inicializamos contador.
 512+ A067
 513+ A067 06 00            ld b,0
 514+ A069
 515+ A069 2A 75 89         ld hl,(p.imp.amadeus)
 516+ A06C 2C               inc l
 517+ A06D
 518+ A06D 3E 80            ld a,$80
 519+ A06F BE               cp (hl)
 520+ A070 28 0D            jr z,1F
 521+ A072
 522+ A072 04               inc b
 523+ A073
 524+ A073 3E 60            ld a,$60
 525+ A075 BE               cp (hl)
 526+ A076 28 07            jr z,1F
 527+ A078
 528+ A078
 529+ A078 04               inc b
 530+ A079
 531+ A079 3E 18            ld a,$18
 532+ A07B BE               cp (hl)
 533+ A07C 28 01            jr z,1F
 534+ A07E
 535+ A07E 04               inc b
 536+ A07F
 537+ A07F              ;   Calcula el Puntero_de_impresión del disparo.
 538+ A07F
 539+ A07F              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 540+ A07F
 541+ A07F CD 95 99     1 call PreviousScan
 542+ A082
 543+ A082 78               ld a,b
 544+ A083 CB 3F            srl a
 545+ A085 28 03            jr z,4F
 546+ A087
 547+ A087              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 548+ A087 E5               push hl
 549+ A088 18 02            jr 5F
 550+ A08A 2D           4 dec l
 551+ A08B E5               push hl
 552+ A08C              ; ---
 553+ A08C
 554+ A08C              ;   Calcula el Puntero_objeto del disparo.
 555+ A08C
 556+ A08C 21 70 83     5 ld hl,Indice_disparo
 557+ A08F 04               inc b
 558+ A090 05               dec b
 559+ A091 28 04            jr z,2F
 560+ A093
 561+ A093              ;   Nos desplazamos por el índice de disparos.
 562+ A093
 563+ A093 2C           3 inc l
 564+ A094 2C               inc l
 565+ A095 10 FC            djnz 3B
 566+ A097
 567+ A097              ; --- Guarda el Puntero_objeto del disparo en la pila.
 568+ A097 CD 71 90     2 call Extrae_address
 569+ A09A E5               push hl
 570+ A09B              ; ---
 571+ A09B
 572+ A09B              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 573+ A09B              ; HL en el 1er .db de la caja.
 574+ A09B
 575+ A09B 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 576+ A09E
 577+ A09E 06 02            ld b,2
 578+ A0A0
 579+ A0A0 D1           6 pop de
 580+ A0A1 73               ld (hl),e
 581+ A0A2 23               inc hl
 582+ A0A3 72               ld (hl),d
 583+ A0A4 23               inc hl
 584+ A0A5
 585+ A0A5 10 F9            djnz 6B
 586+ A0A7
 587+ A0A7 C9               ret
 588+ A0A8
 589+ A0A8              Genera_coordenadas_de_disparo_Amadeus
 590+ A0A8
 591+ A0A8              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 592+ A0A8              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 593+ A0A8              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 594+ A0A8
 595+ A0A8 CD 71 90         call Extrae_address
 596+ A0AB CD 90 94         call Genera_coordenadas
 597+ A0AE
 598+ A0AE 3D               dec a
 599+ A0AF
 600+ A0AF 21 38 8C         ld hl,Coordenadas_disparo_certero
 601+ A0B2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 602+ A0B3 23               inc hl
 603+ A0B4 3A BC 8B         ld a,(Coordenada_X)
 604+ A0B7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 605+ A0B8
 606+ A0B8 AF               xor a
 607+ A0B9 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 608+ A0BA
 609+ A0BA C9               ret
 610+ A0BB
 611+ A0BB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 612+ A0BB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 613+ A0BB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 614+ A0BB
 615+ A0BB              ; ----------------------------------------------
 616+ A0BB              ;
 617+ A0BB              ;   27/08/24
 618+ A0BB              ;
 619+ A0BB              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 620+ A0BB              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 621+ A0BB
 622+ A0BB              Detecta_impacto_en_disparo_de_Amadeus
 623+ A0BB
 624+ A0BB              Extraccion_de_datos
 625+ A0BB
 626+ A0BB 5E               ld e,(hl)
 627+ A0BC 23               inc hl
 628+ A0BD 56               ld d,(hl)
 629+ A0BE 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 630+ A0BF
 631+ A0BF 4E               ld c,(hl)
 632+ A0C0 23               inc hl
 633+ A0C1 46               ld b,(hl)
 634+ A0C2
 635+ A0C2 C5               push bc
 636+ A0C3 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 637+ A0C4
 638+ A0C4 CD 95 99         call PreviousScan
 639+ A0C7 CD 95 99         call PreviousScan
 640+ A0CA
 641+ A0CA              Detecta_impacto_
 642+ A0CA
 643+ A0CA 1A               ld a,(de)
 644+ A0CB A6               and (hl)
 645+ A0CC C0               ret nz
 646+ A0CD
 647+ A0CD 13               inc de
 648+ A0CE 23               inc hl
 649+ A0CF
 650+ A0CF 1A               ld a,(de)
 651+ A0D0 A6               and (hl)
 652+ A0D1 C9               ret
 653+ A0D2
 654+ A0D2              ; -------------------------------------------------------------------------------------------------------------
 655+ A0D2              ;
 656+ A0D2              ;   8/8/24
 657+ A0D2              ;
 658+ A0D2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 659+ A0D2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 660+ A0D2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 661+ A0D2              ;
 662+ A0D2              ;   MODIFICA: HL,DE,BC y A.
 663+ A0D2              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 664+ A0D2              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 665+ A0D2
 666+ A0D2              Colision_Entidad_Amadeus
 667+ A0D2
 668+ A0D2              ; Posible contacto de entidad con Amadeus. ?????
 669+ A0D2
 670+ A0D2              ; Exclusiones:
 671+ A0D2
 672+ A0D2 3A 54 8C         ld a,(Shield)
 673+ A0D5 A7               and a
 674+ A0D6 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 675+ A0D7
 676+ A0D7 21 2E 8C         ld hl,Ctrl_3
 677+ A0DA CB 76            bit 6,(hl)
 678+ A0DC C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 679+ A0DD
 680+ A0DD 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 681+ A0E0 CB 56            bit 2,(hl)
 682+ A0E2 C0               ret nz
 683+ A0E3
 684+ A0E3 3A BD 8B     	ld a,(Coordenada_y)
 685+ A0E6 FE 14        	cp $14
 686+ A0E8 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 687+ A0E9
 688+ A0E9 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 689+ A0EC A7               and a
 690+ A0ED C0               ret nz
 691+ A0EE
 692+ A0EE              Genera_coordenadas_X
 693+ A0EE
 694+ A0EE              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 695+ A0EE              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 696+ A0EE
 697+ A0EE              ;   Limpiamos almacenes.
 698+ A0EE
 699+ A0EE              ;    call Limpia_Coordenadas_X
 700+ A0EE
 701+ A0EE              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 702+ A0EE
 703+ A0EE 21 3A 8C         ld hl,Coordenadas_X_Entidad
 704+ A0F1 3A BC 8B         ld a,(Coordenada_X)
 705+ A0F4 CD 16 A1         call Guarda_coordenadas_X
 706+ A0F7
 707+ A0F7              ;   Almacenamos las coordenadas X de Amadeus.
 708+ A0F7
 709+ A0F7 3A 71 89         ld a,(CX_Amadeus)
 710+ A0FA CD 16 A1         call Guarda_coordenadas_X
 711+ A0FD CD 2A A1         call Compara_coordenadas_X
 712+ A100 C0               ret nz
 713+ A101
 714+ A101 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 715+ A103 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 716+ A106
 717+ A106 2A FB 8B         ld hl,(Puntero_store_caja)
 718+ A109 2C               inc l
 719+ A10A 2C               inc l
 720+ A10B 2C               inc l
 721+ A10C 2C               inc l
 722+ A10D 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 723+ A110
 724+ A110 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 725+ A113 CB D6            set 2,(hl)
 726+ A115
 727+ A115 C9               ret
 728+ A116
 729+ A116               ; ----- ----- ----- ----- -----
 730+ A116
 731+ A116 77           Guarda_coordenadas_X ld (hl),a
 732+ A117 3C               inc a
 733+ A118 2C               inc l
 734+ A119 77               ld (hl),a
 735+ A11A 3C               inc a
 736+ A11B 2C               inc l
 737+ A11C 77               ld (hl),a
 738+ A11D 2C               inc l
 739+ A11E C9               ret
 740+ A11F
 741+ A11F AF           Limpia_Coordenadas_X xor a
 742+ A120 06 06            ld b,6
 743+ A122 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 744+ A125 77           1 ld (hl),a
 745+ A126 23               inc hl
 746+ A127 10 FC            djnz 1B
 747+ A129 C9               ret
 748+ A12A
 749+ A12A              ; ----- ----- ----- ----- -----
 750+ A12A
 751+ A12A              Compara_coordenadas_X
 752+ A12A
 753+ A12A DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 754+ A12E DD 7E 00         ld a,(ix+0)
 755+ A131 CD 3F A1         call Comparando
 756+ A134 C8               ret z
 757+ A135
 758+ A135 3C               inc a
 759+ A136 CD 4E A1         call Comparando_1
 760+ A139 C8               ret z
 761+ A13A
 762+ A13A 3C               inc a
 763+ A13B CD 4E A1         call Comparando_1
 764+ A13E C9               ret
 765+ A13F
 766+ A13F              ; ----- ----- ----- ----- -----
 767+ A13F              ;
 768+ A13F              ;   4/12/23
 769+ A13F              ;
 770+ A13F              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 771+ A13F
 772+ A13F              Comparando
 773+ A13F
 774+ A13F DD 2C            inc ixl
 775+ A141 DD 2C            inc ixl
 776+ A143 DD 2C            inc ixl
 777+ A145
 778+ A145 DD 46 00         ld b,(ix+0)
 779+ A148 DD 4E 01         ld c,(ix+1)
 780+ A14B DD 56 02         ld d,(ix+2)
 781+ A14E
 782+ A14E B8           Comparando_1 cp b
 783+ A14F C8               ret z
 784+ A150 B9               cp c
 785+ A151 C8               ret z
 786+ A152 BA               cp d
 787+ A153 C9               ret
 788+ A154
 789+ A154              ; -----------------------------------------------------------------------
 790+ A154              ;
 791+ A154              ;   04/7/24
 792+ A154              ;
 793+ A154
 794+ A154              Detecta_colision_nave_entidad
 795+ A154
 796+ A154              ; Exclusiones:
 797+ A154
 798+ A154              ; Salimos de la rutina si no hay advertencia de posible colisión.
 799+ A154
 800+ A154 21 35 8C     	ld hl,Impacto2
 801+ A157 CB 56        	bit 2,(hl)
 802+ A159 C8           	ret z
 803+ A15A
 804+ A15A              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 805+ A15A
 806+ A15A 2A 77 89         ld hl,(Pamm_Amadeus)
 807+ A15D CD 71 90         call Extrae_address
 808+ A160 54               ld d,h
 809+ A161 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 810+ A162
 811+ A162 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 812+ A165 06 10            ld b,16                                        ; Contador de scanlines en B.
 813+ A167 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 814+ A16A
 815+ A16A C5           1 push bc
 816+ A16B 06 03            ld b,3
 817+ A16D E5               push hl
 818+ A16E
 819+ A16E              ; .db
 820+ A16E
 821+ A16E 1A           3 ld a,(de)
 822+ A16F A7               and a
 823+ A170 20 03            jr nz,4F
 824+ A172
 825+ A172 2C               inc l
 826+ A173 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 827+ A175
 828+ A175 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 829+ A177 28 04            jr z,2F
 830+ A179
 831+ A179              ; Impacto.
 832+ A179 FD 2D            dec iyl
 833+ A17B 28 22            jr z,5F
 834+ A17D
 835+ A17D 1C           2 inc e
 836+ A17E 10 EE            djnz 3B
 837+ A180
 838+ A180 E1               pop hl
 839+ A181
 840+ A181              ; Hay salto de línea en el puntero de impresión ???
 841+ A181
 842+ A181 7C               ld a,h
 843+ A182 D6 57            sub $57
 844+ A184 20 0A            jr nz,6F
 845+ A186
 846+ A186              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 847+ A186
 848+ A186 2A 75 89         ld hl,(p.imp.amadeus)
 849+ A189 3E 20            ld a,$20
 850+ A18B A7               and a
 851+ A18C 85               add l
 852+ A18D 6F               ld l,a
 853+ A18E 18 01            jr 7F
 854+ A190
 855+ A190 24           6 inc h
 856+ A191
 857+ A191 C1           7 pop bc
 858+ A192 10 D6            djnz 1B
 859+ A194
 860+ A194              ;   Fin de la comparativa.
 861+ A194
 862+ A194              ;   NO HAY COLISIÓN !!!!!.
 863+ A194              ;
 864+ A194              ;   .db (Impacto) de Amadeus a "0".
 865+ A194              ;   RES el bit2 de (Impacto2).
 866+ A194              ;
 867+ A194              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 868+ A194              ;   Lo colocamos a "0".
 869+ A194
 870+ A194 21 35 8C         ld hl,Impacto2
 871+ A197 CB 96            res 2,(hl)
 872+ A199 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 873+ A19C 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 874+ A19E C9               ret
 875+ A19F
 876+ A19F              ;   COLISIÓN !!!!!.
 877+ A19F              ;
 878+ A19F              ;   .db (Impacto) de Amadeus a "1".
 879+ A19F              ;   SET el bit3 de (Impacto2).
 880+ A19F              ;
 881+ A19F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 882+ A19F
 883+ A19F E1           5 pop hl
 884+ A1A0 C1               pop bc
 885+ A1A1
 886+ A1A1 21 74 89         ld hl,Impacto_Amadeus
 887+ A1A4 36 01            ld (hl),1
 888+ A1A6 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 889+ A1A9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 890+ A1AB
 891+ A1AB 11 C0 87         ld de,Indice_Explosion_entidades
 892+ A1AE 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 893+ A1B1
 894+ A1B1 23               inc hl
 895+ A1B2 23               inc hl
 896+ A1B3 23               inc hl
 897+ A1B4
 898+ A1B4 73               ld (hl),e
 899+ A1B5 23               inc hl
 900+ A1B6 72               ld (hl),d
 901+ A1B7
 902+ A1B7              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 903+ A1B7
 904+ A1B7 11 60 88         ld de,Indice_Explosion_Amadeus
 905+ A1BA 21 77 89         ld hl,Pamm_Amadeus
 906+ A1BD
 907+ A1BD 73               ld (hl),e
 908+ A1BE 23               inc hl
 909+ A1BF 72               ld (hl),d
 910+ A1C0
 911+ A1C0 C9               ret
 912+ A1C1
 913+ A1C1
 914+ A1C1
# file closed: Disparo.asm
2225  A1C1
2226  A1C1              	SAVESNA "Pruebas.sna", START
2227  A1C1
2228  A1C1
2229  A1C1
2230  A1C1
# file closed: Banco_de_pruebas.asm
